[{"docID": "t5_2qhmr","qSentId": 30529,"question": "Is there a difference between 80x86 and x86?","aSentId": 30530,"answer": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30531,"question": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","aSentId": 30532,"answer": "They were sued?  Are they obligated to maintain compatibility?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30533,"question": "They were sued?  Are they obligated to maintain compatibility?","aSentId": 30534,"answer": "They weren't sued over x86. They were sued by HP over the Itanium processor (their non-x86 64-bit processor), which failed in the market and HP blamed Intel for not doing enough to save the chip.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30531,"question": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","aSentId": 30536,"answer": "&gt; Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86.\n\nThere technically was no 80486, it was launched as simply \"i486.\" Intel also dropped the \"80\" from 80386 in their documentation around the same time. Then they discovered that they couldn't actually trademark numbers and started naming their processors.\n\nThe difference between 80x86 and x86 is that people writing 80x86 have probably been around longer or that that particular document is older.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30529,"question": "Is there a difference between 80x86 and x86?","aSentId": 30538,"answer": "These days, x86 generally refers to 80386DX and later.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30539,"question": "These days, x86 generally refers to 80386DX and later.","aSentId": 30540,"answer": "Which, ta da, means 32bit, that we're still working with 20 years later.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30529,"question": "Is there a difference between 80x86 and x86?","aSentId": 30542,"answer": "If there's an 'x' then it means it's applicable to a wide range of processors, so I'd say there's no difference.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30544,"question": "Grace Hopper, The Queen Of Code","aSentId": 30545,"answer": "Grace Hopper, The Queen Of ~~Code~~ Cobol.\n\n:D","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30544,"question": "Grace Hopper, The Queen Of Code","aSentId": 30547,"answer": "Man, she was so cool. A shame that the field is still so male-dominated.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30544,"question": "Grace Hopper, The Queen Of Code","aSentId": 30549,"answer": "I was interested to find out that the first project they worked was calculating how to compress a sphere. They were building the ignition of a nuclear bomb","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30552,"question": "Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)","aSentId": 30553,"answer": "Incredible\u2026 our advancement in artificial intelligence was probably set back by many decades due to the jealousy of one man's wife.\n\nI really wonder where we'd be today had Pitts not destroyed all his research and died an early death of alcoholism.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30554,"question": "Incredible\u2026 our advancement in artificial intelligence was probably set back by many decades due to the jealousy of one man's wife.\n\nI really wonder where we'd be today had Pitts not destroyed all his research and died an early death of alcoholism.","aSentId": 30555,"answer": "But could this wife possibly envision the consequences? Or couldn't Pitts have found help other than destroy himself in alcoholism either way? It's terrible how it happened, but she shouldn't be the sole responsible. Pitts burning his dissertation made me gasp more than anythin. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30552,"question": "Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)","aSentId": 30557,"answer": "all that work destroyed, all those ideas lost and all those people alienated because of one crazy wife. god fucking damn it!\n\nbeautiful article regardless, but i can't stop feeling sad and angry at the same time because of that woman's misguided actions","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30552,"question": "Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)","aSentId": 30559,"answer": "I usually don't have high hopes for these kinds of popsci biographical articles and so I went in with very low expectations, only choosing to read it because I've done everything else possible to put off finishing grading this week's quiz. But I am so happy I read it, what a wonderfully written article! Good post OP. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30560,"question": "I usually don't have high hopes for these kinds of popsci biographical articles and so I went in with very low expectations, only choosing to read it because I've done everything else possible to put off finishing grading this week's quiz. But I am so happy I read it, what a wonderfully written article! Good post OP. ","aSentId": 30561,"answer": "The Nautilus has high quality articles. I think of it like The New Yorker for nerds.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30560,"question": "I usually don't have high hopes for these kinds of popsci biographical articles and so I went in with very low expectations, only choosing to read it because I've done everything else possible to put off finishing grading this week's quiz. But I am so happy I read it, what a wonderfully written article! Good post OP. ","aSentId": 30563,"answer": "Indeed a good read and a powerful story, and without knowing all the details, it shows how destructive prejudice og intolerance (and sexual \"morals\" ) can be.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30564,"question": "Indeed a good read and a powerful story, and without knowing all the details, it shows how destructive prejudice og intolerance (and sexual \"morals\" ) can be.","aSentId": 30565,"answer": "Not just that, but how much can be undone by a single lie. Pretty powerful. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30566,"question": "Not just that, but how much can be undone by a single lie. Pretty powerful. ","aSentId": 30567,"answer": "That \"his boys\" seduced the daughter?  Because that doesn't sound too far fetched. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30572,"question": "Great article. Minor nitpicking: Am I mistaken, or is the description of Wiener's definition of information (\"The higher the probability, the higher the entropy and the lower the information content\") backwards? Isn't it the higher the probability, the **lower** the entropy, and the lower the information?","aSentId": 30573,"answer": "50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nAlso I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claud Shannon.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30574,"question": "50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nAlso I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claud Shannon.","aSentId": 30575,"answer": "&gt;50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nis a nonsensical statement.\n\na uniform distribution has the highest entropy (which is equal to 1). such a distribution on 2 states/outcomes/events has each event happening with probability .5.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30574,"question": "50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nAlso I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claud Shannon.","aSentId": 30577,"answer": "\n&gt; Also I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claude Shannon.\n\nI said the same thing on /r/MachineLearning. Weiner *did* have some related work and Shannon was clearly inspired by him. Shannon's 1948 paper references Weiner a handful of times, but \"mutual information\" as we think of it today is definitely due to Shannon.\n\nhttp://cm.bell-labs.com/cm/ms/what/shannonday/shannon1948.pdf\n\n\n\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30581,"question": "Does a program load into memory?","aSentId": 30582,"answer": "I think you have a terminology problem.  A process is a program that is currently executing.  When you execute a program, the operating system creates a process and initializes it by memory-mapping certain portions of the on-disk executable image (e.g. code and data segments) into memory, and then jumps to the defined entry point to begin executing the code.  There are a lot more details (e.g. initializing the stack and heap) and things are significantly more complicated for dynamically linked executables, but that's the basic idea.\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30585,"question": "Clash of Clans upgrade scheduling problem.","aSentId": 30586,"answer": "Lookup the 'Knapsack Problem' - it should point you in the right path, but setting up your knapsack for your problem is the aspect of it that you need to write. Note that it is a NP-hard problem (albeit 'weakly NP hard'), so you shouldn't expect any non-optimal solution for large sets to finish in any sort of decent time. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30587,"question": "Lookup the 'Knapsack Problem' - it should point you in the right path, but setting up your knapsack for your problem is the aspect of it that you need to write. Note that it is a NP-hard problem (albeit 'weakly NP hard'), so you shouldn't expect any non-optimal solution for large sets to finish in any sort of decent time. ","aSentId": 30588,"answer": "Thank you for the reply, I'll look into it!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30590,"question": "How to start with Computer Science","aSentId": 30591,"answer": "\"Computer Science\" is very broad, as with most sciences. In fact, the only thing for certain about what computer science is... Is that it generally involves computers. From there, you have a LOT of different areas. \n\n[Theoretical] -- This is mostly math theory, but used with computation.\n* Artificial Intelligence (*note: This is also an EXTREMELY broad field..and makes up both applied and theoretical CS)\n* Cryptography\n* [insert subject here] Optimization\n* Coding theory\n* Algorithm design\n* Language theory\n* Computational theory\n* automata\n\n(note: There are more...But I can't really think of them atm)\n\n[Applied]\n* Software Development\n* Software Engineering\n* Web Development\n* Web Programming\n* Networking\n* IT\n* Networking Security \n* SysAdmin\n* Security Penetration Expert\n* Artificial Intelligence\n* Parallel Systems\n* Database Management\n\n(*note: There are more..but as I said, this is the most I could think of atm*)\n\nAs for how to get into it... Learn about the different niches/areas of Computer Science... Find what you like the most, and learn all you can about it..\n\nA little suggestion though:\n\nIf you're going to be using windows... Learn shell\nIf you're going to be using *unix.. Learn BASH.\n\nAutomation is a REALLY important in this field, regardless of what area you go down.\n\nHope this helps a little, cheers :)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30590,"question": "How to start with Computer Science","aSentId": 30593,"answer": "The essence of computer science has nothing to do with computers. However right now (2015) computers are very much important to the field of computer science. How to start with computer science?\n\nThe basics are:\n\n- learn the prerequisite math used in much of CS: logic tables and simplifications (propositional logic),basic set theory, using induction to prove something (1+2+...+n = n(n+1)/2 for any natural number n), some discrete math (basic combinatorics, graphs, trees), big-oh notation.\n\n- learn how to program in a few different languages (Java, Python, C, C++, Haskel), and learn basic unix commands\n\n- while learning to program you should also learn about algorithms and data structures, there are many ways to write a program to do something but some ways are better than others. And you'll be able to know why they are better because you can show that they are better using the math you learned before.\n\nThose are the things that are most used today in computer science (set theory/logic/discrete math/big-oh/basic programming/some algorithms/simple data structures).\n\nIf it sounds like a lot of stuff to learn, well yes it is. It takes time to go through it all and have a basic understanding of it, and many people focus just on the programming part and algorithms/data structures, but you can't do computer science without the math. \n\n\n  ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30590,"question": "How to start with Computer Science","aSentId": 30595,"answer": "Computer science is mostly about determining A: if something (F(X)) can be computed.  B: How efficiently it can be computed.  (Generally as the input increases)\n\nActually computing it is beside the point.  The specific input is beside the point.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30596,"question": "Computer science is mostly about determining A: if something (F(X)) can be computed.  B: How efficiently it can be computed.  (Generally as the input increases)\n\nActually computing it is beside the point.  The specific input is beside the point.","aSentId": 30597,"answer": "Do you really think someone who doesn't know what comp Sci is would understand that?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30598,"question": "Do you really think someone who doesn't know what comp Sci is would understand that?","aSentId": 30599,"answer": "It might seem to vague, and it might seem hard to grasp, and it is, I suppose, a deceptively simple way of putting it, but I don't think it's a bad introduction.\n\nComputer science is determining whether a function can be computed.  And determining how efficiently it can be computed.  ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30603,"question": "I'm in need of help figuring out how to write a multidimensional array to store names","aSentId": 30604,"answer": "What language are you using? Are you using a language that has things like sets and lists, or must you work with arrays?\n\nAside from that, what's the algorithm look like, in pseudocode? Break it down into steps, then you can convert that into actual, working code.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30605,"question": "What language are you using? Are you using a language that has things like sets and lists, or must you work with arrays?\n\nAside from that, what's the algorithm look like, in pseudocode? Break it down into steps, then you can convert that into actual, working code.","aSentId": 30606,"answer": "It's java. I actually managed to figure it out, I find the index of the first part by using the first charachter value of a word stored in each cell of the alphabatized array. Then I find the second part by using an array that stores the frquency a letter apears at the begining of each word. It's rather difficult to explain without drawing a flowchart out but writing it out to try to ask for help earlier actually helped me think it out. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30609,"question": "[Request] Lets work to make CompSci a more prominent topic in /r/science !","aSentId": 30610,"answer": "I like the idea. On a side note, where do you guys go to read about CS on a daily basis that isn't /r/compsci. Any good blogs or news sites out there?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30611,"question": "I like the idea. On a side note, where do you guys go to read about CS on a daily basis that isn't /r/compsci. Any good blogs or news sites out there?","aSentId": 30612,"answer": "I like [lobste.rs](http://lobste.rs). The quality of the posts there is pretty high. I was actually introduced to it here on /r/compsci. You'll need an invitation to create an account, but if you don't know anyone who already has an account i'd be willing to invite you if PM me your email address.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30609,"question": "[Request] Lets work to make CompSci a more prominent topic in /r/science !","aSentId": 30614,"answer": "I don't have a problem with CS being absent from /r/science. Despite the name, it is not a science.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30615,"question": "I don't have a problem with CS being absent from /r/science. Despite the name, it is not a science.","aSentId": 30616,"answer": "Computer Science is not a Science or Engineering. It is its own thing. Georgia Tech had the right idea - put it in its own college, and start fracturing the CS community. Stop putting theoretical people in with software engineers, and HCI people in with algorithms people.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30617,"question": "Computer Science is not a Science or Engineering. It is its own thing. Georgia Tech had the right idea - put it in its own college, and start fracturing the CS community. Stop putting theoretical people in with software engineers, and HCI people in with algorithms people.","aSentId": 30618,"answer": "Software engineers need to know algorithms and be aware of HCI concepts. And algorithms people should know theoretical concepts and vice versa. Are these people that narrowly focused or is that more like a concentration?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30619,"question": "Software engineers need to know algorithms and be aware of HCI concepts. And algorithms people should know theoretical concepts and vice versa. Are these people that narrowly focused or is that more like a concentration?","aSentId": 30620,"answer": "I am totally in favor of letting people concentrate on their sub-field of choice. I did not enjoy my \"Applied Math and Scientific Computing\" courses one bit, and feel that I would have been much better served by choosing a Theoretical CS class.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30619,"question": "Software engineers need to know algorithms and be aware of HCI concepts. And algorithms people should know theoretical concepts and vice versa. Are these people that narrowly focused or is that more like a concentration?","aSentId": 30622,"answer": "Biologists take chemistry, but they don't have 100% of the same curriculum. It should be similar in computing: everyone gets a common core, but it falls short at a certain point. A Data Structures course can be in there, but it should be less threateningly deep than most of the existing ones. We have so much breadth in our field, I think we need more specialization - they call them \"threads\" at GTech, and are more than the \"concentrations\" that most schools have. This is especially true as multidisciplinary computing gets bigger.\n\nPerhaps a way to assuage fears is to point out they have a college of computing, not computer science.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30623,"question": "Biologists take chemistry, but they don't have 100% of the same curriculum. It should be similar in computing: everyone gets a common core, but it falls short at a certain point. A Data Structures course can be in there, but it should be less threateningly deep than most of the existing ones. We have so much breadth in our field, I think we need more specialization - they call them \"threads\" at GTech, and are more than the \"concentrations\" that most schools have. This is especially true as multidisciplinary computing gets bigger.\n\nPerhaps a way to assuage fears is to point out they have a college of computing, not computer science.","aSentId": 30624,"answer": "I understand your point better now. I was in the mindset that the computer science major was being separated out like I said previously, not several computing related majors.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30626,"question": "Help with computer science buffer code","aSentId": 30627,"answer": "i doubt anyone wants to do your home work.\n\nyou need to at least try, the come back with specific issues where you get stuck...\n\nalso, \n8) == 0)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30628,"question": "i doubt anyone wants to do your home work.\n\nyou need to at least try, the come back with specific issues where you get stuck...\n\nalso, \n8) == 0)","aSentId": 30629,"answer": "Unfortunately the entire class is confused as we never have dealt with something like this before. I'm sure no one wants to do my homework but I thought someone could at least point me in the right direction \n:-\\","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30631,"question": "The 7 Rules for Writing Software That Won\u2019t Die When You Do","aSentId": 30632,"answer": "&gt; Not only will this code be fun to read\n\nHaha lost me there. Good article though.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30631,"question": "The 7 Rules for Writing Software That Won\u2019t Die When You Do","aSentId": 30634,"answer": "Did a quick skim, saw nothing about documenting assumptions and research. Am disappoint.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30635,"question": "Did a quick skim, saw nothing about documenting assumptions and research. Am disappoint.","aSentId": 30636,"answer": "I should like to add that assumption 1 has always been the same for me:\n\n&gt; User uses the correct terminology to refer to what they want, and doesn't just pick words that sounds nice despite being unrelated to what they want(see calling \"combo boxes\" by the name \"dropdown menus\", \"table filters\" by the name \"search box\" or \"test site\" with \"production\" as in \"please deploy it to production now, I don't care if it's not ready yet\"(OMG you've broken the live site, why would you do that?)).","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30631,"question": "The 7 Rules for Writing Software That Won\u2019t Die When You Do","aSentId": 30638,"answer": "Did he really have to embed all the tweets of the \"software writing rules\" right under the title.\n\n\nSpin up all those new chrome processes for javascript sandboxes that never ever seem to shut down right...\n\n\nI know it's nitpicky but it's just awful web design, it functions poorly due to how social media sites embed their content and how modern browsers handle it and it looks bad to boot.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30641,"question": "&gt; When you die, do you want the world to have more SEGFAULTs than it already does? Do you want the sysadmins to constantly be on call because of the shitty code you wrote that breaks everything? Do you want your PM to remember you as being the engineer who pissed all users off?\n\nYes. What kind of servant-on-horseback gives a shit what happens to a program after he dies? Do you really expect your meagre productions to be a beacon in the age of ages? \n\nIf I write tests, scripts, etc., it is because it will make my work easier, tomorrow; not someone else's, when I'm dust.","aSentId": 30642,"answer": "I actually went into the article hoping it would give instructions on how to keep personal projects alive after death.\n\nOpen sourcing code, passing on keystores, hand off domain names to someone else in the community, etc.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30644,"question": "Help plz. C programming probly easy question","aSentId": 30645,"answer": "You'll need two integers. You'll use division and modulus operators. Best of luck","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30646,"question": "You'll need two integers. You'll use division and modulus operators. Best of luck","aSentId": 30647,"answer": "That works but if the point is to avoid floats you use a float there even if you don't save it to memey since that is going to require hardware that supports floats. In some cases(embedded systems) you don't get float support in the hardware so this would create an error(possibly simple truncation) or have to be handled in software(slow). If it is handled in software and the registers aren't big enough you need to write assembly and fake it. \n\nAlthough now that I think about it if your printf string is in a \"%d.%d\" you might be able to do it but divisions on some processors aren't a good idea. \n\nIt is a rare case but I have ran into limited math capabilities on an embedded system. \n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30644,"question": "Help plz. C programming probly easy question","aSentId": 30649,"answer": "So you are saying that you need to insert a . at a certain point in a string. \n\nLook up \"integer to string\" and learn about strings in c. Yeah you are right it is pretty simple if you think about it in a different way. Enjoy doing your homework. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30650,"question": "So you are saying that you need to insert a . at a certain point in a string. \n\nLook up \"integer to string\" and learn about strings in c. Yeah you are right it is pretty simple if you think about it in a different way. Enjoy doing your homework. ","aSentId": 30651,"answer": "thank you! problem solved!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30652,"question": "thank you! problem solved!","aSentId": 30653,"answer": "Yeah this isn't exactly the place for those kinds of questions but I have a weakness for those really basic programming tasks. \n\nNow where it really gets fun is find a few other ways to do it and then figure out which one is easiest to debug and which one is easiest to maintain.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30644,"question": "Help plz. C programming probly easy question","aSentId": 30655,"answer": "r/learnprogramming ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30657,"question": "Worried... Would applying masters later decrease my chances of getting accepted despite GPA increase?","aSentId": 30658,"answer": "Until your GPA is actually above a 3.0 your chances are slim. The only person who can answer those other questions is your school's advisor.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30657,"question": "Worried... Would applying masters later decrease my chances of getting accepted despite GPA increase?","aSentId": 30660,"answer": "Your post indicates you're in a Bachelor's program outside the U.S. Depending upon where, this hurts your chances even more. Even with a 3.1, you'd need great letters of recommendation to have much of a chance. Waiting is probably best.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30657,"question": "Worried... Would applying masters later decrease my chances of getting accepted despite GPA increase?","aSentId": 30662,"answer": "Why the downvotes?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30664,"question": "Any idea for a computer science club?","aSentId": 30665,"answer": "You guys should try and put together a team for a hack-a-thon in the area, then you can teach each other better coding skills, and practice leading up to the event.\n\nAnother idea is to make a program to go into high schools or low-income areas, and teach basic computer programming to kids. Maybe make it an after school type deal.\n\nThere are a bunch of directions to take, try and get feedback from the group. What type of things do you guys like to do? Then keep pushing with those types of things...\n\nBTW, I wasn't in a comp sci club, but I've been to a ton of meetups, etc. Hopefully that helps.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30666,"question": "You guys should try and put together a team for a hack-a-thon in the area, then you can teach each other better coding skills, and practice leading up to the event.\n\nAnother idea is to make a program to go into high schools or low-income areas, and teach basic computer programming to kids. Maybe make it an after school type deal.\n\nThere are a bunch of directions to take, try and get feedback from the group. What type of things do you guys like to do? Then keep pushing with those types of things...\n\nBTW, I wasn't in a comp sci club, but I've been to a ton of meetups, etc. Hopefully that helps.","aSentId": 30667,"answer": "I am interested in the hacking portion, but recently a Computer Security has propped up in our college that is heavily focused on that. We were talking about a possible merger, but to be honest I feel like the Computer Security club will just overtake our club to due to it being directionless. I want to try to diversify the interest among Computer-related fields","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30668,"question": "I am interested in the hacking portion, but recently a Computer Security has propped up in our college that is heavily focused on that. We were talking about a possible merger, but to be honest I feel like the Computer Security club will just overtake our club to due to it being directionless. I want to try to diversify the interest among Computer-related fields","aSentId": 30669,"answer": "Generally \"hackathons\" don't have very much to do with hacking. It's a name for a day-long or weekend-long event where you form teams, brainstorm ideas, and then work on building a project together in the timespan allotted. They're really good opportunities to build something real and tangible (something you sometimes don't get to do very often in school), learn about the latest tools and technologies, and network with other students in the field as well as potential employers. Check out organizations like Major League Hacking or ChallengePost to find one in your area - many large universities and tech companies host them.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30664,"question": "Any idea for a computer science club?","aSentId": 30671,"answer": "Is your club associated with ACM or IEEE-CS?\n\nOur chapter generally just provided computing resources to members. We had multiple Linux boxes, some old donated SGI boxes, a box running a BSD variant, some web space for them to play with, a few microcontrollers with some misc parts for it to play with.\n\nOccasionally we hosted someone from industry to come in and talk about their company/product and what the did.\n\nWe also helped out the university when the Physics department was upgrading their Beowolf cluster; Had 10+ members swapping hard drives for a few hours.\n\nMostly we played Starcraft.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30672,"question": "Is your club associated with ACM or IEEE-CS?\n\nOur chapter generally just provided computing resources to members. We had multiple Linux boxes, some old donated SGI boxes, a box running a BSD variant, some web space for them to play with, a few microcontrollers with some misc parts for it to play with.\n\nOccasionally we hosted someone from industry to come in and talk about their company/product and what the did.\n\nWe also helped out the university when the Physics department was upgrading their Beowolf cluster; Had 10+ members swapping hard drives for a few hours.\n\nMostly we played Starcraft.","aSentId": 30673,"answer": "We are not. I was looking at ACM's website. Are there any resources provided through this website or is it more of an online tool to organize club events and information? We are currently affiliated with a school club \"social network\" provided by our institution. \n\nI saw the IEEE-CS seems to provide some educational resources to members. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30664,"question": "Any idea for a computer science club?","aSentId": 30675,"answer": "Maybe working together to solve Project Euler problems could be fun? And cake, definitely cake.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30677,"question": "Start a chapter of ACM","aSentId": 30678,"answer": "Hello Link,\n\nI was doing some researching regarding an ACM chapter and was wondering what the overall purpose of one is. Is it simply an online tool that allows students to organize club information, events, and meetings as well as provide Computer Science related articles to students or is there more to it? ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30683,"question": "The should be cakes.\n\nThere was a club for kintting and they like you felt they had no direction and lack of interests. They hired me as a consultant to impreve the image and parcitipation so i said the should be cakes and they had the cakes and then there were many members and committee.","aSentId": 30684,"answer": "&gt;_&gt;\n\n I like cake. If my school had had a cs club with cakes, I would have gone to it.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30688,"question": "At my university we have an ACM chapter. We meet once a week and someone will present something interesting. Sometimes it's students, sometimes not. We have ~100 members so there is a lot of room for activities, so we had sub-groups that did special things at other times, for example one group worked on writing an AI for starcraft I. Apparently there are some nice tools available for that. We also had a hacking group where students could learn basic techniques in cyber security (attacking and defending), and lastly there was a lan club where students who just wanted to play games together could meet and do that.","aSentId": 30689,"answer": "Hello Logi,\n\nI was doing some researching regarding an ACM chapter and was wondering what the overall purpose of one is. Is it simply an online tool that allows students to organize club information, events, and meetings as well as provide Computer Science related articles to students or is there more to it? ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30690,"question": "Hello Logi,\n\nI was doing some researching regarding an ACM chapter and was wondering what the overall purpose of one is. Is it simply an online tool that allows students to organize club information, events, and meetings as well as provide Computer Science related articles to students or is there more to it? ","aSentId": 30691,"answer": "The only thing I ever used from ACM was the CS articles. We mostly keep track of the events using bulletin boards around the computer science building. That works well enough for us. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30695,"question": "GPA of last two semesters does not matter for masters?","aSentId": 30696,"answer": "A school generally accepts you based on your projected GPA so you won't be able to positively affect a school's decision based on the last semester. However, if you tank your last semester (your school still needs to send a final transcript), they could revoke your offer. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30695,"question": "GPA of last two semesters does not matter for masters?","aSentId": 30698,"answer": "Some schools have a later application deadline in the spring or rolling applications. If your GPA is shaky, maybe try to find those instead.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30700,"question": "Is it possible to go into college planning to major in cs, with very little prior knowledge?","aSentId": 30701,"answer": "CS professor here. It is very possible -- and not even all that rare -- to start a CS degree with *no* knowledge of coding.\n\nWhat you need is math. If you haven't taken math for a while because (for example) your high school did not require very much math, well then you might be in for a rough time.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30702,"question": "CS professor here. It is very possible -- and not even all that rare -- to start a CS degree with *no* knowledge of coding.\n\nWhat you need is math. If you haven't taken math for a while because (for example) your high school did not require very much math, well then you might be in for a rough time.","aSentId": 30703,"answer": "Taking ap calc right now!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30704,"question": "Taking ap calc right now!","aSentId": 30705,"answer": "You have a good head start then. Most of the other math courses that have been pointed out in this sub thread are all college level classes anyway. As long as you've not been coasting through the same algebra material for four years that you got in middle school, then you should be fine. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30704,"question": "Taking ap calc right now!","aSentId": 30707,"answer": "Sounds like you're doing fine, then.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30702,"question": "CS professor here. It is very possible -- and not even all that rare -- to start a CS degree with *no* knowledge of coding.\n\nWhat you need is math. If you haven't taken math for a while because (for example) your high school did not require very much math, well then you might be in for a rough time.","aSentId": 30709,"answer": "Any maths that should take priority? ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30710,"question": "Any maths that should take priority? ","aSentId": 30711,"answer": "Discrete math.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30712,"question": "Discrete math.","aSentId": 30713,"answer": "Shhh! Don't talk about it on an open forum!\n\n*rimshot*","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30710,"question": "Any maths that should take priority? ","aSentId": 30715,"answer": "&gt; Any maths that should take priority?\n\nLinear Algebra (Matricies), Discrete Math (Logic, proofs, sets, etc.), Stats/Probability, Knowledge of sequences/series (calc 2), and all the concepts required to get there and understand what you're doing (logs, factorials, algebra, calculus, etc.).\n\nMath is a giant toolbox of problem solving skills, which is really what you need for CS. Having a good foundational understanding of math is one of the best things you can do to prepare yourself.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30716,"question": "&gt; Any maths that should take priority?\n\nLinear Algebra (Matricies), Discrete Math (Logic, proofs, sets, etc.), Stats/Probability, Knowledge of sequences/series (calc 2), and all the concepts required to get there and understand what you're doing (logs, factorials, algebra, calculus, etc.).\n\nMath is a giant toolbox of problem solving skills, which is really what you need for CS. Having a good foundational understanding of math is one of the best things you can do to prepare yourself.","aSentId": 30717,"answer": "well to be fair, these are all college level courses. Also, these are requirements for many types of CS majors.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30710,"question": "Any maths that should take priority? ","aSentId": 30719,"answer": "Operational Research was very helpful in real world applications after college.\n\nYou just need to be prepared to take your college level math courses. I think the professor here is trying to state that if you took 4 years of algebra and nothing else in high school, then it's going to be a painful shocker when you realize what you need to take in college.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30721,"question": "Lots of people are answering your question, giving rather different answers. I think we need to be careful about exactly what the question is. Here are a couple of questions, and my answers to them.\n\n----\n\nQ1: What kind of math do you need to study to be prepared to enter a university C.S. program?\n\nA1: Just the ordinary math that high schools offer: algebra, geometry, more algebra, trigonometry, maybe basic calculus. The important point is to avoid skipping a year of math simply because your high school allows it. Continue in your high school's math program (or take math classes at a local college while you are in high school) as far as you can go.\n\nIf, when you start university, you are prepared to take calculus, then I would say you are right about where you need to be. If you are not ready to take calculus, then you are a little behind; catch up! If you have already taken calculus, then you are ahead of the game. :-)\n\n----\n\nQ2: What other kinds of math will be useful to study to maximize success in a C.S. program?\n\nA2: First, discrete mathematics &amp; a little symbolic logic. These are the fields of math that are most directly applicable to computing. Ironically, they are also the fields that many C.S. majors struggle with the most. Learn some discrete math and logic, and you have already cleared a hurdle that gives many C.S. students trouble.\n\nSecond, writing proofs. This is not so much directly applicable (although it is used at the higher levels of C.S.), but it is the *kind* of reasoning you run into in some advanced C.S. classes. Be familiar with the mathematical ideas, and you'll be ready to handle the related ideas in computing.\n\n/u/Somniferus mentioned linear algebra and probability &amp; statistics, and /u/CantCatchMeUnawares mentioned operations research. I agree with both of these, but you asked what should be a *priority*, so I tried to pare it down a bit. Also, those fields are usually taken at a more advanced level. C.S. students might take them in their junior or senior years of college. High school students usually do not encounter them much. OTOH, there are books on discrete mathematics that are quite accessible to high school students who can handle algebra.","aSentId": 30722,"answer": "I appreciate you taking the time to write such a detailed answer to such a sparse question. Thank you (and everyone else who responded).","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30700,"question": "Is it possible to go into college planning to major in cs, with very little prior knowledge?","aSentId": 30726,"answer": "You certainly can. In fact, that might be an advantage for you because you might have little preconceived notions of what is good and what is bad, and you will get more out of your classes.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30727,"question": "You certainly can. In fact, that might be an advantage for you because you might have little preconceived notions of what is good and what is bad, and you will get more out of your classes.","aSentId": 30728,"answer": "Agree with you here. I went into school with a few years of C experience, and it definitely affected my ability to enjoy intro classes (which were done in Java).","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30729,"question": "Agree with you here. I went into school with a few years of C experience, and it definitely affected my ability to enjoy intro classes (which were done in Java).","aSentId": 30730,"answer": "Not your fault you learned a proper language!\n\nEveryone going through CS should understand memory management and pointers.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30731,"question": "Not your fault you learned a proper language!\n\nEveryone going through CS should understand memory management and pointers.","aSentId": 30732,"answer": "There are two schools of thought on this - some thing CS should teach the intricacies of hardware-software interaction, others think we should focus on the mathy aspects (automata, complexity, etc.)\n\nFortunately we have the compromise of Java classes, which teach neither.^wait ^what","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30731,"question": "Not your fault you learned a proper language!\n\nEveryone going through CS should understand memory management and pointers.","aSentId": 30734,"answer": "Yeah but Java is a great intro language because you aren't going to screw up memory and get some weird results. Additionally it's similarities to other languages allows someone new to focus more on the details of memory and security in those other languages than trying to figure out why dividing by integers doesn't produce a floating point number. Java is a lot more forgiving and a good language to learn OOP. \n\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30735,"question": "Yeah but Java is a great intro language because you aren't going to screw up memory and get some weird results. Additionally it's similarities to other languages allows someone new to focus more on the details of memory and security in those other languages than trying to figure out why dividing by integers doesn't produce a floating point number. Java is a lot more forgiving and a good language to learn OOP. \n\n","aSentId": 30736,"answer": "This and the fact that JAVA is the #1 programming language used in the industry.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30731,"question": "Not your fault you learned a proper language!\n\nEveryone going through CS should understand memory management and pointers.","aSentId": 30738,"answer": "A proper language indeed. Fortran and COBOL are more useful than C. I can and have programmed in C, but it is definitely one of my least favorite languages.\n\nSource: Try debugging decade old C programs that no one remembers being written in the first place. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30727,"question": "You certainly can. In fact, that might be an advantage for you because you might have little preconceived notions of what is good and what is bad, and you will get more out of your classes.","aSentId": 30740,"answer": "Piggy-backing to also totally agree. I didn't become CS until the spring of my sophomore year, and I'm still graduating on time. Always possible!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30727,"question": "You certainly can. In fact, that might be an advantage for you because you might have little preconceived notions of what is good and what is bad, and you will get more out of your classes.","aSentId": 30742,"answer": "That's good advice! I plan to spend my summer doing code academy to warm up to it.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30700,"question": "Is it possible to go into college planning to major in cs, with very little prior knowledge?","aSentId": 30744,"answer": "Your first classes will assume you know nothing about computer science. This is very likely true, even for incoming students that are \"good with computers\". The primary way you are likely to benefit with existing non-programming experience is dealing with all of the complication surrounding programming environments. Do you have any experience working with a command line? That will be helpful. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30751,"question": "On the other hand, what if I have plenty of experience programming? I'm  taking data structures right now.","aSentId": 30752,"answer": "If you have plenty of experience with programming, and you feel comfortable with self-learning, then a CS degree is probably the worst thing you could do.\n\nI'm finishing up my software engineering degree, and I haven't learned **anything**. Such a gigantic waste of time, energy and money.\n\nInstead, I'd recommend doing math or physics, with some high-level CS classes bolted-on.\n\nGetting your first job might be just slightly tougher than if you'd graduated in CS, but you're going to be better prepared, and your salary ceiling is going to be higher. You'll also be better prepared if you choose to do research.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30753,"question": "If you have plenty of experience with programming, and you feel comfortable with self-learning, then a CS degree is probably the worst thing you could do.\n\nI'm finishing up my software engineering degree, and I haven't learned **anything**. Such a gigantic waste of time, energy and money.\n\nInstead, I'd recommend doing math or physics, with some high-level CS classes bolted-on.\n\nGetting your first job might be just slightly tougher than if you'd graduated in CS, but you're going to be better prepared, and your salary ceiling is going to be higher. You'll also be better prepared if you choose to do research.","aSentId": 30754,"answer": "I had a summer internship at a software company and currently doing computer security research (not writing fancy papers or anything though).","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30753,"question": "If you have plenty of experience with programming, and you feel comfortable with self-learning, then a CS degree is probably the worst thing you could do.\n\nI'm finishing up my software engineering degree, and I haven't learned **anything**. Such a gigantic waste of time, energy and money.\n\nInstead, I'd recommend doing math or physics, with some high-level CS classes bolted-on.\n\nGetting your first job might be just slightly tougher than if you'd graduated in CS, but you're going to be better prepared, and your salary ceiling is going to be higher. You'll also be better prepared if you choose to do research.","aSentId": 30756,"answer": "ComSci is not the same as SE. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30757,"question": "ComSci is not the same as SE. ","aSentId": 30758,"answer": "In some schools it is. Have you not seen the CS curricula that boil down to \"intro to web development\" and \"intro to databases\"?\n\nA lot of CS degrees don't even touch automata theory.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30767,"question": "Where do I start?","aSentId": 30768,"answer": "The following isn't a set in stone idea, just what I like or think is an easy start.\n\nReverse engineering: if you play video games, download cheat engine, read some tutorials, first give yourself unlimited health in a game (single player please, don't mess with this stuff for multiplayer). This will also start you on assembler knowledge.\n\nAssembler: using the information you got in a cheat engine, write your own trainer for a game of your choice. Or maybe follow the \"smashing the stack for fun and profit.\" Paper.\n\nWindows/Linux user space app: there are a ton of opportunities here. Small video games (Terris, snake), calendar apps, a phone book. Google ~~\"windows api GUI\"~~ \"WinForms\" or \"Windows Presentation Foundation\" (thanks, /u/shinaku) to find how to make guis under windows. Or \"QT GUI tutorial\" for Linux' KDE environment, or \"GTK GUI tutorial\" for gnome.\n\nI've never wrote windows drivers, never googled tutorial for it either, so idk about windows but Linux has a ton of \"hello world\" like tutorials for modules (Linux modules are window's drivers). Google \"Linux module tutorial\"\n\nIf you write some games especially in QT, you'll learn a descent amount of advanced c++ - memory management, classes, abstractions, etc. \n\nThen, write a chat in python. This'll get you into networks. For this, Google \"python sockets\". Maybe write your own IRC client (just very basic). Then for TCP/IP you can write an app to transfer files over network. Google \"python TCP tutorial\"\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30769,"question": "The following isn't a set in stone idea, just what I like or think is an easy start.\n\nReverse engineering: if you play video games, download cheat engine, read some tutorials, first give yourself unlimited health in a game (single player please, don't mess with this stuff for multiplayer). This will also start you on assembler knowledge.\n\nAssembler: using the information you got in a cheat engine, write your own trainer for a game of your choice. Or maybe follow the \"smashing the stack for fun and profit.\" Paper.\n\nWindows/Linux user space app: there are a ton of opportunities here. Small video games (Terris, snake), calendar apps, a phone book. Google ~~\"windows api GUI\"~~ \"WinForms\" or \"Windows Presentation Foundation\" (thanks, /u/shinaku) to find how to make guis under windows. Or \"QT GUI tutorial\" for Linux' KDE environment, or \"GTK GUI tutorial\" for gnome.\n\nI've never wrote windows drivers, never googled tutorial for it either, so idk about windows but Linux has a ton of \"hello world\" like tutorials for modules (Linux modules are window's drivers). Google \"Linux module tutorial\"\n\nIf you write some games especially in QT, you'll learn a descent amount of advanced c++ - memory management, classes, abstractions, etc. \n\nThen, write a chat in python. This'll get you into networks. For this, Google \"python sockets\". Maybe write your own IRC client (just very basic). Then for TCP/IP you can write an app to transfer files over network. Google \"python TCP tutorial\"\n","aSentId": 30770,"answer": "&gt; windows api GUI\"\n\nGood response except I think for this bit.  Generally when you're writing for windows you'd rarely touch any of the Windows API unless you want a very low level amount of flexibility (and it's old code, poorly documented and a nightmare to work with).  You'd be best looking at WinForms or Windows Presentation Foundation on top of .NET to get into windows user space development.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30771,"question": "&gt; windows api GUI\"\n\nGood response except I think for this bit.  Generally when you're writing for windows you'd rarely touch any of the Windows API unless you want a very low level amount of flexibility (and it's old code, poorly documented and a nightmare to work with).  You'd be best looking at WinForms or Windows Presentation Foundation on top of .NET to get into windows user space development.","aSentId": 30772,"answer": "Ah, I haven't coded for windows for about 10 years. Didn't know of this. I'll fix it. Thanks!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30769,"question": "The following isn't a set in stone idea, just what I like or think is an easy start.\n\nReverse engineering: if you play video games, download cheat engine, read some tutorials, first give yourself unlimited health in a game (single player please, don't mess with this stuff for multiplayer). This will also start you on assembler knowledge.\n\nAssembler: using the information you got in a cheat engine, write your own trainer for a game of your choice. Or maybe follow the \"smashing the stack for fun and profit.\" Paper.\n\nWindows/Linux user space app: there are a ton of opportunities here. Small video games (Terris, snake), calendar apps, a phone book. Google ~~\"windows api GUI\"~~ \"WinForms\" or \"Windows Presentation Foundation\" (thanks, /u/shinaku) to find how to make guis under windows. Or \"QT GUI tutorial\" for Linux' KDE environment, or \"GTK GUI tutorial\" for gnome.\n\nI've never wrote windows drivers, never googled tutorial for it either, so idk about windows but Linux has a ton of \"hello world\" like tutorials for modules (Linux modules are window's drivers). Google \"Linux module tutorial\"\n\nIf you write some games especially in QT, you'll learn a descent amount of advanced c++ - memory management, classes, abstractions, etc. \n\nThen, write a chat in python. This'll get you into networks. For this, Google \"python sockets\". Maybe write your own IRC client (just very basic). Then for TCP/IP you can write an app to transfer files over network. Google \"python TCP tutorial\"\n","aSentId": 30774,"answer": "Considering Qt mostly handles the memory for you he won't learn advanced memory management with it, unless he starts purposely allocating memory without parents.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30767,"question": "Where do I start?","aSentId": 30776,"answer": "That's a pretty vast range of stuff to cover.  I wouldn't expect to become an expert in it by the time you graduate - unless you do nothing but research.  A lot of the courses you'll take will cover introductions into a good amount of that stuff.  A good amount of it will take some time to become really proficient in (reverse engineering, driver writing).  Python might be the \"easiest\" starting point, as its just a language.  Following that, networking might be the way to go.\n\nA lot of this depends on what you want to do, and what you like to do as well.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30767,"question": "Where do I start?","aSentId": 30778,"answer": "In all honesty I don't think that kind of bottom up skill list is all that helpful when you're just getting started. Instead I would start with what you want to do/build, and start trying to do/build it now, learning the necessary skills along the way. \n\nEdit: I guess I should add that once you are able to build what you want to build, then a skills list can be a useful way to manage your further learning. For example, here is my [developer's reading list](http://stevewedig.com/2014/02/03/software-developers-reading-list/) with 16-20 concepts on it. But if you're just starting out, I would stay goal directed rather than \"studying everything\".","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30779,"question": "In all honesty I don't think that kind of bottom up skill list is all that helpful when you're just getting started. Instead I would start with what you want to do/build, and start trying to do/build it now, learning the necessary skills along the way. \n\nEdit: I guess I should add that once you are able to build what you want to build, then a skills list can be a useful way to manage your further learning. For example, here is my [developer's reading list](http://stevewedig.com/2014/02/03/software-developers-reading-list/) with 16-20 concepts on it. But if you're just starting out, I would stay goal directed rather than \"studying everything\".","aSentId": 30780,"answer": "I think that style of bottom up skill will be a very good thing to aim for and they are the kinds of thing which will give them an extremely solid grounding in modern computing systems in a way which puts them on a completely different level to a lot of other fresh CS grads and run of the mill developers.\n\nThe books you've listed are interesting, but I don't think they're the kind of reading material that a fresh student would have to dig into. They'd be useful for a developer with a couple of years experience who wants to get a better understanding of how to build large maintainable code systems, but that kind of thing isn't expected of fresh grad students.\n\nWhat's useful is digging deep into how programs run, how are executables loaded, what is kernel mode, *why* do programs crash, what's the stack, the heap, how does the kernel manage the virtual address space etc.\n\nAll of that stuff they should be learning at some point during their CS course, but they won't push you to get a real understanding of these things.\n\nIMO the best way to get this kind of understanding is to jump into reverse engineering, disassembling the simplest of C or C++ programs that you've written, debugging programs without having the source code.\n\nThey will end up spending a lot of time looking at the guts and internals of systems from the inside out, they will see how GUI calls are handled by the Win32 layer, see how other people have written apps and the kinds of libraries they use and which way they use them.\n\nHaving the skills to be able to dissect and comprehend any program regardless of where it's running or what it's running in will get them ahead, not reading about how to write clean maintainable code.\n\nWhere to start?\n\n * OllyDBG and IDA - disassemble and debug *everything* on your system\n * Find the documentation for *everything* you don't understand, and read it.\n * Learn Linux, use objdump to disassemble your own simple C programs\n * Download lots of source code, it doesn't matter which language it's in, read the source then try and build and modify it.\n * Learn how to debug C programs with GDB\n * Try doing as many crackmes as you can bare\n * Get the Windows driver toolkit, install a kernel module\n * Learn about sql injection and webapp security\n * Decompile Objective-C programs, how are they different from C and C++ programs?\n * Install Minix and write your own scheduler\n * Try and patch executables, how many bytes can you replace with 0x90 in a hexeditor before stuff breaks, why does it break?\n * See how different compilers compile the same program, which difference do optimisation flags make?\n * Write a bootloader in assembler that prints 'Hello World' on Bochs, Qemu or any x86 computer.\n * Follow some tutorials to write a Linux kernel driver from scratch\n * Find tools to decompile .NET programs, decompile every program you can find\n\nIt will need a lot of initiative, but even if the initiative is 'lets see how this works' then that should be enough to drive them into the depths and into the zone.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30781,"question": "I think that style of bottom up skill will be a very good thing to aim for and they are the kinds of thing which will give them an extremely solid grounding in modern computing systems in a way which puts them on a completely different level to a lot of other fresh CS grads and run of the mill developers.\n\nThe books you've listed are interesting, but I don't think they're the kind of reading material that a fresh student would have to dig into. They'd be useful for a developer with a couple of years experience who wants to get a better understanding of how to build large maintainable code systems, but that kind of thing isn't expected of fresh grad students.\n\nWhat's useful is digging deep into how programs run, how are executables loaded, what is kernel mode, *why* do programs crash, what's the stack, the heap, how does the kernel manage the virtual address space etc.\n\nAll of that stuff they should be learning at some point during their CS course, but they won't push you to get a real understanding of these things.\n\nIMO the best way to get this kind of understanding is to jump into reverse engineering, disassembling the simplest of C or C++ programs that you've written, debugging programs without having the source code.\n\nThey will end up spending a lot of time looking at the guts and internals of systems from the inside out, they will see how GUI calls are handled by the Win32 layer, see how other people have written apps and the kinds of libraries they use and which way they use them.\n\nHaving the skills to be able to dissect and comprehend any program regardless of where it's running or what it's running in will get them ahead, not reading about how to write clean maintainable code.\n\nWhere to start?\n\n * OllyDBG and IDA - disassemble and debug *everything* on your system\n * Find the documentation for *everything* you don't understand, and read it.\n * Learn Linux, use objdump to disassemble your own simple C programs\n * Download lots of source code, it doesn't matter which language it's in, read the source then try and build and modify it.\n * Learn how to debug C programs with GDB\n * Try doing as many crackmes as you can bare\n * Get the Windows driver toolkit, install a kernel module\n * Learn about sql injection and webapp security\n * Decompile Objective-C programs, how are they different from C and C++ programs?\n * Install Minix and write your own scheduler\n * Try and patch executables, how many bytes can you replace with 0x90 in a hexeditor before stuff breaks, why does it break?\n * See how different compilers compile the same program, which difference do optimisation flags make?\n * Write a bootloader in assembler that prints 'Hello World' on Bochs, Qemu or any x86 computer.\n * Follow some tutorials to write a Linux kernel driver from scratch\n * Find tools to decompile .NET programs, decompile every program you can find\n\nIt will need a lot of initiative, but even if the initiative is 'lets see how this works' then that should be enough to drive them into the depths and into the zone.","aSentId": 30782,"answer": "Oh yeah, I agree that my reading list is not relevant to OP right now. I intended to illustrate that I am not fundamentally opposed to bottom up learning, but that I think concrete goal directed learning is a more effective way to \"get where you're going\". Once you've crossed that threshold, then subject/book lists make sense to me to increase your breadth/depth of knowledge. I guess I'm saying that project based learning provides a more accurate heuristic for what OP will need to actually know than a broad topic list.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30786,"question": "Freshman in high school, is math super important? Help please.","aSentId": 30787,"answer": "Math is really important in CS. Calculus, linear algebra, and discrete mathematics are all pretty necessary if you want to do anything beyond business-level drudge coding.\n\nSeriously, it's right there on the sidebar.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30788,"question": "Math is really important in CS. Calculus, linear algebra, and discrete mathematics are all pretty necessary if you want to do anything beyond business-level drudge coding.\n\nSeriously, it's right there on the sidebar.","aSentId": 30789,"answer": "Thanks for the reply! I'm going to take Algebra 1 again over the summer.\n\nSorry dude, I probably should put the sidebar in my custom css layout I made.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30786,"question": "Freshman in high school, is math super important? Help please.","aSentId": 30791,"answer": "You have time as a freshman and by starting now you'll be way ahead of most people. Generally (as far as my curriculum goes), we take up to linear algebra on the math track but there's also some other math courses like discrete math that you'd probably take. From my experience, cs is pretty math heavy, so if you hate math, I don't know how much you'll like cs. I've observed that many students start dropping the cs track during discrete math since it introduces a different way of thinking and you have to become acclimated with writing proofs. And depending on what you might concentrate in for your major, you'll have even more math classes.\n\nI would suggest brushing up on math because you will need to know quite a bit of it for cs. I meet many people that want to do cs because they like programming but soon regret that choice when they realize what cs actually entails.\n\nBut you're only a freshman so you have so much time to explore your passions and improve in areas of interests. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30792,"question": "You have time as a freshman and by starting now you'll be way ahead of most people. Generally (as far as my curriculum goes), we take up to linear algebra on the math track but there's also some other math courses like discrete math that you'd probably take. From my experience, cs is pretty math heavy, so if you hate math, I don't know how much you'll like cs. I've observed that many students start dropping the cs track during discrete math since it introduces a different way of thinking and you have to become acclimated with writing proofs. And depending on what you might concentrate in for your major, you'll have even more math classes.\n\nI would suggest brushing up on math because you will need to know quite a bit of it for cs. I meet many people that want to do cs because they like programming but soon regret that choice when they realize what cs actually entails.\n\nBut you're only a freshman so you have so much time to explore your passions and improve in areas of interests. ","aSentId": 30793,"answer": "Yeah, I've decided that programming is the way to go. I think that the reason I hate math is because I don't know how to do it and that I'm so far behind. Thanks for replying!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30794,"question": "Yeah, I've decided that programming is the way to go. I think that the reason I hate math is because I don't know how to do it and that I'm so far behind. Thanks for replying!","aSentId": 30795,"answer": "It happened to me, I went into high school afraid of math because of an unholy birch who 'taught' us algebra. She also only let the best half of the class take the standardized test because she knew that everybody would fail.\n\nBut now that I'm older and have good teachers I can say my love of math is restored.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30792,"question": "You have time as a freshman and by starting now you'll be way ahead of most people. Generally (as far as my curriculum goes), we take up to linear algebra on the math track but there's also some other math courses like discrete math that you'd probably take. From my experience, cs is pretty math heavy, so if you hate math, I don't know how much you'll like cs. I've observed that many students start dropping the cs track during discrete math since it introduces a different way of thinking and you have to become acclimated with writing proofs. And depending on what you might concentrate in for your major, you'll have even more math classes.\n\nI would suggest brushing up on math because you will need to know quite a bit of it for cs. I meet many people that want to do cs because they like programming but soon regret that choice when they realize what cs actually entails.\n\nBut you're only a freshman so you have so much time to explore your passions and improve in areas of interests. ","aSentId": 30797,"answer": "Do you have any advice for learning it? I'm behind as well because when I was in middle school I took pre-algebra and had an extra algebra class for extra help and I only had to pass one algebra class and I passed the one I didn't get help on so basically I had to retake the class all over again in High school even though I told my teacher I had taken that class before\n Long story short I'm in geometry honors right now as a sophomore and I honesty think I'm bad at it. My teacher barely teaches the class anything and is \"unprepared\" to teach and I'm having trouble learning by myself. Any advice is greatly appreciated","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30798,"question": "Do you have any advice for learning it? I'm behind as well because when I was in middle school I took pre-algebra and had an extra algebra class for extra help and I only had to pass one algebra class and I passed the one I didn't get help on so basically I had to retake the class all over again in High school even though I told my teacher I had taken that class before\n Long story short I'm in geometry honors right now as a sophomore and I honesty think I'm bad at it. My teacher barely teaches the class anything and is \"unprepared\" to teach and I'm having trouble learning by myself. Any advice is greatly appreciated","aSentId": 30799,"answer": "I would recommend reviewing algebra and geometry just so when you get to calculus the algebraic parts are easier. I believe a solid grasp of algebra would go a long way. The geometry helps when you need to work with shapes and knowing the relationships between different properties of shapes is very helpful. I would also recommend always doing lots of practice problems. With math most people don't feel competent in it because we aren't given enough time to work at it and internalize the material before we move onto the next topic (at least in high school). So I also thinking learning proofs and theorems and writing them out and internalizing them would put you ahead of the game because with proofs you practice constructing mathematical arguments, and that's a really vital skill. But evereverything all depends on what college you may go to. My program is math-intensive and I'm a cs-math double major, so I deal with math *a lot*.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30786,"question": "Freshman in high school, is math super important? Help please.","aSentId": 30801,"answer": "CS is math, so yeah, kind of important. Sure, if you want to be a coder you probably don't need much math, linear algebra, a bit of calculus, and a bit of discrete math is all you need to solve basic problems. If you want to *do* CS though, you'll need a lot of math, a good understanding of proofs plus knowledge of set theory, logic, combinatorics, graph theory, et al. \n\nDon't worry too much about that though you don't have to learn everything at once. But yeah, your classes right now are kind of shit, not designed to make math interesting or fun, you just have to learn to deal with it, because a lot of life is dealing with shit you don't want to do or don't find interesting. Math is pretty sweet though, once you get past most of the bullshit, you think you can define the natural numbers? it's a lot harder than you'd think. Want 1+1 = 0? Sure, just use the integers modulo 2. Thanks to math you can write a program that will make a supercomputer shit its pants with two input values less than 10, the core algorithm is maybe 10 lines of code. Seriously though, don't let school get you down. \n\nIf you can, pick up a copy of Polya's \"How to Solve It\" and \"Love and Math: The Heart of Hidden Reality\" by Edward Frenkel. I was in  your shoes once, my 8th grade math teacher was awful and I hated math, but years later I have a degree in math, so make of that what you will. If you need help though, feel free to pm me. (sorry if it's a bit of a ramble)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30804,"question": "Math is important. Tips? It's simple; pay attention in class (don't browse reddit in class) and ASK QUESTIONS/BE INVOLVED. The biggest problem I had in high school math was not understanding a topic until I did the homework and reviewed it during class. My junior and senior years I had the same teach for math (pre-calc/calc) and he was the best thing for my math career since he made every student answer and show their answers to homework.\n\nAs for importance... As a sophomore in college, I have already taken 4 math classes and I am taking 2 more this semester.","aSentId": 30805,"answer": "Your reply is greatly appreciated! I'm gonna be reviewing math over the summer and doing plenty outside of class. I'm deciding if I should do EVERY single homework assignment over, starting from day 1. Yes, it'll be a pain in the ass, but might be worthwhile.\n\nGood luck with your math in college!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30807,"question": "Try to take up to Trigonometry, Algebra 2, and preCalculus before finishing high school and you will be fine (as long as you apply yourself in college).  Most compSci colleges will require you to take Calculus for 2-3 semesters, a statistics class, and possibly a linear algebra class.  As long as you have a solid understanding of algebra and trigonometry, you should be okay for those classes, as they build upon each other.\n\nSome upper level compsci classes may require you to take more complicated math classes, but I don't think you could prepare for those in high school. \n\n\nIf you really want to get ahead of the game, try to take the AP Calculus AB and BC classes while in high school.  That will save you 2 semesters worth of math classes, if you pass the test at the end.  \n\n\nMost (not all!) computer science classes do not require hard maths as you think of them.  A lot of the math you will use is really only applicable to computer science (such as computing the asymptotic run time of code).\n\nIf you have any other questions feel free to reply/PM, I'm currently a 3rd year undergraduate student enrolled in a decent computer science college.","aSentId": 30808,"answer": "Thanks dude! I might send you a message. Hopefully you aren't as true as your username :D","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30810,"question": "The math stuff has been answered, but my formal grammar nerd has another tip :) These days, \"whom\" is becoming something of a status marker - colloquial English has pretty much given up on it. Thing about status markers is, they don't work if you get them wrong.\n\nYou actually want \"(who subsequently got fired)\" - arguably \"who was subsequently fired\", but definitely \"who\". \n\nThe teacher here is the subject, not the object.","aSentId": 30811,"answer": "Thanks! Honestly, I'm supermegamultitasking at the moment, too lazy to care about my grammar. Sorry m8, edited","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30814,"question": "What would be a good laptop for a cs major?","aSentId": 30815,"answer": "I've been seeing a lot of people using the ThinkPad X1 Carbon. The Chromebook pixel also looks like a pretty good all-purpose laptop. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30814,"question": "What would be a good laptop for a cs major?","aSentId": 30817,"answer": "The culture at your school can also have an impact on what the right choice might be.   Some depts are really academic where Linux and osx are preferred.  Others are business oriented and may use Windows and visual Studio heavily.  Might be worth inquiring with the dept or current students to see what fits the environment. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30814,"question": "What would be a good laptop for a cs major?","aSentId": 30819,"answer": "What will you use it for besides programming?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30820,"question": "What will you use it for besides programming?","aSentId": 30821,"answer": "Random student-y stuff. Maybe a tad of gaming. Streaming soccer games. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30822,"question": "Random student-y stuff. Maybe a tad of gaming. Streaming soccer games. ","aSentId": 30823,"answer": "What kind of games? Just a question of whether you want a dedicated gpu or not ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30825,"question": "Are you planning to use Linux?\n\nI would recommend a nice ThinkPad.","aSentId": 30826,"answer": "Which model would you recommend?I'm hearing a lot about the t440s.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30828,"question": "I personally have a Macbook Pro 13' 2011 model. It's served me absolutely wonderfully for the past 4 years. While I think Apple is finally starting to drive me away with their cloud horseshit, I still think OSX is the most reliable and useful OS for programming overall. My experience in 4 years of a computer science degree:\n\nOverall: OSX &gt; Linux &gt; Windows\n\nEase of use: OSX &gt;= Linux &gt;&gt;&gt;&gt;&gt;&gt;&gt; Windows\n\nCustomization/Freedom: Linux &gt; Windows &gt; OSX\n\nGaming: Windows\n\nFor computer science, OSX has everything you need in a pretty, fluid, well-supported package.\n\nLinux has everything you need and more, allowing you to really do whatever the fuck you want. This comes with a higher degree of uncertainty in terms of software though. Not every package is gonna be perfect and it might hurt you if you have to rely on them. If you intend to go manmode with a single boot Linux machine, look into finding some cheap laptops with easily upgradeable parts (i.e. RAM and storage) and snag that, swap in some updated hardware, and boot linux. It seems most people like Thinkpads for this approach.\n\nWindows is just downright unpleasant to program in for me. Though it also has the largest breadth of polished and specific programs available to you in general. Only feasible gaming platform.","aSentId": 30829,"answer": "Can you elaborate on why Windows is unpleasant? Most IDEs are going to be close to identical across OS's right?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30830,"question": "Can you elaborate on why Windows is unpleasant? Most IDEs are going to be close to identical across OS's right?","aSentId": 30831,"answer": "Out of the box, Windows has no tools aside from Notepad and a bad graphical file manager. You have to build your development environment from scratch, and just installing an IDE won't be enough unless you're working in a very narrow problem domain. \n\nOS X and Linux distros get you a very large toolkit preinstalled and standardized: basic composable text manipulation tools, man pages, scripting languages and C and C++ compilers, at least two or three version control systems, a bunch of libraries with headers under open-source licenses, system administration tools that are scriptable and much more transparent.\n\nYou can get that kind of stuff on Windows, but your choices are to either use something like cygwin to get the Unix tools, or use Windows-specific substitutes that behave differently and often aren't composable or even usable from a command line.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30830,"question": "Can you elaborate on why Windows is unpleasant? Most IDEs are going to be close to identical across OS's right?","aSentId": 30833,"answer": "I just really dislike Windows in terms of productivity. The hotkey defaults, while you can change them, aren't nearly as nice to me as OSX defaults.\n\nYou don't have a proper terminal.\n\nInstalling packages is a bitch.\n\nI don't use IDEs, 95% of what I do is in Vim. The other 5% is Sublime Text for when I need to copy/use mouse to edit things more efficiently.\n\nAgain, this is mostly my experience. But I think the most technical reason I can give is that windows isn't *nix based, and I am heavily dependent on the general workflow and usability of *nix.\n\nTo answer your question, yes most IDEs are reasonably identical across them. Some will have different bugs or more/less support than others, but they're mostly the same.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30835,"question": "Any laptop you can work with. I bought a x61 (upgraded ram to 4GB and an ssd) used for a few bucks and I work with it when I'm at uni or travelling.  \nIt doesn't matter if it costs a few hundred bucks more than it should and has a glowing fruit on the top (however they're not as overpriced as they used to be) or if it's a cheap shoot.\n\nIf you want something for longer buy a modular laptop, just like the ThinkPads (there are other manufacturers with modular builds than IBM/lenovo, I just had the best experiences with ThinkPads). Something is broken? No problem, break it up and put the replacement in. Personally I had the worst experiences with Asus and Samsung and never heard anything good about them.\n\nBut if you just want something that screams 'I am a student and I'm different!!!' buy an iDiot and plaster some stickers on it you gathered from coding conventions. And don't forget to call yourself a 'code artisan'.\n\nMy recommendation would be to buy a used ThinkPad from the last four years. You have more power than enough to work with and you'll save lots of money - if you get a good deal up 50% and then you can rather invest the saved money in a second battery. You will rather need that than a few hundred mhz more per core and writing assignments or code on a high res monitor doesn't improve your quality.  \nBut what will help you for working at your own desk will be a second pivoted monitor so spend some of your saved money on that. You'll love it.","aSentId": 30836,"answer": "Thanks for the advice! \"Code artisan\" has a nice ring to it.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30837,"question": "Thanks for the advice! \"Code artisan\" has a nice ring to it.","aSentId": 30838,"answer": "I'll never understand some people's rabid hate for Apple. Buy what works for you. I work for a software company now where a ton of people including myself are on macs. I honestly prefer OS X to windows for nearly everything. It's like Linux, except there is money behind it. \n\nI'm close to finishing my CS degree and my personal MacBook Air has been a champ. I can build my company's full stack on it in a VM and it won't break a sweat. It's also light, and there isn't a windows machine around that has a battery that will come close to lasting 12-13 hours on a charge. Hell, at the time my i7 MacBook Air was the cheapest Haswell based laptop I could find. \n\nThere are pros and cons to every machine, so I wouldn't dismiss any particular brand because a neckbeard on the Internet tells you to. Figure out what your needs and preferences are and find a machine to match. \n\nI used to have a beast of a desktop that I built but I don't game and ended up using my Mac 100% of the time. I'm not biased towards an OS or brand for anything other than the utility that they produce. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30847,"question": "Alan Turing's notes found being used as roof insulation in Hut 6 at Bletchley Park","aSentId": 30848,"answer": "I guess his work just went over their heads.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30849,"question": "I guess his work just went over their heads.","aSentId": 30850,"answer": "Well, I'm glad someone cracked that enigma.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30849,"question": "I guess his work just went over their heads.","aSentId": 30852,"answer": "That joke was a bit unexpected.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30847,"question": "Alan Turing's notes found being used as roof insulation in Hut 6 at Bletchley Park","aSentId": 30854,"answer": "Looks like it was found 2 years ago in 2013?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30855,"question": "Looks like it was found 2 years ago in 2013?","aSentId": 30856,"answer": "Looks like we just found a new TIL post!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30847,"question": "Alan Turing's notes found being used as roof insulation in Hut 6 at Bletchley Park","aSentId": 30858,"answer": "Amazing and Inspiring!\n\n&gt;\"The fact that these papers were used to block draughty holes in the primitive hut walls reminds us of the rudimentary conditions under which these extraordinary people were working.\u201d","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30859,"question": "Amazing and Inspiring!\n\n&gt;\"The fact that these papers were used to block draughty holes in the primitive hut walls reminds us of the rudimentary conditions under which these extraordinary people were working.\u201d","aSentId": 30860,"answer": "He made the hut Turing complete.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30861,"question": "He made the hut Turing complete.","aSentId": 30862,"answer": "really tied the whole thing together?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30864,"question": "It's funny how things turn out.\n\nHandel died being the most famous composer of his time.\n\nBach died being known mostly as a respected organist.\n\nNot to downplay the achievements of Handel, but it is funny to think that Bach did not realize the fame he would later achieve. ","aSentId": 30865,"answer": "Handel is just easier to grasp. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30864,"question": "It's funny how things turn out.\n\nHandel died being the most famous composer of his time.\n\nBach died being known mostly as a respected organist.\n\nNot to downplay the achievements of Handel, but it is funny to think that Bach did not realize the fame he would later achieve. ","aSentId": 30867,"answer": "I don't get it. What do Handel and Bach have to do with Turing? ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30868,"question": "I don't get it. What do Handel and Bach have to do with Turing? ","aSentId": 30869,"answer": "They're well known for their works but weren't very appreciated until well after they died.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 30864,"question": "It's funny how things turn out.\n\nHandel died being the most famous composer of his time.\n\nBach died being known mostly as a respected organist.\n\nNot to downplay the achievements of Handel, but it is funny to think that Bach did not realize the fame he would later achieve. ","aSentId": 30871,"answer": "Bizet's Carmen was considered subpar at the time of his death.","corpus": "reddit"}]