[{"docID": "t5_2fwo", "qSentId": 55592, "question": "How to pronounce hexadecimal", "aSentId": 55593, "answer": "I feel like if I said these aloud, nearby pumpkins would turn into carriages.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55594, "question": "I feel like if I said these aloud, nearby pumpkins would turn into carriages.", "aSentId": 55595, "answer": "I feel like I would insult someone's grandmother if I were to say these and I were in Scotland.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55596, "question": "I feel like I would insult someone's grandmother if I were to say these and I were in Scotland.", "aSentId": 55597, "answer": "Oh my God, this is exactly correct.\n\n[For the jury's consideration...]( https://youtu.be/le_uNGdpa4c)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55598, "question": "Oh my God, this is exactly correct.\n\n[For the jury's consideration...]( https://youtu.be/le_uNGdpa4c)", "aSentId": 55599, "answer": "OH MY GOD SCOTTISH JERRY SPRINGER IS AMAZING", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55600, "question": "OH MY GOD SCOTTISH JERRY SPRINGER IS AMAZING", "aSentId": 55601, "answer": "scottish*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55602, "question": "scottish*", "aSentId": 55603, "answer": "Did he say Irish Jerry Springer? Like the soap?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55602, "question": "scottish*", "aSentId": 55605, "answer": "what the fuck did I just type.  I said \"scottish\" aloud as I wrote that...\n\nThe hell is my problem, I wanna know", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55606, "question": "what the fuck did I just type.  I said \"scottish\" aloud as I wrote that...\n\nThe hell is my problem, I wanna know", "aSentId": 55607, "answer": "What did you write at first?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55608, "question": "What did you write at first?", "aSentId": 55609, "answer": "Op pls", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55600, "question": "OH MY GOD SCOTTISH JERRY SPRINGER IS AMAZING", "aSentId": 55611, "answer": "Jeremy Kyle is English, not Scottish. His show has people on it from throughout the UK.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55600, "question": "OH MY GOD SCOTTISH JERRY SPRINGER IS AMAZING", "aSentId": 55613, "answer": "Sounds like english with ridiculous accents", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55614, "question": "Sounds like english with ridiculous accents", "aSentId": 55615, "answer": "Isn't Scottish just poorly pronounced English? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55616, "question": "Isn't Scottish just poorly pronounced English? ", "aSentId": 55617, "answer": "I guess so?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55614, "question": "Sounds like english with ridiculous accents", "aSentId": 55619, "answer": ".....", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55594, "question": "I feel like if I said these aloud, nearby pumpkins would turn into carriages.", "aSentId": 55621, "answer": "Believe it or not, bibbidi-bobbidi-boo is universally recognized as 0xBBB", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55622, "question": "Believe it or not, bibbidi-bobbidi-boo is universally recognized as 0xBBB", "aSentId": 55623, "answer": "This new system has the advantage that \"bibbity bitey bee\" resolves to 0xB00B, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55622, "question": "Believe it or not, bibbidi-bobbidi-boo is universally recognized as 0xBBB", "aSentId": 55625, "answer": "Which means a BibiBit must be 12 bits.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55594, "question": "I feel like if I said these aloud, nearby pumpkins would turn into carriages.", "aSentId": 55627, "answer": "I feel like I'm talking Jive.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55592, "question": "How to pronounce hexadecimal", "aSentId": 55630, "answer": "    0xf * 0x9 = 135 = 0x87", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55631, "question": "    0xf * 0x9 = 135 = 0x87", "aSentId": 55632, "answer": "If we use the following coding scheme:\n\na = ant\n\nb = bat\n\nc = cat\n\nd = dog\n\ne = eel\n\nf = fox\n\nThen the answer is 87.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55633, "question": "If we use the following coding scheme:\n\na = ant\n\nb = bat\n\nc = cat\n\nd = dog\n\ne = eel\n\nf = fox\n\nThen the answer is 87.", "aSentId": 55634, "answer": "I've been saying Foxeel for a while now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55631, "question": "    0xf * 0x9 = 135 = 0x87", "aSentId": 55636, "answer": "    0xf * 0x9 = (0x10 - 0x1) * 0x9 = 0x90 - 0x9 = 0x87", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55637, "question": "    0xf * 0x9 = (0x10 - 0x1) * 0x9 = 0x90 - 0x9 = 0x87", "aSentId": 55638, "answer": "Your username is \"220kg\" in base-36.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55639, "question": "Your username is \"220kg\" in base-36.", "aSentId": 55640, "answer": "Ok, so now what does yours mean?\n\nAfter checking only a few things, I can only conclude you are refering to the DEA.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55641, "question": "Ok, so now what does yours mean?\n\nAfter checking only a few things, I can only conclude you are refering to the DEA.", "aSentId": 55642, "answer": "They're my initials, and you can imagine I was quite pleased to discover that the decimal value happens to be a permutation of my childhood street address.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55637, "question": "    0xf * 0x9 = (0x10 - 0x1) * 0x9 = 0x90 - 0x9 = 0x87", "aSentId": 55644, "answer": "What is this, Common Core hexadecimal math?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55631, "question": "    0xf * 0x9 = 135 = 0x87", "aSentId": 55646, "answer": "Let's just say fleventy is 130 in decimal then; error justified, case closed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55592, "question": "How to pronounce hexadecimal", "aSentId": 55648, "answer": "I like the Simpsons reference in there... ninteen dickety two can finally be a real number", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55649, "question": "I like the Simpsons reference in there... ninteen dickety two can finally be a real number", "aSentId": 55650, "answer": "It's been a real number since the Kaiser stole \"twenty\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55651, "question": "It's been a real number since the Kaiser stole \"twenty\".", "aSentId": 55652, "answer": "but I gave up after dickety six miles", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55653, "question": "but I gave up after dickety six miles", "aSentId": 55654, "answer": "Dickety . . . Highly dubious", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55649, "question": "I like the Simpsons reference in there... ninteen dickety two can finally be a real number", "aSentId": 55656, "answer": "~~Except in the Simpsons it's 'Tickety' not 'Dickety'.~~\n\nYeah, I'm wrong.   Nothing to see here.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55658, "question": "What about non A-F numbers?\n\nCalling 0x15 \"fifteen\" would be confusing as well?  It would quickly become \"hex fifteen\" or \"hex one five\". But then higher numbers just become \"hex b three\" instead of \"bippity-three.\"  ", "aSentId": 55659, "answer": "I just call 0x15 \"fifteen\", and that's what everyone at my work does. As long as you know you're talking hex, why not? You already have 15 (dec) pronounced as \"eff\"  and having two sounds for the same value is silly, especially when other values don't have names yet.\n\nIt also helps if you want to group values by more than just one byte. 0x10005 is \"ten thousand five\". ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55658, "question": "What about non A-F numbers?\n\nCalling 0x15 \"fifteen\" would be confusing as well?  It would quickly become \"hex fifteen\" or \"hex one five\". But then higher numbers just become \"hex b three\" instead of \"bippity-three.\"  ", "aSentId": 55661, "answer": "\"Ay-dee\". \n\nEighty  \nEight-D  \nA-D  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55658, "question": "What about non A-F numbers?\n\nCalling 0x15 \"fifteen\" would be confusing as well?  It would quickly become \"hex fifteen\" or \"hex one five\". But then higher numbers just become \"hex b three\" instead of \"bippity-three.\"  ", "aSentId": 55663, "answer": "Or NATO letter names, preceded with the standard 'oh ex'\n\noh ex alpha delta  \noh ex one fife  \noh ex two fower niner ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55665, "question": "The horrifying part about this is that it might actually catch on.  Old-school programmers who used octal (three bits per digit instead of four -- registers were smaller back then -- and I'm not even kidding) had a verbal notation for each of the bit-triplets, 000, 001, 010, etc.   I don't recall the exact specifics but it was all \"oots\" and \"otts\" and like that, with \"er\" thrown in to separate groups or something.  So there was a number pronounced \"tooter-ott-tot\" for instance.  \n  \nShockingly, I can't find any record of this through Google.  I swear I'm not making it up.", "aSentId": 55666, "answer": "Probably just 1 = t, and 0 = o.\n\ntoo er ott tot = 100011101", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55667, "question": "Probably just 1 = t, and 0 = o.\n\ntoo er ott tot = 100011101", "aSentId": 55668, "answer": "The to/too distinction is now even more important, though thankfully two is right out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55669, "question": "The to/too distinction is now even more important, though thankfully two is right out.", "aSentId": 55670, "answer": "well you can't get a to, cause you don't have 2 letter words.\n\noot\noto\nott\ntoo\ntot\ntto\nttt\n\nThe only problems in there are tto and ttt.  not sure how you would say those.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55671, "question": "well you can't get a to, cause you don't have 2 letter words.\n\noot\noto\nott\ntoo\ntot\ntto\nttt\n\nThe only problems in there are tto and ttt.  not sure how you would say those.\n", "aSentId": 55672, "answer": "Titoo and titit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55671, "question": "well you can't get a to, cause you don't have 2 letter words.\n\noot\noto\nott\ntoo\ntot\ntto\nttt\n\nThe only problems in there are tto and ttt.  not sure how you would say those.\n", "aSentId": 55674, "answer": "Just pronounce ttt as 'tea' and tto as 'tow'.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55671, "question": "well you can't get a to, cause you don't have 2 letter words.\n\noot\noto\nott\ntoo\ntot\ntto\nttt\n\nThe only problems in there are tto and ttt.  not sure how you would say those.\n", "aSentId": 55676, "answer": "Ah, good point, I forgot about the three bit part.\n\nI guess tto could be a short o since the oo would be a long o sound.  ttt, who knows.  Trill your tongue?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55665, "question": "The horrifying part about this is that it might actually catch on.  Old-school programmers who used octal (three bits per digit instead of four -- registers were smaller back then -- and I'm not even kidding) had a verbal notation for each of the bit-triplets, 000, 001, 010, etc.   I don't recall the exact specifics but it was all \"oots\" and \"otts\" and like that, with \"er\" thrown in to separate groups or something.  So there was a number pronounced \"tooter-ott-tot\" for instance.  \n  \nShockingly, I can't find any record of this through Google.  I swear I'm not making it up.", "aSentId": 55679, "answer": "That sounds vaguely familiar... seems like something I'd read in Byte magazine.\n\nOn a related note, back before everyone just stopped saying \"www\" aloud, at work we'd pronounce \"w\" as \"wuh\".  So we'd say stuff like \"no, this page isn't on cgi dot oursite dot com, it's on wuh-wuh-wuh dot\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55680, "question": "That sounds vaguely familiar... seems like something I'd read in Byte magazine.\n\nOn a related note, back before everyone just stopped saying \"www\" aloud, at work we'd pronounce \"w\" as \"wuh\".  So we'd say stuff like \"no, this page isn't on cgi dot oursite dot com, it's on wuh-wuh-wuh dot\"", "aSentId": 55681, "answer": "[_It's wuh-wuh-wuh Windows ... 386!_](https://youtu.be/noEHHB6rnMI?t=6m57s)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55680, "question": "That sounds vaguely familiar... seems like something I'd read in Byte magazine.\n\nOn a related note, back before everyone just stopped saying \"www\" aloud, at work we'd pronounce \"w\" as \"wuh\".  So we'd say stuff like \"no, this page isn't on cgi dot oursite dot com, it's on wuh-wuh-wuh dot\"", "aSentId": 55683, "answer": "Interesting, I've always heard the (equally dumb sounding...) \"dub\" as a replacement for \"w\", so you'd have \"dub dub dub dot oursite dot com\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55684, "question": "Interesting, I've always heard the (equally dumb sounding...) \"dub\" as a replacement for \"w\", so you'd have \"dub dub dub dot oursite dot com\"", "aSentId": 55685, "answer": "I remember radio ads from back in the day\n\n&gt; Visit our website at triple-dub dot whatever dot com", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55686, "question": "I remember radio ads from back in the day\n\n&gt; Visit our website at triple-dub dot whatever dot com", "aSentId": 55687, "answer": "\"Visit our website at ach tee tee pee colon back-slash double-you double-you double-you dot farmers dash market dot com.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55688, "question": "\"Visit our website at ach tee tee pee colon back-slash double-you double-you double-you dot farmers dash market dot com.\"", "aSentId": 55689, "answer": "&gt; back-slash\n\nUrge to kill.... rising...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55688, "question": "\"Visit our website at ach tee tee pee colon back-slash double-you double-you double-you dot farmers dash market dot com.\"", "aSentId": 55691, "answer": "\"No, no, that's a hyphen not a dash. A hyphen, between the... no. Let's start over.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55692, "question": "\"No, no, that's a hyphen not a dash. A hyphen, between the... no. Let's start over.\"", "aSentId": 55693, "answer": "\"Where's the hyphen button?\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55688, "question": "\"Visit our website at ach tee tee pee colon back-slash double-you double-you double-you dot farmers dash market dot com.\"", "aSentId": 55695, "answer": "&gt; \"Visit our website at ach tee tee pee colon back-slash **back-slash** double-you double-you double-you dot farmers dash market dot com.\"\n\nFTFY\n\n(sorry)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55680, "question": "That sounds vaguely familiar... seems like something I'd read in Byte magazine.\n\nOn a related note, back before everyone just stopped saying \"www\" aloud, at work we'd pronounce \"w\" as \"wuh\".  So we'd say stuff like \"no, this page isn't on cgi dot oursite dot com, it's on wuh-wuh-wuh dot\"", "aSentId": 55697, "answer": "I take a cue from Downtown Julie Brown and pronounce it \"wubba wubba wubba\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55665, "question": "The horrifying part about this is that it might actually catch on.  Old-school programmers who used octal (three bits per digit instead of four -- registers were smaller back then -- and I'm not even kidding) had a verbal notation for each of the bit-triplets, 000, 001, 010, etc.   I don't recall the exact specifics but it was all \"oots\" and \"otts\" and like that, with \"er\" thrown in to separate groups or something.  So there was a number pronounced \"tooter-ott-tot\" for instance.  \n  \nShockingly, I can't find any record of this through Google.  I swear I'm not making it up.", "aSentId": 55699, "answer": "I had a book which proposed this. IIRC it was by Frederik Pohl. But I moved and it's gone.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55702, "question": "That brought a smile to my fleventy-a bitey city-e.", "aSentId": 55703, "answer": "&gt; city-e \n\nWell there's a problem. 0xCE sounds almost like 0xC0.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55704, "question": "&gt; city-e \n\nWell there's a problem. 0xCE sounds almost like 0xC0.", "aSentId": 55705, "answer": "Well, then I propose that we pronounce all 0's as 'ziggity'. Problem solved.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55706, "question": "Well, then I propose that we pronounce all 0's as 'ziggity'. Problem solved.", "aSentId": 55707, "answer": "So many syllables. Just always pronounce the 0. City-oh vs city-ee. Actually, the C could be just 'see'. See-oh vs see-ee. Wait, that's what we have now -- why are we doing this again?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55708, "question": "So many syllables. Just always pronounce the 0. City-oh vs city-ee. Actually, the C could be just 'see'. See-oh vs see-ee. Wait, that's what we have now -- why are we doing this again?", "aSentId": 55709, "answer": "...way to play along.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55711, "question": "Too many syllables... there are plenty of two syllable options before jumping to three syllables.", "aSentId": 55712, "answer": "Try the widget with \"say place values\" disabled.\n\nAlthough, half the point is that it's completely stupid. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55714, "question": "&gt; 0xE137 \u201cebbity-one bitey *thirty-seven*\u201d\n\nBut it's not thirty-seven!", "aSentId": 55715, "answer": "That's fine. We'll just have to use threety-seven instead. Happy now?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55717, "question": "For tens places, we can simplify it to `N`-ty and use Greek letters to help distinguish between homophones like A0 (\"a-ty\") and 80 (\"eight-ty\").\n\nThat means...\n\n    10  one-ty\n    20  two-ty\n    30  three-ty\n    40  four-ty\n    50  five-ty\n    60  six-ty\n    70  seven-ty\n    80  eight-ty\n    90  nine-ty\n    A0  alpha-ty\n    B0  beta-ty\n    C0  chi-ty\n    D0  delta-ty\n    E0  epsilon-ty\n    F0  phi-ty\n\nYou could easily extend it to the 0x100s and 0x1000s places if you come up with appropriate suffixes.", "aSentId": 55718, "answer": "Or we could simplify it even further to... \n\n0x1A -&gt; \"One-A\"\n\ninstead of adding unnecessary complexity by saying \"One-ty-A\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55717, "question": "For tens places, we can simplify it to `N`-ty and use Greek letters to help distinguish between homophones like A0 (\"a-ty\") and 80 (\"eight-ty\").\n\nThat means...\n\n    10  one-ty\n    20  two-ty\n    30  three-ty\n    40  four-ty\n    50  five-ty\n    60  six-ty\n    70  seven-ty\n    80  eight-ty\n    90  nine-ty\n    A0  alpha-ty\n    B0  beta-ty\n    C0  chi-ty\n    D0  delta-ty\n    E0  epsilon-ty\n    F0  phi-ty\n\nYou could easily extend it to the 0x100s and 0x1000s places if you come up with appropriate suffixes.", "aSentId": 55720, "answer": "Chai tea? Yes please.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55722, "question": "Pretty sure it's \"Heck-si-des-eh-mal\".", "aSentId": 55723, "answer": "I've always pronounced it \"hecks-a-des-mal\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55724, "question": "I've always pronounced it \"hecks-a-des-mal\"", "aSentId": 55725, "answer": "/\u02cch\u025bks\u0259\u02c8d\u025bs\u026am\u0259l/ you plebs!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55726, "question": "/\u02cch\u025bks\u0259\u02c8d\u025bs\u026am\u0259l/ you plebs!", "aSentId": 55727, "answer": "Actually, LiveOnSteak might be on to something. I don't think the \u026a is pronounced in regular speach so /\u02cch\u025b.ks\u0259.\u02c8d\u025b.sm\u0259l/ .", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55726, "question": "/\u02cch\u025bks\u0259\u02c8d\u025bs\u026am\u0259l/ you plebs!", "aSentId": 55729, "answer": "Afaik among native English speakers, only linguists might know of IPA. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55730, "question": "Afaik among native English speakers, only linguists might know of IPA. ", "aSentId": 55731, "answer": "Or people who spent their high school lunch hours in the library... actually reading... encyclopedias...\n\nforeveralone.jpg", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55724, "question": "I've always pronounced it \"hecks-a-des-mal\"", "aSentId": 55733, "answer": "Well, I am from the UK :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55722, "question": "Pretty sure it's \"Heck-si-des-eh-mal\".", "aSentId": 55735, "answer": "Just hex.\n\nAnyone who would know the full word will still know what you mean.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55737, "question": "At some point I start to get lost 0xBBBBBBB:  \n&gt; bee bitey bibbity-bee halfy bibbity-bee bitey bibbity-bee", "aSentId": 55738, "answer": "0xDDDDDDD\n&gt; dee bitey dickety-dee halfy dickety-dee bitey dickety-dee", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55739, "question": "0xDDDDDDD\n&gt; dee bitey dickety-dee halfy dickety-dee bitey dickety-dee", "aSentId": 55740, "answer": "OWE! Don't bite the dick :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55739, "question": "0xDDDDDDD\n&gt; dee bitey dickety-dee halfy dickety-dee bitey dickety-dee", "aSentId": 55742, "answer": "Are you Irish?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55737, "question": "At some point I start to get lost 0xBBBBBBB:  \n&gt; bee bitey bibbity-bee halfy bibbity-bee bitey bibbity-bee", "aSentId": 55744, "answer": "Not much worse than 666,666, \"six sixty-six kay six sixty-six.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55753, "question": "If there is no code in your link, it probably doesn't belong here.\n\n/r/programminghumor\n\nBut I liked it. I'm not so sure it will catch on in the office though...", "aSentId": 55754, "answer": "That shameless edit once you started getting downvoted :(. I at least upvoted you for being correct. Probably not the best sub for it, but whatever I suppose :).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55755, "question": "That shameless edit once you started getting downvoted :(. I at least upvoted you for being correct. Probably not the best sub for it, but whatever I suppose :).", "aSentId": 55756, "answer": "I didn't even know I had been downvoted until you pointed it out now. That edit was before that. I've been long enough on reddit to know that once they start coming, there's rarely any coming back.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55763, "question": "I don't like \"city\" for C, because it's a real word instead of nonsense word.\n\nAnyone have alternative suggestions?", "aSentId": 55764, "answer": "ciddity :D \n\nI particularly like ciddity seven.\n\nOr he owes be about tree-ciddity", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55779, "question": "Google Shuts Off NPAPI in Chrome this week", "aSentId": 55780, "answer": "It [looks like Oracle is throwing in the towel with Java on Chrome](https://java.com/en/download/faq/chrome.xml), suggesting that users switch to Firefox, IE or Safari.\n\nThat seems quite surprising to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55781, "question": "It [looks like Oracle is throwing in the towel with Java on Chrome](https://java.com/en/download/faq/chrome.xml), suggesting that users switch to Firefox, IE or Safari.\n\nThat seems quite surprising to me.", "aSentId": 55782, "answer": "I'm not sure who to trust here.  Perhaps I should ask my AskToolbar...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55783, "question": "I'm not sure who to trust here.  Perhaps I should ask my AskToolbar...", "aSentId": 55784, "answer": "Fun fact: In addition to Ask, Google also pays to have Chrome show up as bundleware for Java updates.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55785, "question": "Fun fact: In addition to Ask, Google also pays to have Chrome show up as bundleware for Java updates.", "aSentId": 55786, "answer": "I have never seen that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55787, "question": "I have never seen that.", "aSentId": 55788, "answer": "Do you already have chrome installed?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55789, "question": "Do you already have chrome installed?", "aSentId": 55790, "answer": "On some PCs I've updated, no.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55785, "question": "Fun fact: In addition to Ask, Google also pays to have Chrome show up as bundleware for Java updates.", "aSentId": 55792, "answer": "And Adobe Flash installs always have a checked box \"Yes, please install Google Chrome and make it my default browser even though I did not ask for it\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55793, "question": "And Adobe Flash installs always have a checked box \"Yes, please install Google Chrome and make it my default browser even though I did not ask for it\".", "aSentId": 55794, "answer": "Adobe Flash also tries to install McAfee antivirus every time you try to update it if you aren't careful to uncheck it before you download the update.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55795, "question": "Adobe Flash also tries to install McAfee antivirus every time you try to update it if you aren't careful to uncheck it before you download the update.", "aSentId": 55796, "answer": "And that's why I'm glad I switched to Linux, where programs don't pull that kind of bullshit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55797, "question": "And that's why I'm glad I switched to Linux, where programs don't pull that kind of bullshit.", "aSentId": 55798, "answer": "    sudo apt-get install adobe-flashplugin\n\nWinrar is you.\n\nThe *moment* that Adobe (or *any* such proprietary package) tried *any* bit of fuckery on *any* *nix distribution is the moment that they lose even the \"partner\" status/repository in regards to distributing their packages.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55785, "question": "Fun fact: In addition to Ask, Google also pays to have Chrome show up as bundleware for Java updates.", "aSentId": 55800, "answer": "Well that just makes no sense (anymore)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55781, "question": "It [looks like Oracle is throwing in the towel with Java on Chrome](https://java.com/en/download/faq/chrome.xml), suggesting that users switch to Firefox, IE or Safari.\n\nThat seems quite surprising to me.", "aSentId": 55802, "answer": "&gt; That seems quite surprising to me.\n\nGiven that Chrome has 25% market share, Oracle will flip-flop on this decision in 6 months when they realize that people chose Chrome and tolerate Java, not the other way around.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55803, "question": "&gt; That seems quite surprising to me.\n\nGiven that Chrome has 25% market share, Oracle will flip-flop on this decision in 6 months when they realize that people chose Chrome and tolerate Java, not the other way around.", "aSentId": 55804, "answer": "I doubt it. Oracle increasingly seems to not care about client-side Java. Before Java 7, Apple actually shipped the JRE for Macs. Since Java 7, Apple has transitioned that responsibility to Oracle. The JRE6 has excellent font handling on OSX, JRE7 and JRE8 fonts look terrible. This has been a known bug that has affected both IntelliJ and NetBeans (and countless other Swing-based apps) for two whole major revisions. It's currently slated to be fixed in 9 (hopefully next year), but we'll see if that actually happens. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55805, "question": "I doubt it. Oracle increasingly seems to not care about client-side Java. Before Java 7, Apple actually shipped the JRE for Macs. Since Java 7, Apple has transitioned that responsibility to Oracle. The JRE6 has excellent font handling on OSX, JRE7 and JRE8 fonts look terrible. This has been a known bug that has affected both IntelliJ and NetBeans (and countless other Swing-based apps) for two whole major revisions. It's currently slated to be fixed in 9 (hopefully next year), but we'll see if that actually happens. ", "aSentId": 55806, "answer": "My experience with Java (on other platforms) has *always* been that the fonts look terrible.\n\nWhich is probably why Apple rolled their own to begin with.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55807, "question": "My experience with Java (on other platforms) has *always* been that the fonts look terrible.\n\nWhich is probably why Apple rolled their own to begin with.\n", "aSentId": 55808, "answer": "The fonts in Java on Linux have always been terrible. It's one of the main reasons I don't switch from Eclipse to IDEA.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55809, "question": "The fonts in Java on Linux have always been terrible. It's one of the main reasons I don't switch from Eclipse to IDEA.", "aSentId": 55810, "answer": "What do you mean? I run IntelliJ IDEA on Linux and the fonts look great.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55811, "question": "What do you mean? I run IntelliJ IDEA on Linux and the fonts look great.", "aSentId": 55812, "answer": "Your distro probably includes a patch for the fonts. It doesn't anti-alias if you install it out of the box.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55811, "question": "What do you mean? I run IntelliJ IDEA on Linux and the fonts look great.", "aSentId": 55814, "answer": "Yea my idea fonts look fine on Windows too...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55809, "question": "The fonts in Java on Linux have always been terrible. It's one of the main reasons I don't switch from Eclipse to IDEA.", "aSentId": 55816, "answer": "&gt;  Java on Linux\n\nAt least for JetBrains IDEs, [this fix](http://stackoverflow.com/a/18834372) worked wonders. Should that be ineffective, you could try installing a patched freetype and openjdk.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55809, "question": "The fonts in Java on Linux have always been terrible. It's one of the main reasons I don't switch from Eclipse to IDEA.", "aSentId": 55818, "answer": "Linux out of the box requires some know how on any distro. If the appearance of any application doesn't appeal to you then you've got to take a few steps to drill down and change that or take advantage of the community as on many cases the work has already been done for you.\n\nIDEA on Arch looks great out of the box for me, Eclipse not so much. Had to grab new fonts and modify the GUI layout to meet my standards.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55805, "question": "I doubt it. Oracle increasingly seems to not care about client-side Java. Before Java 7, Apple actually shipped the JRE for Macs. Since Java 7, Apple has transitioned that responsibility to Oracle. The JRE6 has excellent font handling on OSX, JRE7 and JRE8 fonts look terrible. This has been a known bug that has affected both IntelliJ and NetBeans (and countless other Swing-based apps) for two whole major revisions. It's currently slated to be fixed in 9 (hopefully next year), but we'll see if that actually happens. ", "aSentId": 55820, "answer": "I'm glad Oracle doesn't care about applets, that technology needs to die. I am a Java developers and love Java but if as a developer you suggest to someone that you should write something as an applet then you need to have your developer credentials taken away. \n\nThey should probably fix swing bugs but I haven't done swing programming in so long I'm not familiar with those bugs. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55821, "question": "I'm glad Oracle doesn't care about applets, that technology needs to die. I am a Java developers and love Java but if as a developer you suggest to someone that you should write something as an applet then you need to have your developer credentials taken away. \n\nThey should probably fix swing bugs but I haven't done swing programming in so long I'm not familiar with those bugs. ", "aSentId": 55822, "answer": "Applets aren't necessarily a bad idea, but they were ruined by bad execution. When applets were relevant, JVM startup time was too long, security wasn't handled well enough, and not enough machines had the runtime installed. \n\nBut applets aren't the only form of client-side Java.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55821, "question": "I'm glad Oracle doesn't care about applets, that technology needs to die. I am a Java developers and love Java but if as a developer you suggest to someone that you should write something as an applet then you need to have your developer credentials taken away. \n\nThey should probably fix swing bugs but I haven't done swing programming in so long I'm not familiar with those bugs. ", "aSentId": 55824, "answer": "They probably won't even fix swing bugs now that they have been pushing JavaFX.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55805, "question": "I doubt it. Oracle increasingly seems to not care about client-side Java. Before Java 7, Apple actually shipped the JRE for Macs. Since Java 7, Apple has transitioned that responsibility to Oracle. The JRE6 has excellent font handling on OSX, JRE7 and JRE8 fonts look terrible. This has been a known bug that has affected both IntelliJ and NetBeans (and countless other Swing-based apps) for two whole major revisions. It's currently slated to be fixed in 9 (hopefully next year), but we'll see if that actually happens. ", "aSentId": 55826, "answer": "Not to mention that the Aqua LAF has not been updated for yosemite, so swing apps all look like they are running on an outdated OS. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55827, "question": "Not to mention that the Aqua LAF has not been updated for yosemite, so swing apps all look like they are running on an outdated OS. ", "aSentId": 55828, "answer": "Yeah, but Swing apps have always looked like garbage, so that's not *really* new.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55829, "question": "Yeah, but Swing apps have always looked like garbage, so that's not *really* new.", "aSentId": 55830, "answer": "What's your opinion on JavaFX apps?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55831, "question": "What's your opinion on JavaFX apps?", "aSentId": 55832, "answer": "I'm not sure I've ever used one, which is either a very good or a very bad sign. But my general opinion on cross-platform UI frameworks is very low.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55834, "question": "With HTML5 and modern web frameworks, it's easier to roll and maintain a new front end than it is to maintain a Java client for any kind of diverse user base. It's hard to see why client side Java wouldn't suffer the same fate of all the other Oracle and Computer Associates technologies where they're pretty much just collecting maintenance fees for all the businesses who can't get their internal apps upgraded. They work to keep things secure and compliant. Occasionally a salesman will dangle the carrot and say things will get prettier and easier to use \"soon,\" but \"soon\" never arrives.", "aSentId": 55835, "answer": "Depends on your needs. There are still many things that don't yet have JS APIs, so can't be done in a pure HTML/JS app. This is one of the big problems with pushing everything into the browser. You can't possibly use things until the browser vendors get around to putting features into browsers, and you can't really depend on them until there's a spec and broad adoption in browsers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55838, "question": "I was using an otherwise terrible Swing app today, as it happens, and the best thing about it was how good the font rendering was.  Crisp, retina quality; if it wasn't for the fact the menubar was in the wrong place you wouldn't know it wasn't a native app.\n\nThis was Java 8 on OS X 10.10.", "aSentId": 55839, "answer": "You might have both Apple JRE6 and Oracle JRE8 on your system. Are you sure it was using JRE8?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55803, "question": "&gt; That seems quite surprising to me.\n\nGiven that Chrome has 25% market share, Oracle will flip-flop on this decision in 6 months when they realize that people chose Chrome and tolerate Java, not the other way around.", "aSentId": 55841, "answer": "&gt;Given that Chrome has 25% market share\n\nNot in large companies, which are really the only people still using Java applets.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55842, "question": "&gt;Given that Chrome has 25% market share\n\nNot in large companies, which are really the only people still using Java applets.", "aSentId": 55843, "answer": "Everyone's quick to bash Java... but what's supposed to be replacing NPAPI..\n\nJavascript...  (along with HTML5, and WebGL where it's supported)\n\nAnd people are now 'compiling' vast C++ codebases into Javascript to get them running in a browser. It's the most inefficient thing in the history of very inefficient things. And requies tens of megs of Javascript source code download to run a simple Unity-based game, which would have been tiny and very fast with the old Unity plug-in.\n\nKind of feels like 'real Java' would have been a better solution for games/apps in the browser. (But it'd have had to be rather better than applets and the Java runtime's nasty update system)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55842, "question": "&gt;Given that Chrome has 25% market share\n\nNot in large companies, which are really the only people still using Java applets.", "aSentId": 55845, "answer": "So in other words, very few people will actually care about the change?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55846, "question": "So in other words, very few people will actually care about the change?", "aSentId": 55847, "answer": "Well, people who choose to use Chrome at big companies are going to be forced to switch back to FF or IE.  People who don't care are probably using the corporate default browser, which is probably already FF or IE.  So it won't affect many people, but the people who it will affect probably do care about it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55848, "question": "Well, people who choose to use Chrome at big companies are going to be forced to switch back to FF or IE.  People who don't care are probably using the corporate default browser, which is probably already FF or IE.  So it won't affect many people, but the people who it will affect probably do care about it.", "aSentId": 55849, "answer": "They'll probably have FF open with a single tab, that tab being the web page hosted by their internal server hosting a java applet", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55850, "question": "They'll probably have FF open with a single tab, that tab being the web page hosted by their internal server hosting a java applet", "aSentId": 55851, "answer": "Yep.  That's what I do to run HP Quality Center, which uses an ActiveX component and only runs in IE (as an Admin no less.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55852, "question": "Yep.  That's what I do to run HP Quality Center, which uses an ActiveX component and only runs in IE (as an Admin no less.)", "aSentId": 55853, "answer": "What version are you using? The admin piece should only be required for the initial install if you don't have an alternative away to selectively escalate privileges at install time for just that.\n\nI also believe 11.5 is cross browser, but I haven't done anything with it since early 11 so I could be wrong on that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55848, "question": "Well, people who choose to use Chrome at big companies are going to be forced to switch back to FF or IE.  People who don't care are probably using the corporate default browser, which is probably already FF or IE.  So it won't affect many people, but the people who it will affect probably do care about it.", "aSentId": 55855, "answer": "This is pretty much. I can name off hand at least 5 Java applets that we use at my work. I actually work on-site at a client rather than in our office, and the VPN to connect back to our office... you guessed it. Java applet.\n\nThe client uses IE anyway, so no biggie for me!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55842, "question": "&gt;Given that Chrome has 25% market share\n\nNot in large companies, which are really the only people still using Java applets.", "aSentId": 55857, "answer": "Do you have any definitive proof of this? All of the fortune 500 companies I have worked for in the past and the one I work for now uses IE for some intranet things but heavily uses Chrome for everything else. Firefox is not used except by a few people.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55858, "question": "Do you have any definitive proof of this? All of the fortune 500 companies I have worked for in the past and the one I work for now uses IE for some intranet things but heavily uses Chrome for everything else. Firefox is not used except by a few people.", "aSentId": 55859, "answer": "It's obviously a hard thing to get stats on, since none of these companies say anything publicly.  Heck, I have stats from the product I support but I can't share them so that's useless.  I'll just say that IE was surprisingly dominant from my perspective.\n\nI do know that corporate IT departments *HATE* the Chrome update strategy, and that's partly why the Firefox ESR releases exist. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55860, "question": "It's obviously a hard thing to get stats on, since none of these companies say anything publicly.  Heck, I have stats from the product I support but I can't share them so that's useless.  I'll just say that IE was surprisingly dominant from my perspective.\n\nI do know that corporate IT departments *HATE* the Chrome update strategy, and that's partly why the Firefox ESR releases exist. ", "aSentId": 55861, "answer": "Our company uses Firefox ESR.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55858, "question": "Do you have any definitive proof of this? All of the fortune 500 companies I have worked for in the past and the one I work for now uses IE for some intranet things but heavily uses Chrome for everything else. Firefox is not used except by a few people.", "aSentId": 55863, "answer": "Government user here. IE is standard. FF is tolerated. Chrome is not allowed. There is talk of Chrome being allowed in the future, but I haven't heard anything more than talk.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55864, "question": "Government user here. IE is standard. FF is tolerated. Chrome is not allowed. There is talk of Chrome being allowed in the future, but I haven't heard anything more than talk.", "aSentId": 55865, "answer": "Have you tried Iron Port portable? Almost like Chrome. I prefer FF but can't use it properly due to proxy issues in my domain, so I use Iron port. Since downloading chrome isn't allowed either. :/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55866, "question": "Have you tried Iron Port portable? Almost like Chrome. I prefer FF but can't use it properly due to proxy issues in my domain, so I use Iron port. Since downloading chrome isn't allowed either. :/", "aSentId": 55867, "answer": "First I've heard of it, thanks. I'm mostly interested in the chrome developers tools, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55803, "question": "&gt; That seems quite surprising to me.\n\nGiven that Chrome has 25% market share, Oracle will flip-flop on this decision in 6 months when they realize that people chose Chrome and tolerate Java, not the other way around.", "aSentId": 55869, "answer": "Our entire enterprise depends on Java, but Chrome doesn't do anything that other browsers don't.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55870, "question": "Our entire enterprise depends on Java, but Chrome doesn't do anything that other browsers don't.  ", "aSentId": 55871, "answer": "I think hes talking about clients, not servers and enterprise", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55872, "question": "I think hes talking about clients, not servers and enterprise", "aSentId": 55873, "answer": "Are you conflating the word \"enterprise\" with \"enterprise java\"?  We use applets (or at least, SaaS companies with whom we do business use them).  I'm talking about paying customers vs. end users who pay nothing.  Money usually ends up speaking the loudest in situations like these.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55874, "question": "Are you conflating the word \"enterprise\" with \"enterprise java\"?  We use applets (or at least, SaaS companies with whom we do business use them).  I'm talking about paying customers vs. end users who pay nothing.  Money usually ends up speaking the loudest in situations like these.", "aSentId": 55875, "answer": "i meant companies and stuff, i did not know that companies use applets still\n\nbut still what he is talking about is client side, normal users dont use applets very often nowadays, it doesnt matter much", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55876, "question": "i meant companies and stuff, i did not know that companies use applets still\n\nbut still what he is talking about is client side, normal users dont use applets very often nowadays, it doesnt matter much", "aSentId": 55877, "answer": "&gt;  i did not know that companies use applets still\n\nCompanies use Fortran still. Technology doesn't grow in the business world. A system is designed, built and deployed, and then it will be used with no modification (except critical issues if you're lucky) until the technology is absolutely dead. Then it gets used more anyway, and continues to be used until the death of the company or the death of the relevant servers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55879, "question": "If someone wants to use Java, they'll just install Firefox or some other browser that can run it, and they'll run it.\n\nI don't know what runs on Java anymore, but if runescape is half as addicting as it was 10 years ago, no one's going to just drop it.", "aSentId": 55880, "answer": "HP Ilo only works with Java on modern machines. ( If you use Windows, it has an activex tool, but activex is even worse than java )", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55781, "question": "It [looks like Oracle is throwing in the towel with Java on Chrome](https://java.com/en/download/faq/chrome.xml), suggesting that users switch to Firefox, IE or Safari.\n\nThat seems quite surprising to me.", "aSentId": 55884, "answer": "It doesn't seem at all surprising to me, it seems like pretty much the only response they could've made. Chrome have decided to throw Oracle under the bus and while I agree with Google's decision I don't see any reason that Oracle should not attempt to do the same to Chrome.\n\nI'd rather Oracle threw in the towel with in-browser applets completely, but the chances of that are very slim.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55885, "question": "It doesn't seem at all surprising to me, it seems like pretty much the only response they could've made. Chrome have decided to throw Oracle under the bus and while I agree with Google's decision I don't see any reason that Oracle should not attempt to do the same to Chrome.\n\nI'd rather Oracle threw in the towel with in-browser applets completely, but the chances of that are very slim.", "aSentId": 55886, "answer": "Too many companies have internal apps powered by applets for it to die off anytime soon", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55887, "question": "Too many companies have internal apps powered by applets for it to die off anytime soon", "aSentId": 55888, "answer": "Too many **vendors** require Java to...\n\n* Manage the SAN\n* Use a virtual KVM/console / LO access\n* etc\n\nEven vSphere, one of the biggest hypervisor management interfaces in the world uses a mixture of Flex and Flash IIRC. Even Google decided to use Flash for Google Music in the browser, so clearly there's a limitation somewhere with HTML5+JS only (?).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55889, "question": "Too many **vendors** require Java to...\n\n* Manage the SAN\n* Use a virtual KVM/console / LO access\n* etc\n\nEven vSphere, one of the biggest hypervisor management interfaces in the world uses a mixture of Flex and Flash IIRC. Even Google decided to use Flash for Google Music in the browser, so clearly there's a limitation somewhere with HTML5+JS only (?).", "aSentId": 55890, "answer": "As someone who depends on vSphere and DRAC, Google has pretty much eliminated itself as my browser developer of choice in a work environment.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55891, "question": "As someone who depends on vSphere and DRAC, Google has pretty much eliminated itself as my browser developer of choice in a work environment.", "aSentId": 55892, "answer": "I have a Firefox window open for drac but I use chrome for everything else unless (other than browser compatibility testing of course).  Firefox is just so awful these days though, I can't stand using it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55889, "question": "Too many **vendors** require Java to...\n\n* Manage the SAN\n* Use a virtual KVM/console / LO access\n* etc\n\nEven vSphere, one of the biggest hypervisor management interfaces in the world uses a mixture of Flex and Flash IIRC. Even Google decided to use Flash for Google Music in the browser, so clearly there's a limitation somewhere with HTML5+JS only (?).", "aSentId": 55894, "answer": "Timing is hard with javascript, which is a problem with games/music.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55895, "question": "Timing is hard with javascript, which is a problem with games/music.", "aSentId": 55896, "answer": "I'm curious.  What are the pitfalls that make even Google use flash? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55897, "question": "I'm curious.  What are the pitfalls that make even Google use flash? ", "aSentId": 55898, "answer": "setTimeout and setInterval can easily drift by 10ms and even more if they aren't being ran in the current tab (browser dependent).\n\nIt is getting better due to the Web Audio API but AFAIK, it's not very popular yet.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55899, "question": "setTimeout and setInterval can easily drift by 10ms and even more if they aren't being ran in the current tab (browser dependent).\n\nIt is getting better due to the Web Audio API but AFAIK, it's not very popular yet.", "aSentId": 55900, "answer": "setTimeout/setInterval isn't the only way today though, there is requestAnimationFrame which basically will call a callback function as soon as possible and you can do high resolution timing with performance.now. Check [the source code at the end of my yesterday's submission](http://runtimelegend.com/pages/badsector/nyan/test.html) for the requestAnimationStuff and performance.now (performance.now itself is used in the updater() function) and how to use them in a backwards compatible way", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55901, "question": "setTimeout/setInterval isn't the only way today though, there is requestAnimationFrame which basically will call a callback function as soon as possible and you can do high resolution timing with performance.now. Check [the source code at the end of my yesterday's submission](http://runtimelegend.com/pages/badsector/nyan/test.html) for the requestAnimationStuff and performance.now (performance.now itself is used in the updater() function) and how to use them in a backwards compatible way", "aSentId": 55902, "answer": "Do note: \n\n&gt; even more if they aren't being ran in the current tab (browser dependent).\n\nThis is not true for requestAnimationFrame for any reasonable definition. Because the the \"more\" would be infinity. Meaning requestAnimationFrame does not get called when the browser tab is not visible (there is a visibility API to check for this).\n\nBrowsers (or tabs) not visible will have setTimeout/setInterval minimums of &gt;1 second sometimes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55903, "question": "Do note: \n\n&gt; even more if they aren't being ran in the current tab (browser dependent).\n\nThis is not true for requestAnimationFrame for any reasonable definition. Because the the \"more\" would be infinity. Meaning requestAnimationFrame does not get called when the browser tab is not visible (there is a visibility API to check for this).\n\nBrowsers (or tabs) not visible will have setTimeout/setInterval minimums of &gt;1 second sometimes.", "aSentId": 55904, "answer": "Interesting, personally i learned about requestAnimationFrame while i was making this and i already had code to check if the window has focus while i was using setInterval and assumed that it was my code that stopped the animation :-P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55899, "question": "setTimeout and setInterval can easily drift by 10ms and even more if they aren't being ran in the current tab (browser dependent).\n\nIt is getting better due to the Web Audio API but AFAIK, it's not very popular yet.", "aSentId": 55906, "answer": "In Chrome, setTimeout and setInterval will not be called more than once per second. This means they can easily drift by 999ms.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55889, "question": "Too many **vendors** require Java to...\n\n* Manage the SAN\n* Use a virtual KVM/console / LO access\n* etc\n\nEven vSphere, one of the biggest hypervisor management interfaces in the world uses a mixture of Flex and Flash IIRC. Even Google decided to use Flash for Google Music in the browser, so clearly there's a limitation somewhere with HTML5+JS only (?).", "aSentId": 55908, "answer": "&gt; Too many vendors require Java to...\n\nWhat alternative do you suggest?\n\nTo get vendors to migrate away from these plug-ins, you need a better alternative. These kinds of tools have had relatively demanding UIs for a long time. Browser plug-ins were meeting those requirements a decade or two ago, whether that's Java or Flash or Silverlight or even ActiveX.\n\nIn contrast, it has only been in the very recent past that native browser technologies (meaning HTML, CSS, JS, and related things) have been able to do even *basic* stuff people have been doing with those plug-ins for a very long time. For more demanding applications, the standards documents and demo pages and browser press releases look great, but the reality is that there are still numerous practical problems and shoddy implementations with every modern browser.\n\nEven if you had good implementations available right now, you also have to consider that a lot of the most promising native browser technologies aren't anything close to usefully standardised yet. In fact, with most browser makers not giving two hoots about stability and backward compatibility any more, there is little reason for those vendors to assume they ever will be and therefore to invest in building on anything that isn't already so widely used that it has become a de facto standard.\n\nThen you have to consider the existing investment. A lot of these vendors have a relatively small UI development team, but they have a relatively large number of developer-years of effort already invested in building what they have today. Big rewrites are something a lot of experienced developers would be very wary of at the best of times, and even if there were good reasons to go ahead with one in these cases (a big 'if'), you'd probably be looking at multi-year development projects just to get back to where you were.\n\nSo the bottom line is that sticking with their tried and tested plugin-based solutions is probably the only rational decision for a lot of those vendors to make. Browser makers might not like it, but they made rods for their own backs by providing rapidly developed but poor quality implementations of modern features and by denying the existence of inconvenient concepts like stability, long term support (that means actually long term, not five minutes rather than three) and backward compatibility that matter to grown-ups with real work to do.\n\nIn short, don't blame the vendors, blame the browser makers who still aren't providing credible alternatives.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55910, "question": "HTML5 audio is available as a labs option for Play Music currently, so my guess is that they're working on removing Flash from it and it works great but probably still waiting on more people to have an HTML5-capable browser that can do MP3 audio. (Firefox on Linux for example does not support MP3 for HDML5 audio, only OGG)", "aSentId": 55911, "answer": "tried going on play music 2 days ago, running chromium, without flash.\nit worked right away, didn't have to enable anything\n\nwasn't working a few month ago", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55912, "question": "tried going on play music 2 days ago, running chromium, without flash.\nit worked right away, didn't have to enable anything\n\nwasn't working a few month ago", "aSentId": 55913, "answer": "Neat, perhaps they've taken the HTML5 audio stuff out of testing and enabled it now; It's been a few months since I tried it out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55918, "question": "Those are all sysadmin tasks. Hopefully you're skilled enough to come up with a solution compared to your average sales dweeb. ", "aSentId": 55919, "answer": "Sadly, CLI skill is not equally distributed amongst IT nor is time investment in tooling / retraining ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55920, "question": "Sadly, CLI skill is not equally distributed amongst IT nor is time investment in tooling / retraining ", "aSentId": 55921, "answer": "If you think CLI is the only solution, then I'm sad for you. More of for your company. \n\nMaybe spin up a VM for using these terrible tools for fucks sake. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55922, "question": "If you think CLI is the only solution, then I'm sad for you. More of for your company. \n\nMaybe spin up a VM for using these terrible tools for fucks sake. ", "aSentId": 55923, "answer": "It was just an example.  I'm just saying there is a lot to consider when rolling your own solutions especially considering the expertise of your implementers and staff. \n\nYes my strength is CLI.  But it's not the hammer for all nails.  But I'm no pro at Web or GUI,  ergo my solutions will be more brittle and will require a lot more UX input.  \n\nWhich is to say,  most managers are just going to do what makes the vendor product work at the cost of most other things, eg.,  security, best practices, lack of automation, etc.  \n\nIt's intensely difficult to weigh if something will be better, easier, maintainable, etc.  Most people will just go with the devil they know, which isn't always bad logic. \n\nThis is so common, we had to invent a word called DevOps to simply describe a more experimental modus operandi in IT. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55924, "question": "It was just an example.  I'm just saying there is a lot to consider when rolling your own solutions especially considering the expertise of your implementers and staff. \n\nYes my strength is CLI.  But it's not the hammer for all nails.  But I'm no pro at Web or GUI,  ergo my solutions will be more brittle and will require a lot more UX input.  \n\nWhich is to say,  most managers are just going to do what makes the vendor product work at the cost of most other things, eg.,  security, best practices, lack of automation, etc.  \n\nIt's intensely difficult to weigh if something will be better, easier, maintainable, etc.  Most people will just go with the devil they know, which isn't always bad logic. \n\nThis is so common, we had to invent a word called DevOps to simply describe a more experimental modus operandi in IT. ", "aSentId": 55925, "answer": "Are you that dense that you honestly thought I was talking about rolling your own replacement rather than facilitating usage of the existing tools in a controlled environment?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55926, "question": "Are you that dense that you honestly thought I was talking about rolling your own replacement rather than facilitating usage of the existing tools in a controlled environment?", "aSentId": 55927, "answer": "Clearly I misunderstood.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55928, "question": "Clearly I misunderstood.  ", "aSentId": 55929, "answer": "Clearly. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55930, "question": "Clearly. ", "aSentId": 55931, "answer": "You're \"clearly\" a jerk, you know that?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55932, "question": "You're \"clearly\" a jerk, you know that?", "aSentId": 55933, "answer": "You missed the part where I'm a competent sysadmin, so it's a fine line. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55887, "question": "Too many companies have internal apps powered by applets for it to die off anytime soon", "aSentId": 55935, "answer": "Yes, but most of them are using IE", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55885, "question": "It doesn't seem at all surprising to me, it seems like pretty much the only response they could've made. Chrome have decided to throw Oracle under the bus and while I agree with Google's decision I don't see any reason that Oracle should not attempt to do the same to Chrome.\n\nI'd rather Oracle threw in the towel with in-browser applets completely, but the chances of that are very slim.", "aSentId": 55937, "answer": "They're not throwing Oracle under a bus, they're fucking removing an abysmally old API that has been the single source of a fuck tonne of security issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55938, "question": "They're not throwing Oracle under a bus, they're fucking removing an abysmally old API that has been the single source of a fuck tonne of security issues.", "aSentId": 55939, "answer": "&gt; removing an abysmally old API that has been the single source of a fuck tonne of security issues\n\nAnd replacing the things that used that API with alternatives that are often just as proprietary and non-portable, and that on the evidence so far will be the source of plenty of security issues of their own.\n\nThe idea that getting rid of browser plug-ins is somehow going to make web security vastly better is indefensible. The data simply doesn't support that hypothesis. It's just wishful thinking, and wishful thinking has no place in making sound business decisions.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55940, "question": "&gt; removing an abysmally old API that has been the single source of a fuck tonne of security issues\n\nAnd replacing the things that used that API with alternatives that are often just as proprietary and non-portable, and that on the evidence so far will be the source of plenty of security issues of their own.\n\nThe idea that getting rid of browser plug-ins is somehow going to make web security vastly better is indefensible. The data simply doesn't support that hypothesis. It's just wishful thinking, and wishful thinking has no place in making sound business decisions.", "aSentId": 55941, "answer": "I never said I liked EME either...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55938, "question": "They're not throwing Oracle under a bus, they're fucking removing an abysmally old API that has been the single source of a fuck tonne of security issues.", "aSentId": 55943, "answer": "As opposed to the enormous set of new APIs added to HTML in the past 5-10 years or so, which haven't caused any security issues at all?\n\nThe security problems don't stem from NPAPI specifically. They stem from exposing large C/C++ attack surfaces to mobile code downloaded from unknown origins on the web. The Chrome team have had a strategy for a long time now of sandboxing WebKit (good!) and making it enormously larger (less clearly good). Basically they've been taking the sort of code that Java and Flash used to provide developers and claiming ownership of it themselves, with a mix of security and \"web uber alles\" as their justification.\n\nI like security. I am less of a fan of HTML, a technology which hasn't exactly aged well and is itself the source of massive security issues (when was the last time a Java applet had an XSS exploit?). I'd personally have preferred that Chrome did what they did for Flash and offer to just bundle/sandbox the top plugins directly instead of trying to force developers onto a mishmash of W3C and Chrome-specific APIs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55944, "question": "As opposed to the enormous set of new APIs added to HTML in the past 5-10 years or so, which haven't caused any security issues at all?\n\nThe security problems don't stem from NPAPI specifically. They stem from exposing large C/C++ attack surfaces to mobile code downloaded from unknown origins on the web. The Chrome team have had a strategy for a long time now of sandboxing WebKit (good!) and making it enormously larger (less clearly good). Basically they've been taking the sort of code that Java and Flash used to provide developers and claiming ownership of it themselves, with a mix of security and \"web uber alles\" as their justification.\n\nI like security. I am less of a fan of HTML, a technology which hasn't exactly aged well and is itself the source of massive security issues (when was the last time a Java applet had an XSS exploit?). I'd personally have preferred that Chrome did what they did for Flash and offer to just bundle/sandbox the top plugins directly instead of trying to force developers onto a mishmash of W3C and Chrome-specific APIs.", "aSentId": 55945, "answer": "Wait, do you mean to say you hate HTML or Javascript?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55946, "question": "Wait, do you mean to say you hate HTML or Javascript?", "aSentId": 55947, "answer": "Yes.\n\nWell, hate is too strong a word. I didn't \"hate\" Visual Basic when it was the leading way to write apps. I just wouldn't use it myself unless  strictly required to. If you've ever written apps with a proper GUI framework that has well implemented layout managers, CSS and Twitter Bootstrap is just frustrating pale imitation. And that's just layout.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55948, "question": "Yes.\n\nWell, hate is too strong a word. I didn't \"hate\" Visual Basic when it was the leading way to write apps. I just wouldn't use it myself unless  strictly required to. If you've ever written apps with a proper GUI framework that has well implemented layout managers, CSS and Twitter Bootstrap is just frustrating pale imitation. And that's just layout.", "aSentId": 55949, "answer": "Then again, it allows orders of magnitude more visual variety in design than anything MS has created.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55950, "question": "Then again, it allows orders of magnitude more visual variety in design than anything MS has created.", "aSentId": 55951, "answer": "You're not familiar with XAML + WPF, are you? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55952, "question": "You're not familiar with XAML + WPF, are you? ", "aSentId": 55953, "answer": "Oh no, I've seen plenty enough butchered application UIs to know what that's capable of.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55938, "question": "They're not throwing Oracle under a bus, they're fucking removing an abysmally old API that has been the single source of a fuck tonne of security issues.", "aSentId": 55955, "answer": "&gt; that has been the single source of a fuck tonne of security issues\n\nNo, \"bad\" plugins have been a source of security issues. The API that they use is pretty much irrelevant. Forcing developers to port to PPAPI won't magically make their plugins any more secure.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55885, "question": "It doesn't seem at all surprising to me, it seems like pretty much the only response they could've made. Chrome have decided to throw Oracle under the bus and while I agree with Google's decision I don't see any reason that Oracle should not attempt to do the same to Chrome.\n\nI'd rather Oracle threw in the towel with in-browser applets completely, but the chances of that are very slim.", "aSentId": 55959, "answer": "&gt; I don't see any reason that Oracle should not attempt to do the same to Chrome.\n\nThe reason is that Oracle is not in a position where they can throw Chrome under the bus. All they can do is fling themselves there, which they seem to be quite happily doing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55961, "question": "&gt; Chrome have decided to throw Oracle under the bus \n\nDid you even read the article? That's not what they did at all. Oracle threw themselves under the bus by making a terrible product which caused vulnerabilities and worked poorly. They were warned over a year ago that this was happening and decided not to fix anything.\n\nThis is just Oracle being lazy and sleazy with their shit product. Not to mention the fact that you can still us NPAPI in Chrome, it's not gone just off by default.", "aSentId": 55962, "answer": "They are completely removing npapi soon, it says in the article.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55961, "question": "&gt; Chrome have decided to throw Oracle under the bus \n\nDid you even read the article? That's not what they did at all. Oracle threw themselves under the bus by making a terrible product which caused vulnerabilities and worked poorly. They were warned over a year ago that this was happening and decided not to fix anything.\n\nThis is just Oracle being lazy and sleazy with their shit product. Not to mention the fact that you can still us NPAPI in Chrome, it's not gone just off by default.", "aSentId": 55964, "answer": "Or maybe it's just Oracle not giving a shit about applet support because nobody fucking uses them anyway.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55966, "question": "I don't know anyone who develops client side java for the web anymore -- why would they beat a dead horse.", "aSentId": 55967, "answer": "You must have the privilege of not having to work on legacy applications. Good God, I envy you, sir! :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55966, "question": "I don't know anyone who develops client side java for the web anymore -- why would they beat a dead horse.", "aSentId": 55969, "answer": "There is a huge library of intranet web based enterprise applications (ERP, Time &amp; Labor/timecard stuff, Inventory, HR systems) that are not going away anytime soon.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55970, "question": "There is a huge library of intranet web based enterprise applications (ERP, Time &amp; Labor/timecard stuff, Inventory, HR systems) that are not going away anytime soon.", "aSentId": 55971, "answer": "Maybe it's possible to replace the Java plugin with a JavaScript based Java VM. [The code for that exists already.](http://int3.github.io/doppio/about.html) No idea how well it's working right now, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55970, "question": "There is a huge library of intranet web based enterprise applications (ERP, Time &amp; Labor/timecard stuff, Inventory, HR systems) that are not going away anytime soon.", "aSentId": 55973, "answer": "But in the context of business decisions by an Oracle or Microsoft, they certainly aren't focusing their marketing and R&amp;D dollars towards keeping them around.\n\nI'm sure there is still plenty of COBOL code running around, but no one would be surprised to hear that a given company no longer supports it.\n\nAnd if more browsers follow suit, then yes those apps will go away abruptly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55974, "question": "But in the context of business decisions by an Oracle or Microsoft, they certainly aren't focusing their marketing and R&amp;D dollars towards keeping them around.\n\nI'm sure there is still plenty of COBOL code running around, but no one would be surprised to hear that a given company no longer supports it.\n\nAnd if more browsers follow suit, then yes those apps will go away abruptly.", "aSentId": 55975, "answer": "No they won't just go away. Those companies are likely the same ones who are all running ie7 or 8, this wouldn't affect them in the slightest. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55966, "question": "I don't know anyone who develops client side java for the web anymore -- why would they beat a dead horse.", "aSentId": 55977, "answer": "&gt; why would they beat a dead horse.\n\n1. The JVM is one of the most solid platforms in the history of computing.\n\n2. The Java ecosystem makes modern JS tooling and libraries look like something from the stone age.\n\n3. You can write in languages like Clojure, Scala and Groovy, not just Java itself.\n\nThe main reason not to use front-end Java today -- though it's a very good reason in practice -- is because the browser makers are deliberately nerfing it. And that's their fault, not the Java plug-in's.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55978, "question": "&gt; why would they beat a dead horse.\n\n1. The JVM is one of the most solid platforms in the history of computing.\n\n2. The Java ecosystem makes modern JS tooling and libraries look like something from the stone age.\n\n3. You can write in languages like Clojure, Scala and Groovy, not just Java itself.\n\nThe main reason not to use front-end Java today -- though it's a very good reason in practice -- is because the browser makers are deliberately nerfing it. And that's their fault, not the Java plug-in's.", "aSentId": 55979, "answer": "&gt;You can write in languages like Clojure, Scala and Groovy, not just Java itself.\n\nAnd halle-fuckin'-lujah to that. JavaScript is such a horrendous fucking language, and Scala.js is, er, not ready for prime time, to put it politely.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55980, "question": "&gt;You can write in languages like Clojure, Scala and Groovy, not just Java itself.\n\nAnd halle-fuckin'-lujah to that. JavaScript is such a horrendous fucking language, and Scala.js is, er, not ready for prime time, to put it politely.", "aSentId": 55981, "answer": "Amen! i'm transitioning right now and its SERIOUSLY STONE AGE.\n\nForget about live docs on hover, function signature and infos. Forget about ctrl+click to reach declaration. Refactoring and lets not get started on architecture!\n\nPeople are celebrating flux and reflux, angular and the other...  They are ok but still so much less fun to work with then simple, IoC frameworks. \n\nThe toolings... Webpack is ok but ... i used to have all this from with my IDE, it was instant! even in a bloated eclipse install..\n\nMen i miss when javascript wasen't everything. I miss interfaces... types... IDE with info and feedbacks... \n\ngoing back to fooling around with React and clearfixing things. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55982, "question": "Amen! i'm transitioning right now and its SERIOUSLY STONE AGE.\n\nForget about live docs on hover, function signature and infos. Forget about ctrl+click to reach declaration. Refactoring and lets not get started on architecture!\n\nPeople are celebrating flux and reflux, angular and the other...  They are ok but still so much less fun to work with then simple, IoC frameworks. \n\nThe toolings... Webpack is ok but ... i used to have all this from with my IDE, it was instant! even in a bloated eclipse install..\n\nMen i miss when javascript wasen't everything. I miss interfaces... types... IDE with info and feedbacks... \n\ngoing back to fooling around with React and clearfixing things. ", "aSentId": 55983, "answer": "Good luck. You'll need it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55978, "question": "&gt; why would they beat a dead horse.\n\n1. The JVM is one of the most solid platforms in the history of computing.\n\n2. The Java ecosystem makes modern JS tooling and libraries look like something from the stone age.\n\n3. You can write in languages like Clojure, Scala and Groovy, not just Java itself.\n\nThe main reason not to use front-end Java today -- though it's a very good reason in practice -- is because the browser makers are deliberately nerfing it. And that's their fault, not the Java plug-in's.", "aSentId": 55985, "answer": "1. I agree -- I'm very pro JVM, just not for using it in the browser.\n\n2. You're crazy -- JavaScript has a incomprehensible body of free code that easily rivals Java. (check out this analysis of what's on github --&gt; http://githut.info/)\n\n3. Not really in the browser, as you would have to pack those runtimes in your applet (if it would even work) and this would make the applet prohibitively large -- not to mention i dont think different applet instances could share that large code base even in the same page.\n\nThe main reason not to use front end java is that javascript has become featured and highly performant and its simply not needed anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55986, "question": "1. I agree -- I'm very pro JVM, just not for using it in the browser.\n\n2. You're crazy -- JavaScript has a incomprehensible body of free code that easily rivals Java. (check out this analysis of what's on github --&gt; http://githut.info/)\n\n3. Not really in the browser, as you would have to pack those runtimes in your applet (if it would even work) and this would make the applet prohibitively large -- not to mention i dont think different applet instances could share that large code base even in the same page.\n\nThe main reason not to use front end java is that javascript has become featured and highly performant and its simply not needed anymore.", "aSentId": 55987, "answer": "Fair point about the runtime size. I've seen it done, but only on intranet sites where that isn't such an issue.\n\nI disagree about the ecosystem, though. The JS ecosystem is full of the programming equivalent of iFart apps. You can install some npm thing that seems useful and find it has dozens of dependencies, but when you look at what they do, half of them are barely saving a line or two of code. You see people writing a package to make some other package \"compatible\" with Gulp, again just to avoid writing one or two lines of actual code in a gulpfile. It's like there's this whole community whose only common ground is that they absolutely mustn't ever actually do any programming, so all they are allowed to do is join the dots other people already placed for them. Of course there's some good stuff out there as well, but stats on JS uploaded to GitHub don't seem to me likely to be at all representative of the overall strength and diversity of the ecosystem.\n\n&gt; The main reason not to use front end java is that javascript has become featured and highly performant and its simply not needed anymore.\n\nExcept it hasn't. JS performance is still pretty bad at times, it's just much better than it used to be now that JIT compilation has caught up. And as I've argued in various other posts in this discussion, HTML/CSS/JS still have a considerable gap between the glossy brochure and the reality, as well as issues of standardisation and portability to consider. They are, as yet, far from offering good replacements for a lot of things plug-ins have been handling just fine for a decade or more.\n\n[Edit: Also, JS is still a terrible language. Its ubiquity and effective monopoly on browser-native front-end programming don't change the fact that it has about as much theoretical soundness as C, as much elegance as PHP, and as many edge cases as the bastard love-child of C++ and x86 assembly language. Keeping the field open to alternative, substantially different languages is a good idea just so we don't have to use JS, or some thinly veiled alternative, to write large front-end applications where quality is important.]", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55988, "question": "Fair point about the runtime size. I've seen it done, but only on intranet sites where that isn't such an issue.\n\nI disagree about the ecosystem, though. The JS ecosystem is full of the programming equivalent of iFart apps. You can install some npm thing that seems useful and find it has dozens of dependencies, but when you look at what they do, half of them are barely saving a line or two of code. You see people writing a package to make some other package \"compatible\" with Gulp, again just to avoid writing one or two lines of actual code in a gulpfile. It's like there's this whole community whose only common ground is that they absolutely mustn't ever actually do any programming, so all they are allowed to do is join the dots other people already placed for them. Of course there's some good stuff out there as well, but stats on JS uploaded to GitHub don't seem to me likely to be at all representative of the overall strength and diversity of the ecosystem.\n\n&gt; The main reason not to use front end java is that javascript has become featured and highly performant and its simply not needed anymore.\n\nExcept it hasn't. JS performance is still pretty bad at times, it's just much better than it used to be now that JIT compilation has caught up. And as I've argued in various other posts in this discussion, HTML/CSS/JS still have a considerable gap between the glossy brochure and the reality, as well as issues of standardisation and portability to consider. They are, as yet, far from offering good replacements for a lot of things plug-ins have been handling just fine for a decade or more.\n\n[Edit: Also, JS is still a terrible language. Its ubiquity and effective monopoly on browser-native front-end programming don't change the fact that it has about as much theoretical soundness as C, as much elegance as PHP, and as many edge cases as the bastard love-child of C++ and x86 assembly language. Keeping the field open to alternative, substantially different languages is a good idea just so we don't have to use JS, or some thinly veiled alternative, to write large front-end applications where quality is important.]", "aSentId": 55989, "answer": "I was able to stand up a map display (google maps) with an SVG overlay (d3) that gets dynamically asynchronous updates (websockets and knockout.js) in a few days -- and this included the time to learn how to use half of the libraries involved while I was coding it. And much of the rendering surfaces are graphics accelerated in modern browsers, so it's fast.\n\nThere is no scenario in which using Java client-side would have improved things -- library availability, size, code-size, integration, or performance. \n\nFor general purpose programming, I pick Java every time over JS, but for user interface work, HTML+CSS+JS as a platform has won that war.\n\n\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55991, "question": "there's a surprising amount of server-side Java on the web still.", "aSentId": 55992, "answer": "As there should be -- Java is very competitive there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55996, "question": "What I don't understand is how this isn't seen as anti-competitive behavior.\n\nChrome isn't just a browser anymore, yet it has made the decision to only allow and package one company's plugins (Adobe Flash).", "aSentId": 55997, "answer": "Because Chrome does not have a monopoly position.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55998, "question": "Because Chrome does not have a monopoly position.", "aSentId": 55999, "answer": "It has a browser share of well over 40%.\n\n39.7% was seen as sufficient for British Airways to be considered \"Dominant\", the requirement for anti-competitive laws.\n\nIn fact it will soon hit 50% at which point the relevant EU documents say it is assumed to be dominant.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55996, "question": "What I don't understand is how this isn't seen as anti-competitive behavior.\n\nChrome isn't just a browser anymore, yet it has made the decision to only allow and package one company's plugins (Adobe Flash).", "aSentId": 56001, "answer": "What I don't understand is how whiny people are about competition, especially with open-source products.\n\nYou didn't *pay a dime* for Chrome.  It has plenty of competitors, most of which *are also free*.  You don't like it?  Go use Firefox.  Or Ice Weasel.  Or even IE.  Or pay some *actual money* and buy Opera.\n\nAnd it's open source, fer chrissakes.  You want to run NPAPI forever?  Fine, go pull the source and build it.\n\nGoogle is managing out an obsolete technology.  There are better plug-in technologies already in place, and Google has given developers a *long* while to get their shit together.  I have zero sympathy for any developer who is still dependent on this stuff.\n\nYou have no right to whine.  Everything you're using (relevant to this conversation) is free and has plenty of competition.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56002, "question": "What I don't understand is how whiny people are about competition, especially with open-source products.\n\nYou didn't *pay a dime* for Chrome.  It has plenty of competitors, most of which *are also free*.  You don't like it?  Go use Firefox.  Or Ice Weasel.  Or even IE.  Or pay some *actual money* and buy Opera.\n\nAnd it's open source, fer chrissakes.  You want to run NPAPI forever?  Fine, go pull the source and build it.\n\nGoogle is managing out an obsolete technology.  There are better plug-in technologies already in place, and Google has given developers a *long* while to get their shit together.  I have zero sympathy for any developer who is still dependent on this stuff.\n\nYou have no right to whine.  Everything you're using (relevant to this conversation) is free and has plenty of competition.", "aSentId": 56003, "answer": "I'm not whining, just as I didn't whine about Microsoft packaging IE in Windows. It doesn't affect me personally, but that doesn't mean I can't think it might be a bad thing.\n\nHowever, I can definitely see the serious harm this can/is doing to businesses who have absolutely no control over this and had no way of predicting this.\n\n3 years warning is not much when you're using 10 year old legacy tools in your business. It's not cheap to rebuild these things from scratch, especially if you only have one or two developer staff.\n\n***\n\n**More importantly, the anti-competitive part:**\n\nChrome is accelerating in dominance. In another year they will have 50-60% market share.\n\nChrome have just switched to a proprietary plugin format not supported by other browsers.\n\nBusinesses usually cannot afford to develop for multiple targets that are so different, so choose the largest market share.\n\n*Potentially,* plugins will only be made for chrome, starting a monopoly where once there was competition.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56004, "question": "I'm not whining, just as I didn't whine about Microsoft packaging IE in Windows. It doesn't affect me personally, but that doesn't mean I can't think it might be a bad thing.\n\nHowever, I can definitely see the serious harm this can/is doing to businesses who have absolutely no control over this and had no way of predicting this.\n\n3 years warning is not much when you're using 10 year old legacy tools in your business. It's not cheap to rebuild these things from scratch, especially if you only have one or two developer staff.\n\n***\n\n**More importantly, the anti-competitive part:**\n\nChrome is accelerating in dominance. In another year they will have 50-60% market share.\n\nChrome have just switched to a proprietary plugin format not supported by other browsers.\n\nBusinesses usually cannot afford to develop for multiple targets that are so different, so choose the largest market share.\n\n*Potentially,* plugins will only be made for chrome, starting a monopoly where once there was competition.", "aSentId": 56005, "answer": "&gt; However, I can definitely see the serious harm this can/is doing to businesses who have absolutely no control over this and had no way of predicting this.\n\nAre you saying that a business which runs Chrome has absolutely no control over this?  Because I don't see how that could possibly be the case.  If a business chooses to use Chrome, then *it chose to use Chrome*.\n\n&gt; Chrome is accelerating in dominance. In another year they will have 50-60% market share.\n\nSo what?  Are you seriously suggesting that this somehow prevents other browsers from existing?  *Even forks of Chrome itself??*\n\n&gt; 3 years warning is not much when you're using 10 year old legacy tools in your business. It's not cheap to rebuild these things from scratch, especially if you only have one or two developer staff.\n\nBoo hoo.  Man up and pay attention.  If you can't deal with changes this minor with *three years notice*, you're not going to survive in business anyway.\n\n&gt; Potentially, plugins will only be made for chrome, starting a monopoly where once there was competition.\n\nThat's bullshit.  Every major browser (including all competitors to Chrome) provide plug-in APIs.  If developers don't have the resources to target more than one browser, *that's their choice*.  Their unwillingness or inability to target more than one browser does not constitute a monopoly on Google's part.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56002, "question": "What I don't understand is how whiny people are about competition, especially with open-source products.\n\nYou didn't *pay a dime* for Chrome.  It has plenty of competitors, most of which *are also free*.  You don't like it?  Go use Firefox.  Or Ice Weasel.  Or even IE.  Or pay some *actual money* and buy Opera.\n\nAnd it's open source, fer chrissakes.  You want to run NPAPI forever?  Fine, go pull the source and build it.\n\nGoogle is managing out an obsolete technology.  There are better plug-in technologies already in place, and Google has given developers a *long* while to get their shit together.  I have zero sympathy for any developer who is still dependent on this stuff.\n\nYou have no right to whine.  Everything you're using (relevant to this conversation) is free and has plenty of competition.", "aSentId": 56007, "answer": "Chrome is not open-source. I don't get why currently so many people are claiming this. You can't pull the sources and build it, because they are not public.  Firefox is the only major open-source browser on the market. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56008, "question": "Chrome is not open-source. I don't get why currently so many people are claiming this. You can't pull the sources and build it, because they are not public.  Firefox is the only major open-source browser on the market. ", "aSentId": 56009, "answer": "Chrome is built upon Chromium, the open source project. NPAPI support is being removed from Chromium.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56011, "question": "PPAPI is too limiting to implement Java. Too slow too.", "aSentId": 56012, "answer": "Where do you get that assumption? It's more likely that they just didn't want to expend the effort to refactor parts of Java that needed it to work with PPAPI (which is currently a single browser API). In effect, too much work for too little reward.\n\nThe PPAPI itself is *not* slow.\n\nWell, no more slow than that of IPC (ie context switching), but it could be said the cost of IPC is just the cost of security. And there are efforts to bring the NaCl sandbox into the browser process proper (securely of course) so that the aforementioned IPCs aren't required (amongst other reasons).\n\nEDIT: Typo. And again.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56013, "question": "Where do you get that assumption? It's more likely that they just didn't want to expend the effort to refactor parts of Java that needed it to work with PPAPI (which is currently a single browser API). In effect, too much work for too little reward.\n\nThe PPAPI itself is *not* slow.\n\nWell, no more slow than that of IPC (ie context switching), but it could be said the cost of IPC is just the cost of security. And there are efforts to bring the NaCl sandbox into the browser process proper (securely of course) so that the aforementioned IPCs aren't required (amongst other reasons).\n\nEDIT: Typo. And again.", "aSentId": 56014, "answer": "The other issue is that Oracle could spend all the time porting to PPAPI, and then Google decides to block Java on principle as being insecure.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56015, "question": "The other issue is that Oracle could spend all the time porting to PPAPI, and then Google decides to block Java on principle as being insecure.", "aSentId": 56016, "answer": "They wouldn't though. The point of NaCl (and SFI, of which NaCl is based) is the plugin can do ***whatever the blazes it wants*** inside the sandbox and would still be guaranteed to not be able to break out.\n\nSo Java/Oracle could completely cease efforts fixing all those security bugs and it still wouldn't be an issue.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56017, "question": "They wouldn't though. The point of NaCl (and SFI, of which NaCl is based) is the plugin can do ***whatever the blazes it wants*** inside the sandbox and would still be guaranteed to not be able to break out.\n\nSo Java/Oracle could completely cease efforts fixing all those security bugs and it still wouldn't be an issue.", "aSentId": 56018, "answer": "True.  I think the bigger issue is that the Java sandbox doesn't line up with the NaCl sandbox.  Oracle doesn't want Java support that works differently on Chrome than anywhere else.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56013, "question": "Where do you get that assumption? It's more likely that they just didn't want to expend the effort to refactor parts of Java that needed it to work with PPAPI (which is currently a single browser API). In effect, too much work for too little reward.\n\nThe PPAPI itself is *not* slow.\n\nWell, no more slow than that of IPC (ie context switching), but it could be said the cost of IPC is just the cost of security. And there are efforts to bring the NaCl sandbox into the browser process proper (securely of course) so that the aforementioned IPCs aren't required (amongst other reasons).\n\nEDIT: Typo. And again.", "aSentId": 56020, "answer": "&gt; just the cost of security.\n\nThat's what's scaring Java off ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56024, "question": "Amazon recently did similar with their instant video.", "aSentId": 56025, "answer": "This also surprises me, and may turn out to be a bad call, commercially speaking: our household was recently discussing whether to sign up for Amazon Prime Video or Netflix, and the fact that they warned that their service didn't work optimally in Chrome was definitely a strike against them.  (Their lack of separate logins for the same account was also a big minus.)\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56028, "question": "who cares? Minecraft fans?", "aSentId": 56029, "answer": "Minecraft has nothing to do with browser applets. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56030, "question": "Minecraft has nothing to do with browser applets. ", "aSentId": 56031, "answer": "Minecraft had a browser applet.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56032, "question": "Minecraft had a browser applet.", "aSentId": 56033, "answer": "Had.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56034, "question": "Had.", "aSentId": 56035, "answer": "It also was instrumental in rising its popularity as it was only a click away when it was a free applet that people would share around.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56030, "question": "Minecraft has nothing to do with browser applets. ", "aSentId": 56037, "answer": "So really no one cares? :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56028, "question": "who cares? Minecraft fans?", "aSentId": 56039, "answer": "Java in the browser is a fading platform, almost since their inception. But java is everywhere and java developers are everywhere, and browsers are everywhere, so you will always have some people doing things in java in the browser, or tryiing.  Honestly, I think Oracle should at least try to find solutions. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56041, "question": "who the fuck in their right mind uses Java plugins anymore in browsers. That shit is OLD. Only retarded companies still use it. Service providers need to stop serving old piece of shit software and idiots need to realize how dumb these service providers are for not UPGRADING THEIR SHIT. same with silvercrap\n", "aSentId": 56042, "answer": "I do think that it is a bit foolish to use Java for new development for public-facing services, but there are lots of cases where it makes sense to use Java for in-house development (for example, if you have lots of Java devs on staff already) and there's also the legacy code issue: although as a user I would prefer not to *be obliged* to use Java to access services on your website, I would also prefer to continue to *be able* to use old Java applets (games, demos, tools of all kinds) that exist out on the web, are useful or entertaining or of historical significance, and which are unlikely to be rewritten.\n\nIt's a bit like with GIFs, which we *almost* succeeded in getting rid of: if you're creating content you should be using PNG (or, if it's the animation you're after, a suitable video format), but as a user it would be rather annoying if my browser suddenly stopped displaying GIFs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55779, "question": "Google Shuts Off NPAPI in Chrome this week", "aSentId": 56045, "answer": "What is the status of NPAPI in the other major browsers?\n\nLet's say I had a critical app that won't be upgraded and I needed to install a second browser.  \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56046, "question": "What is the status of NPAPI in the other major browsers?\n\nLet's say I had a critical app that won't be upgraded and I needed to install a second browser.  \n", "aSentId": 56047, "answer": "Firefox is also sunsetting it, though I don't recall the timeframe. ActiveX should remain available in IE for the forseeable future.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56048, "question": "Firefox is also sunsetting it, though I don't recall the timeframe. ActiveX should remain available in IE for the forseeable future.", "aSentId": 56049, "answer": "Mozilla considers NPAPI legacy but the last time I checked they weren't planning to remove it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56050, "question": "Mozilla considers NPAPI legacy but the last time I checked they weren't planning to remove it.", "aSentId": 56051, "answer": "Java is \"off by default\" however. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56052, "question": "Java is \"off by default\" however. ", "aSentId": 56053, "answer": "I think it's a good idea to have plugins off by default. Unless the user needs them they only serve to introduce security vulnerabilities.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56054, "question": "I think it's a good idea to have plugins off by default. Unless the user needs them they only serve to introduce security vulnerabilities.", "aSentId": 56055, "answer": "I wish that Firefox had an option for plugin activation that's a mixture of  \"Always activate\", \"Ask to activate\", and \"Never activate; GTFO\".\n\nSpecifically, block all Flash like its the HIV, but let me whitelist the URL pattern of .flv's that are YouTube content videos.\n\nNever even fucking bother to ask to activate the Java plugin except for the one (and only) item in the whitelist, WebEx (the one and **only** web meeting site/software that works [surprisingly, flawlessly!] on *nix).\n\nEssentially, I wish someone would write a Firefox addon with the power of Adblock's filter preferences as applied to plugins.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56054, "question": "I think it's a good idea to have plugins off by default. Unless the user needs them they only serve to introduce security vulnerabilities.", "aSentId": 56057, "answer": "The same applies to JavaScript, though...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56050, "question": "Mozilla considers NPAPI legacy but the last time I checked they weren't planning to remove it.", "aSentId": 56059, "answer": "I haven't looked at the issue for like a year; I remember things being a bit hazy around Mozilla's plan after the Google announcement. Looks like you're right. At least one vendor is taking a more measured approach.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56060, "question": "I haven't looked at the issue for like a year; I remember things being a bit hazy around Mozilla's plan after the Google announcement. Looks like you're right. At least one vendor is taking a more measured approach.", "aSentId": 56061, "answer": "&gt; At least one vendor is taking a more measured approach.\n\nAs if Chrome's wasn't a measured approach?  They announced these plans in 2013.  They gave good reasons for the change and a fairly specific timetable giving vendors who still depend on NPAPI two years to get off their asses.\n\nAnyone who feels like this was pushed through quickly or caught them by surprise wasn't paying attention or didn't care.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56062, "question": "&gt; At least one vendor is taking a more measured approach.\n\nAs if Chrome's wasn't a measured approach?  They announced these plans in 2013.  They gave good reasons for the change and a fairly specific timetable giving vendors who still depend on NPAPI two years to get off their asses.\n\nAnyone who feels like this was pushed through quickly or caught them by surprise wasn't paying attention or didn't care.", "aSentId": 56063, "answer": "Google had originally giving one year, then extended one year. One year is not enough for something like java to be ported to an alternate system and validated (especially giving the very lackluster alternatives) and by the time they knew they had another year it was already too late to start development.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56062, "question": "&gt; At least one vendor is taking a more measured approach.\n\nAs if Chrome's wasn't a measured approach?  They announced these plans in 2013.  They gave good reasons for the change and a fairly specific timetable giving vendors who still depend on NPAPI two years to get off their asses.\n\nAnyone who feels like this was pushed through quickly or caught them by surprise wasn't paying attention or didn't care.", "aSentId": 56065, "answer": "&gt; They gave good reasons for the change and a fairly specific timetable giving vendors who still depend on NPAPI two years to get off their asses.\n\nWhy should they ask how high, just because Google said \"jump\"? Removing this technology will make Chrome a less capable browser, and that hurts Google by default, the same way entire (and successful) campaigns have been run against Apple under slogans like \"See the *whole* web\" after they decided not to support Flash on mobile devices.\n\n&gt; Anyone who feels like this was pushed through quickly or caught them by surprise wasn't paying attention or didn't care.\n\nI'm guessing in most cases it was \"didn't care\". To a lot of people using these technologies, Google just aren't that important. Now, if *Microsoft* pulled Java support, there would be real concern. But moves like this are why corporate desktops will probably still be dominated by IE in five years no matter how popular Chrome gets in the private user market.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56066, "question": "&gt; They gave good reasons for the change and a fairly specific timetable giving vendors who still depend on NPAPI two years to get off their asses.\n\nWhy should they ask how high, just because Google said \"jump\"? Removing this technology will make Chrome a less capable browser, and that hurts Google by default, the same way entire (and successful) campaigns have been run against Apple under slogans like \"See the *whole* web\" after they decided not to support Flash on mobile devices.\n\n&gt; Anyone who feels like this was pushed through quickly or caught them by surprise wasn't paying attention or didn't care.\n\nI'm guessing in most cases it was \"didn't care\". To a lot of people using these technologies, Google just aren't that important. Now, if *Microsoft* pulled Java support, there would be real concern. But moves like this are why corporate desktops will probably still be dominated by IE in five years no matter how popular Chrome gets in the private user market.", "aSentId": 56067, "answer": "&gt; Why should they ask how high, just because Google said \"jump\"? Removing this technology will make Chrome a less capable browser, and that hurts Google by default, the same way entire (and successful) campaigns have been run against Apple under slogans like \"See the whole web\" after they decided not to support Flash on mobile devices.\n\nIt'll make Chrome a more secure browser by removing a lot of ways for plugins to fuck it all up.  Mozilla is not moving as aggressively, but they refer to NPAPI as a deprecated legacy system which should be avoided, so it's not just Google saying this.  All three major browsers are moving in the same direction, more sandboxing and less support for legacy plugins.\n\nAs for that stupid \"whole web\" campaign it may have had some short-term value but long term who was right?  Where exactly is Android Flash support now?  Flash was another legacy piece of shit that needed to go away, I thank Apple for providing the motivation for it to finally be mostly replaced by HTML5.  Every time a corporate CEO visits their web site on his iPad and complains that it's all broken the internet as a whole gets improved.  Here's hoping that the continued lock down of Java applets in all major browsers kills them too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56068, "question": "&gt; Why should they ask how high, just because Google said \"jump\"? Removing this technology will make Chrome a less capable browser, and that hurts Google by default, the same way entire (and successful) campaigns have been run against Apple under slogans like \"See the whole web\" after they decided not to support Flash on mobile devices.\n\nIt'll make Chrome a more secure browser by removing a lot of ways for plugins to fuck it all up.  Mozilla is not moving as aggressively, but they refer to NPAPI as a deprecated legacy system which should be avoided, so it's not just Google saying this.  All three major browsers are moving in the same direction, more sandboxing and less support for legacy plugins.\n\nAs for that stupid \"whole web\" campaign it may have had some short-term value but long term who was right?  Where exactly is Android Flash support now?  Flash was another legacy piece of shit that needed to go away, I thank Apple for providing the motivation for it to finally be mostly replaced by HTML5.  Every time a corporate CEO visits their web site on his iPad and complains that it's all broken the internet as a whole gets improved.  Here's hoping that the continued lock down of Java applets in all major browsers kills them too.", "aSentId": 56069, "answer": "&gt; It'll make Chrome a more secure browser by removing a lot of ways for plugins to fuck it all up.\n\nThe trouble is, there is basically no evidence that this is actually what will happen. Have you ever looked at how many critical security fixes are rolled up in the updates to Firefox or Chrome that come out every few weeks now? There are *loads* of them. And there seems little reason to believe that moving the attack surface from a separate plugin to the browser itself, but ultimately still providing the same kind of functionality to code downloaded from untrusted sources, is going to fare any better.\n\n&gt; Flash was another legacy piece of shit that needed to go away, I thank Apple for providing the motivation for it to finally be mostly replaced by HTML5.\n\nSpeaking as someone who works with video on the web a lot, the idea that HTML5 is currently a good replacement for a good Flash video player is silly. HTML5 video still doesn't completely match Flash in capabilities, but more importantly, even the most basic functionality differs from one browser to the next with no meaningful standardisation. What would the web look like today if one browser only supported PNG files, another insisted on GIFs, and a third would only do JPG? Now multiply that up by a few orders of magnitude for the different permutations of video formats and containers out there, and you get some idea of how screwed up video on the web is now we've \"improved\" from Flash to HTML5 video. And that's before you get into differences like what the built-in controls look like, or even how a video appears before the user clicks on it.\n\nAs I wrote in another post, if browser makers want developers to give up on plug-ins, they need to provide better alternatives first. Otherwise they're just producing inferior products and hurting their users.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56048, "question": "Firefox is also sunsetting it, though I don't recall the timeframe. ActiveX should remain available in IE for the forseeable future.", "aSentId": 56071, "answer": "But Spartan is removing all the legacy bits that will stay with IE11, so we may see a spartan that doesn't use activex at all, besides maybe built in flash player.\n\nFirefox is working on Shumway, and pdf.js\n\nMicrosoft's spartan project is actually building pdf support into the browser.\n\nChromium has it's own opensource pdf plugin presumably using pepper, which opera and vivaldi probably also use.\n\nI assume that if applications don't go html5 based they'll rely on the OS's internal application settings to get opened from the browser. e.g customized handlers. rather then host content in the browser. Or they might rely on extensions to render instead.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56072, "question": "But Spartan is removing all the legacy bits that will stay with IE11, so we may see a spartan that doesn't use activex at all, besides maybe built in flash player.\n\nFirefox is working on Shumway, and pdf.js\n\nMicrosoft's spartan project is actually building pdf support into the browser.\n\nChromium has it's own opensource pdf plugin presumably using pepper, which opera and vivaldi probably also use.\n\nI assume that if applications don't go html5 based they'll rely on the OS's internal application settings to get opened from the browser. e.g customized handlers. rather then host content in the browser. Or they might rely on extensions to render instead.\n\n", "aSentId": 56073, "answer": "So far releases of Spartan have not supported ActiveX, and there's good reason to suspect they never will.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56072, "question": "But Spartan is removing all the legacy bits that will stay with IE11, so we may see a spartan that doesn't use activex at all, besides maybe built in flash player.\n\nFirefox is working on Shumway, and pdf.js\n\nMicrosoft's spartan project is actually building pdf support into the browser.\n\nChromium has it's own opensource pdf plugin presumably using pepper, which opera and vivaldi probably also use.\n\nI assume that if applications don't go html5 based they'll rely on the OS's internal application settings to get opened from the browser. e.g customized handlers. rather then host content in the browser. Or they might rely on extensions to render instead.\n\n", "aSentId": 56075, "answer": "Spartan is definitely removing ActiveX support. Microsoft has already announced it as so, saying people (e.g. companies) that rely on it will have to use IE instead.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56072, "question": "But Spartan is removing all the legacy bits that will stay with IE11, so we may see a spartan that doesn't use activex at all, besides maybe built in flash player.\n\nFirefox is working on Shumway, and pdf.js\n\nMicrosoft's spartan project is actually building pdf support into the browser.\n\nChromium has it's own opensource pdf plugin presumably using pepper, which opera and vivaldi probably also use.\n\nI assume that if applications don't go html5 based they'll rely on the OS's internal application settings to get opened from the browser. e.g customized handlers. rather then host content in the browser. Or they might rely on extensions to render instead.\n\n", "aSentId": 56077, "answer": "I wish somebody would just port the KParts plugin to PPAPI or NaCl.\n\nThat shit is so useful, and it's one of the many reasons I'm staying with Firefox.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56048, "question": "Firefox is also sunsetting it, though I don't recall the timeframe. ActiveX should remain available in IE for the forseeable future.", "aSentId": 56079, "answer": "ActiveX will remain available in the \"old\" Internet Explorer, but it will not be available in IE, going forward (that is, in \"Spartan\").", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 55779, "question": "Google Shuts Off NPAPI in Chrome this week", "aSentId": 56081, "answer": "What exactly does this affect?\n\nFor example, is 'Java Web Start' affected?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56082, "question": "What exactly does this affect?\n\nFor example, is 'Java Web Start' affected?", "aSentId": 56083, "answer": "Java Web Start should be fine, but Java applets will not work.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56084, "question": "Java Web Start should be fine, but Java applets will not work.", "aSentId": 56085, "answer": "so java applets are no more?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56086, "question": "so java applets are no more?", "aSentId": 56087, "answer": "No more on Chrome, they are still supported on IE, Firefox, Safari etc..", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56088, "question": "No more on Chrome, they are still supported on IE, Firefox, Safari etc..", "aSentId": 56089, "answer": "Firefox will be following suit shortly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56090, "question": "Firefox will be following suit shortly.", "aSentId": 56091, "answer": "And Spartan won't support it either. Enterprises using ActiveX controls will be stuck on IE11.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56090, "question": "Firefox will be following suit shortly.", "aSentId": 56093, "answer": "What is Firefox replacing it with?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56094, "question": "What is Firefox replacing it with?", "aSentId": 56095, "answer": "I was wrong.  They aren't dropping it, they are making all plugins click to play.  Firefox supports WebGL as well, so I guess that is what I will be using.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56088, "question": "No more on Chrome, they are still supported on IE, Firefox, Safari etc..", "aSentId": 56097, "answer": "And I imagine Opera will follow Chrome soon.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56086, "question": "so java applets are no more?", "aSentId": 56099, "answer": "What do you mean \"are no more\"? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56100, "question": "What do you mean \"are no more\"? ", "aSentId": 56101, "answer": "I think it's meant like... These Java applets aren't pining for the fjords.  Java Applets have passed on. Java Applets are no more. Java applets have ceased to be.  Applets have expired and gone to meet their maker.  Java Applets are stiffs.  These are late Java Applets.  Bereft of live, Java Applets rest in peace.  If Chrome hadn't left NPAPI bolted into the code base, they would be pushing up the daisies.  Java Applets have shuffled off their mortal coil, run down the curtain, and joined the choir invisible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56102, "question": "I think it's meant like... These Java applets aren't pining for the fjords.  Java Applets have passed on. Java Applets are no more. Java applets have ceased to be.  Applets have expired and gone to meet their maker.  Java Applets are stiffs.  These are late Java Applets.  Bereft of live, Java Applets rest in peace.  If Chrome hadn't left NPAPI bolted into the code base, they would be pushing up the daisies.  Java Applets have shuffled off their mortal coil, run down the curtain, and joined the choir invisible.", "aSentId": 56103, "answer": "I don't get it - could you maybe explain it with a metaphor?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56102, "question": "I think it's meant like... These Java applets aren't pining for the fjords.  Java Applets have passed on. Java Applets are no more. Java applets have ceased to be.  Applets have expired and gone to meet their maker.  Java Applets are stiffs.  These are late Java Applets.  Bereft of live, Java Applets rest in peace.  If Chrome hadn't left NPAPI bolted into the code base, they would be pushing up the daisies.  Java Applets have shuffled off their mortal coil, run down the curtain, and joined the choir invisible.", "aSentId": 56105, "answer": "Don't know why a perfectly good Monty Python quote gets downvotes these days.  Sheesh.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56106, "question": "Don't know why a perfectly good Monty Python quote gets downvotes these days.  Sheesh.", "aSentId": 56107, "answer": "Because it didn't really add any information or answered the question. It's just a joke. I like monty python and chuckled but i get the downvotes", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56086, "question": "so java applets are no more?", "aSentId": 56109, "answer": "As i gather: chrome doesn't support java applets anymore. Other browser still do but it's not sure for how long. It's a clear sign (and it was announced 2 years before) that java applets aren't a viable way to bring java to the web. One should use another way like google web toolkit (no applet if i recall correctly) maybe with vaadin, jsp or jsf. Or something i didn't mention", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56082, "question": "What exactly does this affect?\n\nFor example, is 'Java Web Start' affected?", "aSentId": 56111, "answer": "Silverlight is affected. I maintain GIS Web apps for work and got a bunch of tickets from users who were unable to load the in-house mapping app. Pretty easy fix though, until we migrate everything to HTML5", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56112, "question": "Silverlight is affected. I maintain GIS Web apps for work and got a bunch of tickets from users who were unable to load the in-house mapping app. Pretty easy fix though, until we migrate everything to HTML5", "aSentId": 56113, "answer": "Good. It's time for it to die for good. Even Microsoft doesn't want it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56114, "question": "Good. It's time for it to die for good. Even Microsoft doesn't want it.", "aSentId": 56115, "answer": "Yeah, I've been long done with SL/Flex for mapping apps but I got this job recently and kind of inherited these apps. HTML5/JS is a lot smoother and crisp when it comes to mapping apps, but the tools aren't quite as refined as the old APIs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56116, "question": "Yeah, I've been long done with SL/Flex for mapping apps but I got this job recently and kind of inherited these apps. HTML5/JS is a lot smoother and crisp when it comes to mapping apps, but the tools aren't quite as refined as the old APIs.", "aSentId": 56117, "answer": "I for one am looking forward to your html5 mapping apps!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56118, "question": "I for one am looking forward to your html5 mapping apps!", "aSentId": 56119, "answer": "Same here. They're a bit annoying to develop at times, but they're very smooth. Plus, they run on mobile devices without having to develop a proprietary app.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56116, "question": "Yeah, I've been long done with SL/Flex for mapping apps but I got this job recently and kind of inherited these apps. HTML5/JS is a lot smoother and crisp when it comes to mapping apps, but the tools aren't quite as refined as the old APIs.", "aSentId": 56121, "answer": "Flex and SL are much easier to create stuff in though :/ feel like we are going backwards even if flash and other plugins are being phased out for a good reason ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56122, "question": "Flex and SL are much easier to create stuff in though :/ feel like we are going backwards even if flash and other plugins are being phased out for a good reason ", "aSentId": 56123, "answer": "Yeah, in terms of GIS, the Flex and SL apis had app builders that were very easy to configure. But they've developed the same for JS/HTML5 now so it's not so bad. But like I said, some of the mapping tools still need to be refined.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56112, "question": "Silverlight is affected. I maintain GIS Web apps for work and got a bunch of tickets from users who were unable to load the in-house mapping app. Pretty easy fix though, until we migrate everything to HTML5", "aSentId": 56125, "answer": "If you don't mind me asking, what's the fix?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56126, "question": "If you don't mind me asking, what's the fix?", "aSentId": 56127, "answer": "I think a few people have mentioned this already, but:\n\n1. Pop this into your address bar in Chrome: chrome://flags/#enable-npapi\n\n2. Enable\n\n3. Restart Browser.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56128, "question": "I think a few people have mentioned this already, but:\n\n1. Pop this into your address bar in Chrome: chrome://flags/#enable-npapi\n\n2. Enable\n\n3. Restart Browser.", "aSentId": 56129, "answer": "Ah, I already knew this one. I thought maybe it was something different, haha! Thanks though.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56112, "question": "Silverlight is affected. I maintain GIS Web apps for work and got a bunch of tickets from users who were unable to load the in-house mapping app. Pretty easy fix though, until we migrate everything to HTML5", "aSentId": 56131, "answer": "Will you be done migration by September? They'll be no easy fix then.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56132, "question": "Will you be done migration by September? They'll be no easy fix then.", "aSentId": 56133, "answer": "Hopefully. We're in the process of migrating it over to JS/HTML5. A lot of users use IE anyway (I work in the public sector) so it won't be a huge issue.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56134, "question": "Hopefully. We're in the process of migrating it over to JS/HTML5. A lot of users use IE anyway (I work in the public sector) so it won't be a huge issue.", "aSentId": 56135, "answer": "S*** just got real for my company. \n\nWe sell a product that uses Silverlight for parts of its user interface. Of course the Silverlight part is the newer part that get most of the new features and attention. This is an older, well-established system - so Silverlight code written a few years ago is considered new and cutting-edge. The fact that this part is now \"broken\" in Chrome is a big deal.\n\nWe've update large parts to pure-HTML, but the most complicated part is still Silverlight. Now we'll have to bite the bullet...\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56082, "question": "What exactly does this affect?\n\nFor example, is 'Java Web Start' affected?", "aSentId": 56137, "answer": "The plugin for battlefield games to join servers. Last I saw they were going to silently enable the debug feature that turns npapi back on without telling the user", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56138, "question": "The plugin for battlefield games to join servers. Last I saw they were going to silently enable the debug feature that turns npapi back on without telling the user", "aSentId": 56139, "answer": "It wasn't silently. I got the update and it basically said that if you want to be able to play you have to agree to enabling the npapi again.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56140, "question": "It wasn't silently. I got the update and it basically said that if you want to be able to play you have to agree to enabling the npapi again.", "aSentId": 56141, "answer": "Oh, good. I have Chrome beta so I ran into this with some users a month or so ago. That was their plan then.\n\nIt'd be nice if they figured out how to not use NPAPI, since it is getting completely removed...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56140, "question": "It wasn't silently. I got the update and it basically said that if you want to be able to play you have to agree to enabling the npapi again.", "aSentId": 56143, "answer": "Easier just to scrap Chrome and use a browser that doesn't silently break end user apps. The amount of headaches I've had the last few days from confused relatives and clients, Google's just about napalmed any good will they had from me. Absolutely zero excuse for putting an end user in such a position without so much as popping up a text box saying \"Oh by the way, we broke your shit because we think we know your security priorities better than you do\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56144, "question": "Easier just to scrap Chrome and use a browser that doesn't silently break end user apps. The amount of headaches I've had the last few days from confused relatives and clients, Google's just about napalmed any good will they had from me. Absolutely zero excuse for putting an end user in such a position without so much as popping up a text box saying \"Oh by the way, we broke your shit because we think we know your security priorities better than you do\"", "aSentId": 56145, "answer": "Well... They do. This was announced in 2013 and was a pretty big deal. Idk what more you could want.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56146, "question": "Well... They do. This was announced in 2013 and was a pretty big deal. Idk what more you could want.", "aSentId": 56147, "answer": "Because end users follow tech news? What I want is a large, unmissable popup explaining in clear to grandma level language exactly why her programs will no longer work immediately on first boot after the upgrade with an equally clear in the goddamned menu button to revert the change as a workaround. The lack of visible end user notice is indefensible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56148, "question": "Because end users follow tech news? What I want is a large, unmissable popup explaining in clear to grandma level language exactly why her programs will no longer work immediately on first boot after the upgrade with an equally clear in the goddamned menu button to revert the change as a workaround. The lack of visible end user notice is indefensible.", "aSentId": 56149, "answer": "I understand why you would say this but in reality all this would amount to is 90% of Chrome users leaving themselves open to exploits, now based on potentially outdated code since the browser doesn't officially support the plug-ins anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56150, "question": "I understand why you would say this but in reality all this would amount to is 90% of Chrome users leaving themselves open to exploits, now based on potentially outdated code since the browser doesn't officially support the plug-ins anymore.", "aSentId": 56151, "answer": "Real world, at least until the affected apps are updated (if they get updated), it's going to lead to users being exploitable on browsers that aren't Chrome. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56152, "question": "Real world, at least until the affected apps are updated (if they get updated), it's going to lead to users being exploitable on browsers that aren't Chrome. ", "aSentId": 56153, "answer": "Only if they support this. IE, for example hasn't since IE 5.5, and since .NET they haven't looked back.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56154, "question": "Only if they support this. IE, for example hasn't since IE 5.5, and since .NET they haven't looked back.", "aSentId": 56155, "answer": "I might be missing something, but virtually all the plugins Chrome just broke work fine in current IE. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56156, "question": "I might be missing something, but virtually all the plugins Chrome just broke work fine in current IE. ", "aSentId": 56157, "answer": "Are you talking about \"Java\" working on all browsers or \"Java plugin for Chrome\" working on all browsers?\n\nIn the case of the former, I don't see any reason to worry at all. Chrome not supporting a plugin shouldn't affect development of that plugin for another browser.\n\nIn the case of the latter, well, I've never seen IE or Firefox run a Chrome extension, so I don't see how not supporting them would hurt users of other browsers. Even Opera, which has an extension that allows you to install Chrome extensions, doesn't use the same \"Java\" that Chrome uses.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56158, "question": "Are you talking about \"Java\" working on all browsers or \"Java plugin for Chrome\" working on all browsers?\n\nIn the case of the former, I don't see any reason to worry at all. Chrome not supporting a plugin shouldn't affect development of that plugin for another browser.\n\nIn the case of the latter, well, I've never seen IE or Firefox run a Chrome extension, so I don't see how not supporting them would hurt users of other browsers. Even Opera, which has an extension that allows you to install Chrome extensions, doesn't use the same \"Java\" that Chrome uses.", "aSentId": 56159, "answer": "Java isn't the extent of the issue. This is all of the NPAPI plugins. Silverlight, the Unity game engine plugin, the Battlelog plugin and anything else that uses the API is broken.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56160, "question": "Java isn't the extent of the issue. This is all of the NPAPI plugins. Silverlight, the Unity game engine plugin, the Battlelog plugin and anything else that uses the API is broken.", "aSentId": 56161, "answer": "How does Breaking any of those plugins in Chrome effect the other browsers in any way?\n\nYou're comparing apples to oranges and standing on point because they are both round and contain seeds. You can't wrap an apple in orange peel and you can't make a poisonous Apple by changing how an Orange grows, so why would Apple farmers worry what Orange farmers are doing? Or Apple eaters and orange eaters for that matter?\n\n*edit*\nReally, this would serve to benefit users of other browsers. If Unity works on 1 less browser, then that's one less browser to support/troubleshoot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56162, "question": "How does Breaking any of those plugins in Chrome effect the other browsers in any way?\n\nYou're comparing apples to oranges and standing on point because they are both round and contain seeds. You can't wrap an apple in orange peel and you can't make a poisonous Apple by changing how an Orange grows, so why would Apple farmers worry what Orange farmers are doing? Or Apple eaters and orange eaters for that matter?\n\n*edit*\nReally, this would serve to benefit users of other browsers. If Unity works on 1 less browser, then that's one less browser to support/troubleshoot.", "aSentId": 56163, "answer": "Lets step back a minute. My initial reply was to you apparently saying IE hasn't supported NPAPI since version 5.5 (at least that's the way I read it). I pointed out that observable reality disagrees. Then somehow we ended up on Java and now I'm lost", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56164, "question": "Lets step back a minute. My initial reply was to you apparently saying IE hasn't supported NPAPI since version 5.5 (at least that's the way I read it). I pointed out that observable reality disagrees. Then somehow we ended up on Java and now I'm lost", "aSentId": 56165, "answer": "Okay, let's take a step back.\n\nYes, you are missing something. IE doesn't support NPAPI plugins natively since version 5.5/6.0\n\nhttp://stackoverflow.com/questions/4735223/npapi-plugin-in-internet-explorer\n\nSo, no, Google didn't \"break\" plugins that work on other browsers, unless you mean those that still use the outdated Netscape Plugin API (NPAPI).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56148, "question": "Because end users follow tech news? What I want is a large, unmissable popup explaining in clear to grandma level language exactly why her programs will no longer work immediately on first boot after the upgrade with an equally clear in the goddamned menu button to revert the change as a workaround. The lack of visible end user notice is indefensible.", "aSentId": 56167, "answer": "Large message telling grandma that old plugins no longer work? I can get behind that. \n\nBig button to revert the behavior? No way. The whole point of this effort is to close security holes by getting users off of NPAPI. Putting a big button there goes completely against the goal of the exercise. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56168, "question": "Large message telling grandma that old plugins no longer work? I can get behind that. \n\nBig button to revert the behavior? No way. The whole point of this effort is to close security holes by getting users off of NPAPI. Putting a big button there goes completely against the goal of the exercise. ", "aSentId": 56169, "answer": "Would you prefer a link in the message pointing to Firefox? Same end result really", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56138, "question": "The plugin for battlefield games to join servers. Last I saw they were going to silently enable the debug feature that turns npapi back on without telling the user", "aSentId": 56171, "answer": "Wat? \n\nThere's a word for a program that disables security settings in other apps without telling the user! It's worse if that app is a browser, as it's effectively an OS for webapps.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56172, "question": "Wat? \n\nThere's a word for a program that disables security settings in other apps without telling the user! It's worse if that app is a browser, as it's effectively an OS for webapps.", "aSentId": 56173, "answer": "We are talking about EA. Still they had a timeframe of 2 years to change it, it seems they never tried to fix this.\n\nRight now you get a huge banner telling you to upgrade your browser for a new version if you use the dev branch with their sonar&amp;blahblah plugin to access the Battlelog.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56172, "question": "Wat? \n\nThere's a word for a program that disables security settings in other apps without telling the user! It's worse if that app is a browser, as it's effectively an OS for webapps.", "aSentId": 56175, "answer": "I guess it depends how they do it. There is such a thing as an embedded Chrome, where they'd just be making things less secure for Chrome-in-Battlefield, and not Chrome in the rest of your system.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56176, "question": "I guess it depends how they do it. There is such a thing as an embedded Chrome, where they'd just be making things less secure for Chrome-in-Battlefield, and not Chrome in the rest of your system.", "aSentId": 56177, "answer": "It's not Chrome in Battlefield. The server browser that you have to use to even launch the single player game is a plugin for your standard desktop browser. It then launches the game with whatever mode and flags you have selected via the plugin.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56178, "question": "It's not Chrome in Battlefield. The server browser that you have to use to even launch the single player game is a plugin for your standard desktop browser. It then launches the game with whatever mode and flags you have selected via the plugin.", "aSentId": 56179, "answer": "What a crappy system. They could just use a normal web app and a bunch of links using a special protocol handler. I think unreal did/does this. Like unreal://&lt;server&gt;:&lt;port&gt; or something.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56180, "question": "What a crappy system. They could just use a normal web app and a bunch of links using a special protocol handler. I think unreal did/does this. Like unreal://&lt;server&gt;:&lt;port&gt; or something.", "aSentId": 56181, "answer": "Most parts of the server browser are a regular website, but some functionality relies on the plugin (starting the game is one of those, though).\n\nHow would a web-/browser-based server browser show pings without a plugin?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56182, "question": "Most parts of the server browser are a regular website, but some functionality relies on the plugin (starting the game is one of those, though).\n\nHow would a web-/browser-based server browser show pings without a plugin?", "aSentId": 56183, "answer": "Web sockets ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56184, "question": "Web sockets ", "aSentId": 56185, "answer": "Web sockets weren't really a widespread (or even properly standardized) thing back in 2010 or 11, though. Chrome 16, Firefox 11, and IE 10 were released after Battlelog.\n\nSo today it might be viable, back then it's at least debatable.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56186, "question": "Web sockets weren't really a widespread (or even properly standardized) thing back in 2010 or 11, though. Chrome 16, Firefox 11, and IE 10 were released after Battlelog.\n\nSo today it might be viable, back then it's at least debatable.", "aSentId": 56187, "answer": "You don't even need that, just AJAX requests.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56188, "question": "You don't even need that, just AJAX requests.", "aSentId": 56189, "answer": "How? The same-origin policy should prevent that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56190, "question": "How? The same-origin policy should prevent that.", "aSentId": 56191, "answer": "Well, if you can install a plugin then you can run a local webserver. Also, websites can use CORS to selectively opt out of same-origin.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56182, "question": "Most parts of the server browser are a regular website, but some functionality relies on the plugin (starting the game is one of those, though).\n\nHow would a web-/browser-based server browser show pings without a plugin?", "aSentId": 56193, "answer": "Good point. So why did they stop including a server browser in the game then?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56194, "question": "Good point. So why did they stop including a server browser in the game then?", "aSentId": 56195, "answer": "Because they're able to maintain/update/develop a website independently from a game, which is a major advantage of Battlelog.\n\nBattlelog is by far the best server browser the BF series has ever seen. It gets updated more frequently than the game, it's customizable on the client side (via user scripts), and it doesn't rely on an embedded browser engine, which would cause far more work than to just use a proper browser (ref. Steam's shitty embedded Webkit).\n\nThe only \"issue\" is that you have to run a browser in the background, but - honestly - that's a non-issue. Everyone can spare that 50 MB of RAM, you can actually switch servers without terminating the game (a common misconception), you don't have to look at loading screens, you can change your loadout, and you get a freaking real-time map of the battlefield on your second monitor to boot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56196, "question": "Because they're able to maintain/update/develop a website independently from a game, which is a major advantage of Battlelog.\n\nBattlelog is by far the best server browser the BF series has ever seen. It gets updated more frequently than the game, it's customizable on the client side (via user scripts), and it doesn't rely on an embedded browser engine, which would cause far more work than to just use a proper browser (ref. Steam's shitty embedded Webkit).\n\nThe only \"issue\" is that you have to run a browser in the background, but - honestly - that's a non-issue. Everyone can spare that 50 MB of RAM, you can actually switch servers without terminating the game (a common misconception), you don't have to look at loading screens, you can change your loadout, and you get a freaking real-time map of the battlefield on your second monitor to boot.", "aSentId": 56197, "answer": "You do have a point about steam's embedded browser. God that is such a piece of shit. I particularly like how they've made it impossible to use PayPal's website in an external browser during checkout. Especially since I use randomly generated passwords.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56180, "question": "What a crappy system. They could just use a normal web app and a bunch of links using a special protocol handler. I think unreal did/does this. Like unreal://&lt;server&gt;:&lt;port&gt; or something.", "aSentId": 56199, "answer": "You could also do it that way, but I don't see why it really matters so long as the solution works.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56200, "question": "You could also do it that way, but I don't see why it really matters so long as the solution works.", "aSentId": 56201, "answer": "Because you either force users to use a particular browser that they may not even have installed, or maintain plugins for multiple browsers. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56138, "question": "The plugin for battlefield games to join servers. Last I saw they were going to silently enable the debug feature that turns npapi back on without telling the user", "aSentId": 56203, "answer": "They don't silently enable it.  I recently cleared my user profile on my PC and created a new one due to some issues and therefore lost all of my settings.  Battlelog would not run on Chrome or even show in the plugins list until I manually went in and enabled NPAPI plugins and restarted Chrome.  I am on 43 beta", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56204, "question": "They don't silently enable it.  I recently cleared my user profile on my PC and created a new one due to some issues and therefore lost all of my settings.  Battlelog would not run on Chrome or even show in the plugins list until I manually went in and enabled NPAPI plugins and restarted Chrome.  I am on 43 beta", "aSentId": 56205, "answer": "Right, originally when I reported to them that I had to do that, they told me their plan was to silently enable it in the browser. According to another commenter, the installer now explicitly tells you it's going to enable it, apparently.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56206, "question": "Right, originally when I reported to them that I had to do that, they told me their plan was to silently enable it in the browser. According to another commenter, the installer now explicitly tells you it's going to enable it, apparently.", "aSentId": 56207, "answer": "Interesting since I just did it this weekend and it did not notify me, it just never worked until I did it manually.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56214, "question": "What is the alternative native app for plugins? or are they going to be abandoned in the rain? ", "aSentId": 56215, "answer": "There are still sandboxed PPAPI plugins, which are native code. The API (Pepper) is the same as the one exposed to architecture-independent applications. It's essentially just the set of APIs used by the browser itself to implement web standards, but it's a bit faster, less quirky and more capable when used via Pepper. Anyway, many plugins are never going to work in Pepper because they *require* things that aren't possible from the sandbox. Java could likely be ported to it with privileged applet support dropped but Oracle didn't do it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56217, "question": "Netflix, Amazon Video, and Xbox Video all use Silverlight for me on Firefox. Do they use HTML5 on Chrome? If Netflix stops working on Chrome, there would be a bloodbath.", "aSentId": 56218, "answer": "Netflix works perfectly with HTML5 + Media Extensions/DRM on Chrome for me (on Linux). It doesn't work with pure Chromium because that lacks the DRM parts but Chrome works perfectly. Amazon Video doesn't work though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56219, "question": "Netflix works perfectly with HTML5 + Media Extensions/DRM on Chrome for me (on Linux). It doesn't work with pure Chromium because that lacks the DRM parts but Chrome works perfectly. Amazon Video doesn't work though.", "aSentId": 56220, "answer": "Amazon also supports Flash, so they should be detecting the Chrome version and serving the correct format.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56221, "question": "Amazon also supports Flash, so they should be detecting the Chrome version and serving the correct format.", "aSentId": 56222, "answer": "Pepper Flash doesn't support the Flash DRM on Linux, that's only supported with NPAPI Flash + HAL (or a HAL stub designed to just forward the information from udev that Flash want's). So for me it only works in Firefox and after installing said HAL stub.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56223, "question": "Pepper Flash doesn't support the Flash DRM on Linux, that's only supported with NPAPI Flash + HAL (or a HAL stub designed to just forward the information from udev that Flash want's). So for me it only works in Firefox and after installing said HAL stub.", "aSentId": 56224, "answer": "Sorry, I didn't notice that you were specifically referring to Linux. Yes, Adobe dropped Linux support a few years ago and we kept it alive in Chrome with PPAPI Flash. Unfortunately DRM is something that only Adobe can add, and they chose not to support it on Linux.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56225, "question": "Sorry, I didn't notice that you were specifically referring to Linux. Yes, Adobe dropped Linux support a few years ago and we kept it alive in Chrome with PPAPI Flash. Unfortunately DRM is something that only Adobe can add, and they chose not to support it on Linux.", "aSentId": 56226, "answer": "For me it only affects Amazon Prime Video, not too big a loss, even though I have Prime and it doubly sucks because there is no Android app with Chromecast support like there is for other VOD services but yeah not enough to make me switch away from Chrome/Chromium", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56217, "question": "Netflix, Amazon Video, and Xbox Video all use Silverlight for me on Firefox. Do they use HTML5 on Chrome? If Netflix stops working on Chrome, there would be a bloodbath.", "aSentId": 56228, "answer": "I use Netflix in chrome all the time. I uninstalled Silverlight a long time ago.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56229, "question": "I use Netflix in chrome all the time. I uninstalled Silverlight a long time ago.", "aSentId": 56230, "answer": "I didn't even know netflix had html5 support. Im uninstalling silverlight right now. It, for some reason, likes to turn off one of my lcd screens when im watching a movie.\n\n\nedit: nevermind, still does it. *damn*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56231, "question": "I didn't even know netflix had html5 support. Im uninstalling silverlight right now. It, for some reason, likes to turn off one of my lcd screens when im watching a movie.\n\n\nedit: nevermind, still does it. *damn*", "aSentId": 56232, "answer": "Sounds like a hardware bug/misfeature triggered by accessing the DRM stuff. \"Only one screen may be outputting while viewing the movie\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56229, "question": "I use Netflix in chrome all the time. I uninstalled Silverlight a long time ago.", "aSentId": 56234, "answer": "One thing I thank apple for was killing flash and silverlight.\n\nAlthough, think of the precedent they set. Now Chrome is killing Java Applets!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56217, "question": "Netflix, Amazon Video, and Xbox Video all use Silverlight for me on Firefox. Do they use HTML5 on Chrome? If Netflix stops working on Chrome, there would be a bloodbath.", "aSentId": 56236, "answer": "Polish HBO GO didn't work until I re-enabled npapi after updating to Chrome 42. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56239, "question": "This is one of the reasons I don't use Amazon Video and just pirate instead - despite having an Amazon Prime account.\n\nQuestion, if my content is free on Amazon Prime, but I pirate anyway - am I still guilty of something?", "aSentId": 56240, "answer": "Yes because the content creator doesn't get paid for your view. But if that's the only way then that's the only way and it's not your fault. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56241, "question": "Yes because the content creator doesn't get paid for your view. But if that's the only way then that's the only way and it's not your fault. ", "aSentId": 56242, "answer": "Wait... they get paid *per view* on Amazon Prime?  That doesn't sound right.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56243, "question": "Wait... they get paid *per view* on Amazon Prime?  That doesn't sound right.", "aSentId": 56244, "answer": "I guess the only thing is the analytics get messed up if you don't click play in Amazon.  So perhaps they end up getting a slightly smaller slice of the overall pie?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56245, "question": "I guess the only thing is the analytics get messed up if you don't click play in Amazon.  So perhaps they end up getting a slightly smaller slice of the overall pie?", "aSentId": 56246, "answer": "I suspect they pay a flat rate, regardless of views.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56243, "question": "Wait... they get paid *per view* on Amazon Prime?  That doesn't sound right.", "aSentId": 56248, "answer": "When the time comes to renegotiate, the content creator can charge more if they have more views. Also, some contracts are definitely structured on a viewership basis ($X for Y views, $X+1 for Y+z views, etc.). Amazon especially, has an incentive to make it viewership based since so many people have Prime and so few actually use the Instant Video.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56243, "question": "Wait... they get paid *per view* on Amazon Prime?  That doesn't sound right.", "aSentId": 56250, "answer": "Depends on the contract. Some platforms just buy a license to stream video for a given period of time, other platforms have a revenue sharing model, based off video metrics.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56253, "question": "I was surprised to learn that NPAPI was still enabled in Chrome for Windows. Google dropped NPAPI support in Chrome for Linux more than a year ago.", "aSentId": 56254, "answer": "People are used to things working in Windows while Linux has a problem with plugins (they aren't supported very well). So dropping linux support is easier as it has less backlash as users are used to issues like that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56256, "question": "I wonder if this is what seems to have killed off my foscam IP camera plugin :/", "aSentId": 56257, "answer": "yes, it happened to mine", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56256, "question": "I wonder if this is what seems to have killed off my foscam IP camera plugin :/", "aSentId": 56259, "answer": "That thing sucks. Look into native applications for your OS. I use Blue Iris for all my IP cameras and have never looked back. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56262, "question": "NPAPI can be reenabled in `chrome://flags/#enable-npapi`, but the option and NPAPI will be fully removed in September.", "aSentId": 56263, "answer": "Yes, that was indeed in the post.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56264, "question": "Yes, that was indeed in the post.", "aSentId": 56265, "answer": "We're on reddit here, you probably know that no one reads the post.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56266, "question": "We're on reddit here, you probably know that no one reads the post.", "aSentId": 56267, "answer": "hell I didn't even read any of the comments. I don't even know the context of your comment. Mind catching me up? :p", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56268, "question": "hell I didn't even read any of the comments. I don't even know the context of your comment. Mind catching me up? :p", "aSentId": 56269, "answer": "Press Alt F4 to reenable NPAPI.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56262, "question": "NPAPI can be reenabled in `chrome://flags/#enable-npapi`, but the option and NPAPI will be fully removed in September.", "aSentId": 56271, "answer": "&gt; the option and NPAPI will be fully removed in September.\n\nOr they won't, the same way they weren't last time, and the same way other technologies Google said they were going to remove didn't actually get removed when it turned out that people using them matter more than wishful thinking at the Googleplex. Given that removing NPAPI completely would basically make Chrome useless as the corporate standard browser in a lot of large organisations, I certainly wouldn't bet on Google following through this time (though I wouldn't bet against it either).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56262, "question": "NPAPI can be reenabled in `chrome://flags/#enable-npapi`, but the option and NPAPI will be fully removed in September.", "aSentId": 56273, "answer": "My browser still blocks the plugins after setting the enable-npapi.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56274, "question": "My browser still blocks the plugins after setting the enable-npapi.", "aSentId": 56275, "answer": "Indeed, mine as well. I have resorted to running IE. My PC is locked down to the max so I only get whats here or what I can hack into place. Looks like Teamsite will be run under IE from hence forth.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56278, "question": "I'm working with a professor to port a course from Standard ML to F#, and we're relying on tryfsharp.org (which requires Silverlight). This is real bad news for us.", "aSentId": 56279, "answer": "Gotta love JavaScript being forced on people.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56282, "question": "I'm all for disabling that crap, but removing it completely seems excessive. ", "aSentId": 56283, "answer": "It probably simplifies the browser a bit.\n\nOtherwise you end up with all sorts of crap that you can't remove. See Windows.\n\nI don't know anything about NPAPI or PPAPI, but maybe you can write a PPAPI wrapper for NPAPI plugins?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56284, "question": "It probably simplifies the browser a bit.\n\nOtherwise you end up with all sorts of crap that you can't remove. See Windows.\n\nI don't know anything about NPAPI or PPAPI, but maybe you can write a PPAPI wrapper for NPAPI plugins?", "aSentId": 56285, "answer": "&gt; ...maybe you can write a PPAPI wrapper for NPAPI plugins?\n\nUnlikely. Part of the point of PPAPI was to remove a bunch of crazy shit from the API that has been there since Netscape 5 or whatever, undocumented, low-level, evil shit that just makes it impossible to implement the thing sanely in any browser.\n\nIf it wasn't easy to port your favorite plugin to PPAPI, I'd guess it's because your favorite plugin really does rely on enough crazy broken NPAPI nonsense that the only proper \"wrapper\" would be to load up Firefox in a Chrome plugin and run your plugin there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56286, "question": "&gt; ...maybe you can write a PPAPI wrapper for NPAPI plugins?\n\nUnlikely. Part of the point of PPAPI was to remove a bunch of crazy shit from the API that has been there since Netscape 5 or whatever, undocumented, low-level, evil shit that just makes it impossible to implement the thing sanely in any browser.\n\nIf it wasn't easy to port your favorite plugin to PPAPI, I'd guess it's because your favorite plugin really does rely on enough crazy broken NPAPI nonsense that the only proper \"wrapper\" would be to load up Firefox in a Chrome plugin and run your plugin there.", "aSentId": 56287, "answer": "Could be a closed-source but sane plugin.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56288, "question": "Could be a closed-source but sane plugin.", "aSentId": 56289, "answer": "Part of being a sane plugin means being willing and able to keep up with the times. Whether NPAPI or PPAPI, installing a plugin is one of the riskiest things you can do to a web browser, because an insecure plugin can undermine everything else the browser does to keep you safe.\n\nAnd if I'm right and it's easy to port sane plugins, then a sane closed-source plugin would've already been ported. Or, they'd at least be working on a port now, one they'd have done before you could put together some crazy NPAPI-&gt;PPAPI contraption.\n\nSo even if the plugin was easy to port (and a candidate for running in NPAPI), I'm not sure I agree that it's sane.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56290, "question": "Part of being a sane plugin means being willing and able to keep up with the times. Whether NPAPI or PPAPI, installing a plugin is one of the riskiest things you can do to a web browser, because an insecure plugin can undermine everything else the browser does to keep you safe.\n\nAnd if I'm right and it's easy to port sane plugins, then a sane closed-source plugin would've already been ported. Or, they'd at least be working on a port now, one they'd have done before you could put together some crazy NPAPI-&gt;PPAPI contraption.\n\nSo even if the plugin was easy to port (and a candidate for running in NPAPI), I'm not sure I agree that it's sane.", "aSentId": 56291, "answer": "Dead companies don't update things.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56292, "question": "Dead companies don't update things.", "aSentId": 56293, "answer": "And running unmaintained software in a browser doesn't get less horrifying insecure just because the company is dead.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56294, "question": "And running unmaintained software in a browser doesn't get less horrifying insecure just because the company is dead.", "aSentId": 56295, "answer": "Even in an intranet environment, where you implicitly trust everything anyway?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56284, "question": "It probably simplifies the browser a bit.\n\nOtherwise you end up with all sorts of crap that you can't remove. See Windows.\n\nI don't know anything about NPAPI or PPAPI, but maybe you can write a PPAPI wrapper for NPAPI plugins?", "aSentId": 56297, "answer": "Agreed. Also it will probably improve security. With a dangerous functionality such as NPAPI, even when it is disabled, the code poses a significant security risk. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56298, "question": "Agreed. Also it will probably improve security. With a dangerous functionality such as NPAPI, even when it is disabled, the code poses a significant security risk. ", "aSentId": 56299, "answer": "I don't know anything about NPAPI, why is it a security risk?\n\nI'm going to guess that it doesn't pass origin information, or something along those lines.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56300, "question": "I don't know anything about NPAPI, why is it a security risk?\n\nI'm going to guess that it doesn't pass origin information, or something along those lines.", "aSentId": 56301, "answer": "&gt; I don't know anything about NPAPI, why is it a security risk?\n\nShort version as far as I understand it is that PPAPI (Chrome's replacement for NPAPI that's used for its internal PDF viewer and version of Flash) is sandboxed where NPAPI is not.  A security flaw in a plugin only gets in to the sandbox in a PPAPI environment where a flaw in a NPAPI plugin means the attacker has control of the system at the same level as the browser and thus the user.\n\nIt's not some inherent evil in NPAPI as much as it just being a design from the days before we realized how important browser and plugin security actually was.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56302, "question": "&gt; I don't know anything about NPAPI, why is it a security risk?\n\nShort version as far as I understand it is that PPAPI (Chrome's replacement for NPAPI that's used for its internal PDF viewer and version of Flash) is sandboxed where NPAPI is not.  A security flaw in a plugin only gets in to the sandbox in a PPAPI environment where a flaw in a NPAPI plugin means the attacker has control of the system at the same level as the browser and thus the user.\n\nIt's not some inherent evil in NPAPI as much as it just being a design from the days before we realized how important browser and plugin security actually was.", "aSentId": 56303, "answer": "I mostly agree, but it's a bit of a stretch to say NPAPI was really designed. It was originally a rather hastily developed glue layer used to embed Java in Netscape. My recollection is that it grew beyond that because Adobe had their nascent Acrobat Reader that they wanted to embed as well. So, they reverse engineered and adopted the same embedding layer. Then we had the explosion of plugins in the 90s, which led to some degree of standardization, but there's only so much standardization possible for an embedding layer that was originally intended as just an internal API for monkey patching something into the browser.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56304, "question": "I mostly agree, but it's a bit of a stretch to say NPAPI was really designed. It was originally a rather hastily developed glue layer used to embed Java in Netscape. My recollection is that it grew beyond that because Adobe had their nascent Acrobat Reader that they wanted to embed as well. So, they reverse engineered and adopted the same embedding layer. Then we had the explosion of plugins in the 90s, which led to some degree of standardization, but there's only so much standardization possible for an embedding layer that was originally intended as just an internal API for monkey patching something into the browser.", "aSentId": 56305, "answer": "That sounds pretty reasonable, I certainly wasn't intending to imply any quality with my use of the word \"design\".  One way or another the general point that NPAPI does need to be replaced is true.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56300, "question": "I don't know anything about NPAPI, why is it a security risk?\n\nI'm going to guess that it doesn't pass origin information, or something along those lines.", "aSentId": 56307, "answer": "Nearly every chrome exploit for the past 5 years has used NPAPI in one way or another to escape from the browser sandbox.  The only counter examples I can think of off the top of my head are the futex bug in Linux (which could be exploited directly from a NaCl sandbox), and maybe the TTF bugs in Windows that were able to directly exploit the kernel from inside the sandbox, but of course those relied on some very specific types of kernel bugs.\n\nNPAPI lets you call native libraries from javascript, so the final stage in a typical chrome exploit is to trick the browser into loading a malicious NPAPI plugin that just execs code sent to it, and then the exploit can just compromise the host reliably without needing to worry about any protections or inconsistencies.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56308, "question": "Nearly every chrome exploit for the past 5 years has used NPAPI in one way or another to escape from the browser sandbox.  The only counter examples I can think of off the top of my head are the futex bug in Linux (which could be exploited directly from a NaCl sandbox), and maybe the TTF bugs in Windows that were able to directly exploit the kernel from inside the sandbox, but of course those relied on some very specific types of kernel bugs.\n\nNPAPI lets you call native libraries from javascript, so the final stage in a typical chrome exploit is to trick the browser into loading a malicious NPAPI plugin that just execs code sent to it, and then the exploit can just compromise the host reliably without needing to worry about any protections or inconsistencies.", "aSentId": 56309, "answer": "The recent Pwn2Own sandbox breakout was due to a Windows kernel bug, too. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56310, "question": "The recent Pwn2Own sandbox breakout was due to a Windows kernel bug, too. ", "aSentId": 56311, "answer": "Yup, pretty sure it was another TTF bug.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56284, "question": "It probably simplifies the browser a bit.\n\nOtherwise you end up with all sorts of crap that you can't remove. See Windows.\n\nI don't know anything about NPAPI or PPAPI, but maybe you can write a PPAPI wrapper for NPAPI plugins?", "aSentId": 56313, "answer": "Yo Dawg... !", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56315, "question": "&gt; Otherwise you end up with all sorts of crap that you can't remove. See Windows.\n\nLike the C in C++? &lt;*ducks and runs for cover*&gt;", "aSentId": 56316, "answer": "If you don't like the C in C++, you're welcome to use another language. But including C is one of the main points of C++. (including a slightly modified C, for pedants)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56317, "question": "If you don't like the C in C++, you're welcome to use another language. But including C is one of the main points of C++. (including a slightly modified C, for pedants)", "aSentId": 56318, "answer": "Including C in the way he did was a very pragmatic decision -- in a very pragmatic era of computing.\n\nWe cant criticize him for design decisions he made 35+ years ago -- then again, we can't repaint such nascent decisions as great ideas now either.\n\nC++ would in fact be better as a language with a more holistic design, IMO.\n\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56282, "question": "I'm all for disabling that crap, but removing it completely seems excessive. ", "aSentId": 56321, "answer": "Eventually deprecated features need to be removed. Otherwise you end up with Windows NT still having code for the cassette tape port. (I don't remember if they ever got rid of it before XP but I wouldn't be surprised if not.)\n\nChrome has been telling people for years to stop using NPAPI. It's not like this is something cooked up six weeks ago and will be pushed to release whether anyone is ready or not.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56322, "question": "Eventually deprecated features need to be removed. Otherwise you end up with Windows NT still having code for the cassette tape port. (I don't remember if they ever got rid of it before XP but I wouldn't be surprised if not.)\n\nChrome has been telling people for years to stop using NPAPI. It's not like this is something cooked up six weeks ago and will be pushed to release whether anyone is ready or not.", "aSentId": 56323, "answer": "Why get rid of it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56324, "question": "Why get rid of it?", "aSentId": 56325, "answer": "Because it makes the code more maintainable would be the most important reason. This in turn will help developing new features and performance improvements. I'd guess with something like NPAPI having very deep access to browser internals removing it is lifting a huge burden off the code base", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56326, "question": "Because it makes the code more maintainable would be the most important reason. This in turn will help developing new features and performance improvements. I'd guess with something like NPAPI having very deep access to browser internals removing it is lifting a huge burden off the code base", "aSentId": 56327, "answer": "Sure, but is the windows tape deck code really in the way?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56328, "question": "Sure, but is the windows tape deck code really in the way?", "aSentId": 56329, "answer": "I'm waiting for the Javascript API. We've got WebGL and WebAudio, why not Web8Track?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56330, "question": "I'm waiting for the Javascript API. We've got WebGL and WebAudio, why not Web8Track?", "aSentId": 56331, "answer": "Reel2Reel.js confirmed ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56328, "question": "Sure, but is the windows tape deck code really in the way?", "aSentId": 56333, "answer": "From localtoat's link:\n\n&gt; At the low end, there is the argument that if it's not in the way, there's no harm. At the high end, Knight Capital went bankrupt after losing $400 million in 45 minutes after eight year old deactivated code was accidentally reactivated. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56334, "question": "From localtoat's link:\n\n&gt; At the low end, there is the argument that if it's not in the way, there's no harm. At the high end, Knight Capital went bankrupt after losing $400 million in 45 minutes after eight year old deactivated code was accidentally reactivated. ", "aSentId": 56335, "answer": "That's an argument for making sure deactivated stuff stays deactivated, not removing it outright. Bet I could find some stuff in production on that server that's *new* that would cost at least that much, that fast, if mishandled.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56334, "question": "From localtoat's link:\n\n&gt; At the low end, there is the argument that if it's not in the way, there's no harm. At the high end, Knight Capital went bankrupt after losing $400 million in 45 minutes after eight year old deactivated code was accidentally reactivated. ", "aSentId": 56337, "answer": "The problem is that old code was supposed to be replaced.  \nThey botched updating their servers and older code ran in place of the newer code.\n\nIt wasn't a case of unused code in their code base running rampant, they pushed an update to 8 nodes, and one of the nodes didn't take the update.  They didn't validate that the update was successful so one of their nodes started with the wrong code and caused their 400 million in losses.\n\nBasically that was gross incompetence, not a case of older unused code in your code base sneaking up on you.\n\nIt is good wall street told them to fuck off and pay for the trades.  Other firms that were being that stupid would have quickly adopted simple validation before turning a server on.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56322, "question": "Eventually deprecated features need to be removed. Otherwise you end up with Windows NT still having code for the cassette tape port. (I don't remember if they ever got rid of it before XP but I wouldn't be surprised if not.)\n\nChrome has been telling people for years to stop using NPAPI. It's not like this is something cooked up six weeks ago and will be pushed to release whether anyone is ready or not.", "aSentId": 56339, "answer": "If you tell plugin makers you are removing the plugin API, what are they supposed to do about it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56340, "question": "If you tell plugin makers you are removing the plugin API, what are they supposed to do about it?", "aSentId": 56341, "answer": "Take a flying leap into the 20th century, probably.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56342, "question": "Take a flying leap into the 20th century, probably.", "aSentId": 56343, "answer": "Does Google still use a plugin for Hangouts?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56344, "question": "Does Google still use a plugin for Hangouts?", "aSentId": 56345, "answer": "I don't know.  I would have expected that, of all things, to be built on Modern Technology(TM).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56347, "question": "I still wish they had done off by default instead; the native client is just too limited. You're essentially limited to the feature set of javascript, but you can write the code in C++ instead - whoop-de-doo. If I wanted to write JS, I'd write JS; you write plugins if you want to extend the capabilities of the browser.\n\nAnd now that's impossible. ", "aSentId": 56348, "answer": "They did.\n\nI just reenabled it on chrome 42 by going to chrome://flags \n\nHopefully the transition period gets most players to migrate. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56349, "question": "They did.\n\nI just reenabled it on chrome 42 by going to chrome://flags \n\nHopefully the transition period gets most players to migrate. ", "aSentId": 56350, "answer": "I meant in the long term.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56347, "question": "I still wish they had done off by default instead; the native client is just too limited. You're essentially limited to the feature set of javascript, but you can write the code in C++ instead - whoop-de-doo. If I wanted to write JS, I'd write JS; you write plugins if you want to extend the capabilities of the browser.\n\nAnd now that's impossible. ", "aSentId": 56352, "answer": "I'd write code in C++ before JS any day of the week. JS is a horrible language and it needs to die in a fire.\n\nThat said, NaCl is an atrociously stupid idea. You can't hope to reliably sandbox something you don't control (the CPU instruction set). And it's proprietary to Google. And it's not portable across machine architectures. ActiveX 2.0, in a nutshell.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56347, "question": "I still wish they had done off by default instead; the native client is just too limited. You're essentially limited to the feature set of javascript, but you can write the code in C++ instead - whoop-de-doo. If I wanted to write JS, I'd write JS; you write plugins if you want to extend the capabilities of the browser.\n\nAnd now that's impossible. ", "aSentId": 56354, "answer": "Have a look at emscripten.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56355, "question": "Have a look at emscripten.", "aSentId": 56356, "answer": "I think you misunderstand me. I want to write native code because I want to do cool shit in the browser that hasn't been done before. I want features that haven't yet been anticipated in the native client (or JavaScript) API.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56357, "question": "I think you misunderstand me. I want to write native code because I want to do cool shit in the browser that hasn't been done before. I want features that haven't yet been anticipated in the native client (or JavaScript) API.", "aSentId": 56358, "answer": "The issue was there was more security holes then cool shit going on. We just don't have the security model at the OS level to sandbox native code short of separate user accounts. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56359, "question": "The issue was there was more security holes then cool shit going on. We just don't have the security model at the OS level to sandbox native code short of separate user accounts. ", "aSentId": 56360, "answer": "Which is why off-by-default makes sense.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56357, "question": "I think you misunderstand me. I want to write native code because I want to do cool shit in the browser that hasn't been done before. I want features that haven't yet been anticipated in the native client (or JavaScript) API.", "aSentId": 56362, "answer": "How would you secure such a system?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56363, "question": "How would you secure such a system?", "aSentId": 56364, "answer": "I think he just wants to write desktop applications lol.\n\n\"I want to build a program. I want it to do cool things that you can't do in a browser. Maybe I should design it for browsers? Urgh, these browsers are so limiting.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56365, "question": "I think he just wants to write desktop applications lol.\n\n\"I want to build a program. I want it to do cool things that you can't do in a browser. Maybe I should design it for browsers? Urgh, these browsers are so limiting.\"", "aSentId": 56366, "answer": "Haha, this Flash thing is dumb. I think Macromedia just wants to write desktop applications lol.\n\nMany of the modern browser features you enjoy today are a result of innovators pushing the platform forward with NPAPI plugins that extended browser functionality to do things it was not previously capable of.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56367, "question": "Haha, this Flash thing is dumb. I think Macromedia just wants to write desktop applications lol.\n\nMany of the modern browser features you enjoy today are a result of innovators pushing the platform forward with NPAPI plugins that extended browser functionality to do things it was not previously capable of.", "aSentId": 56368, "answer": "I'm not seeing your point.\n\nExactly what do you want to do that you can't do with a browser application, and that wouldn't inherently open up huge security flaws or break cross-platform compatibility immediately?\n\nFor the record we have been trying to deprecate Flash for years. It has created more problems than it solved and now it's time to die.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56369, "question": "I'm not seeing your point.\n\nExactly what do you want to do that you can't do with a browser application, and that wouldn't inherently open up huge security flaws or break cross-platform compatibility immediately?\n\nFor the record we have been trying to deprecate Flash for years. It has created more problems than it solved and now it's time to die.", "aSentId": 56370, "answer": "&gt; break cross-platform compatibility immediately?\n\nA little ironic, consider Google is killing a broadly used cross-platform standard and replacing it with their own proprietary one.\n\nI'm not trying to do anything in particular - everything I had on NPAPI has been replaced. The delayed roll-out schedule was helpful for that. There was raw sockets years ago but there's an API now.  And obviously NPAPI had to be locked down more than it was.\n\nI'm just defending in principle because it has been an effective testbed for new browser functionality in the past, and I'm not convinced that its role was over. We'll see, I guess.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56357, "question": "I think you misunderstand me. I want to write native code because I want to do cool shit in the browser that hasn't been done before. I want features that haven't yet been anticipated in the native client (or JavaScript) API.", "aSentId": 56372, "answer": "Such as...?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56355, "question": "Have a look at emscripten.", "aSentId": 56374, "answer": "Can't help but wince at that word. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56375, "question": "Can't help but wince at that word. ", "aSentId": 56376, "answer": "Haha :D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56378, "question": "Silverlight is affected also.  Had to switch a guy over to Firefox this week.", "aSentId": 56379, "answer": "Honestly, I think it's time Chrome saw some real competition. Glad to hear about people switching to Firefox. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56380, "question": "Honestly, I think it's time Chrome saw some real competition. Glad to hear about people switching to Firefox. ", "aSentId": 56381, "answer": "It's a shame they aren't getting users on overall merit, but instead one missing feature.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56382, "question": "It's a shame they aren't getting users on overall merit, but instead one missing feature.", "aSentId": 56383, "answer": "I use FF exclusively.  \n\nChrome used to be faster/easier so I put that on user machines as an alternate browser.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56384, "question": "I use FF exclusively.  \n\nChrome used to be faster/easier so I put that on user machines as an alternate browser.\n\n", "aSentId": 56385, "answer": "You know, I tried to go back to FF a year or so ago, but their menus (or lack thereof) are just terrible.\n\nWithout a good reason to stick with it, that was enough to push me away. Just too awkward for what I saw as a small benefit at the time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56387, "question": "So, in the release of Chrome 42 they turned off Java and Silverlight. I wonder if the version number has any significance to Google?", "aSentId": 56388, "answer": "/r/conspiracy", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56389, "question": "/r/conspiracy", "aSentId": 56390, "answer": "Nah, I was thinking more as a reference to Hitchhikers Guide. 42 = the answer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56391, "question": "Nah, I was thinking more as a reference to Hitchhikers Guide. 42 = the answer.", "aSentId": 56392, "answer": "I got it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56395, "question": "Nobody would care if Google offered a viable alternative, but for many things, the support just isn't up to par yet - see real time video, unity and 3d in general, and specialized printers, as examples.\n\nNPAPI needs to go away, but while we wait on html5 to catch up, we'll just recommend to our customers to use a browser with NPAPI support. ", "aSentId": 56396, "answer": "The viable alternatives are PPAPI (architecture dependent native code) and PNaCl (architecture independent). They're both sandboxed so only the Pepper APIs are available rather than unconstrained access to the system, but it's more than enough for stuff like Unity and unprivileged Java applets. It isn't enough for privileged Java applets and similar plugins requiring lots of access to the system. Dropping NPAPI support can be interpreted as dropping *unsandboxed* plugin support. Plugin support is still there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56397, "question": "The viable alternatives are PPAPI (architecture dependent native code) and PNaCl (architecture independent). They're both sandboxed so only the Pepper APIs are available rather than unconstrained access to the system, but it's more than enough for stuff like Unity and unprivileged Java applets. It isn't enough for privileged Java applets and similar plugins requiring lots of access to the system. Dropping NPAPI support can be interpreted as dropping *unsandboxed* plugin support. Plugin support is still there.", "aSentId": 56398, "answer": "But it involves re-writing a plugin. That's now twice as many players that I have to support, just for Chrome. It's just not worth it when every other browser supports NPAPI still, and a viable JS alternative is coming soon. I'd rather give Chrome users an error message and direct them to Firefox than write a plugin, for 1 browser, that will probably only be needed for a year.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56399, "question": "But it involves re-writing a plugin. That's now twice as many players that I have to support, just for Chrome. It's just not worth it when every other browser supports NPAPI still, and a viable JS alternative is coming soon. I'd rather give Chrome users an error message and direct them to Firefox than write a plugin, for 1 browser, that will probably only be needed for a year.", "aSentId": 56400, "answer": "It involves porting from NPAPI and direct usage of OS APIs to the Pepper APIs, not rewriting all of the code. There aren't 3 distinct Flash implementations just because it supports ActiveX, NPAPI and PPAPI. Nearly all of the code is shared.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56401, "question": "It involves porting from NPAPI and direct usage of OS APIs to the Pepper APIs, not rewriting all of the code. There aren't 3 distinct Flash implementations just because it supports ActiveX, NPAPI and PPAPI. Nearly all of the code is shared.", "aSentId": 56402, "answer": "And in an ideal world, you'd be 100% correct. But in a real world, it just doesn't make business sense to do it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56403, "question": "And in an ideal world, you'd be 100% correct. But in a real world, it just doesn't make business sense to do it.", "aSentId": 56404, "answer": "There's nothing subjective about the statement that you're replying to. I didn't say anything about whether they should have supported it, only that they could have done it so I'm not sure what you're claiming is incorrect. If you *want* me to talk about the business case, I can do that.\n\nSupporting Pepper means adding another platform to the code abstracting across operating systems and browsers. It's comparable to the work necessary to support a platform like Linux. It's entirely up to them if the large marketshare of Chrome (including ChromeOS) users is important to them. It's pretty easy to make the business case that FreeBSD is not worthy of support, but how about 10% of the laptop market?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56397, "question": "The viable alternatives are PPAPI (architecture dependent native code) and PNaCl (architecture independent). They're both sandboxed so only the Pepper APIs are available rather than unconstrained access to the system, but it's more than enough for stuff like Unity and unprivileged Java applets. It isn't enough for privileged Java applets and similar plugins requiring lots of access to the system. Dropping NPAPI support can be interpreted as dropping *unsandboxed* plugin support. Plugin support is still there.", "aSentId": 56406, "answer": "Can you call into DirectX from PPAPI?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56407, "question": "Can you call into DirectX from PPAPI?", "aSentId": 56408, "answer": "No, as that would be incompatible with the level of sandboxing employed and the Pepper API doesn't vary between host platforms. It exposes an OpenGL ES 2 API that's proxied to and validated by the broker. It's implemented with Direct3D on Windows rather than the OpenGL drivers, but it's an implementation detail.\n\nThe Pepper API is essentially the set of internal APIs used to implement web standards. OpenGL ES 2 is the basis of WebGL, although WebGL only exposes a subset of the functionality.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56409, "question": "No, as that would be incompatible with the level of sandboxing employed and the Pepper API doesn't vary between host platforms. It exposes an OpenGL ES 2 API that's proxied to and validated by the broker. It's implemented with Direct3D on Windows rather than the OpenGL drivers, but it's an implementation detail.\n\nThe Pepper API is essentially the set of internal APIs used to implement web standards. OpenGL ES 2 is the basis of WebGL, although WebGL only exposes a subset of the functionality.", "aSentId": 56410, "answer": "I guess that kinda explains why Unity didn't go this route then. Since it's basically as capable as WebGL, but is supported by chrome only, so it's a nobrainer to choose WebGL instead.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56411, "question": "I guess that kinda explains why Unity didn't go this route then. Since it's basically as capable as WebGL, but is supported by chrome only, so it's a nobrainer to choose WebGL instead.", "aSentId": 56412, "answer": "The advantage of a PPAPI plugin is significantly higher performance and the ability to use features like SIMD, threads and 64-bit integers that aren't available in JavaScript. Even proper 32-bit integers require an ES6 feature (`imul`). The Pepper API is not much more capable than the web standards built upon the same code though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56414, "question": "Google Music has audio quality issues with PPAPI flash. Lots of audio crackling that makes the service unusable. You'd think they'd fix this first before making their music service essentially useless.", "aSentId": 56415, "answer": "You can switch to HTML5 for Google music. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56419, "question": "Oh man, the number of complaints I'm going to see when that Sharepoint plugin stops working :(", "aSentId": 56420, "answer": "I'm currently getting fucked by this. It's like a game of chicken, is Microsoft going to have to make the plugin work in Chrome or will Chrome have to keep supporting the plugin. It nearly made me vomit having to tell our customers to switch back to IE. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56423, "question": "PPAPI Flash doesn't support adding host exception via control panel.\nI've just went through this shit when I used Chrome to implement a Kiosk on non-internet device.\n\nThe solution is to enable NPAPI Flash instead.\n\nNow they want to disable it.\n\nPlease implement your plugin correctly before shutting off ability to use the other one.", "aSentId": 56424, "answer": "It's almost like they're using their market position to lock out competing products.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56425, "question": "It's almost like they're using their market position to lock out competing products.", "aSentId": 56426, "answer": "Anyone who's dissatisfied with their \"market position\" is free to take the free open source code and do whatever the hell they please with it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56428, "question": "Yeah this fucking sucks because we have a major component of our enterprise app written in silver light. I hate the fact that I'm probably going to have to convert it to a wpf app. ", "aSentId": 56429, "answer": "Our company isn't even bothering. Probably just removing chrome as a supported browser as we are too busy with other stuff to convert the app. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56430, "question": "Our company isn't even bothering. Probably just removing chrome as a supported browser as we are too busy with other stuff to convert the app. ", "aSentId": 56431, "answer": "Same. I'm actually in the process of writing the error message right now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56432, "question": "Same. I'm actually in the process of writing the error message right now.", "aSentId": 56433, "answer": "Same here... very small shop who took a very long time to write a very large app. Conversion isn't going to happen. I would love to do it, but the resources simply aren't there, and neither are the financial resources to bring more people in to get it done in a reasonable amount of time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56428, "question": "Yeah this fucking sucks because we have a major component of our enterprise app written in silver light. I hate the fact that I'm probably going to have to convert it to a wpf app. ", "aSentId": 56435, "answer": "This was announced in September of 2013.  If your company uses Chrome and depends on NPAPI someone wasn't paying attention for the last two years.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56436, "question": "This was announced in September of 2013.  If your company uses Chrome and depends on NPAPI someone wasn't paying attention for the last two years.", "aSentId": 56437, "answer": "We actually didn't notice at first, we've been aware since mid 2014. It's not easy to just up and re-write a major portion of the application. And to be honest for how we use silver light there's really not any good alternatives, I really didn't want something that had to installed on the desktop, buy we don't have much choice with the feature set we have to provide. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56438, "question": "We actually didn't notice at first, we've been aware since mid 2014. It's not easy to just up and re-write a major portion of the application. And to be honest for how we use silver light there's really not any good alternatives, I really didn't want something that had to installed on the desktop, buy we don't have much choice with the feature set we have to provide. ", "aSentId": 56439, "answer": "I'm a major proponent of web applications, but there are some things that are just better done as standard applications.  These days I feel pretty comfortable saying that if you need a plugin you're probably trying to put a square peg in to the round hole of a web browser.\n\nIsn't .net able to target all major platforms these days?  Or can Silverlight just be built as a binary that includes the runtime and acts like a normal program like Flash could?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56440, "question": "I'm a major proponent of web applications, but there are some things that are just better done as standard applications.  These days I feel pretty comfortable saying that if you need a plugin you're probably trying to put a square peg in to the round hole of a web browser.\n\nIsn't .net able to target all major platforms these days?  Or can Silverlight just be built as a binary that includes the runtime and acts like a normal program like Flash could?", "aSentId": 56441, "answer": "I don't completely disagree and I wasn't the lead on this app when it was first designed but I can understand their decision to go with Silverlight at the time.\n\nWe have an application that requires offline capabilities because many of our locations don't have completely wifi access.  This part of the application also requires large amounts of local storage per user which silverlight handles really well.  Many of these sites have little to no IT support so having an application that doesn't require installs or .Net runtimes and can be completely launched, updated, installed from the web site is really appealing.  Having an app that has to be installed per desktop etc, is so much less convenient and I can already feel the support calls rolling in from clueless users.\n\nSilverlight compiles to a .XAP file which runs completely standalone inside the silverlight runtime.  People give it a lot of hate but it really is pretty damn good at certain things that the web just isn't yet.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56442, "question": "I don't completely disagree and I wasn't the lead on this app when it was first designed but I can understand their decision to go with Silverlight at the time.\n\nWe have an application that requires offline capabilities because many of our locations don't have completely wifi access.  This part of the application also requires large amounts of local storage per user which silverlight handles really well.  Many of these sites have little to no IT support so having an application that doesn't require installs or .Net runtimes and can be completely launched, updated, installed from the web site is really appealing.  Having an app that has to be installed per desktop etc, is so much less convenient and I can already feel the support calls rolling in from clueless users.\n\nSilverlight compiles to a .XAP file which runs completely standalone inside the silverlight runtime.  People give it a lot of hate but it really is pretty damn good at certain things that the web just isn't yet.", "aSentId": 56443, "answer": "&gt; so having an application that doesn't require installs \n\nYou don't have to install Silverlight to use it? This is news to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56444, "question": "&gt; so having an application that doesn't require installs \n\nYou don't have to install Silverlight to use it? This is news to me.", "aSentId": 56445, "answer": "You do but it's utterly simple, requires almost no security permissions on the machines, works flawlessly, auto updated, no reboot, no app for us to handle, no .NET runtimes.  It just worked.  Not to mention the vast majority of people already have it because of netflix or some other site that required it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56438, "question": "We actually didn't notice at first, we've been aware since mid 2014. It's not easy to just up and re-write a major portion of the application. And to be honest for how we use silver light there's really not any good alternatives, I really didn't want something that had to installed on the desktop, buy we don't have much choice with the feature set we have to provide. ", "aSentId": 56447, "answer": "&gt; We actually didn't notice at first, we've been aware since mid 2014. It's not easy to just up and re-write a major portion of the application. And to be honest for how we use silver light there's really not any good alternatives, I really didn't want something that had to installed on the desktop, buy we don't have much choice with the feature set we have to provide.\n\nwhy not just use another browser for that specific app?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56448, "question": "&gt; We actually didn't notice at first, we've been aware since mid 2014. It's not easy to just up and re-write a major portion of the application. And to be honest for how we use silver light there's really not any good alternatives, I really didn't want something that had to installed on the desktop, buy we don't have much choice with the feature set we have to provide.\n\nwhy not just use another browser for that specific app?", "aSentId": 56449, "answer": "Well our application is installed at several 100 locations all over the country and we don't have complete control over what browsers etc people use.  We actually started having people move to Chrome a few years ago because we wanted to push forward with some newer JS/HTML5 things in the application and many of the sites couldn't get away from IE8 because they still had internal apps that required it.  It's not a great situation to be in.  I know why Chrome is doing what they are doing but I don't have to like it.  Silverlight really is pretty good at certain things, and it can definitely not easily be replaced with completely web based tech for some things.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56438, "question": "We actually didn't notice at first, we've been aware since mid 2014. It's not easy to just up and re-write a major portion of the application. And to be honest for how we use silver light there's really not any good alternatives, I really didn't want something that had to installed on the desktop, buy we don't have much choice with the feature set we have to provide. ", "aSentId": 56451, "answer": "Change is often difficult but rarely avoidable.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56452, "question": "Change is often difficult but rarely avoidable.", "aSentId": 56453, "answer": "Agreed, I'm not arguing Silverlight shouldn't die, just that right now there's really nothing that can completely replace what it does that isn't a desktop application.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56454, "question": "Agreed, I'm not arguing Silverlight shouldn't die, just that right now there's really nothing that can completely replace what it does that isn't a desktop application.", "aSentId": 56455, "answer": "I'm curious, what exact features of Silverlight do you use which isn't possible to do with a pure HTML5 web application?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56456, "question": "I'm curious, what exact features of Silverlight do you use which isn't possible to do with a pure HTML5 web application?", "aSentId": 56457, "answer": "2gb of encrypted offline storage per user is probably the biggest one. Out of browser experience. Offline mode with full uninterrupted functionally. Single compiled xap file which can be easily updated and deployed without having to update any other portions of the application. Like I said silverlight gets a lot of hate but it can do some pretty cool stuff. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56456, "question": "I'm curious, what exact features of Silverlight do you use which isn't possible to do with a pure HTML5 web application?", "aSentId": 56459, "answer": "Decimal-accurate math, for a start.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56456, "question": "I'm curious, what exact features of Silverlight do you use which isn't possible to do with a pure HTML5 web application?", "aSentId": 56461, "answer": "It's just a ton of work and a different developer skillset.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56436, "question": "This was announced in September of 2013.  If your company uses Chrome and depends on NPAPI someone wasn't paying attention for the last two years.", "aSentId": 56463, "answer": "Sometimes a company has other priorities than keeping all it's IT \"up to standard\".  ...like run a business", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56464, "question": "Sometimes a company has other priorities than keeping all it's IT \"up to standard\".  ...like run a business", "aSentId": 56465, "answer": "Your first failing was choosing Silverlight.  Today, NPAPI is going away.  But MS has already signaled that all of Silverlight is going away.  So in another two years, you'll have that problem.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56464, "question": "Sometimes a company has other priorities than keeping all it's IT \"up to standard\".  ...like run a business", "aSentId": 56467, "answer": "Most businesses these days depend on their IT infrastructure.  Not keeping it up to date is like not maintaining machinery or facilities.  Sure it may save you some money in the short term, but long term it will add up and you'll have a really expensive problem in the future.  It's called technical debt.  Small changes regularly are a lot easier to deal with than big changes every so many years.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56468, "question": "Most businesses these days depend on their IT infrastructure.  Not keeping it up to date is like not maintaining machinery or facilities.  Sure it may save you some money in the short term, but long term it will add up and you'll have a really expensive problem in the future.  It's called technical debt.  Small changes regularly are a lot easier to deal with than big changes every so many years.", "aSentId": 56469, "answer": "Great philosophy, but redeveloping an application after the developers are gone in a different language is far more expensive than \"small changes\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56470, "question": "Great philosophy, but redeveloping an application after the developers are gone in a different language is far more expensive than \"small changes\".", "aSentId": 56471, "answer": "Yeah, that's the risk you take when developing something that depends on proprietary plugins to work.  Normally keeping up to date is not hard, but if something you depend on doesn't keep up to date you end up screwed.\n\nUnfortunately this is all too common in business environments, see the fact that still to this day a lot of industry-specific applications are releasing new versions that require UAC to be disabled or don't support 64 bit platforms or only work in one specific web browser that you can never update.  In 2015 these vendors still consider that acceptable, because the people buying from them either don't care or don't have a choice.\n\nSee how much fun people had with unsigned applets, and that doesn't even require any code changes.  All anyone needed to do is sign and re-release the same exact applets, yet somehow that was still a big deal.\n\nIn the internet-connected era updates are not a choice, they're a responsibility.  If something in your infrastructure can't be updated it should be considered a critical problem.\n\n\nWhile for obvious reasons I don't do this willy-nilly, I'm confident that I could log on to any of my servers right now and do \"apt-get update; apt-get upgrade\" expecting everything to work fine.  Likewise for \"yum update\" or Windows Update on the few Cent or Win boxes I still have.  Heartbleed, shellshock, and the like necessitated nothing more than a quick update of my test server followed by scheduling an emergency maintenance window for the services that needed to restart.  It's not hard to build an infrastructure that can keep up with real-world threats, you just have to keep that in mind when adding parts to it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56472, "question": "Yeah, that's the risk you take when developing something that depends on proprietary plugins to work.  Normally keeping up to date is not hard, but if something you depend on doesn't keep up to date you end up screwed.\n\nUnfortunately this is all too common in business environments, see the fact that still to this day a lot of industry-specific applications are releasing new versions that require UAC to be disabled or don't support 64 bit platforms or only work in one specific web browser that you can never update.  In 2015 these vendors still consider that acceptable, because the people buying from them either don't care or don't have a choice.\n\nSee how much fun people had with unsigned applets, and that doesn't even require any code changes.  All anyone needed to do is sign and re-release the same exact applets, yet somehow that was still a big deal.\n\nIn the internet-connected era updates are not a choice, they're a responsibility.  If something in your infrastructure can't be updated it should be considered a critical problem.\n\n\nWhile for obvious reasons I don't do this willy-nilly, I'm confident that I could log on to any of my servers right now and do \"apt-get update; apt-get upgrade\" expecting everything to work fine.  Likewise for \"yum update\" or Windows Update on the few Cent or Win boxes I still have.  Heartbleed, shellshock, and the like necessitated nothing more than a quick update of my test server followed by scheduling an emergency maintenance window for the services that needed to restart.  It's not hard to build an infrastructure that can keep up with real-world threats, you just have to keep that in mind when adding parts to it.", "aSentId": 56473, "answer": "tldr", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56436, "question": "This was announced in September of 2013.  If your company uses Chrome and depends on NPAPI someone wasn't paying attention for the last two years.", "aSentId": 56475, "answer": "We were paying attention; but there is no alternative.\n\nWe have a 750,000 like CAD application, that uses GDI, DirectX, and the widget library provided by Delphi (Visual Component Library).\n\nThere is no alternative, except continuing to send the user binary code. It's a shame we have to lose usability in the process.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56476, "question": "We were paying attention; but there is no alternative.\n\nWe have a 750,000 like CAD application, that uses GDI, DirectX, and the widget library provided by Delphi (Visual Component Library).\n\nThere is no alternative, except continuing to send the user binary code. It's a shame we have to lose usability in the process.", "aSentId": 56477, "answer": "&gt;There is no alternative\n\nJavascript? GDI, DirectX and Delphi are all single-vendor, proprietary technologies. They're not future-proof by definition.\n\nAlso, what's the point of the browser if those other technologies bind your product to one platform anyway?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56478, "question": "&gt;There is no alternative\n\nJavascript? GDI, DirectX and Delphi are all single-vendor, proprietary technologies. They're not future-proof by definition.\n\nAlso, what's the point of the browser if those other technologies bind your product to one platform anyway?", "aSentId": 56479, "answer": "Javascript?\n\nI really don't enjoy the idea of having to write an entire widget library, from scratch, using Canvas.\n\n&gt; Also, what's the point of the browser if those other technologies bind your product to one platform anyway?\n\nThe browser is the delivery channel for the real application.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56428, "question": "Yeah this fucking sucks because we have a major component of our enterprise app written in silver light. I hate the fact that I'm probably going to have to convert it to a wpf app. ", "aSentId": 56481, "answer": "Could be worse. You could have just spent the last year rewriting it in HTML5/JS and pulling out your hair because it so much more difficult due to the missing/incomplete/incompatible features and utterly retarded programming model of Javascript. \n\n/At least I got paid real good.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56482, "question": "Could be worse. You could have just spent the last year rewriting it in HTML5/JS and pulling out your hair because it so much more difficult due to the missing/incomplete/incompatible features and utterly retarded programming model of Javascript. \n\n/At least I got paid real good.", "aSentId": 56483, "answer": "They must've paid you a king's ransom to make it worth your sanity to deal with JavaScript.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56484, "question": "They must've paid you a king's ransom to make it worth your sanity to deal with JavaScript.", "aSentId": 56485, "answer": "We're about to hit 1MLOC in the next few weeks or so. It's unbelievable how big of a clusterfuck this sunsetting of NPAPI is. I have to have almost daily meetings with bigwigs trying to explain to them \"No, Javascript/HTML5 currently cannot support that feature that Silverlight has had for almost 10 years now and that our customers sorely depend upon.\"\n\nAll this move is proving to companies over the world is: Google doesn't give a shit about your backwards compatibility. Don't trust them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56486, "question": "We're about to hit 1MLOC in the next few weeks or so. It's unbelievable how big of a clusterfuck this sunsetting of NPAPI is. I have to have almost daily meetings with bigwigs trying to explain to them \"No, Javascript/HTML5 currently cannot support that feature that Silverlight has had for almost 10 years now and that our customers sorely depend upon.\"\n\nAll this move is proving to companies over the world is: Google doesn't give a shit about your backwards compatibility. Don't trust them.", "aSentId": 56487, "answer": "Is there some reason the app can't run outside the browser?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56488, "question": "Is there some reason the app can't run outside the browser?", "aSentId": 56489, "answer": "Convenience, ease of use, ease of deployment, portability, multi platform, etc.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56490, "question": "Convenience, ease of use, ease of deployment, portability, multi platform, etc.", "aSentId": 56491, "answer": "Silverlight is neither portable nor multi-platform, and it's only easy to deploy because it comes with Windows.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56493, "question": "We have a huge dependency on Teamsite which has a dependency on a Java plugin which is dependent on NPAPI. \n\nWoop Woop! Dependency chains! Looks like we are removing Chrome as a support browser... what a fucking mess.", "aSentId": 56494, "answer": "I feel your pain, like I don't have anything else to work on! ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56496, "question": "What did silverlight really buy you? It's an enterprise app after all...", "aSentId": 56497, "answer": "2gb of encrypted offline storage per user is probably the biggest one. Out of browser experience. Offline mode with full uninterrupted functionally. Single compiled xap file which can be easily updated and deployed without having to update any other portions of the application. Like I said silverlight gets a lot of hate but it can do some pretty cool stuff.\n\nOur application is in daily use at 100s of locations and I really don't have a single bad thing to say about Silverlight, it's really worked perfectly for us.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56499, "question": "Probably should anyway. Browser-based apps suck.", "aSentId": 56500, "answer": "Completely agree, not to mention our application is healthcare related so I just don't trust a web browser to this part of our application.  Especially some kind of JS written offline component.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56502, "question": "This is super annoying for me. I run a website that relies on the Garmin Connect plugin to upload Garmin maps to GPS's for my sports club. Now that Google is disabling all plugins, there's no way for my site to upload the maps to GPS's on Chrome anymore.\n\nI have no choice but to tell users to use another browser. Never in my wildest dreams did I ever think that there would be a systematic attempt by browser makers to make their web browsers ***LESS*** useful over time. ", "aSentId": 56503, "answer": "Google has Pepper API which is much more sane than NPAPI which is broken as all hell. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56504, "question": "Google has Pepper API which is much more sane than NPAPI which is broken as all hell. ", "aSentId": 56505, "answer": "Unfortunately there's no Garmin Connect plugin for Pepper API.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56507, "question": "Not cool... Flash has very servere performance problems on ppapi. And if you really hate flash just uninstall it its not rocket science", "aSentId": 56508, "answer": "Really? Pepper Flash doesn't support all the DRM it used to, but it's otherwise worked fine for me... as well as Flash ever has, at any rate.\n\nBut then, I also finally disabled Flash after getting annoyed with the performance problems of ads in general... didn't miss it. Every now and then I get the \"broken plugin\" notification, but I still almost never run into a page that actually doesn't have a fallback. As a bonus, it forces all these websites with HTML5 fallbacks to use them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56509, "question": "Really? Pepper Flash doesn't support all the DRM it used to, but it's otherwise worked fine for me... as well as Flash ever has, at any rate.\n\nBut then, I also finally disabled Flash after getting annoyed with the performance problems of ads in general... didn't miss it. Every now and then I get the \"broken plugin\" notification, but I still almost never run into a page that actually doesn't have a fallback. As a bonus, it forces all these websites with HTML5 fallbacks to use them.", "aSentId": 56510, "answer": "On Firefox on my machine (with flash disabled) I can't watch videos on several sites (Facebook being the one that comes to mind) without faking my uaeragent to an ipad.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56507, "question": "Not cool... Flash has very servere performance problems on ppapi. And if you really hate flash just uninstall it its not rocket science", "aSentId": 56512, "answer": "Flash needs to die already", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56513, "question": "Flash needs to die already", "aSentId": 56514, "answer": "Flash doesn't inherently suck. It's the website owners who use it to do annoying stuff, and people who write poor code in it that give it a bad name.\n\nIf HTML5/javascript were easier to use, they'd do the same shit in that instead, and it would suck just as bad, but you wouldn't be able to point at a specific platform as the \"problem\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56515, "question": "Flash doesn't inherently suck. It's the website owners who use it to do annoying stuff, and people who write poor code in it that give it a bad name.\n\nIf HTML5/javascript were easier to use, they'd do the same shit in that instead, and it would suck just as bad, but you wouldn't be able to point at a specific platform as the \"problem\".", "aSentId": 56516, "answer": "&gt; Flash doesn't inherently suck.\n\nFlash does, actually, inherently suck.  It's broken in a bazillion different ways.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56513, "question": "Flash needs to die already", "aSentId": 56518, "answer": "Flash video and flash ads are unfortunately omnipresent. Once we manage to convince all the websites to stop using them, we can finally kill off Flash. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56519, "question": "Flash video and flash ads are unfortunately omnipresent. Once we manage to convince all the websites to stop using them, we can finally kill off Flash. ", "aSentId": 56520, "answer": "Fastest way to convince websites to stop using them would be to remove support for them from popular browsers...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56521, "question": "Fastest way to convince websites to stop using them would be to remove support for them from popular browsers...", "aSentId": 56522, "answer": "And then the idiots will start crying \"antitrust!\" as if you don't have a right to release whatever you damn well please in a warranty-free, open source product.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56519, "question": "Flash video and flash ads are unfortunately omnipresent. Once we manage to convince all the websites to stop using them, we can finally kill off Flash. ", "aSentId": 56524, "answer": "And then we can enjoy the even more resource hogging and unblockable HTML5 ads. Don't blame the messenger.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56519, "question": "Flash video and flash ads are unfortunately omnipresent. Once we manage to convince all the websites to stop using them, we can finally kill off Flash. ", "aSentId": 56526, "answer": "We are pretty close.  When was the last time you couldn't watch a video on your phone?  It had been weeks since I ran into a please install flash message.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56527, "question": "We are pretty close.  When was the last time you couldn't watch a video on your phone?  It had been weeks since I ran into a please install flash message.", "aSentId": 56528, "answer": "Android phones still support Flash, if I'm not mistaken.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56529, "question": "Android phones still support Flash, if I'm not mistaken.", "aSentId": 56530, "answer": "No, not really.  There are versions of the old browser you can download that support Flash, but out of the box it hasn't supported flash for years.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56532, "question": "I hope this makes Netflix finally ditch Silverlight", "aSentId": 56533, "answer": "It already works without Silverlight via Chrome's EME plugin (which works in Chromium too if it's build with support for it).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56532, "question": "I hope this makes Netflix finally ditch Silverlight", "aSentId": 56535, "answer": "I think they already have. I'm pretty sure Netflix works on my Chromebook, and it doesn't have a Silverlight runtime.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56537, "question": "If they had a year, why didn't Oracle get a new Java up and running before this?  I had to go figure out the work around.  They update Java every other week, they clearly knew this was coming... what the fuck Oracle?", "aSentId": 56538, "answer": "Because what are their options? Rewrite Java for PPAPI, that only works on Chrome, and performs worse? Lame.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56548, "question": "So PPAPI makes Flash plugin safe now? Why doesn't Unity and Java plugin developer follow Adobe?", "aSentId": 56549, "answer": "Because the only relevant browser that supports PPAPI is chrome? \n\nBoth Firefox and IE use a different API (NPAPI and Active X respectively), so PPAPI would mean supporting yet another API. The right solution for this is using HTML5 which is what Unity is doing. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56550, "question": "Because the only relevant browser that supports PPAPI is chrome? \n\nBoth Firefox and IE use a different API (NPAPI and Active X respectively), so PPAPI would mean supporting yet another API. The right solution for this is using HTML5 which is what Unity is doing. ", "aSentId": 56551, "answer": "HTML5 is good but it also has many problems.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56552, "question": "HTML5 is good but it also has many problems.", "aSentId": 56553, "answer": "Html5 doesn't have much problems browser implementations do, and even then when compared with Java applets they are a small drop against a giant ocean.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56554, "question": "Html5 doesn't have much problems browser implementations do, and even then when compared with Java applets they are a small drop against a giant ocean.", "aSentId": 56555, "answer": "JavaScript is not a good language, at least for many people.\nAs a small drop is a pros but also a cons.\nAnd you must open source your code to publish your html works, this is not always as many people desire.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56556, "question": "JavaScript is not a good language, at least for many people.\nAs a small drop is a pros but also a cons.\nAnd you must open source your code to publish your html works, this is not always as many people desire.\n\n", "aSentId": 56557, "answer": "You can also compile to ASM.js which isn't much easier to reverse than any normal executable and it's even faster than normal JS especially on Firefox.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56556, "question": "JavaScript is not a good language, at least for many people.\nAs a small drop is a pros but also a cons.\nAnd you must open source your code to publish your html works, this is not always as many people desire.\n\n", "aSentId": 56559, "answer": "Neither is assembly and you have to open source the same amount of code you distribute a native binary or Java bytecode, just compile your code with something like emscripten like unity does.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56560, "question": "Neither is assembly and you have to open source the same amount of code you distribute a native binary or Java bytecode, just compile your code with something like emscripten like unity does.", "aSentId": 56561, "answer": "Agree.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56548, "question": "So PPAPI makes Flash plugin safe now? Why doesn't Unity and Java plugin developer follow Adobe?", "aSentId": 56563, "answer": "I can't speak to Java, but Unity 5 can export to WebGL; unfortunately, they aren't yet able to get anywhere near the performance they were able to with NPAPI.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56564, "question": "I can't speak to Java, but Unity 5 can export to WebGL; unfortunately, they aren't yet able to get anywhere near the performance they were able to with NPAPI.", "aSentId": 56565, "answer": "I heard the webgl release file is very large (&gt;50M). True?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56566, "question": "I heard the webgl release file is very large (&gt;50M). True?", "aSentId": 56567, "answer": "Way larger, it has to transform a subset of the .net framework into js, this also is over 100mb js last i played with it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56548, "question": "So PPAPI makes Flash plugin safe now? Why doesn't Unity and Java plugin developer follow Adobe?", "aSentId": 56569, "answer": "PPAPI itself doesn't. What the PPAPI allows is an efficient API on top of IPCs, which means that plugins can now be compiled to NaCl and run securely in a separate sandboxed process. With NPAPI, the plugin itself had to be loaded into the same address space as the browser process (and all the security problems that entails).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56570, "question": "PPAPI itself doesn't. What the PPAPI allows is an efficient API on top of IPCs, which means that plugins can now be compiled to NaCl and run securely in a separate sandboxed process. With NPAPI, the plugin itself had to be loaded into the same address space as the browser process (and all the security problems that entails).", "aSentId": 56571, "answer": "NPAPI plugins can run out-of-process with enough work, but they're still nearly impossible to sandbox. For example, Firefox runs Flash out-of-process to stop a crash from taking down the whole browser but there's no sandboxing in place.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56572, "question": "NPAPI plugins can run out-of-process with enough work, but they're still nearly impossible to sandbox. For example, Firefox runs Flash out-of-process to stop a crash from taking down the whole browser but there's no sandboxing in place.", "aSentId": 56573, "answer": "&gt; For example, Firefox runs Flash out-of-process to stop a crash from taking down the whole browser[..]\n\nAh. I admit I don't use FF, like, ever, so wasn't aware.\n\n&gt; [..]but there's no sandboxing in place.\n\nA shame. Nonetheless, once the API is IPC-ed, NaCl can provide sandboxing without more changes needed of Flash (excluding the effort of the NaCl parts)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56572, "question": "NPAPI plugins can run out-of-process with enough work, but they're still nearly impossible to sandbox. For example, Firefox runs Flash out-of-process to stop a crash from taking down the whole browser but there's no sandboxing in place.", "aSentId": 56575, "answer": "&gt; For example, Firefox runs Flash out-of-process to stop a crash from taking down the whole browser but there's no sandboxing in place.\n\nMozilla developer here. Flash for Windows is installed with \"Protected Mode\" enabled by default. The NPAPI plugin inside the Firefox plugin-container spawns a sandboxed child process that runs the actual Flash code. So yes, technically the plugin itself is not sandboxed, but in the Flash Protected Mode case the plugin is just an IPC bridge to a sandboxed Flash implementation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56576, "question": "&gt; For example, Firefox runs Flash out-of-process to stop a crash from taking down the whole browser but there's no sandboxing in place.\n\nMozilla developer here. Flash for Windows is installed with \"Protected Mode\" enabled by default. The NPAPI plugin inside the Firefox plugin-container spawns a sandboxed child process that runs the actual Flash code. So yes, technically the plugin itself is not sandboxed, but in the Flash Protected Mode case the plugin is just an IPC bridge to a sandboxed Flash implementation.", "aSentId": 56577, "answer": "There isn't meaningful privilege separation so it can still do whatever it wants. It's no different than Firefox's current sandboxing situation in the nightlies with electrolysis where sandboxing features are being used without yet implementing any meaningful boundaries. It's a step towards doing that, but the bulk of the work is not finished so it has no value yet.\n\nIt's a marketing feature from Adobe, not a meaningful security feature. It might fly with regular users but not with programmers who are in the position to evaluate the facts. Using OS sandboxing features only has value if the IPC model doesn't simply offer the same privileged access.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56579, "question": "to save anyone from headache... copy and paste go:\n    \n    chrome://flags/#enable-npapi \n\nensure your version of java matches your os bit amount\n", "aSentId": 56580, "answer": "Note, that's gonna work for one update only.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56583, "question": "So the browser that ships with Flash and runs NaCL can't run Java or Silverlight because of \"security\" concerns?\n\nSounds legit.", "aSentId": 56584, "answer": "Google flash was ported to Pepper API which is the replacement for NPAPI. NPAPI is incredibly braindamaged.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56586, "question": "Does this mean no more flash for Linux Chrome?\nThere's no PPAPI flash for linux supported by adobe, or is it?", "aSentId": 56587, "answer": "PPAPI flash player is baked in Chrome for really long time.\nEdit: even on Linux\n\nEdit: Also it is the only way you can run latest flash player in Linux. Flash Player in Firefox is stuck with version 11.2", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56586, "question": "Does this mean no more flash for Linux Chrome?\nThere's no PPAPI flash for linux supported by adobe, or is it?", "aSentId": 56589, "answer": "Pepper Flash is bundled with Chrome on Linux and works in Chromium too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56592, "question": "Remember when a web browser only showed a bit of HTML and maybe a bit of CSS?", "aSentId": 56593, "answer": "JavaScript was in regular usage well before css.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56594, "question": "JavaScript was in regular usage well before css.", "aSentId": 56595, "answer": "Yep. Shitty table layouts with pointless JS gimmicks.\n\nIE5 was the first browser where most of CSS 1.0 somewhat worked. Well, somewhat. It got the box model wrong and margins on floated elements were ignored. You also couldn't use padding on inline elements and things like that. It was really weird.\n\nIE6 was a massive improvement. It implemented all of CSS 1.0 (except for background-attachment: fixed) and, in the simplest use cases, everything actually worked fine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56592, "question": "Remember when a web browser only showed a bit of HTML and maybe a bit of CSS?", "aSentId": 56597, "answer": "No.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56592, "question": "Remember when a web browser only showed a bit of HTML and maybe a bit of CSS?", "aSentId": 56599, "answer": "I mean....yes, I do.\n\nDo you remember the last technology that didn't adapt over the course of 25 years?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56600, "question": "I mean....yes, I do.\n\nDo you remember the last technology that didn't adapt over the course of 25 years?", "aSentId": 56601, "answer": "You mean JavaScript?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56602, "question": "You mean JavaScript?", "aSentId": 56603, "answer": "*rimshot*\n\nI agree though, 10 years between ES3 and ES5 was too much, but 5 was objectively better than 3.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56604, "question": "*rimshot*\n\nI agree though, 10 years between ES3 and ES5 was too much, but 5 was objectively better than 3.", "aSentId": 56605, "answer": "Even ES6 is a steaming turd. Programming without static types is like deep-sea diving without an air supply.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56606, "question": "Even ES6 is a steaming turd. Programming without static types is like deep-sea diving without an air supply.", "aSentId": 56607, "answer": "Have a lovely day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56606, "question": "Even ES6 is a steaming turd. Programming without static types is like deep-sea diving without an air supply.", "aSentId": 56609, "answer": "Ruby/python coder here - lol wut?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56610, "question": "Ruby/python coder here - lol wut?", "aSentId": 56611, "answer": "Java/Scala coder here \u2013 you heard me.\n\nThough at least Python is *strongly* typed\u2026", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56612, "question": "Java/Scala coder here \u2013 you heard me.\n\nThough at least Python is *strongly* typed\u2026", "aSentId": 56613, "answer": "I can't say I've ever run into a problem with either of those languages and thought \"Yknow what I wish I had? Defined all types up front.\"\n\nIt definitely makes work in IDE's easier, I'll give you that. Even with rdoc annotations, my beloved RubyMine just doesn't act the same way as, say, IntelliJ. I have yet to see this cause a problem in production, mind. With those two languages, you care more about what a given value responds to, rather than its identity.\n\nI'm tinkering around with Go right now, and the lack of a generic type is one *mind-bogglingly infuriating* thing about an otherwise awesome language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56618, "question": "Elevator.js", "aSentId": 56619, "answer": "Headphone warning, scared the living fuck out of me", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56620, "question": "Headphone warning, scared the living fuck out of me", "aSentId": 56621, "answer": "Really? It actually put a smile on my face :D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56622, "question": "Really? It actually put a smile on my face :D", "aSentId": 56623, "answer": "Eardrum shattering noise first, smile second. Lol", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56620, "question": "Headphone warning, scared the living fuck out of me", "aSentId": 56625, "answer": "My ears are bleeding. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56618, "question": "Elevator.js", "aSentId": 56627, "answer": "haha that is brilliant and ridiculous", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56618, "question": "Elevator.js", "aSentId": 56629, "answer": "finally, something elegant and functional", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56632, "question": "If you can't see the elevator, disable your adblock/plugins.", "aSentId": 56633, "answer": "Just leave your plugins on and skip the elevator. Nothing plugin-disable-worthy to see there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56643, "question": "JPEG Isn't a file format.", "aSentId": 56644, "answer": "[Huh. Interchangeable, indeed.](http://puu.sh/hmbiV/faf71db454.jpg)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56645, "question": "[Huh. Interchangeable, indeed.](http://puu.sh/hmbiV/faf71db454.jpg)", "aSentId": 56646, "answer": "Where is the second garlic?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56645, "question": "[Huh. Interchangeable, indeed.](http://puu.sh/hmbiV/faf71db454.jpg)", "aSentId": 56648, "answer": "What am i looking at?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56649, "question": "What am i looking at?", "aSentId": 56650, "answer": "both .jfif and .jpeg open with my default image viewer as a jpeg (or should i say jfif)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56643, "question": "JPEG Isn't a file format.", "aSentId": 56652, "answer": "Misleading title. But argh! They left the most interesting part to the next video! Understanding how the discrete cosine transform works is essential to understanding what operations you can safely perform on a jpeg file without suffering a massive quality drop.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56653, "question": "Misleading title. But argh! They left the most interesting part to the next video! Understanding how the discrete cosine transform works is essential to understanding what operations you can safely perform on a jpeg file without suffering a massive quality drop.", "aSentId": 56654, "answer": "How common is regular JPEG nowadays? I would think that the whole 8x8 macroblock DCT is not as prevalent as the JPEG2000 wavelet transforms. Yes, it's easier to understand the 8x8 blocks, but the results are slightly better with the newer JPEG methods.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56643, "question": "JPEG Isn't a file format.", "aSentId": 56656, "answer": "Yes it is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56657, "question": "Yes it is.", "aSentId": 56658, "answer": "JPEG is not a file format, just like h.264 isn't a file format.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56657, "question": "Yes it is.", "aSentId": 56660, "answer": "No it's not.\n\nJPEG is the name of the expert group and their standard for compressing/encoding image data.\n\nThe raw encoded data is not generally used without a containing file format. The standard recommends using JIF (JPEG Image Format). This file format has been superseded by JFIF (JPEG File Interchange Format) and EXIF (EXchangeable Image File format).\n\nIn summary:\n\n* EXIF is a file format\n* JFIF is a file format\n* JIF is a file format\n* JPEG isn't a file format", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56661, "question": "No it's not.\n\nJPEG is the name of the expert group and their standard for compressing/encoding image data.\n\nThe raw encoded data is not generally used without a containing file format. The standard recommends using JIF (JPEG Image Format). This file format has been superseded by JFIF (JPEG File Interchange Format) and EXIF (EXchangeable Image File format).\n\nIn summary:\n\n* EXIF is a file format\n* JFIF is a file format\n* JIF is a file format\n* JPEG isn't a file format", "aSentId": 56662, "answer": "The world operates by convention, not by committee.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56663, "question": "The world operates by convention, not by committee.", "aSentId": 56664, "answer": "The world thinks Frankenstein's monster is called \"Frankenstein\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56665, "question": "The world thinks Frankenstein's monster is called \"Frankenstein\".", "aSentId": 56666, "answer": "I used to hate people who said that every kind of malware was a \"virus\" and I was the first to tell everyone that \"this is a trojan horse\", \"this is a worm\", \"this is just the name of a vulnerability\".\n\nI don't remember which piece of malware was in the news, but I know that it wasn't a virus, and I once more yelled \"THIS ISN'T A VIRUS!\" off the top of my virtual lungs. Someone replied and asked, \"what kind of software will you need to remove this?\" The answer, of course, is an anti-virus.\n\nWho's dumb then? If the security world isn't happy that everybody calls everything a virus, then maybe it should stop calling their solutions to these aches \"anti-viruses\".\n\nAnd so if you want people to stop thinking that JPEG is a file format, maybe you should advocate for a different file extension and a different MIME type instead of calling the world dumb.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56667, "question": "I used to hate people who said that every kind of malware was a \"virus\" and I was the first to tell everyone that \"this is a trojan horse\", \"this is a worm\", \"this is just the name of a vulnerability\".\n\nI don't remember which piece of malware was in the news, but I know that it wasn't a virus, and I once more yelled \"THIS ISN'T A VIRUS!\" off the top of my virtual lungs. Someone replied and asked, \"what kind of software will you need to remove this?\" The answer, of course, is an anti-virus.\n\nWho's dumb then? If the security world isn't happy that everybody calls everything a virus, then maybe it should stop calling their solutions to these aches \"anti-viruses\".\n\nAnd so if you want people to stop thinking that JPEG is a file format, maybe you should advocate for a different file extension and a different MIME type instead of calling the world dumb.", "aSentId": 56668, "answer": "This is why the term malware was coined, as a catch-all.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56669, "question": "This is why the term malware was coined, as a catch-all.", "aSentId": 56670, "answer": "Yeah, and now people want to install an antivirus AND an antimalware program.\n\nIt's working out so well.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56671, "question": "Yeah, and now people want to install an antivirus AND an antimalware program.\n\nIt's working out so well.", "aSentId": 56672, "answer": "It'd help if the antivirus apps would go after non-virus malware instead of ignoring it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56661, "question": "No it's not.\n\nJPEG is the name of the expert group and their standard for compressing/encoding image data.\n\nThe raw encoded data is not generally used without a containing file format. The standard recommends using JIF (JPEG Image Format). This file format has been superseded by JFIF (JPEG File Interchange Format) and EXIF (EXchangeable Image File format).\n\nIn summary:\n\n* EXIF is a file format\n* JFIF is a file format\n* JIF is a file format\n* JPEG isn't a file format", "aSentId": 56674, "answer": "I'm not sure EXIF really counts as a file format either! It's a format for representing tags as a data stream, with methods for embedding that stream into a variety of file formats, including JPEG (yes, JPEG, not JIF or JFIF), TIFF, and RIFF (i.e, WAV). It's similar, in this sense, to ID3. While I suppose you could extract some EXIF data into a standalone file, very few programs are likely to recognize it on its own.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56675, "question": "I'm not sure EXIF really counts as a file format either! It's a format for representing tags as a data stream, with methods for embedding that stream into a variety of file formats, including JPEG (yes, JPEG, not JIF or JFIF), TIFF, and RIFF (i.e, WAV). It's similar, in this sense, to ID3. While I suppose you could extract some EXIF data into a standalone file, very few programs are likely to recognize it on its own.", "aSentId": 56676, "answer": "Exif calls itself a file format. Its standard says things like \"put this type of data in a JIF file; put this type of data in a TIFF file; put this type of data in a RIFF file\". With a bit of mental wrangling, you could credibly call the outputs of this standard  \"Exif files\" (which just happen to be a subsets of JIF / TIFF / RIFF files).\n\nTo clear things up, what do you consider a \"JPEG\" file to look like, if you think there is such a thing, distinct from JIF (which is anything encoded to the format described in the JPEG standard (ISO 10918-1) Annex B.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56677, "question": "Exif calls itself a file format. Its standard says things like \"put this type of data in a JIF file; put this type of data in a TIFF file; put this type of data in a RIFF file\". With a bit of mental wrangling, you could credibly call the outputs of this standard  \"Exif files\" (which just happen to be a subsets of JIF / TIFF / RIFF files).\n\nTo clear things up, what do you consider a \"JPEG\" file to look like, if you think there is such a thing, distinct from JIF (which is anything encoded to the format described in the JPEG standard (ISO 10918-1) Annex B.", "aSentId": 56678, "answer": "&gt; Exif calls itself a file format. Its standard says things like \"put this type of data in a JIF file; put this type of data in a TIFF file; put this type of data in a RIFF file\". With a bit of mental wrangling, you could credibly call the outputs of this standard \"Exif files\" (which just happen to be a subsets of JIF / TIFF / RIFF files).\n\nI find that reasoning silly. We don't call MP3 files which include ID3 tags \"ID3 files\"; we shouldn't call JFIF files which include Exif tags \"Exif files\" either.\n\n&gt; To clear things up, what do you consider a \"JPEG\" file to look like, if you think there is such a thing, distinct from JIF (which is anything encoded to the format described in the JPEG standard (ISO 10918-1) Annex B.\n\nI consider \"JPEG file\" to be a common misnomer! They should technically be called \"JFIF files\", because that's the container. But most people call them JPEG files, so I usually use that term to avoid confusion.\n\nThat being said, JPEG data actually shows up pretty frequently in one other container: AVI! (Or sometimes QuickTime MOV, or other video containers.) A Motion JPEG stream is simply a sequence of JPEG images, one per frame.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56661, "question": "No it's not.\n\nJPEG is the name of the expert group and their standard for compressing/encoding image data.\n\nThe raw encoded data is not generally used without a containing file format. The standard recommends using JIF (JPEG Image Format). This file format has been superseded by JFIF (JPEG File Interchange Format) and EXIF (EXchangeable Image File format).\n\nIn summary:\n\n* EXIF is a file format\n* JFIF is a file format\n* JIF is a file format\n* JPEG isn't a file format", "aSentId": 56680, "answer": "People are usually also talking about H264 video files, despite the actual container usually being mp4 or mkv.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56681, "question": "People are usually also talking about H264 video files, despite the actual container usually being mp4 or mkv.", "aSentId": 56682, "answer": "We can just be glad they're not calling them VCEG files.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56657, "question": "Yes it is.", "aSentId": 56686, "answer": "No it isn't! Argument is an intellectual process. Contradiction is just the automatic gainsaying of anything the other person says.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56687, "question": "No it isn't! Argument is an intellectual process. Contradiction is just the automatic gainsaying of anything the other person says.", "aSentId": 56688, "answer": "If you want me to go on arguing, you'll have to pay for another five minutes. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56689, "question": "If you want me to go on arguing, you'll have to pay for another five minutes. ", "aSentId": 56690, "answer": "No I won't.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56693, "question": "This is good information but who the fuck really cares. It's like the argument on the correct way to pronounce GIF.\n\nWhich, btw, you pronounce GIF with a hard G otherwise it's a peanut butter brand.", "aSentId": 56694, "answer": "Or a cleaning product. I don't know why \"jif\" annoys me, but it annoys me a lot!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56693, "question": "This is good information but who the fuck really cares. It's like the argument on the correct way to pronounce GIF.\n\nWhich, btw, you pronounce GIF with a hard G otherwise it's a peanut butter brand.", "aSentId": 56696, "answer": "It's pronounced jif. The creator of the format said so, and common sense agrees with him.\n\nDo you pronounce gin with a hard G?\n\nEDIT: I'M BEING DOWNVOTED BY JIF DENIERS", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56697, "question": "It's pronounced jif. The creator of the format said so, and common sense agrees with him.\n\nDo you pronounce gin with a hard G?\n\nEDIT: I'M BEING DOWNVOTED BY JIF DENIERS", "aSentId": 56698, "answer": "&gt;  The creator of the format said so,\n\nAnd hillbillies want to be called \"Sons of the Soil,\" but it ain't gonna happen. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56697, "question": "It's pronounced jif. The creator of the format said so, and common sense agrees with him.\n\nDo you pronounce gin with a hard G?\n\nEDIT: I'M BEING DOWNVOTED BY JIF DENIERS", "aSentId": 56700, "answer": "Do you pronounce gift with a j?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56701, "question": "Do you pronounce gift with a j?", "aSentId": 56702, "answer": "Do you pronounce gigabyte with a G?\n\nIt depends on the words, of course. But GIF is pronounced jif.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56703, "question": "Do you pronounce gigabyte with a G?\n\nIt depends on the words, of course. But GIF is pronounced jif.", "aSentId": 56704, "answer": "I've heard both hard and soft g for giga.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56703, "question": "Do you pronounce gigabyte with a G?\n\nIt depends on the words, of course. But GIF is pronounced jif.", "aSentId": 56706, "answer": "There's Jiggawatts too. How could Doc Brown be wrong?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56708, "question": "Of all the places to find people complaining about fussing over the difference of a file format and an encoding /r/programming is the last place I expected. We're programmers, specificity and technical accuracy is a part of our job. Knowing  precise technical information is vital to quickly and accurately conveying complex ideas without confusion.  ", "aSentId": 56709, "answer": "It really depends on who I'm talking to.\n\nIf I'm talking to a programmer: I wrote a library to compress raw rgb data so it remains viewable although it isn't a perfect copy.\n\nIf I'm talking to non-programmers: I hacked out an app to make photos smaller.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56711, "question": "It's time for D to own up", "aSentId": 56712, "answer": "Author is a bit too much convinced that ownership is easy to use and solve all problems. However, it is taxing on the API, when GC is not, and can become very complex in some situation (ie a graph of object with varying lifetime for instance, will be horrible).\n\nGC is certainly not perfect, but it has the nice property of being safe, non taxing on API and good enough in most cases.\n\nGranted, D's GC is not really good right now, and D would benefit greatly improving it. But there is a vast body of evidence right now that show that it can be done.\n\nThe truth here is that there is no silver bullet. The problem has been on the table for a long time and we now have various solutions, all with pro and cons, and anyone that tell you that one is superior to the other without precisely framing the context in which this statement applies has something to sell you rather than some technical point to make.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56713, "question": "Author is a bit too much convinced that ownership is easy to use and solve all problems. However, it is taxing on the API, when GC is not, and can become very complex in some situation (ie a graph of object with varying lifetime for instance, will be horrible).\n\nGC is certainly not perfect, but it has the nice property of being safe, non taxing on API and good enough in most cases.\n\nGranted, D's GC is not really good right now, and D would benefit greatly improving it. But there is a vast body of evidence right now that show that it can be done.\n\nThe truth here is that there is no silver bullet. The problem has been on the table for a long time and we now have various solutions, all with pro and cons, and anyone that tell you that one is superior to the other without precisely framing the context in which this statement applies has something to sell you rather than some technical point to make.", "aSentId": 56714, "answer": "I didn't get the impression that he thought ownership semantics was a silver bullet, just that they are valuable and poorly supported in D.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56715, "question": "I didn't get the impression that he thought ownership semantics was a silver bullet, just that they are valuable and poorly supported in D.", "aSentId": 56716, "answer": "&gt; , just that they are valuable and poorly supported in D.\n\nthis is already well known to the D community, there has been two DIPs(D Improvement Proposals) and a large amount of work in fixing refcounted/unique in the standard library since the 2.067 release which happened less than a month ago.\n\nbasically, it should be fixed in 2.068.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56717, "question": "&gt; , just that they are valuable and poorly supported in D.\n\nthis is already well known to the D community, there has been two DIPs(D Improvement Proposals) and a large amount of work in fixing refcounted/unique in the standard library since the 2.067 release which happened less than a month ago.\n\nbasically, it should be fixed in 2.068.", "aSentId": 56718, "answer": "I'm involved in some of the related standard library work (see the linked pull request), so this was mostly just me expanding on my motivations behind it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56719, "question": "I'm involved in some of the related standard library work (see the linked pull request), so this was mostly just me expanding on my motivations behind it. ", "aSentId": 56720, "answer": "Sometimes I think a combination of malloc + emplace as one function and another function doing destroy + free would be needed.\nThis would be similar to C++'s new/delete.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56721, "question": "Sometimes I think a combination of malloc + emplace as one function and another function doing destroy + free would be needed.\nThis would be similar to C++'s new/delete.", "aSentId": 56722, "answer": "That's essentially what my PR does with `std.typecons.Unique`", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56713, "question": "Author is a bit too much convinced that ownership is easy to use and solve all problems. However, it is taxing on the API, when GC is not, and can become very complex in some situation (ie a graph of object with varying lifetime for instance, will be horrible).\n\nGC is certainly not perfect, but it has the nice property of being safe, non taxing on API and good enough in most cases.\n\nGranted, D's GC is not really good right now, and D would benefit greatly improving it. But there is a vast body of evidence right now that show that it can be done.\n\nThe truth here is that there is no silver bullet. The problem has been on the table for a long time and we now have various solutions, all with pro and cons, and anyone that tell you that one is superior to the other without precisely framing the context in which this statement applies has something to sell you rather than some technical point to make.", "aSentId": 56724, "answer": "As /u/qartar said, I don't think ownership is a silver bullet and I hope I didn't make that impression with the post.\n\nAs for ownership leaking into APIs, I don't think that's a sin.\nSay some library has a function `getFoo()` that gives you a reference to a `Foo`. `Foo` could be anything - a cURL handle, a texture on your graphics card, or a decoding context for video demuxing. Regardless of what it is, without reading docs you have no idea whether\n\n1. You can just free it yourself with `free` or `delete` (or in GC world, stop referencing it and let it be collected).\n\n2. You must call some `cleanupFoo()` that handles ancillary cleanup related to `Foo` that the library abstracted away from you, like actually freeing the video memory of the GPU for the texture example. I suppose in a GC system you could count on the finalizer, but there are lots of situations where you want to dispose these resources in a timely fashion.\n\nWith ownership (using C++ as an example here), if `getFoo()` gives me a `unique_ptr&lt;Foo&gt;`, I don't have to care. I use it as long as I want, and when I'm done with it, the cleanup _just happens_.\n\nOf course your mileage may vary, and obviously there are many ways to skin a cat.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56711, "question": "It's time for D to own up", "aSentId": 56726, "answer": "Remember: It's possible to do garbage collection for other resources as well. When file handles run out, trigger a collection.\n\nThe key thing to distinguish is limited but interchangeable resources (e.g. file handles and memory) from non-interchangeable resources like mutexes. For the latter, it makes more sense to use block scoping to control them because you really want that particular mutex released at a specific time or your program may do something wrong.\n\nIt's OK that different things are different and we have to handle it in different ways. Pretending that different things are the same can work - Perl gets away with ref-counting only for memory management, which is similar to ownership semantics - but you always have to keep the edge cases in mind (reference cycles are memory leaks).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56711, "question": "It's time for D to own up", "aSentId": 56728, "answer": "TL;DR: make D more like Rust.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56729, "question": "TL;DR: make D more like Rust.", "aSentId": 56730, "answer": "I actually find the discussion in the linked GitHub issue far more interesting than the article: https://github.com/D-Programming-Language/phobos/pull/3139", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56729, "question": "TL;DR: make D more like Rust.", "aSentId": 56732, "answer": "The main difference between C++ and D is that the latter is a easier language to develop. Please don't let D be transformed into a new C++, copying idea from other languages into itself so it has EVERYTHING. Every language has it niche.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56733, "question": "The main difference between C++ and D is that the latter is a easier language to develop. Please don't let D be transformed into a new C++, copying idea from other languages into itself so it has EVERYTHING. Every language has it niche.", "aSentId": 56734, "answer": "That's a very unusual observation since a common criticism of D is that it feels like a bunch of mismatched features poorly stitched together and that it's complexity has resulted in severe quality of implementation issues.  Basically D has so much on its plate that the people working on the compiler and standard library can't implement them properly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56735, "question": "That's a very unusual observation since a common criticism of D is that it feels like a bunch of mismatched features poorly stitched together and that it's complexity has resulted in severe quality of implementation issues.  Basically D has so much on its plate that the people working on the compiler and standard library can't implement them properly.", "aSentId": 56736, "answer": "Can't upvote this enough.  The goal to reach is to have a language that's both easy to develop in AND easy to develop a compiler for.  GC massively ups the compiler writing complexity, and other \"convenience\" features as well.  I'd really like to see c++ resyntaxed and a few things cleaned up but the base philosophy around c++ is technically sound which is why it's gone on for so long.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56737, "question": "Can't upvote this enough.  The goal to reach is to have a language that's both easy to develop in AND easy to develop a compiler for.  GC massively ups the compiler writing complexity, and other \"convenience\" features as well.  I'd really like to see c++ resyntaxed and a few things cleaned up but the base philosophy around c++ is technically sound which is why it's gone on for so long.", "aSentId": 56738, "answer": "&gt; GC massively ups the compiler writing complexity,\n\nno... no it does not\n\nD's GC is completely in the runtime, the compiler is oblivious to it.\n\nOn the topic of D having too many features, Walter &amp; Andrei have been very persistent lately about moving as much as possible out of the core language and into libraries. You are right that these things do make the compiler more complex(and tbh, DMD's source is a mess - I doubt anyone other than Walter even understands the backend at this point,) but it's a recognized problem that is being worked on.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56729, "question": "TL;DR: make D more like Rust.", "aSentId": 56740, "answer": "That's the thing that is somewhat surprising. If you want Rust, I have good news, you can find it here: http://www.rust-lang.org/\n\nRust and D are different languages. I personally like D because it's *not* Rust. For one thing, I don't mind the garbage collector, so I don't want to make the sacrifices necessary to have a language without one. I don't see a problem with letting Rust have that area if it means D doesn't need major surgery.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56741, "question": "That's the thing that is somewhat surprising. If you want Rust, I have good news, you can find it here: http://www.rust-lang.org/\n\nRust and D are different languages. I personally like D because it's *not* Rust. For one thing, I don't mind the garbage collector, so I don't want to make the sacrifices necessary to have a language without one. I don't see a problem with letting Rust have that area if it means D doesn't need major surgery.", "aSentId": 56742, "answer": "Agreed.  I don't think D knows what it wants to be and that's unfortunate and that scares off people as much as the other issues surrounding it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56743, "question": "Agreed.  I don't think D knows what it wants to be and that's unfortunate and that scares off people as much as the other issues surrounding it.", "aSentId": 56744, "answer": "&gt;  I don't think D knows what it wants to be and that's unfortunate\n\nThat's actually something I find appealing about D. I don't like a language that was built for a specific purpose. Unfortunately, nobody is designing a language for *my* specific purpose. The next best solution is to use a language like D that lets me do what I want.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56741, "question": "That's the thing that is somewhat surprising. If you want Rust, I have good news, you can find it here: http://www.rust-lang.org/\n\nRust and D are different languages. I personally like D because it's *not* Rust. For one thing, I don't mind the garbage collector, so I don't want to make the sacrifices necessary to have a language without one. I don't see a problem with letting Rust have that area if it means D doesn't need major surgery.", "aSentId": 56746, "answer": "I really want to like Rust more than D. Rust seems more clean in what its trying to do (D sort of is a melting pot), but its just so hard to write in sometimes. I understand this is intentional as it lets the compiler optimize more, but it still feels even harder to write than something like Haskell.\n\nIn fact I am starting to become a pretty big fan of garbage collection just because it alone can make a language easier to develop for, even D.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56748, "question": "Or, combine the good stuff from C++11 with D.", "aSentId": 56749, "answer": "And so C++17 was born...or at least conceived. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56753, "question": "Call me maybe: MongoDB stale reads", "aSentId": 56754, "answer": "Hello, Maybe.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56756, "question": "Lessons Learned while Working on Large-Scale Server Software", "aSentId": 56757, "answer": "All those point sound good but in the end you don't know more than before reading the article.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56758, "question": "All those point sound good but in the end you don't know more than before reading the article.", "aSentId": 56759, "answer": "I picked up something.  I've been doing large systems for a long time and I'd somehow missed CAP Theorem.  I found and read the paper, and it's stuff I knew from years of experience, but was pleased that it was codified and so well spelled out.\n\nI'd say his worst case scenario was a little light though.  [\"What happens if all the databases are down? What if they're up but have lost all of their data?\"]  We once suffered a disaster where part of our data was lost and/or corrupted unbeknownst to us over several hours.   (SQL Server Transaction Replication got iffy for one database, but not its companion... alerts failed to go off... and then coincidentally the entire primary site had a hard failure due to flooding.   Offsite replication was inconsistent.)\n\nThat introduced the managerial problem of \"well, what *can* we keep?\"  Some of it was good, some of it was rotten.  I'd have rather lost it all than that situation.  That was many shades of horrible.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56761, "question": "NASA data API", "aSentId": 56762, "answer": "At first I read this as \"NSA data API\"...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56761, "question": "NASA data API", "aSentId": 56764, "answer": "I see... endless weekend fun!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56761, "question": "NASA data API", "aSentId": 56766, "answer": "There's an API for space sounds, I wonder if there are some fun sounds that could be of use on my phone alarm.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56769, "question": "TechEmpower Web Framework Performance Comparison round 10", "aSentId": 56770, "answer": "Lots of \"Did Not Complete\" on this one. What's up with that?\n\nCakePHP, Play2, HHVM, yii2, wicket, phalcon... These are fairly non-trivial frameworks/engines. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56771, "question": "Lots of \"Did Not Complete\" on this one. What's up with that?\n\nCakePHP, Play2, HHVM, yii2, wicket, phalcon... These are fairly non-trivial frameworks/engines. ", "aSentId": 56772, "answer": "You can check the logs for the execution.\n\nAt least for [HHVM](https://github.com/TechEmpower/TFB-Round-10/blob/master/peak/linux/results-2015-03-24-peak-final/latest/logs/hhvm/out.txt) there was a lot of \"bad gateway\" responses, so my bet is that the benchmark code for it was broken.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56771, "question": "Lots of \"Did Not Complete\" on this one. What's up with that?\n\nCakePHP, Play2, HHVM, yii2, wicket, phalcon... These are fairly non-trivial frameworks/engines. ", "aSentId": 56774, "answer": "That caught my eye too. At first I thought they set a time limit, but when you think about that for more than an instant, there is no way HHVM or Phalcon performed worse than Flask or Django or Rails, out of personal experience.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56771, "question": "Lots of \"Did Not Complete\" on this one. What's up with that?\n\nCakePHP, Play2, HHVM, yii2, wicket, phalcon... These are fairly non-trivial frameworks/engines. ", "aSentId": 56776, "answer": "afaik they lean heavily on the community to submit and maintain entrants. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56769, "question": "TechEmpower Web Framework Performance Comparison round 10", "aSentId": 56778, "answer": "Very cool to see that elli is somewhat living up to its claims of being faster than cowboy. I wonder how far they can push it further.\n\nHow are snap and yesod doing so awful? Yesod is even more surprising since it lives on top of WAI which is killing it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56779, "question": "Very cool to see that elli is somewhat living up to its claims of being faster than cowboy. I wonder how far they can push it further.\n\nHow are snap and yesod doing so awful? Yesod is even more surprising since it lives on top of WAI which is killing it.", "aSentId": 56780, "answer": "yesod is a very high level abstraction, so its reasonable that this abstraction comes with a cost", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56769, "question": "TechEmpower Web Framework Performance Comparison round 10", "aSentId": 56782, "answer": "\u05db\u05bc\u2017\u05db\u05bc\nAs a new node.js user i'm very disappointed. Performance is 4% of the best for plaintext responses... This is only sending hello world back...\nAnd for json it's at 10%. \nI feel like Node.JS should be offering better performance than this. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56783, "question": "\u05db\u05bc\u2017\u05db\u05bc\nAs a new node.js user i'm very disappointed. Performance is 4% of the best for plaintext responses... This is only sending hello world back...\nAnd for json it's at 10%. \nI feel like Node.JS should be offering better performance than this. ", "aSentId": 56784, "answer": "&gt; I feel like Node.JS should be offering better performance than this.\n\nWhy would you expect this? Node is just another dynamically typed language that offers a moderately more advanced VM than its direct competition (ruby, python, perl, etc.). It's not really doing much worse amongst its peers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56785, "question": "&gt; I feel like Node.JS should be offering better performance than this.\n\nWhy would you expect this? Node is just another dynamically typed language that offers a moderately more advanced VM than its direct competition (ruby, python, perl, etc.). It's not really doing much worse amongst its peers.", "aSentId": 56786, "answer": "indeed. and for a rapid-development platform, it performs decently. \n\ndon't worry about the rank, look at the absolute numbers! almost everything measured is acceptably decent, only a few are curiously awful", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56783, "question": "\u05db\u05bc\u2017\u05db\u05bc\nAs a new node.js user i'm very disappointed. Performance is 4% of the best for plaintext responses... This is only sending hello world back...\nAnd for json it's at 10%. \nI feel like Node.JS should be offering better performance than this. ", "aSentId": 56788, "answer": "&gt; I feel like Node.JS should be offering better performance than this.\n\nBecause everyone at HN thought it was so cool and nobody for a while ever talked about anything else? People kinda expected that because it was so hyped it just had to perform well?\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56783, "question": "\u05db\u05bc\u2017\u05db\u05bc\nAs a new node.js user i'm very disappointed. Performance is 4% of the best for plaintext responses... This is only sending hello world back...\nAnd for json it's at 10%. \nI feel like Node.JS should be offering better performance than this. ", "aSentId": 56790, "answer": "Plaintext is also the least representative of normal workload.\n\nYou could pick just about any language, including generally interpreted ones like Python, Ruby, and Javascript(NodeJS) and be just fine. All perform at levels much higher than the vast majority will ever need.\n\nIf you're ever so lucky to have the problem of being one of the top visited website/used webapps, you'll likely have the funds to hire some smart developers to focus on performance.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56792, "question": "Holy crap Perl is doing terrible. Given all of their chest thumping about how much faster they are than ruby you'd expect better results than this.", "aSentId": 56793, "answer": "put things in perspective. the json serialization shows various perl solutions delivering anywhere from 9k to over 20k (trivial) json serializations per second...which is realistically far in excess of what any user would require. indeed, resource use is likely far more of a concern in the case of perl than performance\n\nis anyone really considering doing website programming in C just because the first result achieves 2.2 mln json serializations? i can't imagine tossing a good tool based on results from a list like this. use common sense!\n\ni would personally only discard-out-of-hand the real laggards, those than can't manage to get to around 2k/sec...but even then, most real sites distribute load such that its rare to see more than 1k simultaneously conns per web server anyway...after that, it seems typical that other bottlenecks arise (DB, etc). many moderately-high-traffic sites get by fine with stuff like rails.\n\ntl;dr: with a few exceptions, almost everything is fast enough for most needs", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56794, "question": "put things in perspective. the json serialization shows various perl solutions delivering anywhere from 9k to over 20k (trivial) json serializations per second...which is realistically far in excess of what any user would require. indeed, resource use is likely far more of a concern in the case of perl than performance\n\nis anyone really considering doing website programming in C just because the first result achieves 2.2 mln json serializations? i can't imagine tossing a good tool based on results from a list like this. use common sense!\n\ni would personally only discard-out-of-hand the real laggards, those than can't manage to get to around 2k/sec...but even then, most real sites distribute load such that its rare to see more than 1k simultaneously conns per web server anyway...after that, it seems typical that other bottlenecks arise (DB, etc). many moderately-high-traffic sites get by fine with stuff like rails.\n\ntl;dr: with a few exceptions, almost everything is fast enough for most needs", "aSentId": 56795, "answer": "Obviously perl is fast enough and has plenty of high profile sites written in it. I'm just pointing out that \"common folklore\" about performance isn't necessarily right.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56797, "question": "I love this benchmark - bit sad to see that I'll have to learn C++ to use the consistently top (-ish) performing framework: \n\nulib ( https://github.com/stefanocasazza/ULib )", "aSentId": 56798, "answer": "why? who needs a single web server to perform over two million simple json serializations per second?\n\nthe guy using java will still be able to trivially exceed his performance requirements and release code a lot faster than anyone who thinks c++ is a good tool for web development.  \n\nrealworld web servers will always be gated on a database", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56799, "question": "why? who needs a single web server to perform over two million simple json serializations per second?\n\nthe guy using java will still be able to trivially exceed his performance requirements and release code a lot faster than anyone who thinks c++ is a good tool for web development.  \n\nrealworld web servers will always be gated on a database", "aSentId": 56800, "answer": "&gt; realworld web servers will always be gated on a database\n\nDing ding ding -- exactly.  These benchmarks are _only_ good for giving you an idea of how these frameworks stack up relative to each other.  I have to roll my eyes at people poo-pooing a technology that can \"only\" handle 70k requests per second.  Do you folks realize what a staggeringly massive amount of traffic that is?  That's over 6 billion requests per day.  You almost certainly are NOT getting that kind of interest in your little web service.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56801, "question": "&gt; realworld web servers will always be gated on a database\n\nDing ding ding -- exactly.  These benchmarks are _only_ good for giving you an idea of how these frameworks stack up relative to each other.  I have to roll my eyes at people poo-pooing a technology that can \"only\" handle 70k requests per second.  Do you folks realize what a staggeringly massive amount of traffic that is?  That's over 6 billion requests per day.  You almost certainly are NOT getting that kind of interest in your little web service.", "aSentId": 56802, "answer": "...and even if you had a web service that popular, you would never send that much traffic to a single host...what happens when the hardware fails?\n\nfor large web services, ops people have to consider how much traffic a single host will be transferring to its peers when it fails suddenly", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56805, "question": "My latest book for total beginners, Automate the Boring Stuff with Python, is almost ready! Free under a Creative Commons license, and 30% discount code (70% for my other books) for physical copy", "aSentId": 56806, "answer": "Thanks for these books, I learned my first bits of computer programming from your Python and Pygame books years ago I just realized. Glad to see you're still putting stuff out there", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56807, "question": "Thanks for these books, I learned my first bits of computer programming from your Python and Pygame books years ago I just realized. Glad to see you're still putting stuff out there", "aSentId": 56808, "answer": "That's awesome to hear! Knowing that people find them helpful makes all the effort worth it. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56805, "question": "My latest book for total beginners, Automate the Boring Stuff with Python, is almost ready! Free under a Creative Commons license, and 30% discount code (70% for my other books) for physical copy", "aSentId": 56810, "answer": "How exactly do you get a copy of the ebook for free?  The only links I find take me to the site wanting 24$.   What am I missing here?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56811, "question": "How exactly do you get a copy of the ebook for free?  The only links I find take me to the site wanting 24$.   What am I missing here?", "aSentId": 56812, "answer": "Sorry, they're on the main inventwithpython.com website but I've added direct links. The Automate book will be online in a few days:\n\n&gt; (I'm working furiously to finish formatting the HTML version right now!)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56805, "question": "My latest book for total beginners, Automate the Boring Stuff with Python, is almost ready! Free under a Creative Commons license, and 30% discount code (70% for my other books) for physical copy", "aSentId": 56814, "answer": "I keep telling myself I'm going to learn python, gonna give this book a go and commit to it this time. Thanks for the free share.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56817, "question": "RoboVM 1.1 released, Interface Builder &amp; IntelliJ IDEA support", "aSentId": 56818, "answer": "While looking good, still not at the level as Cordova/PhoneGap/other and I doubt there is InAppPurchase plugins, etc.\n\nAlso, the price are ridiculously high.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56817, "question": "RoboVM 1.1 released, Interface Builder &amp; IntelliJ IDEA support", "aSentId": 56820, "answer": "Sorry for the dumb question, but do you still need to pay $99 to Apple even if you want to use your application only on your own device?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56821, "question": "Sorry for the dumb question, but do you still need to pay $99 to Apple even if you want to use your application only on your own device?", "aSentId": 56822, "answer": "Yeah :( \n\nYou can work around it via a jailbreak, YMMV.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56823, "question": "Yeah :( \n\nYou can work around it via a jailbreak, YMMV.", "aSentId": 56824, "answer": "Damn, I really like Apple products, but this fact makes me want to switch to Android.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56826, "question": "The power of DNS rebinding: stealing WiFi passwords with a website", "aSentId": 56827, "answer": "The browser is the new Flash plugin in terms of security... hurray!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56826, "question": "The power of DNS rebinding: stealing WiFi passwords with a website", "aSentId": 56829, "answer": "That's clever and dumb. I see this as a browser problem. The DNS should not change until the page is reloaded which should make this attack impossible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56826, "question": "The power of DNS rebinding: stealing WiFi passwords with a website", "aSentId": 56831, "answer": "Scary stuff!\n\nAnother possible mitigation to add to the list: have some kind of script blocker, like NoScript, in your browser.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56832, "question": "Scary stuff!\n\nAnother possible mitigation to add to the list: have some kind of script blocker, like NoScript, in your browser.", "aSentId": 56833, "answer": "Run your \"browsing-browser\" in its own network, filesystem and process namespace, shielded from your other network and other \"todo things with\" browser which you should only use for known websites such as to administer router.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56834, "question": "Run your \"browsing-browser\" in its own network, filesystem and process namespace, shielded from your other network and other \"todo things with\" browser which you should only use for known websites such as to administer router.", "aSentId": 56835, "answer": "on a dedicated computer in a dedicated building, connected to a separate power grid.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56838, "question": "This has a simple enough fix; the computer's name resolver should only accept A records referring to the local private network iff the DNS server is in that network. Caching DNS servers should perform the same filtering.\n\nFor example, if you are 192.168.1.10 and your DNS server is 8.8.4.4, there is no way an A record pointing to 192.168.1.* can possibly be correct. The local resolver should reject it.\n\nLikewise, if you are 192.168.1.10 and your DNS server is 192.168.1.254 (which is your home router, providing a caching DNS service), the router must filter out any 192.168.1.* responses from the upstream DNS, but is free to provide its own local network records.", "aSentId": 56839, "answer": "That gets way more complicated when you consider CNAMEs and the like. Easier solution would just be to validate the host header on routers before giving information away unauthenticated.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56840, "question": "That gets way more complicated when you consider CNAMEs and the like. Easier solution would just be to validate the host header on routers before giving information away unauthenticated.", "aSentId": 56841, "answer": "I agree, but the trouble is, if you're embedded device on someone's LAN... what *is* your hostname?\n\nShould web browsers to do forward-confirmed reverse DNS checks?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56838, "question": "This has a simple enough fix; the computer's name resolver should only accept A records referring to the local private network iff the DNS server is in that network. Caching DNS servers should perform the same filtering.\n\nFor example, if you are 192.168.1.10 and your DNS server is 8.8.4.4, there is no way an A record pointing to 192.168.1.* can possibly be correct. The local resolver should reject it.\n\nLikewise, if you are 192.168.1.10 and your DNS server is 192.168.1.254 (which is your home router, providing a caching DNS service), the router must filter out any 192.168.1.* responses from the upstream DNS, but is free to provide its own local network records.", "aSentId": 56843, "answer": "That fixes nothing. Type in `173.194.43.71`. Thats google ip address. I could do the same attack bc google didn't check the domain name. My simple fix is more simple and is correct (AFAIK)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56844, "question": "That fixes nothing. Type in `173.194.43.71`. Thats google ip address. I could do the same attack bc google didn't check the domain name. My simple fix is more simple and is correct (AFAIK)", "aSentId": 56845, "answer": "That's not the same attack.\n\nIf you run attacksite.com and want to obtain data *from* google.com... you could do that with `wget`. You don't want data from google.com itself, you want the browser to mistake you for google.com, and thus hand out private information. The browser won't do that unless it's user has been exceptionally odd and stupid, and visited google.com over the IP address you spoof yourself to be.\n\nThis attack is interested in exfiltrating data it would not otherwise have access to. It requires your browser, with access to a network that's otherwise unreachable, to be the unwitting helper.\n\nIP addresses change all the time, and trying to lock a hostname down to one particular IP address for any particular duration binds the hands of server operators. Meanwhile, \"until the page is reloaded\" is irrelevant, because it's quite OK to serve a page entirely out of cache (e.g. setting `Cache-Control: max-age=...` means the browser won't even *ask* the server for a resource), and cookies can hold onto data stored against your domain name rather than IP address, so the trick is still possible.\n\nThe root cause of the problem is DNS entries claiming to represent an IP address that they can't represent. On the public internet, the solution to cutting out this spoofing will be along the lines of DNSSEC, DANE and HTTPS. But for local networks / intranets, there's not much that can be done, because ultimately there are no anchors of trust in local networks. The best we can do is keep the internet and local networks firewalled off from each other; this includes stopping firewall-piercing attacks like this one.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56846, "question": "That's not the same attack.\n\nIf you run attacksite.com and want to obtain data *from* google.com... you could do that with `wget`. You don't want data from google.com itself, you want the browser to mistake you for google.com, and thus hand out private information. The browser won't do that unless it's user has been exceptionally odd and stupid, and visited google.com over the IP address you spoof yourself to be.\n\nThis attack is interested in exfiltrating data it would not otherwise have access to. It requires your browser, with access to a network that's otherwise unreachable, to be the unwitting helper.\n\nIP addresses change all the time, and trying to lock a hostname down to one particular IP address for any particular duration binds the hands of server operators. Meanwhile, \"until the page is reloaded\" is irrelevant, because it's quite OK to serve a page entirely out of cache (e.g. setting `Cache-Control: max-age=...` means the browser won't even *ask* the server for a resource), and cookies can hold onto data stored against your domain name rather than IP address, so the trick is still possible.\n\nThe root cause of the problem is DNS entries claiming to represent an IP address that they can't represent. On the public internet, the solution to cutting out this spoofing will be along the lines of DNSSEC, DANE and HTTPS. But for local networks / intranets, there's not much that can be done, because ultimately there are no anchors of trust in local networks. The best we can do is keep the internet and local networks firewalled off from each other; this includes stopping firewall-piercing attacks like this one.\n", "aSentId": 56847, "answer": "Not only did you not explain how it isn't the same attack you think the problem is something completely different then what it is. There is ABSOLUTELY no reason the DNS can not be any IP address it wants.\n\nIn fact I sometimes have my domains point to 127.0.0.1 to test on my local machine before setting the site up live. Why? Because I may have a client app and sometimes tools that I configure to use my domain. It looks `mydomain.com` and its sent to my local machine where i test. What you just said is I read this article and see a different attack than you which you are not fixing bc you think something else is a problem and what I see should not be fixed", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56848, "question": "Not only did you not explain how it isn't the same attack you think the problem is something completely different then what it is. There is ABSOLUTELY no reason the DNS can not be any IP address it wants.\n\nIn fact I sometimes have my domains point to 127.0.0.1 to test on my local machine before setting the site up live. Why? Because I may have a client app and sometimes tools that I configure to use my domain. It looks `mydomain.com` and its sent to my local machine where i test. What you just said is I read this article and see a different attack than you which you are not fixing bc you think something else is a problem and what I see should not be fixed", "aSentId": 56849, "answer": "While I don't agree with kyz's solution. You can't attack Google with the same attack. Its only relevant for hosts that trust the user based on IP address. In the case of Google the browser will no longer send a cookie as the browser thinks its a different site so Google would not send any private information.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56848, "question": "Not only did you not explain how it isn't the same attack you think the problem is something completely different then what it is. There is ABSOLUTELY no reason the DNS can not be any IP address it wants.\n\nIn fact I sometimes have my domains point to 127.0.0.1 to test on my local machine before setting the site up live. Why? Because I may have a client app and sometimes tools that I configure to use my domain. It looks `mydomain.com` and its sent to my local machine where i test. What you just said is I read this article and see a different attack than you which you are not fixing bc you think something else is a problem and what I see should not be fixed", "aSentId": 56851, "answer": "While I don't agree with kyz's solution. You can't attack Google with the same attack. Its only relevant for hosts that trust the user based on IP address. In the case of Google the browser will no longer send a cookie as the browser thinks its a different site so Google would not send any private information.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56852, "question": "While I don't agree with kyz's solution. You can't attack Google with the same attack. Its only relevant for hosts that trust the user based on IP address. In the case of Google the browser will no longer send a cookie as the browser thinks its a different site so Google would not send any private information.", "aSentId": 56853, "answer": "It was just an example. You wouldn't get cookies from the domain `google.com`but you would be able to get the source code from that ip address and run your own scripts.\n\nMy point was that it doesn't matter what domain you're looking at, the browser is failing to ensure a page from one server isn't accessing data from a different server when it should not be able to (the CORS is failing)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56855, "question": "Internet Explorer 8 Support Will Be Removed in Ember 2.0", "aSentId": 56856, "answer": "IE8 is pretty old and going out of support from Microsoft at the end of the year.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56857, "question": "IE8 is pretty old and going out of support from Microsoft at the end of the year.", "aSentId": 56858, "answer": "Yet I use it every day at a few of our customer sites.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56859, "question": "Yet I use it every day at a few of our customer sites.", "aSentId": 56860, "answer": "Well, uh, don't do that, then?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56861, "question": "Well, uh, don't do that, then?", "aSentId": 56862, "answer": "Except that is the only browser allowed by the IT.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56863, "question": "Except that is the only browser allowed by the IT.", "aSentId": 56864, "answer": "They'll have to allow more modern browsers if more people drop support for IE8.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56865, "question": "They'll have to allow more modern browsers if more people drop support for IE8.", "aSentId": 56866, "answer": "I doubt , as long as the internal applications work, after all, one is not supposed to surf on the job at those sites,", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56857, "question": "IE8 is pretty old and going out of support from Microsoft at the end of the year.", "aSentId": 56868, "answer": "I am pretty sure Win7 ships with IE8 which means that IE8 will be supported for the lifetime of Win7.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56857, "question": "IE8 is pretty old and going out of support from Microsoft at the end of the year.", "aSentId": 56870, "answer": "Every hospital in New Zealand just upgraded from IE6 to IE8, literally.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56855, "question": "Internet Explorer 8 Support Will Be Removed in Ember 2.0", "aSentId": 56872, "answer": "Darn, I was hoping to find usage statistics on large Ember sites.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56855, "question": "Internet Explorer 8 Support Will Be Removed in Ember 2.0", "aSentId": 56874, "answer": "&gt; Our Semantic Version guarantees mean that the vast majority of the community should migrate to the 2.x series as soon as possible.\n\nI don't understand what 'Semantic Version guarantees' means, such that it means the majority of the community should migrate to 2.x? Can anyone explain what they mean? I'm not an Ember user. \n\nFrom what I know of \"semantic versioning\", it means that 2.x does not need to be backwards compatible with any 1.x.  So I'm not sure how that somehow has a consequence that the majority of users should upgrade? Obviously you'll need to upgrade to get new features, I'm not sure what it has to do with semantic versioning guarantees though? Semantic versioning pretty much means there _are_ no guarantees between 1.x and 2.x, so what \"Semantic Versioning Guarantees\" are they talking about, do they mean something different by it? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56875, "question": "&gt; Our Semantic Version guarantees mean that the vast majority of the community should migrate to the 2.x series as soon as possible.\n\nI don't understand what 'Semantic Version guarantees' means, such that it means the majority of the community should migrate to 2.x? Can anyone explain what they mean? I'm not an Ember user. \n\nFrom what I know of \"semantic versioning\", it means that 2.x does not need to be backwards compatible with any 1.x.  So I'm not sure how that somehow has a consequence that the majority of users should upgrade? Obviously you'll need to upgrade to get new features, I'm not sure what it has to do with semantic versioning guarantees though? Semantic versioning pretty much means there _are_ no guarantees between 1.x and 2.x, so what \"Semantic Versioning Guarantees\" are they talking about, do they mean something different by it? ", "aSentId": 56876, "answer": "Ember follows http://semver.org. This means that updating from `1.x` to `1.(x+1)` is (modulo bugs) a drop-in upgrade.\n\nThe next paragraph of the post after your quote explains your question in more full: because it's easy to go from `1.x` to `1.x+1`, anyone on a `1.x` release should be able to easily upgrade to `1.13`. At that point, by reading the deprecation notices and updating their code, once you have a clean build of a `1.13` app, you can just drop in `2.0`, and it should Just Work. This means that the majority of the community should be able to get to `2.0` fairly quickly.\n\nThe part you're quoting refers to the first step of that process: getting everyone on `1.13`.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56875, "question": "&gt; Our Semantic Version guarantees mean that the vast majority of the community should migrate to the 2.x series as soon as possible.\n\nI don't understand what 'Semantic Version guarantees' means, such that it means the majority of the community should migrate to 2.x? Can anyone explain what they mean? I'm not an Ember user. \n\nFrom what I know of \"semantic versioning\", it means that 2.x does not need to be backwards compatible with any 1.x.  So I'm not sure how that somehow has a consequence that the majority of users should upgrade? Obviously you'll need to upgrade to get new features, I'm not sure what it has to do with semantic versioning guarantees though? Semantic versioning pretty much means there _are_ no guarantees between 1.x and 2.x, so what \"Semantic Versioning Guarantees\" are they talking about, do they mean something different by it? ", "aSentId": 56878, "answer": "As descirbed in the [Ember 2.0 RFC](https://github.com/emberjs/rfcs/blob/ember-2.0-rfc/active/0000-the-road-to-ember-2-0.md)\n\n&gt; This is not a big-bang rewrite; we will continue development on the master branch, and roll out changes incrementally on the 1.x release train. The 2.0.0 release will simply remove features that have been deprecated between now and then. Our goal is that you can move your Ember app to 2.0 incrementally, one sprint at a time.\n\n2.0 has no new features, it's more of a spring clean to remove features that will not longer be supported (like IE8 support). All these features will have deprecation warnings, so if you have no deprecations on your 1.13 app, you will be able to upgrade to 2.0 easily.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56880, "question": "Async and Await\u0003 \u2013 Painless Threading With C#", "aSentId": 56881, "answer": "At least until your wait calls mysteriously hang...\n\nAsync/wait sounds really nice, but in what I thought was a common use-case my XAML app required hacks just for basic functionality", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56882, "question": "At least until your wait calls mysteriously hang...\n\nAsync/wait sounds really nice, but in what I thought was a common use-case my XAML app required hacks just for basic functionality", "aSentId": 56883, "answer": "It's most likely you were doing something incorrectly. Async await is incredibly simple and flexible ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56882, "question": "At least until your wait calls mysteriously hang...\n\nAsync/wait sounds really nice, but in what I thought was a common use-case my XAML app required hacks just for basic functionality", "aSentId": 56885, "answer": "They don't \"hang\" whatever that means but I wouldn't be surprised if you had a deadlock, which can happen. Use the .ConfigureAwait(false) method on that awaitable whenever possible when you don't need to capture the thread context. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56887, "question": "Magento Open Source Downloads Contain PHP Remote Code Execution", "aSentId": 56888, "answer": "CTO of a Magento solutions partner here. It does really suck that they don't patch the downloads. I honestly can't understand why. \n\nFurthermore they have a downloader tool built into Magento. That could easily be extended to apply patches. \n\nBad developers will sometimes modify core files but the patches can detect that already. \n\nSigh. Things could be done so much better. \n\nWe already use composer for a number of things. I wonder if the open Magento mirror on GitHub applies the patched. If they do maybe I'll see about using composer for core Magento too. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56890, "question": "The Dharma of Vi", "aSentId": 56891, "answer": "&gt; then they programmed ... in Lisp\n\nMaster Vi programming in Lisp? Mistranslation, or evidence that this document is a modern forgery?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56892, "question": "&gt; then they programmed ... in Lisp\n\nMaster Vi programming in Lisp? Mistranslation, or evidence that this document is a modern forgery?", "aSentId": 56893, "answer": "Are you referring to historical reasons? LISP is hardly a modern language: it was invented in 1958, published in 1960, while C came to exist in 1972. When Vi came, LISP was already an old veritable language with 12-14 years of existence. If anything I'd be more shocked about the use of HTML which only came to exist in 1990.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56890, "question": "The Dharma of Vi", "aSentId": 56895, "answer": "A troll may assume many forms. He may deceive even the most observant in letting them think of him as a dainty princess. However, once he opens his mouth and let the words flow, the deception holds no longer. \n\nAnd all were enlightened.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56890, "question": "The Dharma of Vi", "aSentId": 56897, "answer": "Moral of the story.. use emacs", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56900, "question": "First Aid git: a searchable collection of the most frequently asked Git questions", "aSentId": 56901, "answer": "How about:\n\n* A Git equivalent of *hg &lt;bcomp or other extdiff command&gt; &lt;remote&gt;* that doesn't result in confusing shit.\n    \n * Yes, I know about: *git difftool --dir-diff &lt;remote&gt;*\n * I just want a straightforward directory-based diff between the current working directory (even uncommitted changes, i.e. not necessarily HEAD) and a remote, passed to Beyond Compare (or any other diff tool).\n* Forcing Git to use more sensible (purely IMO) colors when outputting a status (i.e. for *git status*) on a *nix terminal:\n\n * Green = added\n * Red = removed\n * Blue = modified\n * Cyan = moved\n* A way (if possible) to have Git interrupt any \"partial\" *git commit* that doesn't include all changes (i.e. isn't the equivalent of *git commit -a*) to ask for a confirmation; yes, I'm a Mercurial-tard :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56900, "question": "First Aid git: a searchable collection of the most frequently asked Git questions", "aSentId": 56903, "answer": "How many git tutorials, cheatsheets, visual aid tools, etc... do people honestly need?\n\nYou want to learn git by teaching ... teach your neighbour at your office how to use git.  Stop posting this crap.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56904, "question": "How many git tutorials, cheatsheets, visual aid tools, etc... do people honestly need?\n\nYou want to learn git by teaching ... teach your neighbour at your office how to use git.  Stop posting this crap.  ", "aSentId": 56905, "answer": "Infinitely many until someone stops being an ass and makes git usability less horrible :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56907, "question": "2005 article, reposted because of all that one-sided reporting around Moore's law: Sutter, \"The Free Lunch Is Over: A Fundamental Turn Toward Concurrency in Software\"", "aSentId": 56908, "answer": "This did happen. But in a painless way.\n\nThere are many places to introduce concurrency. Us programmers immediately jumped to the conclusion (or, perhaps I overgeneralize, but this article certainly did) that this means that code needs to fundamentally parallelize at all levels as much as possible, sorting in parallel, running operations on collections in parallel, etcetera.\n\nThat, fortunately, wasn't necessary. We still haven't really cracked that egg. While I'm vastly oversimplifying here, node.js's callbacks suffer from 'callback hell', and something like scala still has /: (fold left operator) in the default batch of operators, and any operation that uses the word accumulator, is NOT parallellizable.\n\n\nBut nevertheless we've arrived in the concurrent era. We just take care of it at the very largest of scales. Our web servers will assign incoming requests to a thread in the thread pool, let that thread process the request 100% synchronously so that our code gets to look mostly like it always has, and if it's a big server, just run thousands of threads if you have to. This works great.\n\nOn personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nMore than enough to stave off Moore's law doomsday for many a year.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56909, "question": "This did happen. But in a painless way.\n\nThere are many places to introduce concurrency. Us programmers immediately jumped to the conclusion (or, perhaps I overgeneralize, but this article certainly did) that this means that code needs to fundamentally parallelize at all levels as much as possible, sorting in parallel, running operations on collections in parallel, etcetera.\n\nThat, fortunately, wasn't necessary. We still haven't really cracked that egg. While I'm vastly oversimplifying here, node.js's callbacks suffer from 'callback hell', and something like scala still has /: (fold left operator) in the default batch of operators, and any operation that uses the word accumulator, is NOT parallellizable.\n\n\nBut nevertheless we've arrived in the concurrent era. We just take care of it at the very largest of scales. Our web servers will assign incoming requests to a thread in the thread pool, let that thread process the request 100% synchronously so that our code gets to look mostly like it always has, and if it's a big server, just run thousands of threads if you have to. This works great.\n\nOn personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nMore than enough to stave off Moore's law doomsday for many a year.\n", "aSentId": 56910, "answer": "I think this hits the nail on the head, especially your point about performance on personal machinrs. Ten years ago, I don't think anyone realized the performance boost that would be gained once operating systems realized at a fundamental level that multicore processing was a thing, and actually made a real attempt to take advantage of them.\n\n I still cannot believe how much slower my parents old computer (which had a 3.0 GHz single core processor) runs than my old laptop (basically the same specs, but with a 2.93 GHz dual-core), especially when I tried using it the way I use computers now (like you said, 20 things open at the same time). This is not to say that that is the only reason - I highly doubt the versions of software I was using in 2007-ish were as well-written for multicore as they presumably are now, but I think the point remains.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56911, "question": "I think this hits the nail on the head, especially your point about performance on personal machinrs. Ten years ago, I don't think anyone realized the performance boost that would be gained once operating systems realized at a fundamental level that multicore processing was a thing, and actually made a real attempt to take advantage of them.\n\n I still cannot believe how much slower my parents old computer (which had a 3.0 GHz single core processor) runs than my old laptop (basically the same specs, but with a 2.93 GHz dual-core), especially when I tried using it the way I use computers now (like you said, 20 things open at the same time). This is not to say that that is the only reason - I highly doubt the versions of software I was using in 2007-ish were as well-written for multicore as they presumably are now, but I think the point remains.", "aSentId": 56912, "answer": "That may also be much more down to the amount of RAM than anything else. Doing twenty things at one time will slow to a crawl pretty fast on any processor if you hit swap.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56913, "question": "That may also be much more down to the amount of RAM than anything else. Doing twenty things at one time will slow to a crawl pretty fast on any processor if you hit swap.", "aSentId": 56914, "answer": "Better architecture can do more instructions per cycle as well ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56915, "question": "Better architecture can do more instructions per cycle as well ", "aSentId": 56916, "answer": "Sure, but that also only helps up to a point.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56909, "question": "This did happen. But in a painless way.\n\nThere are many places to introduce concurrency. Us programmers immediately jumped to the conclusion (or, perhaps I overgeneralize, but this article certainly did) that this means that code needs to fundamentally parallelize at all levels as much as possible, sorting in parallel, running operations on collections in parallel, etcetera.\n\nThat, fortunately, wasn't necessary. We still haven't really cracked that egg. While I'm vastly oversimplifying here, node.js's callbacks suffer from 'callback hell', and something like scala still has /: (fold left operator) in the default batch of operators, and any operation that uses the word accumulator, is NOT parallellizable.\n\n\nBut nevertheless we've arrived in the concurrent era. We just take care of it at the very largest of scales. Our web servers will assign incoming requests to a thread in the thread pool, let that thread process the request 100% synchronously so that our code gets to look mostly like it always has, and if it's a big server, just run thousands of threads if you have to. This works great.\n\nOn personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nMore than enough to stave off Moore's law doomsday for many a year.\n", "aSentId": 56918, "answer": "&gt; On personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nThe problem with this that all those things barely need one single core even when they all do it at the same time. Whereas the compiler could easily take all cores available, if compilation were easy to parallelize. (Which it is if you parallellize compiling different compilation units, and that's definitely a time saver.)\n\nThe development of the Mozilla Servo rendering engine is welcomed to me, at least it can do a single task that takes time by using multiple cores.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56919, "question": "&gt; On personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nThe problem with this that all those things barely need one single core even when they all do it at the same time. Whereas the compiler could easily take all cores available, if compilation were easy to parallelize. (Which it is if you parallellize compiling different compilation units, and that's definitely a time saver.)\n\nThe development of the Mozilla Servo rendering engine is welcomed to me, at least it can do a single task that takes time by using multiple cores.", "aSentId": 56920, "answer": "That's true. Compilers really ought to just use multiple cores.\n\nBut here too the 'work in the largest frame possible then consider all code single thread at the smaller levels' comes to the rescue. A compiler should analyse all files it needs to turn into an AST, then parallelize that, because making ASTs is 100% independent.\n\nDepends on the language, but for many, that's more than fast enough. Parsing is sloooow.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56909, "question": "This did happen. But in a painless way.\n\nThere are many places to introduce concurrency. Us programmers immediately jumped to the conclusion (or, perhaps I overgeneralize, but this article certainly did) that this means that code needs to fundamentally parallelize at all levels as much as possible, sorting in parallel, running operations on collections in parallel, etcetera.\n\nThat, fortunately, wasn't necessary. We still haven't really cracked that egg. While I'm vastly oversimplifying here, node.js's callbacks suffer from 'callback hell', and something like scala still has /: (fold left operator) in the default batch of operators, and any operation that uses the word accumulator, is NOT parallellizable.\n\n\nBut nevertheless we've arrived in the concurrent era. We just take care of it at the very largest of scales. Our web servers will assign incoming requests to a thread in the thread pool, let that thread process the request 100% synchronously so that our code gets to look mostly like it always has, and if it's a big server, just run thousands of threads if you have to. This works great.\n\nOn personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nMore than enough to stave off Moore's law doomsday for many a year.\n", "aSentId": 56922, "answer": "&gt; and any operation that uses the word accumulator, is NOT parallellizable.\n\nUnless that accumulator is restricted to be a monoid. See for example [monoids without tears](http://fsharpforfunandprofit.com/posts/monoids-without-tears/)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56923, "question": "&gt; and any operation that uses the word accumulator, is NOT parallellizable.\n\nUnless that accumulator is restricted to be a monoid. See for example [monoids without tears](http://fsharpforfunandprofit.com/posts/monoids-without-tears/)", "aSentId": 56924, "answer": "One slight problem: you need to ensure your operator is actually associative. Current mainstream type systems don't capture that.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56925, "question": "One slight problem: you need to ensure your operator is actually associative. Current mainstream type systems don't capture that.\n", "aSentId": 56926, "answer": "I've actually thought about that a lot.  Are there any languages with type systems that can capture algebraic properties of types?  It would be at least interesting to be able to say \"this type forms a group using this operations\" or something to that effect.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56927, "question": "I've actually thought about that a lot.  Are there any languages with type systems that can capture algebraic properties of types?  It would be at least interesting to be able to say \"this type forms a group using this operations\" or something to that effect.", "aSentId": 56928, "answer": "&gt; Are there any languages with type systems that can capture algebraic properties of types?\n\nSeveral, any language which define type classes and higher kinded types can capture Monoids, including Scala.\n\nTo epand on that point: http://eed3si9n.com/learning-scalaz/Monoid.html\n\nScalaz captures Monoids can has a parallelizable  fold left for for types that admit an associative operator. This also allows you to things like admit [sumLeft](https://github.com/scalaz/scalaz/blob/49b235695f1d3ae3217a70b419cbb33337f31ade/core/src/main/scala/scalaz/syntax/FoldableSyntax.scala#L33) on `List[T]`(or any Foldable, another algebraic property captured by scalaz) if there exist a `Monoid[T]`.\n\n\nEDIT: `/:`operator that GP was referencing is the foldLeft operator in the standard library. The standard library implementation of foldLeft isn't generic and is hand written for every foldable in the standard library(for no particularly good reason other than legacy).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56930, "question": "&gt; On personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nThat's all the low hanging fruit, though. That'll keep a few cores busy. What then? That's where we're stuck now.", "aSentId": 56931, "answer": "That's his point though, in the meantime we are fine and will probably for another 5 or so years since core count (at least for Intel) won't go beyond 6-8 in that time. The real push in concurrency right now is things like parallel_for_each, where parallelization is all hidden behind simple functions. That will also help most programmers transition, at least as far as baby steps.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56930, "question": "&gt; On personal machines, there's just lots to do. Maybe our IDE's compiler is completely needlessly STILL single threaded, but in the mean time, twitter checks for updates, spotify is streaming music and decoding it, our chrome is ticking down reddit's \"the button\" counter, my local copy of some postgres stuff is busy vacuuming, the IDE itself is doing some garbage collection, the CPU is busy blinking the cursor in my editor, and my IRC client is doing stuff.\n\nThat's all the low hanging fruit, though. That'll keep a few cores busy. What then? That's where we're stuck now.", "aSentId": 56933, "answer": "What then? There really is no what then. Computers are 'fast enough' for what we _currently_ wish them to perform, at least as far as non-parallellized, personal computing tasks go, up to and including serious business like running photoshop filters and very big iron IDEs with huge projects (primarily because those already have some parallelism; it's not much, but more than enough to feel near-instantaneous and that's all a homo sapiens is ever going to need until we invent direct brain plug interfaces and enhance ourselves neurally or upload ourselves into the machine). Whatever irksome delays you still notice today can be finessed out without software changes. The few miles that CPU cores have left to give by way of improved pipelining, very slight improvements in CPU performance, and better near-core comms (soldering the SSD straight on, moving the bridges closer and even into the core, etc).\n\nDoes that mean CPU's simply don't need to be faster, or that code simply doesn't need to? Nope. Just because we're all satisfied now doesn't mean the future won't bring new things. But those new things will be built with parallelism in mind, and I'll bet a large chunk of cash that whatever it is, is trivially parallelizable 'in the large' or 'in the micro', by which I mean that it is highly unlikely to be code you write: Either the API 'above you' (the web server) takes care of it and your entry point is already in a paralleled environment, or you can just write straight up single-thread code which hands off some tricky calculations to an API that takes care of smearing the job out across your cores. Either way, you never need hear the word 'thread' to even program in either scenario. The push for programming languages to take care of this, would basically be pointless, and any sacrifice of code quality in the name of improving parallelism would be a mistake.\n\nSomeone will have to write these libraries, but at those levels it is usually trivial, in the sense that nginx's core dispatch functionality was ALWAYS going to be a rocket science extravaganza, and the same goes for the microscopic level of for example writing a bitcoin miner. At those levels, parallelism isn't even an interesting problem anymore.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56907, "question": "2005 article, reposted because of all that one-sided reporting around Moore's law: Sutter, \"The Free Lunch Is Over: A Fundamental Turn Toward Concurrency in Software\"", "aSentId": 56937, "answer": "Summary: Processors continue to contain more transistors, but clock speeds have hit a wall. \n\nIt is possible to use the additional silicon for multi-core processors. However really using them requires concurrent programming, and this is damn hard to do correctly.\n\n(By the way, most of the speed gains in personal computers in the last years have been due to the introduction of solid-state drives, which are a huge benefit for almost every PC built in the last ten years).\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56938, "question": "Summary: Processors continue to contain more transistors, but clock speeds have hit a wall. \n\nIt is possible to use the additional silicon for multi-core processors. However really using them requires concurrent programming, and this is damn hard to do correctly.\n\n(By the way, most of the speed gains in personal computers in the last years have been due to the introduction of solid-state drives, which are a huge benefit for almost every PC built in the last ten years).\n", "aSentId": 56939, "answer": "The authors predictions about cache size and better pipelining also turned out to be accurate. And a whole lot more is implemented in silicon now than used to be - e.g. a hardware AES decryption module *in the CPU die on mainstream consumer products* would have been ludicrous in 2005.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56938, "question": "Summary: Processors continue to contain more transistors, but clock speeds have hit a wall. \n\nIt is possible to use the additional silicon for multi-core processors. However really using them requires concurrent programming, and this is damn hard to do correctly.\n\n(By the way, most of the speed gains in personal computers in the last years have been due to the introduction of solid-state drives, which are a huge benefit for almost every PC built in the last ten years).\n", "aSentId": 56941, "answer": "The focus in CPUs and graphics hardware has been on power efficiency.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56942, "question": "The focus in CPUs and graphics hardware has been on power efficiency.\n", "aSentId": 56943, "answer": "Thats more to do with the whole industry trying to move mobile.\n\nIntel are absolutely bricking it over Qualcomm.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56942, "question": "The focus in CPUs and graphics hardware has been on power efficiency.\n", "aSentId": 56945, "answer": "Power efficiency can be seen as simply just doing the job faster and then going to sleep. Power and speed are intrinsically limked.\n\nCertianly when we write software to minimise power drain, there are a few rally weird hacks you can do to lower your power draw, but the best thing you can do is just write really fast code and then go to sleep.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56907, "question": "2005 article, reposted because of all that one-sided reporting around Moore's law: Sutter, \"The Free Lunch Is Over: A Fundamental Turn Toward Concurrency in Software\"", "aSentId": 56947, "answer": "What is the fundamental problem that makes concurrency so difficult to program? Does the difficulty come from a lack of attention by programmers or is there some other limiting factor like the von neumann machine isn't up to the task of multitasking?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56948, "question": "What is the fundamental problem that makes concurrency so difficult to program? Does the difficulty come from a lack of attention by programmers or is there some other limiting factor like the von neumann machine isn't up to the task of multitasking?", "aSentId": 56949, "answer": "some is hard to program, some is hard to design.\n\nMost people think (and design and code) linearly (first step a, then b, then c), so its a significant mind-shift to change the way those things work and identify significant processes that can run independently but with foolproof mechanisms that allow them to pass data back and forth as needed without hitting wait states.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56950, "question": "some is hard to program, some is hard to design.\n\nMost people think (and design and code) linearly (first step a, then b, then c), so its a significant mind-shift to change the way those things work and identify significant processes that can run independently but with foolproof mechanisms that allow them to pass data back and forth as needed without hitting wait states.", "aSentId": 56951, "answer": "Exactly. Consciousness works in sequential (scalar) way, for some reason. We tend to program the way we think. That's not the best way. On the other hand, the unconscious mind works highly parallel. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56948, "question": "What is the fundamental problem that makes concurrency so difficult to program? Does the difficulty come from a lack of attention by programmers or is there some other limiting factor like the von neumann machine isn't up to the task of multitasking?", "aSentId": 56953, "answer": "The reasoning of most programmers is at this point is pretty tied to sequential execution,  and subtle differences that make no difference when executed sequentially make all the difference when executed concurrently.   One of the puzzles that I found to be extremely enlightening is the following:\n\n\nLet's say you have two threads,  which share a single common integer variable\n`a` that is initialized to 1.   Assuming each line below is atomic,\nwhat possible values can `a` take on if both threads are running the\nfirst code?   What if both threads were running the second? \n\n    do forever:\n        x := a\n        y := x\n        a := x + y\n\n\n    do forever:\n        x := a\n        y := a\n        a := x + y\n\n\nFor an answer,  and a follow up puzzle,  see &lt;http://lpaste.net/131113&gt;.    Sure, understanding this puzzle is just a tiny first step in grasping concurrency,   but the shift in perspective that solving it requires is essential.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56954, "question": "The reasoning of most programmers is at this point is pretty tied to sequential execution,  and subtle differences that make no difference when executed sequentially make all the difference when executed concurrently.   One of the puzzles that I found to be extremely enlightening is the following:\n\n\nLet's say you have two threads,  which share a single common integer variable\n`a` that is initialized to 1.   Assuming each line below is atomic,\nwhat possible values can `a` take on if both threads are running the\nfirst code?   What if both threads were running the second? \n\n    do forever:\n        x := a\n        y := x\n        a := x + y\n\n\n    do forever:\n        x := a\n        y := a\n        a := x + y\n\n\nFor an answer,  and a follow up puzzle,  see &lt;http://lpaste.net/131113&gt;.    Sure, understanding this puzzle is just a tiny first step in grasping concurrency,   but the shift in perspective that solving it requires is essential.", "aSentId": 56955, "answer": "There's also the part where non-synchronized caches are required in order for parallelism to actually speed things up. And those *really* make things hard.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56948, "question": "What is the fundamental problem that makes concurrency so difficult to program? Does the difficulty come from a lack of attention by programmers or is there some other limiting factor like the von neumann machine isn't up to the task of multitasking?", "aSentId": 56957, "answer": "Multiple streams of instructions are simultaneously reading and writing to the same set of memory addresses, but they are interleaved with one another *arbitrarily*. Plus, access to that memory is mediated by a complex cache coherency protocol and potentially non-local read/write operations between memory banks. How to get programs to work reliably and efficiently in this situation continues to be the source of Ph.D. dissertations, technical books, new programming libraries and languages, etc.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56963, "question": "The general prediction \"Concurrency is the next major revolution in how we write software\" didn't happen. Sutter is falsified. ", "aSentId": 56964, "answer": "Areas that need high performance did exploit the multicores, but it turned out that for general applications that wasn't worth it. Processors were already fast enough, and the cost of parallelizing your average application isn't worth the cost. As a result there wasn't much incentive for CPU companies to produce 16+ core CPUs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56965, "question": "Areas that need high performance did exploit the multicores, but it turned out that for general applications that wasn't worth it. Processors were already fast enough, and the cost of parallelizing your average application isn't worth the cost. As a result there wasn't much incentive for CPU companies to produce 16+ core CPUs.", "aSentId": 56966, "answer": "By the way, everyone should probably read the follow-up from 2012: http://herbsutter.com/welcome-to-the-jungle/\n\nI think Sutter got things basically right in 2004 with his 5-10 year prediction: yeah, we sure got our multicores everywhere, even in our phones.\n\nBut after getting to this point in 2012 he offered an updated prediction: this is not going to hold, we would probably never see a 16+ core general purpose CPU, much less a hundred core, because yes, we don't actually need more performance from _general purpose code_. The fact that usual people switched from desktops to laptops and are switching to tablets/smartphones and that the progress in the laptop category becomes more about weight and battery life than about performance proves this.\n\nHowever we'd better start thinking about coding for diverse computing substrates, from multi-machine servers to thousand-core GPUs, because that's the updated future.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56965, "question": "Areas that need high performance did exploit the multicores, but it turned out that for general applications that wasn't worth it. Processors were already fast enough, and the cost of parallelizing your average application isn't worth the cost. As a result there wasn't much incentive for CPU companies to produce 16+ core CPUs.", "aSentId": 56968, "answer": "I recently was involved in porting an old, not very demanding, desktop application from Windows MFC to Qt. Budget didn't allow for a complete re-architecture of the project, so we kept much of the old design. Only the UI and main event loop, now handled by Qt, were overhauled.\n\nBut if we had the budget, we could totally have exploited 32 or more cores. See, the main function of this app was to visualise and analyse sizeable heaps of data. The files involved were big (hundreds of megabytes is typical). Analysing them all easily took _minutes_, and we were already an order of magnitude faster than the old version, thanks to the removal of a couple performance killing architectural errors.\n\nYet, the old software was perceived as being \"fast enough\". How so? By not analysing the whole file. The user simply requested a partial analysis, starting at a given timestamp, then waited until enough data has been gathered (the user could just push \"pause\" at that point). In the mean time, the analysed data was being displayed in accelerated time (as fast as possible). Once that's done, the user could perform various statistics on the part of the data that was just extracted &amp; analysed.\n\nIn any case, the user had to wait. The thing was far from instant, in the old version as well as in the new. _And it bothered no one_. I knew personally that because of our internal data structures and the various overhead we didn't bother addressing, we were still leaving huge amounts of performance on the table. Not to mention we still hadn't used the parallel nuclear option. Overall, I believe we could have made the raw analysis 10 to 100 times faster that it was already. Yet it bothered no one. It was *okay* for the user to wait, because the user never waited for long. \n\nBut that's not the saddest part. The *real* problem was, because they gave up on performance from the very beginning, they didn't see how a couple orders of magnitude of additional processing speed could turn into a *qualitative* change. We could have processed whole files at once, at load time. We could have significantly simplified the interface, and probably tried new ways of interacting with the data.\n\nGranted, investigating this seriously would have cost about twice as much. As frustrating as it is, the decisions that were made may have been the right ones. Still, there's an important lesson here: Performance doesn't only dictate how *fast* you can do things. It often determines how *much* you can do, *how* you do it, or even *what* you can do.\n\nPerformance have many more benefits than mere speed.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56965, "question": "Areas that need high performance did exploit the multicores, but it turned out that for general applications that wasn't worth it. Processors were already fast enough, and the cost of parallelizing your average application isn't worth the cost. As a result there wasn't much incentive for CPU companies to produce 16+ core CPUs.", "aSentId": 56970, "answer": "&gt; As a result there wasn't much incentive for CPU companies to produce 16+ core CPUs.\n\nI don't really get that. Sure, most general applications still run single-core, but most users run multiple applications at the same time, don't they?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56971, "question": "&gt; As a result there wasn't much incentive for CPU companies to produce 16+ core CPUs.\n\nI don't really get that. Sure, most general applications still run single-core, but most users run multiple applications at the same time, don't they?", "aSentId": 56972, "answer": "Most users don't run 16 intensive applications simultaneously. Usually they use 1 application at a time, and some number of other applications are mostly idle, and then you have some background / OS processes that are also not very intensive. 4 cores is more than enough for that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56973, "question": "Most users don't run 16 intensive applications simultaneously. Usually they use 1 application at a time, and some number of other applications are mostly idle, and then you have some background / OS processes that are also not very intensive. 4 cores is more than enough for that.", "aSentId": 56974, "answer": "Fair enough. \n\nThat reminds me of another article I read claiming that if programs *were* designed to easily scale across multiple cores, we could save a lot of energy by using a lot of cores that individually are not that powerful but also consume much less energy. That way, power could be saved by turning off the cores when they are not in use.\n\nIf that's true, then perhaps mobile devices will drive the use multiple cores?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56975, "question": "Fair enough. \n\nThat reminds me of another article I read claiming that if programs *were* designed to easily scale across multiple cores, we could save a lot of energy by using a lot of cores that individually are not that powerful but also consume much less energy. That way, power could be saved by turning off the cores when they are not in use.\n\nIf that's true, then perhaps mobile devices will drive the use multiple cores?", "aSentId": 56976, "answer": "For actual power savings it's all about watts per computation. If an operation requires a million operations it doesn't matter if they happen in half a second or over a few seconds. They'll still use the same amount of power. Power savings comes from reducing the power needed per operation. \n\nBatching work on mobile is more about thermals than power saving. A device without a fan can only dissipate so much heat per second. Generating a lot of heat over a short duration lets the radiating material (case usually) act as a heat sink. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56973, "question": "Most users don't run 16 intensive applications simultaneously. Usually they use 1 application at a time, and some number of other applications are mostly idle, and then you have some background / OS processes that are also not very intensive. 4 cores is more than enough for that.", "aSentId": 56978, "answer": "Servers can run multiple intensive applications. But it seems users are limited by other factors too, like how to consume and interact with that many concurrent processes.\n\nYou generally have a few serial input devices (keyboard, mouse) and an output device (monitor). These ancient (in computer years) methods are still the predominant interaction points, and they impose their own sets of restrictions. Sure, you can add more monitors (I have 4 on my work desktop), but there's still a practical limit to what your eyes can take in and your brain can process. \n\nAnd there are other hardware limitations that have nothing to do with a CPU, such as the hard drive. Run as many simultaneous applications you want - we are still all sharing the disk I/O. And I would think this is really more of a limiting factor with more intensive applications as they will probably use the disk more. \n\nAll of these things are going to be limiting factors for the foreseeable future, whether we have 4 cores or 400. \n\nWhat I would like to see out of manycore is to use it to increase perceived performance. I remember reading an article a while ago about manycore that suggested exactly this (apologies for no link). One of their examples was using Photoshop and having it generate all the possibilities when you go in to preview a filter, so there's no delay as you switch the filters. So maybe we didn't make some parts faster, and the main app isn't calculating with all the many cores. but having whatever filter I pick pop up instantly sure would be nice.\n\nBut don't stop there - the OS should start to use predictive algorithms, for the sole purpose of determining what to precalculate and pregenerate, so whatever I decide to click next is already ready. Will a vast majority of the work the cores do be throwaway, most of it never even seen by human eyes? Yep. And I think that would be a pretty cool place to be. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56963, "question": "The general prediction \"Concurrency is the next major revolution in how we write software\" didn't happen. Sutter is falsified. ", "aSentId": 56981, "answer": "It happened in gaming where single threaded CPU performance is often the bottleneck. Ten years ago almost no games were multithreaded. These days it's more common than not for games to have two or more large threads. They are still bottlenecked by single thread performance, but can squeeze much more out of the CPU through parallelism.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56982, "question": "It happened in gaming where single threaded CPU performance is often the bottleneck. Ten years ago almost no games were multithreaded. These days it's more common than not for games to have two or more large threads. They are still bottlenecked by single thread performance, but can squeeze much more out of the CPU through parallelism.", "aSentId": 56983, "answer": "I don't think two or three threads is the type of concurrency people making these predictions had in mind.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56984, "question": "I don't think two or three threads is the type of concurrency people making these predictions had in mind.", "aSentId": 56985, "answer": "It's not a bad start. The tools we have that deal with concurrency are much better than they were ten years ago. \n\nOver the next ten years we'll see a continuation of the trend. Existing cpu cycles will be used more efficiently and games will take advantage of parallelism better. They'll go for low hanging fruits.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56984, "question": "I don't think two or three threads is the type of concurrency people making these predictions had in mind.", "aSentId": 56987, "answer": "That will change with Mantle/Vulkan (and DX12, from what I hear). Rendering is often *the* bottleneck, and is very hard to split into different threads with the old graphics APIs (most notably OpenGL). Once that problem is solved, it will be easier for game engine to take advantage of many more cores.\n\nThen it will be worth splitting the other, less demanding tasks in multiple threads.\n\nThen we will be able to investigate many cores, where you have weaker cores, but so much more of them\u2026\n\nI expect the whole process to take at least 10 years. But there *will* be a steady increase in parallelism for demanding applications.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56963, "question": "The general prediction \"Concurrency is the next major revolution in how we write software\" didn't happen. Sutter is falsified. ", "aSentId": 56989, "answer": "It can't happen with traditional imperative languages that rely on having shared mutable state for the entire application. It's simply too hard for the developer to write multithreaded code correctly in such a language. So, it's only done when absolutely necessary.\n\nThe new crop of languages that are designed to take advantage of concurrency by providing immutable data structures, pure functions, and concurrency semantics like the STM. While there's no silver bullet that makes concurrency easy, these things certainly improve the situation dramatically.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56991, "question": "I suppose this falsification is why we don't see any move towards generalized computing in accelerator (e.g. graphics) cards?", "aSentId": 56992, "answer": "We do. More and more applications use the GPU with its potentially thousands of cores now. Graphical toolkits like Qt/QtQuick, WPF use it, rendering engines like blenders cycles, many new supercomputers are popping up that are GPU-based, we're getting new APIs for GPGPU based computation like CL, vulkan/mantle/spir-v (where GPGPU computation is a \"first-class citizen\"), our desktops are composited now, wayland (the new display system for linux) is focused around how GPUs work, etc etc.\n\nOn the hardware-side, GPUs have become more and more generalized, and have moved from instruction-level parallelism to task-level/thread-level parallelism, they are now better at branching and recursion, they can do generalized memory access, support IEEE754 floating point numbers (and even doubles) and are programmable in C-like languages.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56995, "question": "Given that \"concurrency didn't happen\", why do we have all these race condition bugs and why do I have to do head-exploding crap with threads and continuations in most of the things I write?\n\nAhmdahl's law is pretty important as well. Think about whenever you go to speed up your app by refactoring and realise you are IO bound. Ahmdahl will be the new Moores Law.", "aSentId": 56996, "answer": "Some of the hardest bugs I've ever had to debug have been thread related.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56999, "question": "From imperative to functional programming: things I learnt diving into Haskell", "aSentId": 57000, "answer": "Monads have nothing to do with evaluation order. IO defines some evaluation order, but there is no guarantee that the first expression in a do expression will be evaluated before the others in other monadic types. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57001, "question": "Monads have nothing to do with evaluation order. IO defines some evaluation order, but there is no guarantee that the first expression in a do expression will be evaluated before the others in other monadic types. ", "aSentId": 57002, "answer": "Monads do influence evaluation order, how much depends on the monad.  What a monad guarantees is execution order, if execution means the effect of each statement. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57003, "question": "Monads do influence evaluation order, how much depends on the monad.  What a monad guarantees is execution order, if execution means the effect of each statement. ", "aSentId": 57004, "answer": "Exactly. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57001, "question": "Monads have nothing to do with evaluation order. IO defines some evaluation order, but there is no guarantee that the first expression in a do expression will be evaluated before the others in other monadic types. ", "aSentId": 57006, "answer": "&gt; Monads have nothing to do with evaluation order.\n\nOh come on.  `f a b == flip f a b` is a law, but `f &lt;$&gt; fa &lt;*&gt; fb == flip f &lt;$&gt; fb &lt;*&gt; fa` isn't; i.e., applicative functors have order-sensitive models that the lambda calculus (a.k.a. the `Identity` applicative functor) doesn't.  This is one of the **features** of monads, one of the reasons we use them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57007, "question": "&gt; Monads have nothing to do with evaluation order.\n\nOh come on.  `f a b == flip f a b` is a law, but `f &lt;$&gt; fa &lt;*&gt; fb == flip f &lt;$&gt; fb &lt;*&gt; fa` isn't; i.e., applicative functors have order-sensitive models that the lambda calculus (a.k.a. the `Identity` applicative functor) doesn't.  This is one of the **features** of monads, one of the reasons we use them.", "aSentId": 57008, "answer": "That's a matter of execution order, not evaluation order. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56999, "question": "From imperative to functional programming: things I learnt diving into Haskell", "aSentId": 57010, "answer": "Let me start with a warm welcome to the author into the wonderful world of functional programming.\n\nThis said, I believe that the article suffers from a common problem, which is an inappropriate conflation of functional programming and Haskell, plus a few superficialities. Here they are, pointed out:\n\n&gt; Haskell offers new ways to think when writing software. We renounce ideas that might seem fundamental and ingrained. For example, we abandon ideas such as having a for loop. There is a stark contrast in the way OO languages and Haskell should be looked at.\n\nNothing specific about Haskell in recursion over loops. Think LISP, ML, OCaML, Scala, F#, Prolog, and a million others.\n\n\n&gt;  Haskell is elegant and has a very terse syntax particularly due to its high level concepts.\n\nSomething that is not unique to Haskell, and can be said (and indeed has been) for most functional languages starting from LISP.\n\n\n&gt; I can see how Haskell leads to modularity in code. Haskell\u2019s strong and flexible type system encourages writing components that can be used in several places without duplication.\n\nWhat about this would not be true in any other statically typed functional programming language with higher order functions?\n\n\n&gt;  Functions can be tested in isolation since they do not have access to the global state. \n\nAgain, nothing Haskell-specific. This has to do with purity and referential transparency, something that is easy to do in most FP languages.\n\n\n&gt; There is a clear distinction between code that is pure and code that performs IO operations.\n\nNo there is not. IO code does only request the runtime to actually perform IO operations and feed the results to the various continuations implicitly created by the do-notation. You could build a fake IO system for testing purposes and your program would be none the wiser. This has nothing to do with Haskell, but rather with the (more than reasonable) runtime of Haskell that you are using.\n\nThis is clarified later in the article, but some expressions about monads are quite vague and sometimes closer to wrong than right.\n\n\n&gt; A type can be thought of as a category...\n\nI would avoid the c... word at all costs within the Haskell context. You will soon discover why :)\n\n\n&gt; The notion behind this comes from the fact that everything in Haskell is a function.\n\nNot really. In the lambda calculus (which Haskell comes from) then everything is a function, data structures and numbers as well (see Church numerals). In Haskell this is not really the case.\n\n\n\nIn any case, thanks for the thoughtful article. Pleasant to read.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57011, "question": "Let me start with a warm welcome to the author into the wonderful world of functional programming.\n\nThis said, I believe that the article suffers from a common problem, which is an inappropriate conflation of functional programming and Haskell, plus a few superficialities. Here they are, pointed out:\n\n&gt; Haskell offers new ways to think when writing software. We renounce ideas that might seem fundamental and ingrained. For example, we abandon ideas such as having a for loop. There is a stark contrast in the way OO languages and Haskell should be looked at.\n\nNothing specific about Haskell in recursion over loops. Think LISP, ML, OCaML, Scala, F#, Prolog, and a million others.\n\n\n&gt;  Haskell is elegant and has a very terse syntax particularly due to its high level concepts.\n\nSomething that is not unique to Haskell, and can be said (and indeed has been) for most functional languages starting from LISP.\n\n\n&gt; I can see how Haskell leads to modularity in code. Haskell\u2019s strong and flexible type system encourages writing components that can be used in several places without duplication.\n\nWhat about this would not be true in any other statically typed functional programming language with higher order functions?\n\n\n&gt;  Functions can be tested in isolation since they do not have access to the global state. \n\nAgain, nothing Haskell-specific. This has to do with purity and referential transparency, something that is easy to do in most FP languages.\n\n\n&gt; There is a clear distinction between code that is pure and code that performs IO operations.\n\nNo there is not. IO code does only request the runtime to actually perform IO operations and feed the results to the various continuations implicitly created by the do-notation. You could build a fake IO system for testing purposes and your program would be none the wiser. This has nothing to do with Haskell, but rather with the (more than reasonable) runtime of Haskell that you are using.\n\nThis is clarified later in the article, but some expressions about monads are quite vague and sometimes closer to wrong than right.\n\n\n&gt; A type can be thought of as a category...\n\nI would avoid the c... word at all costs within the Haskell context. You will soon discover why :)\n\n\n&gt; The notion behind this comes from the fact that everything in Haskell is a function.\n\nNot really. In the lambda calculus (which Haskell comes from) then everything is a function, data structures and numbers as well (see Church numerals). In Haskell this is not really the case.\n\n\n\nIn any case, thanks for the thoughtful article. Pleasant to read.", "aSentId": 57012, "answer": "&gt; What about this would not be true in any other statically typed functional programming language with higher order functions?\n\nHigher kinded types (also available in Scala) are the main feature that prevent you from getting the kind of reuse in other 'functional light' languages such as F# etc. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57013, "question": "&gt; What about this would not be true in any other statically typed functional programming language with higher order functions?\n\nHigher kinded types (also available in Scala) are the main feature that prevent you from getting the kind of reuse in other 'functional light' languages such as F# etc. \n", "aSentId": 57014, "answer": "Haskell's lack of a decent module system makes code reuse much more difficult than in ML-style languages.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57011, "question": "Let me start with a warm welcome to the author into the wonderful world of functional programming.\n\nThis said, I believe that the article suffers from a common problem, which is an inappropriate conflation of functional programming and Haskell, plus a few superficialities. Here they are, pointed out:\n\n&gt; Haskell offers new ways to think when writing software. We renounce ideas that might seem fundamental and ingrained. For example, we abandon ideas such as having a for loop. There is a stark contrast in the way OO languages and Haskell should be looked at.\n\nNothing specific about Haskell in recursion over loops. Think LISP, ML, OCaML, Scala, F#, Prolog, and a million others.\n\n\n&gt;  Haskell is elegant and has a very terse syntax particularly due to its high level concepts.\n\nSomething that is not unique to Haskell, and can be said (and indeed has been) for most functional languages starting from LISP.\n\n\n&gt; I can see how Haskell leads to modularity in code. Haskell\u2019s strong and flexible type system encourages writing components that can be used in several places without duplication.\n\nWhat about this would not be true in any other statically typed functional programming language with higher order functions?\n\n\n&gt;  Functions can be tested in isolation since they do not have access to the global state. \n\nAgain, nothing Haskell-specific. This has to do with purity and referential transparency, something that is easy to do in most FP languages.\n\n\n&gt; There is a clear distinction between code that is pure and code that performs IO operations.\n\nNo there is not. IO code does only request the runtime to actually perform IO operations and feed the results to the various continuations implicitly created by the do-notation. You could build a fake IO system for testing purposes and your program would be none the wiser. This has nothing to do with Haskell, but rather with the (more than reasonable) runtime of Haskell that you are using.\n\nThis is clarified later in the article, but some expressions about monads are quite vague and sometimes closer to wrong than right.\n\n\n&gt; A type can be thought of as a category...\n\nI would avoid the c... word at all costs within the Haskell context. You will soon discover why :)\n\n\n&gt; The notion behind this comes from the fact that everything in Haskell is a function.\n\nNot really. In the lambda calculus (which Haskell comes from) then everything is a function, data structures and numbers as well (see Church numerals). In Haskell this is not really the case.\n\n\n\nIn any case, thanks for the thoughtful article. Pleasant to read.", "aSentId": 57016, "answer": "The main thing that distinguishes Haskell from other statically typed and functional languages is equational reasoning.  Equational reasoning means that substitution of equals for equals is always safe in Haskell because evaluation order is independent of side effect order and Haskell permits significantly many more valid substitutions than comparable languages.\n\nThere are other benefits to programming in Haskell (like type classes, do notation, laziness, curried-by-default ecosystem, rich ecosystem of mathematical abstractions, and seamless higher-kinded types).  However equational reasoning is in my opinion the most significant distinction because it enables light-weight correctness proofs *within the language* instead of invoking an external formal model for verifying programs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 56999, "question": "From imperative to functional programming: things I learnt diving into Haskell", "aSentId": 57018, "answer": "&gt; But the effort is truly worth it: it\u2019ll make you a much better developer, even if you decide not to use it.\n\nI think this is one of the things I've noticed most prominently since learning Haskell. I'm so far from actually considering myself good at it (I've been using imperative languages since day one), but even with what I know I find myself writing imperative code in a more modular/pseudo-pure style. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57020, "question": "nothing ever compiles?", "aSentId": 57021, "answer": "GHC: \"You rack disciprine!\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57023, "question": "The fast-food culture of newfangled coding schools", "aSentId": 57024, "answer": "&gt; Finally, web development has advanced enough to become accessible to more than the traditional computer science geek.\n\nOr has it?\n\nToday's web development is nowhere near easy. It's a hodge-podge of square pegs forcefully jammed into round holes, with myriads of things that go wrong (but only on certain platforms!).\nIf the easiness of making \"apps\" in technology _du jour_ was such a big factor in the emergence of coding bootcamps, we'd have seen them rise years ago. Think about the middle of previous decade, for example, when Windows was dominant, there were no smartphones to worry about, and creating applications was literally as simple dragging &amp; dropping widgets, double-clicking them, and writing some code in a language (C#) that even then was way better than today's JavaScript.\n\nNo, it's not because it's easy. It's simple law of supply and demand, spiced up by the contemporary \"Everyone Needs to Code!\" moral panic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57025, "question": "&gt; Finally, web development has advanced enough to become accessible to more than the traditional computer science geek.\n\nOr has it?\n\nToday's web development is nowhere near easy. It's a hodge-podge of square pegs forcefully jammed into round holes, with myriads of things that go wrong (but only on certain platforms!).\nIf the easiness of making \"apps\" in technology _du jour_ was such a big factor in the emergence of coding bootcamps, we'd have seen them rise years ago. Think about the middle of previous decade, for example, when Windows was dominant, there were no smartphones to worry about, and creating applications was literally as simple dragging &amp; dropping widgets, double-clicking them, and writing some code in a language (C#) that even then was way better than today's JavaScript.\n\nNo, it's not because it's easy. It's simple law of supply and demand, spiced up by the contemporary \"Everyone Needs to Code!\" moral panic.", "aSentId": 57026, "answer": "I think the barrier of entry is deceivingly lower in terms of \"general\" programming knowledge, which is contributing somewhat to the artificial separation of \"front-end\" and \"back-end\" developers. This is especially seducing on Windows (and to a lower degree, on OS X) where there is otherwise little access to \"scripting\" languages in a manner that is easy to understand for beginners. In there, JavaScript is pretty much the only thing they can learn how to program without either a) banging their heads against the .NET wall of inheritance, polymorphism, delegates, managed vs unmanaged code and which one of the four incompatible APIs that only run on *some* versions of Windows do I use to control the sound volume in this Pong game I just wrote, b) fumbling with PATHs, installing something other than IDLE and then cruising the Interwebs for a week trying to find out how they can give what they wrote to their friends or c) figuring out just which one of the gazillion ways of doing the same thing in {Python|Ruby|Perl} is the \"correct\" one, because apparently there are at least twenty ways to print something in each of them [1].\n\nThe limits of the technology, however, are *very* apparent. Most web developers, especially in the frontend world, do not realize they're there because they haven't even been exposed to anything else, and they continuously get high on their own \"create stunning interfaces easily\" supply. Which is bullshit. Interface Builder could build better, snappier and more consistent interfaces before WWW was a thing. Windows had the same with .NET. Fuck, Unix users had access to better prototyping and UI building tools, with Qt (and to a lesser degree, Gtk's Glade) at a time when we were just realizing that frames aren't what you want to build navbars with. That says something.\n\n*But* the barrier of entry to these tools is a little higher. Programmers need to at least understand the \"general idea\" behind OOP (which is where most of the objects-are-really-closures-you-ignorant-simpleton crowd meets its doom) and have somewhat of a working knowledge of each platform their programs run on. The former could probably be avoided if you *really* wanted to, but the latter is necessary. It's conveniently tucked away by web APIs because they just don't handle platform-specific behaviour, which is why web applications have such an impressive brand presence, but negligible integration and are even more inconsistent than Unix desktops in those wonderful days when *everyone* had *another* favourite UI toolkit because Xlib.\n\nPeople don't want to learn these things. They want to code, because coding gives you jobs and makes you money, unlike learning, which *costs* money -- your parents' for the first four years, then the company's afterwards.\n\nIronically enough, as you mentioned, web development is *not easy*. I used to have this dismissive view about web developers until about six years ago when I finally had to do some web work myself. Fuck. There's a myriad of languages and tools to know, an endless list of platform-specific quirks that makes my list of things that Unices never agreed on look like a leaflet next to the fucking Game of Thrones book series and everyone's building user interfaces with tools that were never made for that in the first place, which makes writing anything seem like writing that program I wrote on my father's 386 that used only ASCII characters to build user interfaces except for some reason *everyone thinks it's a good idea, not something that a kid with too much free time on his hands did*. Never again.\n\n1: Oh, yes, sure, they could use Racket or something that, with years of programming behind us, we see as \"easy\" or even \"elegant\", but most people tend to want to stick to relevant programming languages when they're just starting out. Racket was my first idea when my girlfriend asked me to teach her some basic programming principles; when she casually mentioned that she hoped it would augment her CV a little (she's in Marketing), besides just being fun and interesting, I quickly reconsidered.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57027, "question": "I think the barrier of entry is deceivingly lower in terms of \"general\" programming knowledge, which is contributing somewhat to the artificial separation of \"front-end\" and \"back-end\" developers. This is especially seducing on Windows (and to a lower degree, on OS X) where there is otherwise little access to \"scripting\" languages in a manner that is easy to understand for beginners. In there, JavaScript is pretty much the only thing they can learn how to program without either a) banging their heads against the .NET wall of inheritance, polymorphism, delegates, managed vs unmanaged code and which one of the four incompatible APIs that only run on *some* versions of Windows do I use to control the sound volume in this Pong game I just wrote, b) fumbling with PATHs, installing something other than IDLE and then cruising the Interwebs for a week trying to find out how they can give what they wrote to their friends or c) figuring out just which one of the gazillion ways of doing the same thing in {Python|Ruby|Perl} is the \"correct\" one, because apparently there are at least twenty ways to print something in each of them [1].\n\nThe limits of the technology, however, are *very* apparent. Most web developers, especially in the frontend world, do not realize they're there because they haven't even been exposed to anything else, and they continuously get high on their own \"create stunning interfaces easily\" supply. Which is bullshit. Interface Builder could build better, snappier and more consistent interfaces before WWW was a thing. Windows had the same with .NET. Fuck, Unix users had access to better prototyping and UI building tools, with Qt (and to a lesser degree, Gtk's Glade) at a time when we were just realizing that frames aren't what you want to build navbars with. That says something.\n\n*But* the barrier of entry to these tools is a little higher. Programmers need to at least understand the \"general idea\" behind OOP (which is where most of the objects-are-really-closures-you-ignorant-simpleton crowd meets its doom) and have somewhat of a working knowledge of each platform their programs run on. The former could probably be avoided if you *really* wanted to, but the latter is necessary. It's conveniently tucked away by web APIs because they just don't handle platform-specific behaviour, which is why web applications have such an impressive brand presence, but negligible integration and are even more inconsistent than Unix desktops in those wonderful days when *everyone* had *another* favourite UI toolkit because Xlib.\n\nPeople don't want to learn these things. They want to code, because coding gives you jobs and makes you money, unlike learning, which *costs* money -- your parents' for the first four years, then the company's afterwards.\n\nIronically enough, as you mentioned, web development is *not easy*. I used to have this dismissive view about web developers until about six years ago when I finally had to do some web work myself. Fuck. There's a myriad of languages and tools to know, an endless list of platform-specific quirks that makes my list of things that Unices never agreed on look like a leaflet next to the fucking Game of Thrones book series and everyone's building user interfaces with tools that were never made for that in the first place, which makes writing anything seem like writing that program I wrote on my father's 386 that used only ASCII characters to build user interfaces except for some reason *everyone thinks it's a good idea, not something that a kid with too much free time on his hands did*. Never again.\n\n1: Oh, yes, sure, they could use Racket or something that, with years of programming behind us, we see as \"easy\" or even \"elegant\", but most people tend to want to stick to relevant programming languages when they're just starting out. Racket was my first idea when my girlfriend asked me to teach her some basic programming principles; when she casually mentioned that she hoped it would augment her CV a little (she's in Marketing), besides just being fun and interesting, I quickly reconsidered.\n\n", "aSentId": 57028, "answer": "I think an adjustment of the old adage \"you live to your means\" applies -- programming is definitely easier than it was a decade ago, we have great IDE's with autocomplete, context-awareness, debuggers, etc -- however as programming became easier, system complexity increased; hence average programmer abilities and skillsets had to increase to match.\n\nFor example, twenty years ago we were easily making one man games that we could flog off to any number of computer magazines for a nice sum (at the time, I was a teen!)  Nowadays I think even a low grade indie game would struggle to have any success as a one man development", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57029, "question": "I think an adjustment of the old adage \"you live to your means\" applies -- programming is definitely easier than it was a decade ago, we have great IDE's with autocomplete, context-awareness, debuggers, etc -- however as programming became easier, system complexity increased; hence average programmer abilities and skillsets had to increase to match.\n\nFor example, twenty years ago we were easily making one man games that we could flog off to any number of computer magazines for a nice sum (at the time, I was a teen!)  Nowadays I think even a low grade indie game would struggle to have any success as a one man development", "aSentId": 57030, "answer": "I don't see how programming became easier as system complexity increased. Quite the opposite: as people shoved abstraction layer over abstraction layer into any problem, it became *harder*, not easier, as quirks from each of the umpteen abstraction layers leaked into the ones above and below. Ah, yes, writing the code itself is technically somewhat easier. What's not easy is figuring out which version of the API is the one you actually need to use and why this thing doesn't work on that particular computer with Windows Vista and when the whole thing *finally* runs, why this guy's antivirus thinks it's a trojan.\n\nGames aren't exactly a fair comparison, as complexity in them has increased in areas often outside the realistic scope of a single programmer (e.g. artwork and animation). How about simpler applications? A simple todo list application is *still* marginally smaller than its Win32-based equivalent used to be. And it's not complete when you're done with the todo part. You have to add authentication and password recovery to it, and host it, and it's still going to break on next Wednesday's Chrome version. And even without authentication &amp; co., it's *significantly* harder to program than it would have been on the bloody C64.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57031, "question": "I don't see how programming became easier as system complexity increased. Quite the opposite: as people shoved abstraction layer over abstraction layer into any problem, it became *harder*, not easier, as quirks from each of the umpteen abstraction layers leaked into the ones above and below. Ah, yes, writing the code itself is technically somewhat easier. What's not easy is figuring out which version of the API is the one you actually need to use and why this thing doesn't work on that particular computer with Windows Vista and when the whole thing *finally* runs, why this guy's antivirus thinks it's a trojan.\n\nGames aren't exactly a fair comparison, as complexity in them has increased in areas often outside the realistic scope of a single programmer (e.g. artwork and animation). How about simpler applications? A simple todo list application is *still* marginally smaller than its Win32-based equivalent used to be. And it's not complete when you're done with the todo part. You have to add authentication and password recovery to it, and host it, and it's still going to break on next Wednesday's Chrome version. And even without authentication &amp; co., it's *significantly* harder to program than it would have been on the bloody C64.", "aSentId": 57032, "answer": "I do get your point, however I feel it's not an entirely fair \"like-for-like\" comparison.\nWhen you add abstraction layers, external API's, devices, etc you're probably responding to a change (generally an increase) in requirements -- but it's up to you whether you want to support these new features/requirements.\n\nAdding authentication, password recovery or any other feature isn't an indicator that programming is harder now, just that we have to do a lot more of it to keep up with the change in what users demand (feature-wise)\n\nI'm also quite fortunate that given my background is more on enterprise desktop &amp; web applications, I've had quite a narrow support list (e.g. Win 7 with IE 11, no non-javascript fallback, desktop res of X, etc etc)  Even my recent iPad development has been restricted to MDM controlled devices -- ensuring a fairly standard environment..\n\nAnyway, for me at least -- programming seems to have gotten easier, there's just a lot more of it now :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57033, "question": "I do get your point, however I feel it's not an entirely fair \"like-for-like\" comparison.\nWhen you add abstraction layers, external API's, devices, etc you're probably responding to a change (generally an increase) in requirements -- but it's up to you whether you want to support these new features/requirements.\n\nAdding authentication, password recovery or any other feature isn't an indicator that programming is harder now, just that we have to do a lot more of it to keep up with the change in what users demand (feature-wise)\n\nI'm also quite fortunate that given my background is more on enterprise desktop &amp; web applications, I've had quite a narrow support list (e.g. Win 7 with IE 11, no non-javascript fallback, desktop res of X, etc etc)  Even my recent iPad development has been restricted to MDM controlled devices -- ensuring a fairly standard environment..\n\nAnyway, for me at least -- programming seems to have gotten easier, there's just a lot more of it now :)", "aSentId": 57034, "answer": "&gt; Adding authentication, password recovery or any other feature isn't an indicator that programming is harder now, just that we have to do a lot more of it to keep up with the change in what users demand (feature-wise)\n\nI know what you mean. However, I think that users don't usually have \"literal\" requirements. Very few users *literally* wanted everything to run in their browsers. What they've always wanted was applications that are easy to install and remove with data that is always accessible to them.\n\nJavaScript, the gazillion messy authentication frameworks and the stack of abstraction layers that we use to leakily pretend we have state information in an environment that was explicitly designed to be stateless is shit we brought upon ourselves.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57035, "question": "&gt; Adding authentication, password recovery or any other feature isn't an indicator that programming is harder now, just that we have to do a lot more of it to keep up with the change in what users demand (feature-wise)\n\nI know what you mean. However, I think that users don't usually have \"literal\" requirements. Very few users *literally* wanted everything to run in their browsers. What they've always wanted was applications that are easy to install and remove with data that is always accessible to them.\n\nJavaScript, the gazillion messy authentication frameworks and the stack of abstraction layers that we use to leakily pretend we have state information in an environment that was explicitly designed to be stateless is shit we brought upon ourselves.", "aSentId": 57036, "answer": "If you're writing messy web applications, that's kind of your own fault. This subreddit is full of those who are used to consuming tooling passed down by large corporations, who flounder when faced with the prospect of choice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57037, "question": "If you're writing messy web applications, that's kind of your own fault. This subreddit is full of those who are used to consuming tooling passed down by large corporations, who flounder when faced with the prospect of choice.", "aSentId": 57038, "answer": "It's really hard not to write messy web applications, especially if the web application is doing much more than simple CRUD.\n\nThat's the nature of the beast and is exactly what people are complaining about.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57037, "question": "If you're writing messy web applications, that's kind of your own fault. This subreddit is full of those who are used to consuming tooling passed down by large corporations, who flounder when faced with the prospect of choice.", "aSentId": 57040, "answer": "I'm not writing any kind of web applications - not as a main professional occupation, anyway. It is hard to escape occasionally writing web code nowadays, but I generally manage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57029, "question": "I think an adjustment of the old adage \"you live to your means\" applies -- programming is definitely easier than it was a decade ago, we have great IDE's with autocomplete, context-awareness, debuggers, etc -- however as programming became easier, system complexity increased; hence average programmer abilities and skillsets had to increase to match.\n\nFor example, twenty years ago we were easily making one man games that we could flog off to any number of computer magazines for a nice sum (at the time, I was a teen!)  Nowadays I think even a low grade indie game would struggle to have any success as a one man development", "aSentId": 57042, "answer": "*For example, twenty years ago we were easily making one man games that we could flog off to any number of computer magazines for a nice sum (at the time, I was a teen!) Nowadays I think even a low grade indie game would struggle to have any success as a one man development*\n\nNahh..you're off by a decade.  It was really the mid 80s when there was one guy in his mom's basement coding games up.  By the mid 90s, it was more like today, not as much, but more than a one-man shop.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57043, "question": "*For example, twenty years ago we were easily making one man games that we could flog off to any number of computer magazines for a nice sum (at the time, I was a teen!) Nowadays I think even a low grade indie game would struggle to have any success as a one man development*\n\nNahh..you're off by a decade.  It was really the mid 80s when there was one guy in his mom's basement coding games up.  By the mid 90s, it was more like today, not as much, but more than a one-man shop.", "aSentId": 57044, "answer": "Holy crap it's been longer than I realised -- 1989 was when a magazine bought my game and I got myself an A2000", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57029, "question": "I think an adjustment of the old adage \"you live to your means\" applies -- programming is definitely easier than it was a decade ago, we have great IDE's with autocomplete, context-awareness, debuggers, etc -- however as programming became easier, system complexity increased; hence average programmer abilities and skillsets had to increase to match.\n\nFor example, twenty years ago we were easily making one man games that we could flog off to any number of computer magazines for a nice sum (at the time, I was a teen!)  Nowadays I think even a low grade indie game would struggle to have any success as a one man development", "aSentId": 57046, "answer": "They're not really analogous.  We're talking about programming something using things like CSS, etc.  You're talking about an entire piece of software including the art assets.\n\nI don't disagree with you in general, I just think your analogy was unfair.  Today games are more complex because games can't get by with \"programmer art\" anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57025, "question": "&gt; Finally, web development has advanced enough to become accessible to more than the traditional computer science geek.\n\nOr has it?\n\nToday's web development is nowhere near easy. It's a hodge-podge of square pegs forcefully jammed into round holes, with myriads of things that go wrong (but only on certain platforms!).\nIf the easiness of making \"apps\" in technology _du jour_ was such a big factor in the emergence of coding bootcamps, we'd have seen them rise years ago. Think about the middle of previous decade, for example, when Windows was dominant, there were no smartphones to worry about, and creating applications was literally as simple dragging &amp; dropping widgets, double-clicking them, and writing some code in a language (C#) that even then was way better than today's JavaScript.\n\nNo, it's not because it's easy. It's simple law of supply and demand, spiced up by the contemporary \"Everyone Needs to Code!\" moral panic.", "aSentId": 57048, "answer": "I don't know whether or not this was the case; but I like to think that one of the reasons HTML/CSS was originally created was to allow the creation of web pages _easily_ to people without programming experience.\n\nEnter Java_Script_, a language designed to enable _some_ programmatic action in web pages -- but not to power the web from the ground up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57049, "question": "I don't know whether or not this was the case; but I like to think that one of the reasons HTML/CSS was originally created was to allow the creation of web pages _easily_ to people without programming experience.\n\nEnter Java_Script_, a language designed to enable _some_ programmatic action in web pages -- but not to power the web from the ground up.", "aSentId": 57050, "answer": "&gt; the creation of web pages easily to people without programming experience.\n\nIt was simpler to create web pages than some alternatives, but at the time web pages were basically equivalent to PDFs in terms of interactivity. (Ok, modern PDF has JS and 3d, but you get the point.)\n\nImagine trying to extend PDF way past where it was and making it an easy to use interactive programming environment while keeping backwards compatibility. Can you imagine PDF creation remaining a simple and easy to understand while being extended with overnight hacks from dozens of major vendors and turning a clean, easy to use system for creating applications?\n\nI can't.\n\nWeb development is a bunch of hacks on top of a system that was never intended to go in the direction it did, and it shows. It creaks, leaks abstractions, sucks tons of memory, adds layers that are completely unnecessary crud overtop of what the platform supplies, and is just a crappy fit for development.\n\nIt's used not because it's good, but because there's no other environment that is preinstalled by default on all user's computers, doesn't need applications to be installed (just go to a URL and use it), and is sandboxed by default.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57051, "question": "&gt; the creation of web pages easily to people without programming experience.\n\nIt was simpler to create web pages than some alternatives, but at the time web pages were basically equivalent to PDFs in terms of interactivity. (Ok, modern PDF has JS and 3d, but you get the point.)\n\nImagine trying to extend PDF way past where it was and making it an easy to use interactive programming environment while keeping backwards compatibility. Can you imagine PDF creation remaining a simple and easy to understand while being extended with overnight hacks from dozens of major vendors and turning a clean, easy to use system for creating applications?\n\nI can't.\n\nWeb development is a bunch of hacks on top of a system that was never intended to go in the direction it did, and it shows. It creaks, leaks abstractions, sucks tons of memory, adds layers that are completely unnecessary crud overtop of what the platform supplies, and is just a crappy fit for development.\n\nIt's used not because it's good, but because there's no other environment that is preinstalled by default on all user's computers, doesn't need applications to be installed (just go to a URL and use it), and is sandboxed by default.", "aSentId": 57052, "answer": "&gt; Web development is a bunch of hacks on top of a system that was never intended to go in the direction it did, and it shows. It creaks, leaks abstractions, sucks tons of memory, adds layers that are completely unnecessary crud overtop of what the platform supplies, and is just a crappy fit for development.\n\nI've heard this argument in one form and another over and over for years.\n\nGuess what I haven't heard of? Viable alternatives.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57053, "question": "&gt; Web development is a bunch of hacks on top of a system that was never intended to go in the direction it did, and it shows. It creaks, leaks abstractions, sucks tons of memory, adds layers that are completely unnecessary crud overtop of what the platform supplies, and is just a crappy fit for development.\n\nI've heard this argument in one form and another over and over for years.\n\nGuess what I haven't heard of? Viable alternatives.", "aSentId": 57054, "answer": "There are *tonnes* of viable technical alternatives. What there aren't are viable social or political alternatives. The web is the largest development platform ever built, and replacing it, or even offering breaking changes, is a battle which very few entities have any hope of winning. Google could maybe do it, but probably not, because Safari still owns half the mobile space and mobile is currently king.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57055, "question": "There are *tonnes* of viable technical alternatives. What there aren't are viable social or political alternatives. The web is the largest development platform ever built, and replacing it, or even offering breaking changes, is a battle which very few entities have any hope of winning. Google could maybe do it, but probably not, because Safari still owns half the mobile space and mobile is currently king.", "aSentId": 57056, "answer": "Which is why I expressly omitted the word \"technical\" from my phrasing. Of course there are technically viable alternatives. The main problem is that whatever alternative solution you come up with is going to have be agreed upon by Google, Mozilla, Apple and Microsoft. Good luck with that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57057, "question": "Which is why I expressly omitted the word \"technical\" from my phrasing. Of course there are technically viable alternatives. The main problem is that whatever alternative solution you come up with is going to have be agreed upon by Google, Mozilla, Apple and Microsoft. Good luck with that.", "aSentId": 57058, "answer": "&gt; Which is why I expressly omitted the word \"technical\" from my phrasing.\n\nIn which case, you missed my point. I already said that it is a turd from a technical perspective, but it's used because it's the only pervasive thing, due to historical and social reasons.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57057, "question": "Which is why I expressly omitted the word \"technical\" from my phrasing. Of course there are technically viable alternatives. The main problem is that whatever alternative solution you come up with is going to have be agreed upon by Google, Mozilla, Apple and Microsoft. Good luck with that.", "aSentId": 57060, "answer": "His point still stands.  It's difficult to develop on that platform because it was never meant to do the things it's being asked to do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57057, "question": "Which is why I expressly omitted the word \"technical\" from my phrasing. Of course there are technically viable alternatives. The main problem is that whatever alternative solution you come up with is going to have be agreed upon by Google, Mozilla, Apple and Microsoft. Good luck with that.", "aSentId": 57062, "answer": "Technically, all you need is the runtime installed on people's computers.\n\nJava for all its faults did get that, which is why applets are so hard to kill off. One can imagine that if Java had been subsidised by a financially stronger company, with a much more silent auto updater (like Chrome's), and a much faster/slicker code streaming solution, and been open sourced earlier, and all that had happened 10 years ago, it could have pretty much beaten HTML as the app platform of choice.\n\nHowever, it wasn't.\n\nThe question is now - is there a way to fix things? Or are we stuck with HTML forever just due to inertia of the install base?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57053, "question": "&gt; Web development is a bunch of hacks on top of a system that was never intended to go in the direction it did, and it shows. It creaks, leaks abstractions, sucks tons of memory, adds layers that are completely unnecessary crud overtop of what the platform supplies, and is just a crappy fit for development.\n\nI've heard this argument in one form and another over and over for years.\n\nGuess what I haven't heard of? Viable alternatives.", "aSentId": 57064, "answer": "Native applications with an easy deployment model (as an alternative to package managers, there's the container-based solution that the Gnome crowd is pushing for, which grumpy Unix-schooled people like me hate to admit is a good solution given the distribution fragmentation and libthis and libthat proliferation).\n\nOh yes, half-assed startups that need to leverage the permanently-connected ecosystem to reach their customers will now have to hire more developers for their half-assed apps. But at least they won't suck as much.\n\nWe got stuck with writing stuff for the web because back in the late 1990s, everyone was too busy shoving politics into their super cross-platform solution (that, at least as far as Microsoft was concerned, wasn't even cross-platform). The WWW was the one platform where everyone more or less had to either follow consensus or slowly be thrown into irrelevance -- and even *that* barely happened because IE 6.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57025, "question": "&gt; Finally, web development has advanced enough to become accessible to more than the traditional computer science geek.\n\nOr has it?\n\nToday's web development is nowhere near easy. It's a hodge-podge of square pegs forcefully jammed into round holes, with myriads of things that go wrong (but only on certain platforms!).\nIf the easiness of making \"apps\" in technology _du jour_ was such a big factor in the emergence of coding bootcamps, we'd have seen them rise years ago. Think about the middle of previous decade, for example, when Windows was dominant, there were no smartphones to worry about, and creating applications was literally as simple dragging &amp; dropping widgets, double-clicking them, and writing some code in a language (C#) that even then was way better than today's JavaScript.\n\nNo, it's not because it's easy. It's simple law of supply and demand, spiced up by the contemporary \"Everyone Needs to Code!\" moral panic.", "aSentId": 57066, "answer": "It's not easy, but it's easier. As someone who's been messing around with websites since before CSS existed, and layouting was done with tables, and styles with images and inline attributes, yes, it's easier. Having a framework to structure your code is way easier than a hodgepodge of globally scoped scripts conflicting with each other. Is it easy in an absolute sense? Of course not, but it's way easier than it used to be.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57067, "question": "It's not easy, but it's easier. As someone who's been messing around with websites since before CSS existed, and layouting was done with tables, and styles with images and inline attributes, yes, it's easier. Having a framework to structure your code is way easier than a hodgepodge of globally scoped scripts conflicting with each other. Is it easy in an absolute sense? Of course not, but it's way easier than it used to be.", "aSentId": 57068, "answer": "Yeah I think getting started is a lot easier but there is more to master in the long run.\n\nI remember the days of it being a ball ache just to get a helloworld website on an apache server, now you can get that up and running in a minute ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57023, "question": "The fast-food culture of newfangled coding schools", "aSentId": 57073, "answer": "1000 hours in 9 weeks is 16 hours a day, 7 days a week.  That seems a little excessive.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57074, "question": "1000 hours in 9 weeks is 16 hours a day, 7 days a week.  That seems a little excessive.", "aSentId": 57075, "answer": "Not only that but it defeats the point. I think there's a limit to how many hours per day you can study something productively. You also need some \"slow\" time for your brain to just mull over things slowly and let them ideas sink in.\n\nCramming doesn't work. You'll forget half this stuff the next week.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57074, "question": "1000 hours in 9 weeks is 16 hours a day, 7 days a week.  That seems a little excessive.", "aSentId": 57077, "answer": "And ur brain will bleed and not absorb shit and critical thinking will breakdown.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57074, "question": "1000 hours in 9 weeks is 16 hours a day, 7 days a week.  That seems a little excessive.", "aSentId": 57079, "answer": "Having participated in the New Zealand offshot of Dev Academy, it's not too far off the mark. ~750-850 hours is more realistic though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57023, "question": "The fast-food culture of newfangled coding schools", "aSentId": 57081, "answer": "where are the graduates getting jobs? I would be upset if my company started to hire people with 9 weeks of programming experience. granted, an eager person with a strong logical mind can quickly become decent at writing code. but nobody can become good at debugging, maintenance, or large scale design in that amount of time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57082, "question": "where are the graduates getting jobs? I would be upset if my company started to hire people with 9 weeks of programming experience. granted, an eager person with a strong logical mind can quickly become decent at writing code. but nobody can become good at debugging, maintenance, or large scale design in that amount of time.", "aSentId": 57083, "answer": "You have to train the people you want to hire. Otherwise, your talent pool will eventually end up being people trained by companies willing to hire cheap and inexperienced labour.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57084, "question": "You have to train the people you want to hire. Otherwise, your talent pool will eventually end up being people trained by companies willing to hire cheap and inexperienced labour.", "aSentId": 57085, "answer": "Manager1: \"We need to pay for a bunch of training for our staff.\"\n\nManager2: \"But what happens if we pay for all of that training and they go somewhere else?!\"\n\nManager1: \"What happens if we don't and they stay?\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57082, "question": "where are the graduates getting jobs? I would be upset if my company started to hire people with 9 weeks of programming experience. granted, an eager person with a strong logical mind can quickly become decent at writing code. but nobody can become good at debugging, maintenance, or large scale design in that amount of time.", "aSentId": 57087, "answer": "I doubt most grads are experienced with maintenance and large scale design.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57088, "question": "I doubt most grads are experienced with maintenance and large scale design.", "aSentId": 57089, "answer": "You'd be surprised. I attended a shit-fest of a university, but even they taught us enough about scaling data structures in Java. We even had a few talks at industry open days where a local company would tell us roughly what would be in store for us if we were to join out of uni.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57082, "question": "where are the graduates getting jobs? I would be upset if my company started to hire people with 9 weeks of programming experience. granted, an eager person with a strong logical mind can quickly become decent at writing code. but nobody can become good at debugging, maintenance, or large scale design in that amount of time.", "aSentId": 57091, "answer": "It's ok to *hire* them as long as they know what you're getting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57098, "question": "&gt; they\u2019re acceptance rates rival that of most Ivy League schools\n\nJournalists who don't know the difference between \"their\", \"they're\", and \"there\".\n\nIs there *any* profession where workers *actually have* the skills necessary to do their job?", "aSentId": 57099, "answer": "&gt; Journalists who don't know the difference between \"their\", \"they're\", and \"there\".\n\nThat's not a full sentence. This is Muphry's law at its finest.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57100, "question": "&gt; Journalists who don't know the difference between \"their\", \"they're\", and \"there\".\n\nThat's not a full sentence. This is Muphry's law at its finest.", "aSentId": 57101, "answer": "No, treat it like an almost 'spoken' remark. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57102, "question": "No, treat it like an almost 'spoken' remark. ", "aSentId": 57103, "answer": "He meant something like:\n\n&gt; [T]hey\u2019re acceptance rates rival that of most Ivy League schools\n\n\u2014 journalists who don't know the difference between \"their,\" \"they're,\" and \"there\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57104, "question": "He meant something like:\n\n&gt; [T]hey\u2019re acceptance rates rival that of most Ivy League schools\n\n\u2014 journalists who don't know the difference between \"their,\" \"they're,\" and \"there\"", "aSentId": 57105, "answer": "Yes, which is also a remark. Both of your styles are different, the meaning remains the same. Doesn't make one, or the other, incorrect. Plus, reddit formats quotes to a different, 'special' line when you want it to. That sort of makes it its own sentence too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57098, "question": "&gt; they\u2019re acceptance rates rival that of most Ivy League schools\n\nJournalists who don't know the difference between \"their\", \"they're\", and \"there\".\n\nIs there *any* profession where workers *actually have* the skills necessary to do their job?", "aSentId": 57107, "answer": "This person doesn't appear to be a professional journalist, so I don't understand the question.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57109, "question": "These code schools have more in common with a developer's job in the real world than a university course in Comp Sci does. Whether there's enough depth there is obviously an issue, but if the end result for the student is an entry level job, in which they can gain more experience, then I think they've achieved their aim.", "aSentId": 57110, "answer": "I would be interested in seeing some statistics about how many of these bootcamp graduates are placed, with which companies, and how many actually remain in the industry.\n\nI think the market is highly competitive, even for \"entry level\" positions - Most employers want hackers who can deliver on the next generation of products and services. They don't want to pay \"good beginners\" to learn what professionals need to know in order to deliver actual value.\n\nI'm not a hacker, but I know people who are, and most of them are basically life-long programmers, some of whom went to college, for CS, or an unrelated degree. They started early, as kids, and continued to practice the craft into their adult years. There are a few who started later, but all of them had ~10 years of experience *before* they entered into the industry - That seems to be the core commonality between them, and it makes sense.\n\nThere's a big demand for hackers, because those are the kind of people who can actually push to, and then push beyond the limits of existing technology, to innovate, and to subsequently deliver true value.\n\nWhere's the value in hiring someone who knows little more than how to make a very basic website with RoR? It's not a rhetorical question; I honestly don't know, because people who can do that seem to be everywhere these days, and it seems like they can only replicate (partially, at best) a product/service that's already been done much, much better by a company that employs actual hackers.\n\nI would be very interested in learning more about the companies that are willing to hire and train beginners - they seem like a market oddity, but it's possible that my perception of the market is skewed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57111, "question": "I would be interested in seeing some statistics about how many of these bootcamp graduates are placed, with which companies, and how many actually remain in the industry.\n\nI think the market is highly competitive, even for \"entry level\" positions - Most employers want hackers who can deliver on the next generation of products and services. They don't want to pay \"good beginners\" to learn what professionals need to know in order to deliver actual value.\n\nI'm not a hacker, but I know people who are, and most of them are basically life-long programmers, some of whom went to college, for CS, or an unrelated degree. They started early, as kids, and continued to practice the craft into their adult years. There are a few who started later, but all of them had ~10 years of experience *before* they entered into the industry - That seems to be the core commonality between them, and it makes sense.\n\nThere's a big demand for hackers, because those are the kind of people who can actually push to, and then push beyond the limits of existing technology, to innovate, and to subsequently deliver true value.\n\nWhere's the value in hiring someone who knows little more than how to make a very basic website with RoR? It's not a rhetorical question; I honestly don't know, because people who can do that seem to be everywhere these days, and it seems like they can only replicate (partially, at best) a product/service that's already been done much, much better by a company that employs actual hackers.\n\nI would be very interested in learning more about the companies that are willing to hire and train beginners - they seem like a market oddity, but it's possible that my perception of the market is skewed.", "aSentId": 57112, "answer": "A huge majority of real world problems do not require a full team of limit-pushing, innovation-driving 10x engineers. If your entire development staff is constantly trying to innovate technologically, you'll lose sight of the primary goal of delivering value to some business, client, or user.\n\nI think in an ideal project, it's beneficial to have at least some junior developers who are learning from veterans. They implement features, write tests, and hammer out the day to day tasks of development, all while learning from the guidance of more experienced individuals.\n\nIf the employers you've seen don't see the benefit of developing talent in-house and expect even their entry level employees to be master hackers, they're going to suffer from deep long term issues. I'd predict problems in both burnout attrition and focusing on cool technology to the exclusion of business value.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57113, "question": "A huge majority of real world problems do not require a full team of limit-pushing, innovation-driving 10x engineers. If your entire development staff is constantly trying to innovate technologically, you'll lose sight of the primary goal of delivering value to some business, client, or user.\n\nI think in an ideal project, it's beneficial to have at least some junior developers who are learning from veterans. They implement features, write tests, and hammer out the day to day tasks of development, all while learning from the guidance of more experienced individuals.\n\nIf the employers you've seen don't see the benefit of developing talent in-house and expect even their entry level employees to be master hackers, they're going to suffer from deep long term issues. I'd predict problems in both burnout attrition and focusing on cool technology to the exclusion of business value.", "aSentId": 57114, "answer": "&gt; A huge majority of real world problems do not require a full team of limit-pushing, innovation-driving 10x engineers.\n\nBut would most such problems actually require an in-house programmer? I mean, if the task at hand is mostly routine, there's probably a SaaS/PaaS company (which employs hackers) that would provide a much better solution, at a fraction of the salary you would otherwise pay to \"joe programmer\".\n\nIt's not just about innovation, or \"cool technology\" - It's about having the skill to deliver high quality software, that can beat the competition in an open market.\n\nThat seems to require hackers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57111, "question": "I would be interested in seeing some statistics about how many of these bootcamp graduates are placed, with which companies, and how many actually remain in the industry.\n\nI think the market is highly competitive, even for \"entry level\" positions - Most employers want hackers who can deliver on the next generation of products and services. They don't want to pay \"good beginners\" to learn what professionals need to know in order to deliver actual value.\n\nI'm not a hacker, but I know people who are, and most of them are basically life-long programmers, some of whom went to college, for CS, or an unrelated degree. They started early, as kids, and continued to practice the craft into their adult years. There are a few who started later, but all of them had ~10 years of experience *before* they entered into the industry - That seems to be the core commonality between them, and it makes sense.\n\nThere's a big demand for hackers, because those are the kind of people who can actually push to, and then push beyond the limits of existing technology, to innovate, and to subsequently deliver true value.\n\nWhere's the value in hiring someone who knows little more than how to make a very basic website with RoR? It's not a rhetorical question; I honestly don't know, because people who can do that seem to be everywhere these days, and it seems like they can only replicate (partially, at best) a product/service that's already been done much, much better by a company that employs actual hackers.\n\nI would be very interested in learning more about the companies that are willing to hire and train beginners - they seem like a market oddity, but it's possible that my perception of the market is skewed.", "aSentId": 57116, "answer": "You need a guy who's willing to sit there and make webpages that print out some DB tables and make them into graphs. No senior developer wants to do that all day, but someone who finds this challenging will actually find it fun and rewarding because they're learning.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57109, "question": "These code schools have more in common with a developer's job in the real world than a university course in Comp Sci does. Whether there's enough depth there is obviously an issue, but if the end result for the student is an entry level job, in which they can gain more experience, then I think they've achieved their aim.", "aSentId": 57118, "answer": "I'd agree, but if you need to practice any amount of theory it will be lacking.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57109, "question": "These code schools have more in common with a developer's job in the real world than a university course in Comp Sci does. Whether there's enough depth there is obviously an issue, but if the end result for the student is an entry level job, in which they can gain more experience, then I think they've achieved their aim.", "aSentId": 57120, "answer": "Yeah. Gotta start somewhere. Probably pretty useful for someone from a different programming background to begin learning a new framework. I bought some 99 dollar iOS course. Am I going to be an expert when I finish? No it gets me started in the basics and if my interest keeps going I'll pick up more. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57123, "question": "&gt; These code schools have more in common with a developer's job in the real world than a university course in Comp Sci does.\n\nThat's because a lot of computer science programs at large universities have gone the vocational route and let industry dictate the curriculum.  The result is a focus on faddish tools and languages instead of building critical thinking skills and theoretical understanding of the discipline.  Nothing wrong with vocational training, however, large university computer science departments are highly bureaucratic and slow to adapt, once the new curriculum is finally rolled out the industry has shifted, the tail chasing resumes and students are left with stale skills and shaky foundations.  ", "aSentId": 57124, "answer": "In my experience most CompSci courses at the universities I looked at were largely theory-based, while those calling themselves Software Engineering were practical/vocational.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57125, "question": "In my experience most CompSci courses at the universities I looked at were largely theory-based, while those calling themselves Software Engineering were practical/vocational.", "aSentId": 57126, "answer": "That's a good thing. Exmple: when I was in school they never made us do XSLT. They mentioned what it was and how as long as we know the THEORY behind it we can figure it out.\n\nAs it happened, that technology was a dead end. It saved me time not to learn how to write it by hand or how to use tools built around it. But I learned what regular languages are, I learned what context-free languages are, etc. and this is in general useful knowledge.\n\nSo my university education is useful a decade later, while 2005 technologies may or may not be outdated right now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57127, "question": "That's a good thing. Exmple: when I was in school they never made us do XSLT. They mentioned what it was and how as long as we know the THEORY behind it we can figure it out.\n\nAs it happened, that technology was a dead end. It saved me time not to learn how to write it by hand or how to use tools built around it. But I learned what regular languages are, I learned what context-free languages are, etc. and this is in general useful knowledge.\n\nSo my university education is useful a decade later, while 2005 technologies may or may not be outdated right now.", "aSentId": 57128, "answer": "XSLT is not a dead end, you simply don't do a lot of XML transformations in your day to day work.  If you did, you'd use XSLT because there's nothing out there that does it better.\n\nI once asked a professor why they didn't teach X, and his response was roughly, there's so much out there that there will always be things we don't have time to teach.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57130, "question": "I just finished one and it was like being in a really well mentored internship. \n\nThey definitely oversold what they were gonna offer people with no experience, for those of us with some experience it was a really good course that taught us enough to figure things out on our own. \n\nI've got a job interview tomorrow for a position that four months ago I wouldn't have the courage or know how to do. I feel really confident now. ", "aSentId": 57131, "answer": "Care to go into the details of what your program was like?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57132, "question": "Care to go into the details of what your program was like?", "aSentId": 57133, "answer": "Sure. Do you have specific questions?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57134, "question": "Sure. Do you have specific questions?", "aSentId": 57135, "answer": "How long/intensive was the program? Who was it offered by? What did it cover? How much did it cost?\n\n&gt; They definitely oversold what they were gonna offer people with no experience\n\nCan you elaborate on the above? Sorry for the multiple questions, but I'm on the fence about starting one of these courses and I keep flip-flopping back and forth.\n\nPS - Good luck with your interview!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57137, "question": "i think the people who go to those schools are the same ones who read nonsense like this.", "aSentId": 57138, "answer": "&gt; nonsense like this\n\nReferring to the article or your comment?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57139, "question": "&gt; nonsense like this\n\nReferring to the article or your comment?", "aSentId": 57140, "answer": "yes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57141, "question": "yes.", "aSentId": 57142, "answer": "Oh my god I swear I have read an exchange nearly exactly like this on Reddit in the past year.\n\nSerious Deja Vu right now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57143, "question": "Oh my god I swear I have read an exchange nearly exactly like this on Reddit in the past year.\n\nSerious Deja Vu right now.", "aSentId": 57144, "answer": "Just one?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57146, "question": "I don't even write code. I heard people, I extract specifications, I massage code, I drive servers, I narrate code, I generate code/data/structures, I parse problems, I study bugs, I manage bugs,...     I am a writter, and what I write is meaning. I am a translator and what I translate to,is not words of a human language. I am a painter, and what I describe is objects and data. I am a architecet, and what I describe is the building, and all the possible cities that will grown around it.  Programmers don't just code.", "aSentId": 57147, "answer": "Yeah, no.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57146, "question": "I don't even write code. I heard people, I extract specifications, I massage code, I drive servers, I narrate code, I generate code/data/structures, I parse problems, I study bugs, I manage bugs,...     I am a writter, and what I write is meaning. I am a translator and what I translate to,is not words of a human language. I am a painter, and what I describe is objects and data. I am a architecet, and what I describe is the building, and all the possible cities that will grown around it.  Programmers don't just code.", "aSentId": 57149, "answer": "Hang in there buddy, downvoters gotta hate. I loved it :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 57150, "question": "Hang in there buddy, downvoters gotta hate. I loved it :-)", "aSentId": 57151, "answer": "I am the Paul Blart of /r/programming :D", "corpus": "reddit"}]