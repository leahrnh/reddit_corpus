[{"docID": "t5_2fwo", "qSentId": 13465, "question": "SQLite developer must have received a lot of phone calls", "aSentId": 13466, "answer": "[You can actually do a line range](https://github.com/mackyle/sqlite/blob/3cf493d4018042c70a4db733dd38f96896cd825f/src/os.h#L52-62)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13467, "question": "[You can actually do a line range](https://github.com/mackyle/sqlite/blob/3cf493d4018042c70a4db733dd38f96896cd825f/src/os.h#L52-62)", "aSentId": 13468, "answer": "Cool. You can do it from the UI by holding shift, in case anyone had trouble figuring it out. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13469, "question": "Cool. You can do it from the UI by holding shift, in case anyone had trouble figuring it out. ", "aSentId": 13470, "answer": "holding shift and... what?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13471, "question": "holding shift and... what?", "aSentId": 13472, "answer": "And clicking the line numbers.\n\nYou link to a line by clicking on its line number. You link to a range by clicking a line number, holding shift, and clicking another line number (analogous to how you commonly select ranges in text or lists in GUIs).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13469, "question": "Cool. You can do it from the UI by holding shift, in case anyone had trouble figuring it out. ", "aSentId": 13474, "answer": "I was having some trouble but called the developers of Github for help.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13467, "question": "[You can actually do a line range](https://github.com/mackyle/sqlite/blob/3cf493d4018042c70a4db733dd38f96896cd825f/src/os.h#L52-62)", "aSentId": 13476, "answer": "Damn Github is slick.  Just when you think you've seen everything...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13467, "question": "[You can actually do a line range](https://github.com/mackyle/sqlite/blob/3cf493d4018042c70a4db733dd38f96896cd825f/src/os.h#L52-62)", "aSentId": 13478, "answer": "That is cool, but doesn't work if blocking javascript though, although I am probably the only one that hasn't whitelisted github.com yet who regularly goes there...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13479, "question": "That is cool, but doesn't work if blocking javascript though, although I am probably the only one that hasn't whitelisted github.com yet who regularly goes there...", "aSentId": 13480, "answer": "If you're blocking JavaScript you don't get to complain about JavaScript not working, it's your own bloody fault. It's like walking around with your eyes shut them complaining when you hit a pole.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13481, "question": "If you're blocking JavaScript you don't get to complain about JavaScript not working, it's your own bloody fault. It's like walking around with your eyes shut them complaining when you hit a pole.", "aSentId": 13482, "answer": "&gt;  it's your own bloody fault\n\nI already implied that myself in the second part of my sentence, but thanks anyways.\n\nThe point of my post, if I could make it a bit more clear, is that it surprised me at first that a slight change to the url, just an addition of a dash and a 62, so \"-62\", doesn't work with noscript while while the previous version did. I know why the first did and second does of course, but at first, a bit surprising and interesting.\n\nSorry you mad though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13465, "question": "SQLite developer must have received a lot of phone calls", "aSentId": 13484, "answer": "Relevant excerpt:\n\nThe default prefix used to be \"sqlite_\". But then\nMcafee started using SQLite in their anti-virus product and it\nstarted putting files with the \"sqlite\" name in the c:/temp folder.\nThis annoyed many windows users. Those users would then do a\nGoogle search for \"sqlite\", find the telephone numbers of the\ndevelopers and call to wake them up at night and complain.\nFor this reason, the default name prefix is changed to be \"sqlite\"\nspelled backwards. So the temp files are still identified, but\nanybody smart enough to figure out the code is also likely smart\nenough to know that calling the developer will not help get rid\nof the file.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13485, "question": "Relevant excerpt:\n\nThe default prefix used to be \"sqlite_\". But then\nMcafee started using SQLite in their anti-virus product and it\nstarted putting files with the \"sqlite\" name in the c:/temp folder.\nThis annoyed many windows users. Those users would then do a\nGoogle search for \"sqlite\", find the telephone numbers of the\ndevelopers and call to wake them up at night and complain.\nFor this reason, the default name prefix is changed to be \"sqlite\"\nspelled backwards. So the temp files are still identified, but\nanybody smart enough to figure out the code is also likely smart\nenough to know that calling the developer will not help get rid\nof the file.", "aSentId": 13486, "answer": "It's actually a decent example for commenting. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13487, "question": "It's actually a decent example for commenting. ", "aSentId": 13488, "answer": "Don't comment *what you're doing.* Comment *why you did it.*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13489, "question": "Don't comment *what you're doing.* Comment *why you did it.*", "aSentId": 13490, "answer": "/* sqlite backwards */\n\nThis is dumb.\n\n*changes it back to spell it normally*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13491, "question": "/* sqlite backwards */\n\nThis is dumb.\n\n*changes it back to spell it normally*", "aSentId": 13492, "answer": "But it *said* /\\* DO NOT EDIT \\*/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13493, "question": "But it *said* /\\* DO NOT EDIT \\*/", "aSentId": 13494, "answer": "Well they obviously didn't mean that for *me*.  I know what I'm doing!\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13489, "question": "Don't comment *what you're doing.* Comment *why you did it.*", "aSentId": 13496, "answer": "Comments which just state what is happening, actually just get in the way of understanding the code. They simply add more noise to the problem, and then my mind must filter out the noise.\n\nI never trust comments which just state what's going on, because code is hardly ever maintained (properly), let alone the comments.\n\nI like to think of comments which explain the why or the WTF factor of the code as little clues or bread crumb trail as to why this is the way it is. Being able to see into the past and understand why something is ugly, is really helpful for fixing bugs and not repeating past mistakes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13497, "question": "Comments which just state what is happening, actually just get in the way of understanding the code. They simply add more noise to the problem, and then my mind must filter out the noise.\n\nI never trust comments which just state what's going on, because code is hardly ever maintained (properly), let alone the comments.\n\nI like to think of comments which explain the why or the WTF factor of the code as little clues or bread crumb trail as to why this is the way it is. Being able to see into the past and understand why something is ugly, is really helpful for fixing bugs and not repeating past mistakes.", "aSentId": 13498, "answer": "\"Comments are lies waiting to happen.\"\n\nFunny enough, I got a lot of downvotes and a lot of people telling me I was wrong in another thread here for saying that. But they really are.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13499, "question": "\"Comments are lies waiting to happen.\"\n\nFunny enough, I got a lot of downvotes and a lot of people telling me I was wrong in another thread here for saying that. But they really are.", "aSentId": 13500, "answer": "Did you say it in the same context?  Because it could be easy to interpret that statement as *\"Don't Comment\"*, which really *is* bad advice :-/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13501, "question": "Did you say it in the same context?  Because it could be easy to interpret that statement as *\"Don't Comment\"*, which really *is* bad advice :-/", "aSentId": 13502, "answer": "Unless the code is actually easier to read then the potential comment. In which case, don't comment.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13489, "question": "Don't comment *what you're doing.* Comment *why you did it.*", "aSentId": 13504, "answer": "\"You know what? Fuck Dave.\"\n\ndefine SQLITE_TEMP_FILE_PREFIX \"call_tech_support_318_555_5555_\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13507, "question": "Comment is the what, and the why, but the latter only if the why can't easily be gleaned from the context. Code is the *how*, and *only* that.\n\nThat's my policy anyway.", "aSentId": 13508, "answer": "Disagree, code is the *what and how*.\n\nMeaningful class, method, and variable names, please.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13509, "question": "Disagree, code is the *what and how*.\n\nMeaningful class, method, and variable names, please.", "aSentId": 13510, "answer": "What and how, but the why can't be a bit tricky to get across sometimes. Even if you could write the code to make more sense, a single line comment could make it much easier to understand than creating a couple more functions. Of course this really depends on the case though... Good code _usually_ doesn't require comments, but it depends on what you're doing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13509, "question": "Disagree, code is the *what and how*.\n\nMeaningful class, method, and variable names, please.", "aSentId": 13512, "answer": "OMG please yes... I seriously just got finished going over a program and the guy just used letters of the alphabet for all of his variables.  I mean, the entire program, if it called for another variable it was just the next letter in the Alphabet.  I honestly have no idea how he kept track of it all in his head lol.  At least his global variables each had comments to tell me what they all were but geesh, yes, meaningful names please!!!  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13507, "question": "Comment is the what, and the why, but the latter only if the why can't easily be gleaned from the context. Code is the *how*, and *only* that.\n\nThat's my policy anyway.", "aSentId": 13514, "answer": "Yup, exactly. And I don't mind seeing comments even when the what is obvious given the how. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13515, "question": "Yup, exactly. And I don't mind seeing comments even when the what is obvious given the how. ", "aSentId": 13516, "answer": "Yeah, some people in here *really* hate comments, for some reason. \n\n\"CODE SHOULD BE COMPLETELY SELF-DOCUMENTING.\"\n\nGeez, that's not how it works. Sometimes I just don't want to read through and parse a bunch of code when a comment could just tell me what it is. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13517, "question": "Yeah, some people in here *really* hate comments, for some reason. \n\n\"CODE SHOULD BE COMPLETELY SELF-DOCUMENTING.\"\n\nGeez, that's not how it works. Sometimes I just don't want to read through and parse a bunch of code when a comment could just tell me what it is. ", "aSentId": 13518, "answer": "Exactly. There's nothing wrong with explaining a paragraph of C in 2 lines of English, no matter how obvious it may seem to the author...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13519, "question": "Exactly. There's nothing wrong with explaining a paragraph of C in 2 lines of English, no matter how obvious it may seem to the author...", "aSentId": 13520, "answer": "Of course, there's a difference between, say, C++ and Python. One of my CS professors really *ought* to comment every line, because it's completely impossible to figure out what the fuck anything does (he exclusively uses 2-character variable names for one thing). That's a little bit harder in Python, though I still write comments explaining anything that's not glaringly obvious.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13521, "question": "Of course, there's a difference between, say, C++ and Python. One of my CS professors really *ought* to comment every line, because it's completely impossible to figure out what the fuck anything does (he exclusively uses 2-character variable names for one thing). That's a little bit harder in Python, though I still write comments explaining anything that's not glaringly obvious.", "aSentId": 13522, "answer": "well he doesn't use single letters.  but you should shoot him for obfuscation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13507, "question": "Comment is the what, and the why, but the latter only if the why can't easily be gleaned from the context. Code is the *how*, and *only* that.\n\nThat's my policy anyway.", "aSentId": 13524, "answer": "disagree strongly, code is the *alpha and the omega*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13528, "question": "I highly disagree. You can tell me why, but that doesn't make l33t, yet frustratingly unreadable, code any more readable.", "aSentId": 13529, "answer": "Comments explain the why, and the code explains the how. If you're writing indecipherable l33t code, you're falling at the second part, the comments have nothing to do with it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13530, "question": "Comments explain the why, and the code explains the how. If you're writing indecipherable l33t code, you're falling at the second part, the comments have nothing to do with it. ", "aSentId": 13531, "answer": "&gt; If you're writing indecipherable l33t code, you're falling at the second part,\n\nI agree, but A  LOT of people fail at this part", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13530, "question": "Comments explain the why, and the code explains the how. If you're writing indecipherable l33t code, you're falling at the second part, the comments have nothing to do with it. ", "aSentId": 13533, "answer": "That's great, but what happened to the *what*? Just one example, in many APIs (I'm looking at you, Xlib) the how is so verbose and unintuitive that the what gets completely lost, and quickly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13534, "question": "That's great, but what happened to the *what*? Just one example, in many APIs (I'm looking at you, Xlib) the how is so verbose and unintuitive that the what gets completely lost, and quickly.", "aSentId": 13535, "answer": "*What* should also be explained by the code. \n\nOf course there are times where *what* or *how* cannot be made obvious by your code, and in these case comments are a good way to explain it. \n\nHowever, when these situations arise, you should be aware of it, and think \"is there a better way\" before you simply think \"I'll explain in the comments\". ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13538, "question": "I would say also comment what you are doing. It then becomes quicker to read through the code to find what you want in human readable terms. \"Ah this is the bit where it does X\"", "aSentId": 13539, "answer": "Comments are not compile checked and 'what' comments tend to become incorrect immediately when someone else refactors the code. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13540, "question": "Comments are not compile checked and 'what' comments tend to become incorrect immediately when someone else refactors the code. ", "aSentId": 13541, "answer": "    // Setting the problem flag to true\n    problemFlag = false;", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13542, "question": "    // Setting the problem flag to true\n    problemFlag = false;", "aSentId": 13543, "answer": "never underestimate your predecessor  \nbecause he checks problemFlag like this everywhere:  \n  \n    if(!problemFlag){....", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13542, "question": "    // Setting the problem flag to true\n    problemFlag = false;", "aSentId": 13545, "answer": "I have a Java tutor who comments everywhere, extremely pointlessly.  For example, any time a block is closed, he always puts a comment to state exactly which block has been closed.  The worst thing is that a lot of the students are now picking this style up.\n\nI mean, it wouldn't be so bad, but I've lost track of the number of times you'll get to the end of a for-loop block and see `\\\\ end while`, or the end of the find method to see the comment `\\\\ end search()`.  It's really getting irritating now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13546, "question": "I have a Java tutor who comments everywhere, extremely pointlessly.  For example, any time a block is closed, he always puts a comment to state exactly which block has been closed.  The worst thing is that a lot of the students are now picking this style up.\n\nI mean, it wouldn't be so bad, but I've lost track of the number of times you'll get to the end of a for-loop block and see `\\\\ end while`, or the end of the find method to see the comment `\\\\ end search()`.  It's really getting irritating now.", "aSentId": 13547, "answer": "This is actually extremely good if you've got large blocks that extend over 50+ lines, but if it's a five-line `for` loop...yeah, not so much.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13548, "question": "This is actually extremely good if you've got large blocks that extend over 50+ lines, but if it's a five-line `for` loop...yeah, not so much.", "aSentId": 13549, "answer": "I am grateful when a developer adds these close block comments for large blocks. I would be more grateful if they had refactored it so that it wouldn't be so long, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13548, "question": "This is actually extremely good if you've got large blocks that extend over 50+ lines, but if it's a five-line `for` loop...yeah, not so much.", "aSentId": 13551, "answer": "Visual Studio (or maybe it is the Resharper plugin), does this \"automatically\" for you. If you can't see the first { brace, then at the second } brace, it will tell you what the first { brace was for (function name, for loop, if statement, etc).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13548, "question": "This is actually extremely good if you've got large blocks that extend over 50+ lines, but if it's a five-line `for` loop...yeah, not so much.", "aSentId": 13553, "answer": "You're right, it's good when blocks are that long. Of course, if your blocks are that long you have bigger problems.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13546, "question": "I have a Java tutor who comments everywhere, extremely pointlessly.  For example, any time a block is closed, he always puts a comment to state exactly which block has been closed.  The worst thing is that a lot of the students are now picking this style up.\n\nI mean, it wouldn't be so bad, but I've lost track of the number of times you'll get to the end of a for-loop block and see `\\\\ end while`, or the end of the find method to see the comment `\\\\ end search()`.  It's really getting irritating now.", "aSentId": 13557, "answer": "I think this practice dates back to when editors didn't highlight opening/closing parens/braces/brackets. Teachers tend to be more experienced developers who are comfortable with their tools, which can mean that they're not familiar with the feature set of newer tools.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13546, "question": "I have a Java tutor who comments everywhere, extremely pointlessly.  For example, any time a block is closed, he always puts a comment to state exactly which block has been closed.  The worst thing is that a lot of the students are now picking this style up.\n\nI mean, it wouldn't be so bad, but I've lost track of the number of times you'll get to the end of a for-loop block and see `\\\\ end while`, or the end of the find method to see the comment `\\\\ end search()`.  It's really getting irritating now.", "aSentId": 13559, "answer": "This is extremely useful if you write way-too-long blocks. I wish for my colleagues to do this, when they write 1000 line loops. Of course, it would be 1000 times more awesome if they wrote 1 line loops and a function call to a tidy function that called sub-functions...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13540, "question": "Comments are not compile checked and 'what' comments tend to become incorrect immediately when someone else refactors the code. ", "aSentId": 13561, "answer": "You're suppose to edit comments too when refactoring...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13562, "question": "You're suppose to edit comments too when refactoring...", "aSentId": 13563, "answer": "Yeah and it doesn't always happen.  Considering how little benefit putting that information in the comment is it just doesn't make sense to open up another area for mistakes to occur that are not easily caught.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13564, "question": "Yeah and it doesn't always happen.  Considering how little benefit putting that information in the comment is it just doesn't make sense to open up another area for mistakes to occur that are not easily caught.", "aSentId": 13565, "answer": "But the unit test you worked tireless to skip will catch them right?\n\n    throw new NotImplementedException();", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13562, "question": "You're suppose to edit comments too when refactoring...", "aSentId": 13567, "answer": "You're supposed to code it well the first time, too. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13540, "question": "Comments are not compile checked and 'what' comments tend to become incorrect immediately when someone else refactors the code. ", "aSentId": 13569, "answer": "If you work with the kind of people that can't be bothered to update comments, or you have the kind of codebase where it's hard to find comments that need to be changed given a particular code change... you've got *way* bigger problems than the code being out of sync with the comments.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13570, "question": "If you work with the kind of people that can't be bothered to update comments, or you have the kind of codebase where it's hard to find comments that need to be changed given a particular code change... you've got *way* bigger problems than the code being out of sync with the comments.", "aSentId": 13571, "answer": "Welcome to every \"right-sized\" shop with \"overseas development partners\". Not that it doesn't happen with in-house staff too, but it's almost guaranteed once you start shipping your code off to the lowest bidder.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13572, "question": "Welcome to every \"right-sized\" shop with \"overseas development partners\". Not that it doesn't happen with in-house staff too, but it's almost guaranteed once you start shipping your code off to the lowest bidder.", "aSentId": 13573, "answer": "I know, it happens a lot, but in those situations, comments (and for that matter, readable code) quickly become a lost cause anyway, making the whole thing moot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13570, "question": "If you work with the kind of people that can't be bothered to update comments, or you have the kind of codebase where it's hard to find comments that need to be changed given a particular code change... you've got *way* bigger problems than the code being out of sync with the comments.", "aSentId": 13575, "answer": "Its really not that simple. take the following code:\n\n    public class Foo{\n    \n    \n    }\n    \n    public class Bar{\n        \n        public Foo doThing(){\n              //Modify the foo Object somehow\n        }\n    }\n\nAs soon as you refactor 'Foo' to be 'Baz', you now have to scour your entire code base to see if anyone wrote a comment directly referencing Foo. True you could do this with a regex search, but if you are refactoring a lot you will likely miss it sometimes.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13576, "question": "Its really not that simple. take the following code:\n\n    public class Foo{\n    \n    \n    }\n    \n    public class Bar{\n        \n        public Foo doThing(){\n              //Modify the foo Object somehow\n        }\n    }\n\nAs soon as you refactor 'Foo' to be 'Baz', you now have to scour your entire code base to see if anyone wrote a comment directly referencing Foo. True you could do this with a regex search, but if you are refactoring a lot you will likely miss it sometimes.\n\n", "aSentId": 13577, "answer": "...but you'd have to change the definition of doThing(), and when you go to do that, the comment should be obvious. And if you're search-replacing, you'd catch it anyway.\n\nIf Baz is instead a child of Foo, well, the comment is still true, no?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13578, "question": "...but you'd have to change the definition of doThing(), and when you go to do that, the comment should be obvious. And if you're search-replacing, you'd catch it anyway.\n\nIf Baz is instead a child of Foo, well, the comment is still true, no?", "aSentId": 13579, "answer": "Maybe not the best example, tried to write something up quick. In my experience though, anything in your code base / documentation/ etc that is not compile-checked for accuracy will immediately drift for a sufficiently large project. Hypothetically it should be solvable but in practice I have never seen it happen", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13580, "question": "Maybe not the best example, tried to write something up quick. In my experience though, anything in your code base / documentation/ etc that is not compile-checked for accuracy will immediately drift for a sufficiently large project. Hypothetically it should be solvable but in practice I have never seen it happen", "aSentId": 13581, "answer": "I'm of the attitude that for that kind of thing to happen, you'd have to produce a situation where comments describing Foo are far removed from code doing things with Foo, or doesn't even have corresponding code at all, which is already a problem in itself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13582, "question": "I'm of the attitude that for that kind of thing to happen, you'd have to produce a situation where comments describing Foo are far removed from code doing things with Foo, or doesn't even have corresponding code at all, which is already a problem in itself.", "aSentId": 13583, "answer": "In the ideal world yes that is true. But in practice I think the comments can be near a use of Foo but far from the definition of Foo and will tend to drift when Foo changes unless your team is extraordinarily diligent. Additionally, comments on the usage tends to document assumptions which are also likely to drift with time causing a lot of heartache later. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13584, "question": "In the ideal world yes that is true. But in practice I think the comments can be near a use of Foo but far from the definition of Foo and will tend to drift when Foo changes unless your team is extraordinarily diligent. Additionally, comments on the usage tends to document assumptions which are also likely to drift with time causing a lot of heartache later. ", "aSentId": 13585, "answer": "Maybe I'm naive, but if a comment at a use of Foo *should* be describing the definition of Foo, the nearby code would be dependent on those details of the definition of Foo. As such, if the comment is wrong, the *code* is wrong, unless someone changed one but not the other.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13538, "question": "I would say also comment what you are doing. It then becomes quicker to read through the code to find what you want in human readable terms. \"Ah this is the bit where it does X\"", "aSentId": 13587, "answer": "I'd say it depends. DO NOT explain a simple loop that polls data from a list of objects. DO explain non-trivial math operations, nested loops with short variable names, or why something obviously wrong and idiotic is actually intentional and not as bad as it looks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13588, "question": "I'd say it depends. DO NOT explain a simple loop that polls data from a list of objects. DO explain non-trivial math operations, nested loops with short variable names, or why something obviously wrong and idiotic is actually intentional and not as bad as it looks.", "aSentId": 13589, "answer": "&gt;nested loops with short variable names\n\nOr just use more descriptive variable names.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13538, "question": "I would say also comment what you are doing. It then becomes quicker to read through the code to find what you want in human readable terms. \"Ah this is the bit where it does X\"", "aSentId": 13591, "answer": "If your code uses human-readable function names, there is no need for such comments.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13592, "question": "If your code uses human-readable function names, there is no need for such comments.", "aSentId": 13593, "answer": "The only way that works is every function is only roughly a dozen or less lines long, which gets unwieldly very fast if you're doing anything even remotely complex. switch-case statements? Every single case becomes just a function call to a single-use function, that now has its own scope and may have a dozen or more arguments, half of them pointers to variables in the parent, just to deal with the separate scopes. Yuck.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13592, "question": "If your code uses human-readable function names, there is no need for such comments.", "aSentId": 13595, "answer": "Java/iOS developer using IDE-supplied code completion detected!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13487, "question": "It's actually a decent example for commenting. ", "aSentId": 13598, "answer": "I'd rather read well-commented code than code without comments.\n\nVariable names and function names could do a lot of work on their own to explain the code, but they can go only so far. Sometimes you just need whole sentences and punctuation.\n\nI suspect people who talk about \"self-documenting\" code are simply lazy and don't want to comment their code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13485, "question": "Relevant excerpt:\n\nThe default prefix used to be \"sqlite_\". But then\nMcafee started using SQLite in their anti-virus product and it\nstarted putting files with the \"sqlite\" name in the c:/temp folder.\nThis annoyed many windows users. Those users would then do a\nGoogle search for \"sqlite\", find the telephone numbers of the\ndevelopers and call to wake them up at night and complain.\nFor this reason, the default name prefix is changed to be \"sqlite\"\nspelled backwards. So the temp files are still identified, but\nanybody smart enough to figure out the code is also likely smart\nenough to know that calling the developer will not help get rid\nof the file.", "aSentId": 13600, "answer": "Googles etilqs. \"Did you mean: *sqlite\"*\n\nNo, just kidding. But the first result explains what it is and contains a link to the sqlite site.\n\nEdit: Maybe they should have just put a \"noindex\" on the page with their phone numbers so it wouldn't be such a highly-ranked Google result?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13601, "question": "Googles etilqs. \"Did you mean: *sqlite\"*\n\nNo, just kidding. But the first result explains what it is and contains a link to the sqlite site.\n\nEdit: Maybe they should have just put a \"noindex\" on the page with their phone numbers so it wouldn't be such a highly-ranked Google result?", "aSentId": 13602, "answer": "Heh, \"noindex\" on contact page of your business is certainly nonstandard business practice :D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13485, "question": "Relevant excerpt:\n\nThe default prefix used to be \"sqlite_\". But then\nMcafee started using SQLite in their anti-virus product and it\nstarted putting files with the \"sqlite\" name in the c:/temp folder.\nThis annoyed many windows users. Those users would then do a\nGoogle search for \"sqlite\", find the telephone numbers of the\ndevelopers and call to wake them up at night and complain.\nFor this reason, the default name prefix is changed to be \"sqlite\"\nspelled backwards. So the temp files are still identified, but\nanybody smart enough to figure out the code is also likely smart\nenough to know that calling the developer will not help get rid\nof the file.", "aSentId": 13604, "answer": "&gt;This annoyed many windows users.\n\nOf all the things to annoy Windows users, *this* is why they call people angrily in the middle of the night?\n\nYour computer having to fully reboot every time you sneeze - fine. The file system not supporting hard links and being told you can't open a file because some other program has an unnecessary and idiotic exclusive lock - fine. Windows Vista coming out with poor driver support and half-baked - fine. Windows 8 being a schizophrenic mess - fine. Installs taking forever, registry corruption - fine. But *fucking SQLIte files in my C:\\temp folder????* Not on my watch, motherfuckers. Wow. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13605, "question": "&gt;This annoyed many windows users.\n\nOf all the things to annoy Windows users, *this* is why they call people angrily in the middle of the night?\n\nYour computer having to fully reboot every time you sneeze - fine. The file system not supporting hard links and being told you can't open a file because some other program has an unnecessary and idiotic exclusive lock - fine. Windows Vista coming out with poor driver support and half-baked - fine. Windows 8 being a schizophrenic mess - fine. Installs taking forever, registry corruption - fine. But *fucking SQLIte files in my C:\\temp folder????* Not on my watch, motherfuckers. Wow. ", "aSentId": 13606, "answer": "Uh what?  People complain about that other shit literally all the time ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13605, "question": "&gt;This annoyed many windows users.\n\nOf all the things to annoy Windows users, *this* is why they call people angrily in the middle of the night?\n\nYour computer having to fully reboot every time you sneeze - fine. The file system not supporting hard links and being told you can't open a file because some other program has an unnecessary and idiotic exclusive lock - fine. Windows Vista coming out with poor driver support and half-baked - fine. Windows 8 being a schizophrenic mess - fine. Installs taking forever, registry corruption - fine. But *fucking SQLIte files in my C:\\temp folder????* Not on my watch, motherfuckers. Wow. ", "aSentId": 13608, "answer": "I'm sure they were probably exaggerating the number of calls they had, really.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13605, "question": "&gt;This annoyed many windows users.\n\nOf all the things to annoy Windows users, *this* is why they call people angrily in the middle of the night?\n\nYour computer having to fully reboot every time you sneeze - fine. The file system not supporting hard links and being told you can't open a file because some other program has an unnecessary and idiotic exclusive lock - fine. Windows Vista coming out with poor driver support and half-baked - fine. Windows 8 being a schizophrenic mess - fine. Installs taking forever, registry corruption - fine. But *fucking SQLIte files in my C:\\temp folder????* Not on my watch, motherfuckers. Wow. ", "aSentId": 13610, "answer": "Actually, NTFS does support symbolic links.  They're called Junctions, and they're used extensively e.g. to map C:\\Documents and Settings to C:\\Users on Windows Vista and up for retarded programs that blindly use XP paths instead of SHGetFolderPath.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13465, "question": "SQLite developer must have received a lot of phone calls", "aSentId": 13612, "answer": "Fucking McAfee does it again", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13613, "question": "Fucking McAfee does it again", "aSentId": 13614, "answer": "It's not like McAfee is a real virus scanner anyway.  These days it's nothing but malware that keeps surreptitiously installing itself back on your computer no matter how many times you tell it to piss off.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13615, "question": "It's not like McAfee is a real virus scanner anyway.  These days it's nothing but malware that keeps surreptitiously installing itself back on your computer no matter how many times you tell it to piss off.", "aSentId": 13616, "answer": "I used to joke around that having McAfee on your computer was worse than any virus you'd ever get. Back on my Windows XP, if the computer grinded to a halt I'd know without even looking that McAfee is running.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13617, "question": "I used to joke around that having McAfee on your computer was worse than any virus you'd ever get. Back on my Windows XP, if the computer grinded to a halt I'd know without even looking that McAfee is running.", "aSentId": 13618, "answer": "When I was 10 I got some software CDs from the local computer magazine. I naively installed McAfee on my W98 PC. It BSOD'd. That was my first BSOD ever, it scared the shit out of me that I didn't touch my computer for a week.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13619, "question": "When I was 10 I got some software CDs from the local computer magazine. I naively installed McAfee on my W98 PC. It BSOD'd. That was my first BSOD ever, it scared the shit out of me that I didn't touch my computer for a week.", "aSentId": 13620, "answer": "For some reason this reminds me of something a scared monkey would do.  I pictured it in my head with screaming and throwing stuff at the screen and everything.  So... yeah.  I need some coffee.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13621, "question": "For some reason this reminds me of something a scared monkey would do.  I pictured it in my head with screaming and throwing stuff at the screen and everything.  So... yeah.  I need some coffee.", "aSentId": 13622, "answer": "Well kids generally use computers as if they are scared monkeys.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13623, "question": "Well kids generally use computers as if they are scared monkeys.", "aSentId": 13624, "answer": "I could get behind either  \"old people generally use...\" or \"kids generally act as if they are scared monkeys\" but accusing young of being less computer adept age group conflicts with reality.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13625, "question": "I could get behind either  \"old people generally use...\" or \"kids generally act as if they are scared monkeys\" but accusing young of being less computer adept age group conflicts with reality.  ", "aSentId": 13626, "answer": "Not really. You\u2019re incompetent before you\u2019re competent.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13617, "question": "I used to joke around that having McAfee on your computer was worse than any virus you'd ever get. Back on my Windows XP, if the computer grinded to a halt I'd know without even looking that McAfee is running.", "aSentId": 13628, "answer": "I still claim this, to this day, not jokingly.  This cure is literally worse than the disease.  Windows Defender does a much better job, for free.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13629, "question": "I still claim this, to this day, not jokingly.  This cure is literally worse than the disease.  Windows Defender does a much better job, for free.", "aSentId": 13630, "answer": "When anybody in my surroundings buys a new laptop I make it my duty to uninstall their crap antivirus and activate Windows Defender. I know that the day they'll have a problem, it won't at least be related to their antivirus.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13631, "question": "When anybody in my surroundings buys a new laptop I make it my duty to uninstall their crap antivirus and activate Windows Defender. I know that the day they'll have a problem, it won't at least be related to their antivirus.", "aSentId": 13632, "answer": "Unless they get tricked into reinstalling it....", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13631, "question": "When anybody in my surroundings buys a new laptop I make it my duty to uninstall their crap antivirus and activate Windows Defender. I know that the day they'll have a problem, it won't at least be related to their antivirus.", "aSentId": 13634, "answer": "As an aside...Which would be better Windows Defender or Microsoft Security Essentials ?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13635, "question": "As an aside...Which would be better Windows Defender or Microsoft Security Essentials ?", "aSentId": 13636, "answer": "It's not really a matter of better but different. In Windows 8, all of the features were rolled into Windows Defender. There is no MSE for Windows 8. Before that, Defender was more for spyware and MSE was more for viruses.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13637, "question": "It's not really a matter of better but different. In Windows 8, all of the features were rolled into Windows Defender. There is no MSE for Windows 8. Before that, Defender was more for spyware and MSE was more for viruses.", "aSentId": 13638, "answer": "Ok thanks ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13631, "question": "When anybody in my surroundings buys a new laptop I make it my duty to uninstall their crap antivirus and activate Windows Defender. I know that the day they'll have a problem, it won't at least be related to their antivirus.", "aSentId": 13640, "answer": "Whenever other people get a new computer and isn't tech savvy (which is odd for my friends) I just do a clean install of the OS fuck all that bloatware", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13617, "question": "I used to joke around that having McAfee on your computer was worse than any virus you'd ever get. Back on my Windows XP, if the computer grinded to a halt I'd know without even looking that McAfee is running.", "aSentId": 13643, "answer": "To me it was worse. Killed my Windows install because I removed it. No virus had done that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13615, "question": "It's not like McAfee is a real virus scanner anyway.  These days it's nothing but malware that keeps surreptitiously installing itself back on your computer no matter how many times you tell it to piss off.", "aSentId": 13646, "answer": "Just like anything from Symantec, really.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13613, "question": "Fucking McAfee does it again", "aSentId": 13648, "answer": "I don't usually like blaming users, but I'm going to call PBKAC on this one.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13649, "question": "I don't usually like blaming users, but I'm going to call PBKAC on this one.", "aSentId": 13650, "answer": "&gt; PBKAC\n\nI've always seen it as PEBKAC. ( problem *exists* between keyboard and chair )", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13651, "question": "&gt; PBKAC\n\nI've always seen it as PEBKAC. ( problem *exists* between keyboard and chair )", "aSentId": 13652, "answer": "Makes it easier to say, as well. PEBKAC gets thrown around our office regularly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13653, "question": "Makes it easier to say, as well. PEBKAC gets thrown around our office regularly.", "aSentId": 13654, "answer": "Plus you can pass it off as some kind of combination sneeze/cough.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13651, "question": "&gt; PBKAC\n\nI've always seen it as PEBKAC. ( problem *exists* between keyboard and chair )", "aSentId": 13656, "answer": "I prefer the flow of PEBCAK (problem exists between chair and keyboard), \"keyboard and chair\" just doesn't have the same ring to it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13657, "question": "I prefer the flow of PEBCAK (problem exists between chair and keyboard), \"keyboard and chair\" just doesn't have the same ring to it.", "aSentId": 13658, "answer": "There's also the ID-10T, an error code I've patiently been waiting most of my professional life to use in a legitimate product.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13659, "question": "There's also the ID-10T, an error code I've patiently been waiting most of my professional life to use in a legitimate product.", "aSentId": 13660, "answer": "Used it. Got fired. Moral of story. Don't tell CEO issue is ID-10T error in email. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13661, "question": "Used it. Got fired. Moral of story. Don't tell CEO issue is ID-10T error in email. ", "aSentId": 13662, "answer": "Story plz", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13663, "question": "Story plz", "aSentId": 13664, "answer": "Worked at a clothing store managing web store. Boss couldn't figure out how to save invoices in a system I built. I showed him. Next day, same issue. I replied must be an id-10t error and I would come check it out. He googled it before I got there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13665, "question": "Worked at a clothing store managing web store. Boss couldn't figure out how to save invoices in a system I built. I showed him. Next day, same issue. I replied must be an id-10t error and I would come check it out. He googled it before I got there.", "aSentId": 13666, "answer": "ID-10T errors are not limited to the technical domain. Not that I'd know anything about that personally, mind you.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13665, "question": "Worked at a clothing store managing web store. Boss couldn't figure out how to save invoices in a system I built. I showed him. Next day, same issue. I replied must be an id-10t error and I would come check it out. He googled it before I got there.", "aSentId": 13668, "answer": "For future reference, you're supposed to just say it verbally if you want it to go over their head... the moment you have it written out.. well, you don't really need Google. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13669, "question": "For future reference, you're supposed to just say it verbally if you want it to go over their head... the moment you have it written out.. well, you don't really need Google. ", "aSentId": 13670, "answer": "Currently a successful engineer at a finance co, I got the hint afterwards. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13657, "question": "I prefer the flow of PEBCAK (problem exists between chair and keyboard), \"keyboard and chair\" just doesn't have the same ring to it.", "aSentId": 13672, "answer": "I disagree. _**Prob**lem **ex**ists **bet**ween **key**board **and** chair_ flows much better than _**chair** and **key**board_, to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13673, "question": "I disagree. _**Prob**lem **ex**ists **bet**ween **key**board **and** chair_ flows much better than _**chair** and **key**board_, to me.", "aSentId": 13674, "answer": "...Probexbetkeyand? That's a weird acronym.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13675, "question": "...Probexbetkeyand? That's a weird acronym.", "aSentId": 13676, "answer": "I think he  was **put**ting the bold to make sure you **did**n't put the em**pha**sis on the wrong syl**lab**le", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13677, "question": "I think he  was **put**ting the bold to make sure you **did**n't put the em**pha**sis on the wrong syl**lab**le", "aSentId": 13678, "answer": "Now I'm deSperateLy rEading everY emPhasis To discoveR a hIddEn meSSage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13675, "question": "...Probexbetkeyand? That's a weird acronym.", "aSentId": 13680, "answer": "I think he was suggesting PEBKAC over PEBCAK because \"keyboard and chair\" sounds better than \"chair and keyboard\" in the phrase.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13681, "question": "I think he was suggesting PEBKAC over PEBCAK because \"keyboard and chair\" sounds better than \"chair and keyboard\" in the phrase.", "aSentId": 13682, "answer": "Also known as PICNIC:  Problem In Chair, Not In Computer.\n\nTrouble is, that one can also expand as its own antonym.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13649, "question": "I don't usually like blaming users, but I'm going to call PBKAC on this one.", "aSentId": 13684, "answer": "CAKBEP\n\n... so people can't google it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13685, "question": "CAKBEP\n\n... so people can't google it.", "aSentId": 13686, "answer": "Google:  Did you mean: **CAKEP**\n\nI didn't, but sure, I'll have some cake.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13687, "question": "Google:  Did you mean: **CAKEP**\n\nI didn't, but sure, I'll have some cake.\n\n", "aSentId": 13688, "answer": "That's how you tell whether the thing in front of you is a cake in Lisp.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13689, "question": "That's how you tell whether the thing in front of you is a cake in Lisp.", "aSentId": 13690, "answer": "I still prefer to think it's asking if I want cake. Cake?  Sure.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13687, "question": "Google:  Did you mean: **CAKEP**\n\nI didn't, but sure, I'll have some cake.\n\n", "aSentId": 13692, "answer": "CAKEPLEASE", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13649, "question": "I don't usually like blaming users, but I'm going to call PBKAC on this one.", "aSentId": 13694, "answer": "I like calling this a layer 8 error.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13696, "question": "For anyone else who hadn't heard that initialism before:\n\nProblem Between Keyboard and Chair", "aSentId": 13697, "answer": "AKA, the ID-10T error.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13698, "question": "AKA, the ID-10T error.", "aSentId": 13699, "answer": "AKA, layer 8 problem ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13696, "question": "For anyone else who hadn't heard that initialism before:\n\nProblem Between Keyboard and Chair", "aSentId": 13701, "answer": "I prefer PICNIC: Problem In Chair Not In Computer. Rolls off the tongue better than PEBKAC.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13702, "question": "I prefer PICNIC: Problem In Chair Not In Computer. Rolls off the tongue better than PEBKAC.", "aSentId": 13703, "answer": "An old PC Tech used to tell our users this. It's a good thing they weren't too smart.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13696, "question": "For anyone else who hadn't heard that initialism before:\n\nProblem Between Keyboard and Chair", "aSentId": 13705, "answer": "Thank you, I was too lazy to Google it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13706, "question": "Thank you, I was too lazy to Google it.", "aSentId": 13707, "answer": "Here in chile we called it the \"8th layer problem\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13708, "question": "Here in chile we called it the \"8th layer problem\"", "aSentId": 13709, "answer": "you mean based on the OSI networking layers?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13710, "question": "you mean based on the OSI networking layers?", "aSentId": 13711, "answer": "Yep", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13712, "question": "Yep", "aSentId": 13713, "answer": "haha NICE.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13706, "question": "Thank you, I was too lazy to Google it.", "aSentId": 13715, "answer": "The downfall of internet search is that you actually have to do the search.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13716, "question": "The downfall of internet search is that you actually have to do the search.", "aSentId": 13717, "answer": "Haha I know I have no excuse. Just being super lazy on a Friday.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13613, "question": "Fucking McAfee does it again", "aSentId": 13722, "answer": "So this is definitely off-topic, but McAfee.. man, you read up on that guy? He's like a modern day Hemmingway.  Man's been through some crazy adventures.  My dad had a meeting with him recently about producing a movie on his life.  Guy is fucking cool and loves to tell his stories all the time.\n\nedit: Damn, ok guys, I had no idea.  From the tidbits I've read online it seemed like he was some sort of adventurer.  My bad.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13723, "question": "So this is definitely off-topic, but McAfee.. man, you read up on that guy? He's like a modern day Hemmingway.  Man's been through some crazy adventures.  My dad had a meeting with him recently about producing a movie on his life.  Guy is fucking cool and loves to tell his stories all the time.\n\nedit: Damn, ok guys, I had no idea.  From the tidbits I've read online it seemed like he was some sort of adventurer.  My bad.", "aSentId": 13724, "answer": "&gt; Guy is fucking cool and loves to tell his stories all the time.\n\nGuy is schizophrenic drug addict and likes to lie about crazy shit that never happened, like governments spying on him and trying to kill him. He got arrested in belize for suspicion of a meth lab. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13725, "question": "&gt; Guy is fucking cool and loves to tell his stories all the time.\n\nGuy is schizophrenic drug addict and likes to lie about crazy shit that never happened, like governments spying on him and trying to kill him. He got arrested in belize for suspicion of a meth lab. ", "aSentId": 13726, "answer": "He famously went on the run after his neighbour was shot, as well. I think you've got to pick your heroes more carefully than that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13725, "question": "&gt; Guy is fucking cool and loves to tell his stories all the time.\n\nGuy is schizophrenic drug addict and likes to lie about crazy shit that never happened, like governments spying on him and trying to kill him. He got arrested in belize for suspicion of a meth lab. ", "aSentId": 13728, "answer": "He doesn't have anything to do with the actual software any more though. I think it was pretty decent before he sold it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13729, "question": "He doesn't have anything to do with the actual software any more though. I think it was pretty decent before he sold it.", "aSentId": 13730, "answer": "Yeah, he left the company in the mid 90s. It's his name and he founded the company but he's not had much to do with it for a long time. The last I heard he was happy that Intel's renaming it, so presumably he's not a huge fan either.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13725, "question": "&gt; Guy is fucking cool and loves to tell his stories all the time.\n\nGuy is schizophrenic drug addict and likes to lie about crazy shit that never happened, like governments spying on him and trying to kill him. He got arrested in belize for suspicion of a meth lab. ", "aSentId": 13732, "answer": "And murdering his friend right? When the cops came looking for him he was hiding in a hole in the ground. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13734, "question": "&gt; crazy shit that never happened, like governments spying on him and trying to kill him. He got arrested in belize for suspicion of a meth lab\n\nUh - if he was under \"suspicion of a meth lab\" then  indeed \"government spying on him\" *did* happen.", "aSentId": 13735, "answer": "[Yeah.. no, that didn't happen. Not the way he described it anyways / he said he is a \"spymaster\"](http://arstechnica.com/tech-policy/2013/01/the-bizarre-tale-of-john-mcafee-spymaster/) ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13737, "question": "And then he moved to Portland OR *totally not on account of the meth*. ", "aSentId": 13738, "answer": "Of course not! Everybody knows Portland's a heroin town!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13741, "question": "Thanks Obama.", "aSentId": 13742, "answer": "Joe's not gonna settle down until he gets some thanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13743, "question": "Joe's not gonna settle down until he gets some thanks.", "aSentId": 13744, "answer": "Thanks Joe!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13745, "question": "Thanks Joe!", "aSentId": 13746, "answer": "My business... is done!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13747, "question": "My business... is done!", "aSentId": 13748, "answer": "Well then why are you still keeeping both hands on his shoulders? \nIt's been an hour man...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13749, "question": "Well then why are you still keeeping both hands on his shoulders? \nIt's been an hour man...", "aSentId": 13750, "answer": "Because I want to?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13743, "question": "Joe's not gonna settle down until he gets some thanks.", "aSentId": 13752, "answer": "You'll be waiting quite a while then", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13753, "question": "You'll be waiting quite a while then", "aSentId": 13754, "answer": "So should I give up?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13756, "question": "From /r/ProgrammerHumor to /r/programming\n\n/r/ProgrammerHumor/comments/2ysung/surprises_found_from_reading_the_sqlite_code/\n", "aSentId": 13757, "answer": "....which was shamelessly taken from [this tweet](https://twitter.com/mplappert/status/575957042466320384)\n\nThe reddit circle of life continues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13756, "question": "From /r/ProgrammerHumor to /r/programming\n\n/r/ProgrammerHumor/comments/2ysung/surprises_found_from_reading_the_sqlite_code/\n", "aSentId": 13759, "answer": "Yup, no shame about it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13760, "question": "Yup, no shame about it.", "aSentId": 13761, "answer": "Nor should there be. Ain't nothing wrong with cross-posting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13763, "question": "I always wondered what those etilqs files in my temp folder were.\n\nThey'd always be locked when I went to clean the directory.", "aSentId": 13764, "answer": "Gotta call the Sqlite developers!  Maybe they'll help with unlocking the files?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13765, "question": "Gotta call the Sqlite developers!  Maybe they'll help with unlocking the files?", "aSentId": 13766, "answer": "For a price!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13767, "question": "For a price!", "aSentId": 13768, "answer": "Just send them $500 in bitcoin!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13763, "question": "I always wondered what those etilqs files in my temp folder were.\n\nThey'd always be locked when I went to clean the directory.", "aSentId": 13770, "answer": "Google Chrome also creates those.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13763, "question": "I always wondered what those etilqs files in my temp folder were.\n\nThey'd always be locked when I went to clean the directory.", "aSentId": 13772, "answer": "Blame Windows for that files in use are locked by default. On *nix systems like Linux,Mac OS X , ios, android you could just delete the file and any application in current use would still have a pointer to it till they closed it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13774, "question": "Now people will google: etilqs_\n\nFirst search hit from google:\n\n&gt;etilqs_ is the backward spelling of sqlite. This change was made by &lt;sql developer here&gt; and can be reached at 555-123-4345 \n", "aSentId": 13775, "answer": "God ducking cannot\n\nedit: f this phone", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13776, "question": "God ducking cannot\n\nedit: f this phone", "aSentId": 13777, "answer": "&gt; d this phone", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13778, "question": "&gt; d this phone", "aSentId": 13779, "answer": "Still works.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13776, "question": "God ducking cannot\n\nedit: f this phone", "aSentId": 13781, "answer": "Off topic, but it bothers me that my phone also still thinks it's cute to do that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13782, "question": "Off topic, but it bothers me that my phone also still thinks it's cute to do that.", "aSentId": 13783, "answer": "I even turned off \"Block offensive words.\"  I think the setting needs \"Prefer offensive words.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13784, "question": "I even turned off \"Block offensive words.\"  I think the setting needs \"Prefer offensive words.\"", "aSentId": 13785, "answer": "I can see that working well!\n\n\"I was fucking as much as I could, and the balls kept hitting me anyway.\"\n\n\"It's important to be healthy so I try to eat as much vag as I can.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13787, "question": "This reminds me of the decision to version the next Windows as 10 instead of 9. Practical solutions to ridiculous problems.", "aSentId": 13788, "answer": "Can you explain that? Are you talking about the \"windows 9x\" issue people were speculating about? Because that sounds like the biggest bullshit ever", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13789, "question": "Can you explain that? Are you talking about the \"windows 9x\" issue people were speculating about? Because that sounds like the biggest bullshit ever", "aSentId": 13790, "answer": "[Check this out.](https://searchcode.com/?q=if%28version.StartsWith%28%22Windows+9%22%29%29) It isn't just an excuse.\n\nSearch for: if(version.StartsWith(\"Windows 9\"))\n\nAlmost 9000 instances in this tiny search of public source code. Imagine the private source code and enterprise.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13791, "question": "[Check this out.](https://searchcode.com/?q=if%28version.StartsWith%28%22Windows+9%22%29%29) It isn't just an excuse.\n\nSearch for: if(version.StartsWith(\"Windows 9\"))\n\nAlmost 9000 instances in this tiny search of public source code. Imagine the private source code and enterprise.", "aSentId": 13792, "answer": "They're going to be fucked all over again for Windows 20.  Who has their pitchforks ready?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13793, "question": "They're going to be fucked all over again for Windows 20.  Who has their pitchforks ready?", "aSentId": 13794, "answer": "You mean windows 360?\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13795, "question": "You mean windows 360?\n", "aSentId": 13796, "answer": "No they mean Windows 1.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13793, "question": "They're going to be fucked all over again for Windows 20.  Who has their pitchforks ready?", "aSentId": 13798, "answer": "I always have my pitchfork ready. They are Microsoft, after all.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13791, "question": "[Check this out.](https://searchcode.com/?q=if%28version.StartsWith%28%22Windows+9%22%29%29) It isn't just an excuse.\n\nSearch for: if(version.StartsWith(\"Windows 9\"))\n\nAlmost 9000 instances in this tiny search of public source code. Imagine the private source code and enterprise.", "aSentId": 13800, "answer": "I understand there's an annoyance to avoid, but there are solutions that don't require counting in nonary.\n\nE.g., change the `version` string to \"Windows9\" / \"Win9\" / \"Windows Nine\" / \"Windows 09\" / \"MS Windows 9\" / \"Microsoft Windows 9\" / \"Windows Threshhold\" and introduce a new string `human_readable_version = \"Windows 9\"`.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13801, "question": "I understand there's an annoyance to avoid, but there are solutions that don't require counting in nonary.\n\nE.g., change the `version` string to \"Windows9\" / \"Win9\" / \"Windows Nine\" / \"Windows 09\" / \"MS Windows 9\" / \"Microsoft Windows 9\" / \"Windows Threshhold\" and introduce a new string `human_readable_version = \"Windows 9\"`.", "aSentId": 13802, "answer": "Yep.  That's why it's bullshit.  Vista had problems (among its other problems) because of going from version 5 to 6.  In 7, 8, and 8.1 they solved it by making the internal versions 6.1, 6.2, and 6.3. This leads to confusion because version 6.3 is branded as 8.1 but really it's the new OS after 8 so people will confuse it as 9.\n\nJumping everything to 10 all at once consolidates everything on the same version, avoids consumer confusion, and MS' marketing department probably ate it up.  Saying it's because of a substring operation is one of those easy explanations that people love to spread but it doesn't hold up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13803, "question": "Yep.  That's why it's bullshit.  Vista had problems (among its other problems) because of going from version 5 to 6.  In 7, 8, and 8.1 they solved it by making the internal versions 6.1, 6.2, and 6.3. This leads to confusion because version 6.3 is branded as 8.1 but really it's the new OS after 8 so people will confuse it as 9.\n\nJumping everything to 10 all at once consolidates everything on the same version, avoids consumer confusion, and MS' marketing department probably ate it up.  Saying it's because of a substring operation is one of those easy explanations that people love to spread but it doesn't hold up.", "aSentId": 13804, "answer": "Why Windows 10? Because 7 8 9.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13801, "question": "I understand there's an annoyance to avoid, but there are solutions that don't require counting in nonary.\n\nE.g., change the `version` string to \"Windows9\" / \"Win9\" / \"Windows Nine\" / \"Windows 09\" / \"MS Windows 9\" / \"Microsoft Windows 9\" / \"Windows Threshhold\" and introduce a new string `human_readable_version = \"Windows 9\"`.", "aSentId": 13806, "answer": "Yes, that's true. But not knowing how everyone did it for every implementation you can't guarantee that putting a 0 in front would help. (For example checking if '9' exists in the string)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13807, "question": "Yes, that's true. But not knowing how everyone did it for every implementation you can't guarantee that putting a 0 in front would help. (For example checking if '9' exists in the string)", "aSentId": 13808, "answer": "Sure, but if windows server (like Windows Server 2003 / 2008/ 2012) was scheduled for a release in 2009 or 2019 that will also be problematic.  I'm sure there's some idiots that check their forward-compatible code against specific versions (`if (version == 'Windows XP)'`) and needs to be recompiled to work with any new OS releases.\n\nReally the problem is MS doesn't have a consistent versioning system that people were encouraged to use, where its just natural to ask \n\n     if(version.major &lt; 5) { \n          printf(\"This software doesn't support Windows 1.x, Windows 2.x, Windows 3.x, Windows95, or Windows 98\");\n     }\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13809, "question": "Sure, but if windows server (like Windows Server 2003 / 2008/ 2012) was scheduled for a release in 2009 or 2019 that will also be problematic.  I'm sure there's some idiots that check their forward-compatible code against specific versions (`if (version == 'Windows XP)'`) and needs to be recompiled to work with any new OS releases.\n\nReally the problem is MS doesn't have a consistent versioning system that people were encouraged to use, where its just natural to ask \n\n     if(version.major &lt; 5) { \n          printf(\"This software doesn't support Windows 1.x, Windows 2.x, Windows 3.x, Windows95, or Windows 98\");\n     }\n", "aSentId": 13810, "answer": "Absolutely true. But, sometimes you have to protect people from themselves.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13807, "question": "Yes, that's true. But not knowing how everyone did it for every implementation you can't guarantee that putting a 0 in front would help. (For example checking if '9' exists in the string)", "aSentId": 13812, "answer": "If you call it \"Windows Nine\" in every string that could have said \"Windows 98\", then there won't be any issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13791, "question": "[Check this out.](https://searchcode.com/?q=if%28version.StartsWith%28%22Windows+9%22%29%29) It isn't just an excuse.\n\nSearch for: if(version.StartsWith(\"Windows 9\"))\n\nAlmost 9000 instances in this tiny search of public source code. Imagine the private source code and enterprise.", "aSentId": 13814, "answer": "All that code is stupid, it should have been checking for a  major version of 4 for Windows 95 and 98.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13815, "question": "All that code is stupid, it should have been checking for a  major version of 4 for Windows 95 and 98.", "aSentId": 13816, "answer": "That's 100% true, but this is the reality.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13789, "question": "Can you explain that? Are you talking about the \"windows 9x\" issue people were speculating about? Because that sounds like the biggest bullshit ever", "aSentId": 13818, "answer": "I assumed that was the reason... and I don't see how it isn't a very valid on too. If software was doing string based comparison to check version (for shame!) having \"Windows 9\" would cause a shit ton of problems.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13787, "question": "This reminds me of the decision to version the next Windows as 10 instead of 9. Practical solutions to ridiculous problems.", "aSentId": 13820, "answer": "The difference is, MS created that problem themselves.\n\nMcAfee blindsided the SQLite developers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13821, "question": "The difference is, MS created that problem themselves.\n\nMcAfee blindsided the SQLite developers.", "aSentId": 13822, "answer": "How so? By forcing developers to use string comparison instead of version check?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13823, "question": "How so? By forcing developers to use string comparison instead of version check?", "aSentId": 13824, "answer": "The reason Windows 10 isn't called Windows 9 is because so much software written since 1995 checks its windows version (for Windows 95 and Windows 98) by looking for `Windows 9` in whatever registry key MS put the version string in. Because that bad practice was easier for developers than looking at the version number in the registry.\n\nMS created the problem 20 years ago with the marketing decision to refer to the post-3.x windows by the calendar year rather than the proper version number 4.  Perhaps they did that partially to avoid a similar conflict with NT4, but either way it was one of the roots of this \"version numbers don't matter\" nonsense that has been going around for years.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13827, "question": "I just pondered registering etilqs.org and putting up a page as a joke, before seeing the Google results for *that* and figuring that I've no need for that hassle.", "aSentId": 13828, "answer": "Just put up that page and then put the sqlite developer's email and phone on it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13830, "question": "Why would you ever have any of your phone numbers available on the internet beyond an office line?\n\n", "aSentId": 13831, "answer": "Possibly because they're consultants for their day job?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13832, "question": "Possibly because they're consultants for their day job?", "aSentId": 13833, "answer": "Yeah, so have a business line. Sharing business and personal is a recipe, well for shit like this.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13834, "question": "Yeah, so have a business line. Sharing business and personal is a recipe, well for shit like this.\n\n", "aSentId": 13835, "answer": "Now your business line is constantly ringing. The problem is solved.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13830, "question": "Why would you ever have any of your phone numbers available on the internet beyond an office line?\n\n", "aSentId": 13837, "answer": "Hey, check out this guy. He sounds like he's never made a mistake in his life!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13830, "question": "Why would you ever have any of your phone numbers available on the internet beyond an office line?\n\n", "aSentId": 13839, "answer": "Because some people do need to be reached in case of emergency, and some other people are careless...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13840, "question": "Because some people do need to be reached in case of emergency, and some other people are careless...", "aSentId": 13841, "answer": "In an emergency dial 911.\n\nOtherwise it can fucking wait.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13842, "question": "In an emergency dial 911.\n\nOtherwise it can fucking wait.", "aSentId": 13843, "answer": "Not if you're losing a million dollars a minute.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13844, "question": "Not if you're losing a million dollars a minute.", "aSentId": 13845, "answer": "If that's reliant on a cell phone, you've got bigger issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13846, "question": "If that's reliant on a cell phone, you've got bigger issues.", "aSentId": 13847, "answer": "Not sure why you're getting downvoted, it really is ridiculous that this is so common. \n\nAt many companies, shutting your cell phone off could doom the company to bankruptcy in the wrong situation. And that's the company's fault.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13846, "question": "If that's reliant on a cell phone, you've got bigger issues.", "aSentId": 13849, "answer": "You could use a home phone to make the call, I'd imagine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13850, "question": "You could use a home phone to make the call, I'd imagine.", "aSentId": 13851, "answer": "I'm not sharing details publicly, but I've been urgently needed when my cell phone was either off or out of earshot.\n\nThey always found a way to contact me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13842, "question": "In an emergency dial 911.\n\nOtherwise it can fucking wait.", "aSentId": 13853, "answer": "Some people might have a work mobile that they might take home and forget to turn off. They might also not have a work phone at all and might just use their personal phone (not that that's a particularly good idea either).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13855, "question": "My cell phone number is pretty easy to find. You can get from my username to my resume in a couple of google searches.", "aSentId": 13856, "answer": "You realize you've just invited the Internet to dox you, right?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13857, "question": "You realize you've just invited the Internet to dox you, right?", "aSentId": 13858, "answer": "Me and everyone else looking for an IT job ever? I really don't understand the common conceptions around secrecy for information people intentionally put on the internet for others to find.\n\nI was invited to a house party once and didn't know the address. I just put \"partyhostsname resume\" into Google and got his address and phone number.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13857, "question": "You realize you've just invited the Internet to dox you, right?", "aSentId": 13860, "answer": "Except the Internet isn't angry at them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13861, "question": "Except the Internet isn't angry at them.", "aSentId": 13862, "answer": "Yes it is. It just doesn't realize it's angry yet.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13855, "question": "My cell phone number is pretty easy to find. You can get from my username to my resume in a couple of google searches.", "aSentId": 13864, "answer": "Are you Amanda Sparr, Kathleen Sparr or Jared Sparr?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13865, "question": "Are you Amanda Sparr, Kathleen Sparr or Jared Sparr?", "aSentId": 13866, "answer": "No.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13867, "question": "No.", "aSentId": 13868, "answer": "Clarence? The stackexchange commonality makes me think this to be the most likely. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13872, "question": "I don't understand why Windows users would be upset to find files named \"sqlite\" in the c:/temp folder.", "aSentId": 13873, "answer": "Probably they ran out of memory and were following instructions on how to clear disk space, and tried to clear their temp folder and couldn't. why? locked files, named \"sqlite_SOMETHING\". so they google it and find sqlite and complain. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13874, "question": "Probably they ran out of memory and were following instructions on how to clear disk space, and tried to clear their temp folder and couldn't. why? locked files, named \"sqlite_SOMETHING\". so they google it and find sqlite and complain. ", "aSentId": 13875, "answer": "Ah. Thanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13872, "question": "I don't understand why Windows users would be upset to find files named \"sqlite\" in the c:/temp folder.", "aSentId": 13877, "answer": "If they're using windows then they're not good with computers so it confuses them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13878, "question": "If they're using windows then they're not good with computers so it confuses them.", "aSentId": 13879, "answer": "I don't understand any of this at all. Why would a computer illiterate person be in C:/Temp in the first place? Why would they notice \"sqlite\" files above any other misc files in there? And why would that be in any way upsetting?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13880, "question": "I don't understand any of this at all. Why would a computer illiterate person be in C:/Temp in the first place? Why would they notice \"sqlite\" files above any other misc files in there? And why would that be in any way upsetting?", "aSentId": 13881, "answer": "Plenty of clueless people (especially gamers) read enough to be dangerous but they don't really know what they're doing.\n\nThese people are far worse than clueless people that touch nothing because they realise they're clueless.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13880, "question": "I don't understand any of this at all. Why would a computer illiterate person be in C:/Temp in the first place? Why would they notice \"sqlite\" files above any other misc files in there? And why would that be in any way upsetting?", "aSentId": 13883, "answer": "Imagine someone's nephew installing some disk cleanup tool on his aunt's computer. She runs it as she's told to do when her computer is running slow, it clears a bunch of stuff, but shows that, say, 40 MB of files couldn't be cleared due to their being locked. She googles it and the rest is history. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13878, "question": "If they're using windows then they're not good with computers so it confuses them.", "aSentId": 13885, "answer": "How the fuck is that an argument?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13890, "question": "I wonder if McAfee will actually update sqlite. If they don't this won't help. ", "aSentId": 13891, "answer": "Likely they'll occasionally pull in new versions as they release their own new ones.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13890, "question": "I wonder if McAfee will actually update sqlite. If they don't this won't help. ", "aSentId": 13893, "answer": "This change was made almost 9 years ago...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13897, "question": "Could they have made the files hidden by default instead?", "aSentId": 13898, "answer": "You'll still see it using space.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13907, "question": "qo: a C/C++ build system with no build files", "aSentId": 13908, "answer": "really really cool idea ... wish I could namespace foldernames though . \n\nwindows/ seems like it should be qo_windows/ or qo_os_windows/\n\nso combos would look like qo_os_windows_arch_386", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13910, "question": "Fake Amazon reviews have chilling effect on programming books", "aSentId": 13911, "answer": "I recall several years ago looking for books on BackTrack Linux and there only being a few books available on Amazon. All but one of the books had less than 5 reviews. One book, however, had 30+ despite being available for less than a month. I looked at the reviews and they were mostly 5 star reviews raving about how great the book was, without saying why it was great. Oh yeah, none of those 5 star reviews had the Verified Purchase label on them. Extremely suspicious considering how niche BackTrack/Kali Linux is and how a majority of general tech books can take months before breaking 30 reviews.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13910, "question": "Fake Amazon reviews have chilling effect on programming books", "aSentId": 13913, "answer": "Someone has submitted an Ethernet cable for every product you can plug an Ethernet cable into and very often this crap comes up when you try to search a product instead of the product. I don't want to link to them but check under  Electronics : SoDo Tek : Accessories &amp; Supplies : Computer Accessories : Cables &amp; Interconnects : Ethernet Cables -- there's more 45 000 products, all the exact same.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13910, "question": "Fake Amazon reviews have chilling effect on programming books", "aSentId": 13915, "answer": "I shared a similar experience. As a teenager, I spent hundreds of hours writing a nice web dev ebook and releasing it for way less than it was worth and turning down a publishing deal to self publish on amazon. First year I was top keyword result and 10 sales per week. Now my keyword is topped by 30-50 page ebooks with copy paste content. I did hundreds of pages and tens of thousands f lines of source code... Now I sell 2 copy per week", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13916, "question": "I shared a similar experience. As a teenager, I spent hundreds of hours writing a nice web dev ebook and releasing it for way less than it was worth and turning down a publishing deal to self publish on amazon. First year I was top keyword result and 10 sales per week. Now my keyword is topped by 30-50 page ebooks with copy paste content. I did hundreds of pages and tens of thousands f lines of source code... Now I sell 2 copy per week", "aSentId": 13917, "answer": "Can you link your book please?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13918, "question": "Can you link your book please?", "aSentId": 13919, "answer": "He's lying.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13920, "question": "He's lying.", "aSentId": 13921, "answer": "I'm pretty sure its this [one](http://amzn.com/B00FGCVD1M). Why jump to conclusions?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13916, "question": "I shared a similar experience. As a teenager, I spent hundreds of hours writing a nice web dev ebook and releasing it for way less than it was worth and turning down a publishing deal to self publish on amazon. First year I was top keyword result and 10 sales per week. Now my keyword is topped by 30-50 page ebooks with copy paste content. I did hundreds of pages and tens of thousands f lines of source code... Now I sell 2 copy per week", "aSentId": 13923, "answer": "Bro if you need to drown those sorrows, and you happen to be in Boze-angeles... just shoot me a msg. Hashtag 406.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13929, "question": "I can't remember the last time I felt the need to buy an old-scholl-phonebook-sized book just to get information readily available in the intarwebs.  Maybe authors should get real jobs and quit bitching.", "aSentId": 13930, "answer": "Great books and documentation still have value in the day of the internet. They can give you an in-depth, thought-out overview of the subject. That cannot be replaced by stackoverflow and reddit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13931, "question": "Great books and documentation still have value in the day of the internet. They can give you an in-depth, thought-out overview of the subject. That cannot be replaced by stackoverflow and reddit.", "aSentId": 13932, "answer": "&gt; Great books and documentation still have value in the day of the internet.\n\nVery much so!  \nIn fact, a well done set of documentation in paper would beat a poor/inadequate electronic format documentation in about every measure except searchability.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13931, "question": "Great books and documentation still have value in the day of the internet. They can give you an in-depth, thought-out overview of the subject. That cannot be replaced by stackoverflow and reddit.", "aSentId": 13934, "answer": "I just donated about 100 lbs of such books to my local library, going all the way back to my WATFOR book from 1981.  I know full well the value of books, having come from a time before the internet.  Your opinion is certainly valid for you, but not for everyone.  \n\nOh, and there are much better places that SO to get useful information.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13929, "question": "I can't remember the last time I felt the need to buy an old-scholl-phonebook-sized book just to get information readily available in the intarwebs.  Maybe authors should get real jobs and quit bitching.", "aSentId": 13936, "answer": "For *information* maybe, for knowledge and wisdom? Not yet.\n\nAlso, having a coherent view about something is very valuable. Get bits here and there is where the \"internet\" do best, but when is time to get deep is where a good resource come ahead.\n\nOf curse, that could be a website too, but the spirit of what make a good book will be there too...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13938, "question": "Django offers Mental Health counselling at its Convention", "aSentId": 13939, "answer": "I do not think mental health issues are limited to Django users.\n\nI applaud Django for taking a step in the right direction. Mental health issues still have a stigma attached to them, and having more open conversations about these issues helps to slowly remove the stigma.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13938, "question": "Django offers Mental Health counselling at its Convention", "aSentId": 13941, "answer": "Burnout is a real thing. This could be a way to help mitigate that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13938, "question": "Django offers Mental Health counselling at its Convention", "aSentId": 13943, "answer": "While mental health is important and I'm sure it affects some people in this community, it's far outside the scope of what a convention is supposed to be and I'm not interested in paying to go to a convention that's using registration fees for something so unrelated to what I'm there for.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13944, "question": "While mental health is important and I'm sure it affects some people in this community, it's far outside the scope of what a convention is supposed to be and I'm not interested in paying to go to a convention that's using registration fees for something so unrelated to what I'm there for.", "aSentId": 13945, "answer": "From what I can deduce from this post the service is intended as a community service and the ticket fee wasn't used for that:\n\n\"The Counselling, Health and Wellbeing service is very generously providing staff time at no charge. In return, we have offered to help put the power of our community at their disposal. \"\n\nThis all looks more like two groups working hand in hand to solve problems :-)\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13944, "question": "While mental health is important and I'm sure it affects some people in this community, it's far outside the scope of what a convention is supposed to be and I'm not interested in paying to go to a convention that's using registration fees for something so unrelated to what I'm there for.", "aSentId": 13947, "answer": "It's being provided for free by Cardiff University\u2019s Counselling, Health and Wellbeing service.\n\n&gt; The Counselling, Health and Wellbeing service is very generously providing staff time at no charge. In return, we have offered to help put the power of our community at their disposal.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13944, "question": "While mental health is important and I'm sure it affects some people in this community, it's far outside the scope of what a convention is supposed to be and I'm not interested in paying to go to a convention that's using registration fees for something so unrelated to what I'm there for.", "aSentId": 13949, "answer": "this is the same group of people who got developers fired for saying they'd fork a repo in github. so yeah, what did you people expect would happen?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13950, "question": "this is the same group of people who got developers fired for saying they'd fork a repo in github. so yeah, what did you people expect would happen?", "aSentId": 13951, "answer": "Wait, what incident are you referencing?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13950, "question": "this is the same group of people who got developers fired for saying they'd fork a repo in github. so yeah, what did you people expect would happen?", "aSentId": 13953, "answer": "That pissed me off so very much. I hate those kinds of people.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13950, "question": "this is the same group of people who got developers fired for saying they'd fork a repo in github. so yeah, what did you people expect would happen?", "aSentId": 13955, "answer": "Apparently every single django developer did that now?\n\nI thought programmers were supposed to be smarter than this", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13959, "question": "Yea honestly even though it effects a large amount of people in this community (myself included), this kind of thing has absolutely no place at a convention. Just another way this whole \"being politically correct\" bullshit movement that's been gaining popularity in the last few years is hindering more than it's helping (good examples are Rusts community guidelines or that code of conduct pushed onto the kernel dev recently). Sigh.  \n  \nEdit: if you don't agree how about you respond instead of just downvoting? I'm able to change my opinions on things if I'm given a reasonable reason to.", "aSentId": 13960, "answer": "I suspect you're being down voted for equating the offer of mental health counselling with \"'being politically correct' bullshit\".\n\nIMO having the service there does absolutely no harm. Mental health issues affect a lot of people (something like 1 in 4 people will experience some sort of mental health issue each year) and most people don't reach out for help when they should. If something like this encourages people to get the help they need then why is it such a bad thing?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13961, "question": "I suspect you're being down voted for equating the offer of mental health counselling with \"'being politically correct' bullshit\".\n\nIMO having the service there does absolutely no harm. Mental health issues affect a lot of people (something like 1 in 4 people will experience some sort of mental health issue each year) and most people don't reach out for help when they should. If something like this encourages people to get the help they need then why is it such a bad thing?", "aSentId": 13962, "answer": "That's a very good point, thanks for actually replying, I probably should have separated the two topics more.  \n  \nAlthough I think we should be promoting people talking about mental issues more openly and seeking help, I still don't think a convention is the right place to have it (in that form at least, talks are more than welcome). I think as a community we've got the accepting people part down but not really the working towards a solution part yet, if that makes any sense?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13964, "question": "Came for the Django bashing, was dissapointed.\n", "aSentId": 13965, "answer": "Despite people complaining about it...  it's pretty great.\n\nThere are things I dislike about it, too, but if you need to make a non-trivial web application and it doesn't completely conflict with Django's model then Django is absolutely fantastic.  \n\nThe only framework comes close to Django's \"batteries included\" featureset and ease of use is Ruby on Rails...  but that involves using Ruby, which starts complicating things by itself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13966, "question": "Despite people complaining about it...  it's pretty great.\n\nThere are things I dislike about it, too, but if you need to make a non-trivial web application and it doesn't completely conflict with Django's model then Django is absolutely fantastic.  \n\nThe only framework comes close to Django's \"batteries included\" featureset and ease of use is Ruby on Rails...  but that involves using Ruby, which starts complicating things by itself.", "aSentId": 13967, "answer": "I only ever seem to hear high praise or harsh derision towards Ruby. What's so wrong with it, other than the fact that it's not Python (a critical flaw indeed)?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13969, "question": "Yes, you'll need mental health counseling if you are using Django. It will drive you crazy.", "aSentId": 13970, "answer": "Oh cool is it a trend here now to hate literally every technology? I can't go on a single thread here without a shitty upvoted contentless comment like yours", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13971, "question": "Oh cool is it a trend here now to hate literally every technology? I can't go on a single thread here without a shitty upvoted contentless comment like yours", "aSentId": 13972, "answer": "&gt; Oh cool is it a trend here now to hate literally every technology?\n\nIt's been a trend here for a while. On the greater Internet, since the mid-eighties.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13973, "question": "&gt; Oh cool is it a trend here now to hate literally every technology?\n\nIt's been a trend here for a while. On the greater Internet, since the mid-eighties.", "aSentId": 13974, "answer": "That's fine, but a lot of other technology communities don't have this. Music production doesn't have this, game development doesn't have this, yet programmers are cynical bastards.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13975, "question": "That's fine, but a lot of other technology communities don't have this. Music production doesn't have this, game development doesn't have this, yet programmers are cynical bastards.", "aSentId": 13976, "answer": "&gt; programmers are cynical bastards.\n\nCynicism is only what the starry-eyed newbie calls realism. Responsible hopefulness requires comprehension of the untoward way things can go; this is often called \"plan B\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13973, "question": "&gt; Oh cool is it a trend here now to hate literally every technology?\n\nIt's been a trend here for a while. On the greater Internet, since the mid-eighties.", "aSentId": 13978, "answer": "It's been a trend since the goddamn printing press was invented.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13971, "question": "Oh cool is it a trend here now to hate literally every technology? I can't go on a single thread here without a shitty upvoted contentless comment like yours", "aSentId": 13980, "answer": "&gt;I can't go on a single thread here without a shitty upvoted contentless comment like yours\n\nThis is the Tao of commenting. If the OP sets up an obvious joke, somebody's gotta make it, even though it's obvious. It's a hard duty, but there are always brave souls.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13971, "question": "Oh cool is it a trend here now to hate literally every technology? I can't go on a single thread here without a shitty upvoted contentless comment like yours", "aSentId": 13982, "answer": "Sarcasm bro.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13983, "question": "Sarcasm bro.", "aSentId": 13984, "answer": "Except it's not, and every thread about a framework is full of these shitty posts upvoted to the top", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13985, "question": "Except it's not, and every thread about a framework is full of these shitty posts upvoted to the top", "aSentId": 13986, "answer": "For whatever it's worth, I agree with your point. There's a lot of brogrammers around at the moment, it goes through phases.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13983, "question": "Sarcasm bro.", "aSentId": 13988, "answer": "Bro.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13983, "question": "Sarcasm bro.", "aSentId": 13990, "answer": "ironcrow is a faggot\n\nsarcasm bro i was just being sarcastic bro", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13994, "question": "Have you used Django's ORM?", "aSentId": 13995, "answer": "There are some pretty awful things about Django, I couldn't *stand* how you had to do URL routing using regex (wtf?)\n\nThere are a few things that I hate about Django that means I'll never use it.\n\nBut coming to a Django thread to make a shitty joke about how bad it is is pointless, and it's one of the things I dislike about programmer culture. Everything is **terrible** here, and don't you dare talk about it!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13996, "question": "There are some pretty awful things about Django, I couldn't *stand* how you had to do URL routing using regex (wtf?)\n\nThere are a few things that I hate about Django that means I'll never use it.\n\nBut coming to a Django thread to make a shitty joke about how bad it is is pointless, and it's one of the things I dislike about programmer culture. Everything is **terrible** here, and don't you dare talk about it!", "aSentId": 13997, "answer": "Sincere question, how else would you do URL routing? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13998, "question": "Sincere question, how else would you do URL routing? ", "aSentId": 13999, "answer": "Ruby on Rails uses pattern matching.\n\nAn example taken from the ruby on rails guide,\n\n    get '/patients/:id', to: 'patients#show'\n\nIt's pretty clear what's happening here, if we want to view a patient with an ID `n`, we navigate to `/patients/n`\n\nI think it's a lot clearer, not that I use Ruby on Rails either (not a web developer) but I prefer their way.\n\nI haven't given an example in Django as I don't understand it", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14000, "question": "Ruby on Rails uses pattern matching.\n\nAn example taken from the ruby on rails guide,\n\n    get '/patients/:id', to: 'patients#show'\n\nIt's pretty clear what's happening here, if we want to view a patient with an ID `n`, we navigate to `/patients/n`\n\nI think it's a lot clearer, not that I use Ruby on Rails either (not a web developer) but I prefer their way.\n\nI haven't given an example in Django as I don't understand it", "aSentId": 14001, "answer": "An url similar in Django would look like:\n\n    url(r'^patients/(\\w)$', patients.show),", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14000, "question": "Ruby on Rails uses pattern matching.\n\nAn example taken from the ruby on rails guide,\n\n    get '/patients/:id', to: 'patients#show'\n\nIt's pretty clear what's happening here, if we want to view a patient with an ID `n`, we navigate to `/patients/n`\n\nI think it's a lot clearer, not that I use Ruby on Rails either (not a web developer) but I prefer their way.\n\nI haven't given an example in Django as I don't understand it", "aSentId": 14003, "answer": "Interesting, thanks. I'm not a huge fan of regex myself (just because I'm not great with them), but most of what you'd do in a Django URL is pretty simple. I always presumed using a regex was the common way of doing it, considering that's what Apache's mod_rewrite used. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14004, "question": "Interesting, thanks. I'm not a huge fan of regex myself (just because I'm not great with them), but most of what you'd do in a Django URL is pretty simple. I always presumed using a regex was the common way of doing it, considering that's what Apache's mod_rewrite used. ", "aSentId": 14005, "answer": "I prefer the Rails routing, but I love regex. Powerful, sexy little kitten it is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13996, "question": "There are some pretty awful things about Django, I couldn't *stand* how you had to do URL routing using regex (wtf?)\n\nThere are a few things that I hate about Django that means I'll never use it.\n\nBut coming to a Django thread to make a shitty joke about how bad it is is pointless, and it's one of the things I dislike about programmer culture. Everything is **terrible** here, and don't you dare talk about it!", "aSentId": 14007, "answer": "&gt;... Everything is terrible here, and don't you dare talk about it!\n\n\nI think the JS community has put on a clinic concerning that menality.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14008, "question": "&gt;... Everything is terrible here, and don't you dare talk about it!\n\n\nI think the JS community has put on a clinic concerning that menality.", "aSentId": 14009, "answer": "I see you've committed to proving their point", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 13996, "question": "There are some pretty awful things about Django, I couldn't *stand* how you had to do URL routing using regex (wtf?)\n\nThere are a few things that I hate about Django that means I'll never use it.\n\nBut coming to a Django thread to make a shitty joke about how bad it is is pointless, and it's one of the things I dislike about programmer culture. Everything is **terrible** here, and don't you dare talk about it!", "aSentId": 14011, "answer": "Care to develop what is WTF about using regexp in the URL routing? By the way Rails does use them i.e.\n\n    get '/:id', to: 'articles#show', constraints: { id: /^\\d/ }\n\nAny other specific things you hate within Django?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14014, "question": "somebody has a sore spot... ", "aSentId": 14015, "answer": "And that spot is their butt", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14017, "question": "No. It just so happens that most of these \"technologies\" are basically scams since they get you to invest your time into their community and it turns out they don't provide any real benefit compared to say, PHP or Perl (not that any of those are good). I thought Java EE and django had merit at points (before I actually used them). By the time node.js came out, it was just an obvious repetition of the same pattern.", "aSentId": 14018, "answer": "Scams? Really?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14019, "question": "Scams? Really?", "aSentId": 14020, "answer": "&gt; basically scams\n\nThey puport to solve some problem if you put work into adopting them. If you both A) put work into adopting them, and B) contribute to their community, it's basically a scam since you're not getting any benefit, but they are.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14021, "question": "&gt; basically scams\n\nThey puport to solve some problem if you put work into adopting them. If you both A) put work into adopting them, and B) contribute to their community, it's basically a scam since you're not getting any benefit, but they are.", "aSentId": 14022, "answer": "So you redefined a word in order to make a point.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14023, "question": "So you redefined a word in order to make a point.", "aSentId": 14024, "answer": "No, I just explained why they're scams. I said \"basically scams\" because it's pretty much the same thing, but not exactly. Trendy frameworks aren't 100% guaranteed to be scams *technically*, because the people pushing them don't necessarily profit from your misfortune (they often do, however).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14027, "question": "Why...? Is their framework really bad or something? Do people associated with Django *need* mental health counseling?", "aSentId": 14028, "answer": "Anyone from any walk of life can need some help some time. There art lots of specific issues that plague developers specifically. A move like this is great to both normalize people reaching out for help and offering a first step they might otherwise be too afraid to make.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14029, "question": "Anyone from any walk of life can need some help some time. There art lots of specific issues that plague developers specifically. A move like this is great to both normalize people reaching out for help and offering a first step they might otherwise be too afraid to make.", "aSentId": 14030, "answer": "Yes, but I'm failing to see the connection between a Django convention and a shrink. Like, did they just bring him on to put on a freak show? I don't get it. Also, why would you \"normalize\" being insane when it's not normal almost by definition? So confused by your post.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14036, "question": "The AI Games - Create a poker bot and join the competition (Texas Hold'em)", "aSentId": 14037, "answer": "I shall take the free game approach and \"All in\" all the time, every time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14038, "question": "I shall take the free game approach and \"All in\" all the time, every time.", "aSentId": 14039, "answer": "Over a decade ago Google had huge numbers of poker games internally. So someone set up a poker site using fake money. People started to bot it, so they set up a competition for poker bots. In the first competition, the 2nd place bot was called \"raisebot\". All it did was raise. Every time.\n\nI think it was a limit tournament, so I don't think it was truly an \"all-in every time\" situation, but it showed how well aggression works against bots.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14040, "question": "Over a decade ago Google had huge numbers of poker games internally. So someone set up a poker site using fake money. People started to bot it, so they set up a competition for poker bots. In the first competition, the 2nd place bot was called \"raisebot\". All it did was raise. Every time.\n\nI think it was a limit tournament, so I don't think it was truly an \"all-in every time\" situation, but it showed how well aggression works against bots.", "aSentId": 14041, "answer": "Well then the competition wasn't much I guess. It's not that hard to beat a raiser bot, it's still a 50/50 chance to have a better hand than your opponent, so detecting if your opponent just raises will give enough room to counter.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14042, "question": "Well then the competition wasn't much I guess. It's not that hard to beat a raiser bot, it's still a 50/50 chance to have a better hand than your opponent, so detecting if your opponent just raises will give enough room to counter.", "aSentId": 14043, "answer": "It was the first time out, so yeah, I doubt anyone had put in the code to try to detect raise bots. Well, except for maybe the first place bot.\n\nI'm sure it didn't work as well the next time out. But aggression still has advantages, which is why it's used by intelligent players to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14042, "question": "Well then the competition wasn't much I guess. It's not that hard to beat a raiser bot, it's still a 50/50 chance to have a better hand than your opponent, so detecting if your opponent just raises will give enough room to counter.", "aSentId": 14045, "answer": "It's not a 50/50 chance. You can have the same hand.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14038, "question": "I shall take the free game approach and \"All in\" all the time, every time.", "aSentId": 14047, "answer": "I shall write a condition that looks for too many all in's then looks for a 75% favorite against the field and calls.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14036, "question": "The AI Games - Create a poker bot and join the competition (Texas Hold'em)", "aSentId": 14049, "answer": "This website is very mobile unfriendly. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14036, "question": "The AI Games - Create a poker bot and join the competition (Texas Hold'em)", "aSentId": 14051, "answer": "Aren't poker is an unsuitable game for machine vs machine tournaments?\n\nThe only AI part is to find what strategy opponent uses and specialize against it. Unless bots sweet.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14054, "question": "The \"high-level CPU\" challenge", "aSentId": 14055, "answer": "Well, there is the [Mill architecture](http://millcomputing.com), which is still going forward. A major design goal there is to map common high level abstractions efficiently to hardware. Like actually using SSA on the machine, which pretty much all compilers use and have to abandon again with suboptimal register allocations. Or having native atomic function calls. Or actually organizing machine code in basic blocks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14056, "question": "Well, there is the [Mill architecture](http://millcomputing.com), which is still going forward. A major design goal there is to map common high level abstractions efficiently to hardware. Like actually using SSA on the machine, which pretty much all compilers use and have to abandon again with suboptimal register allocations. Or having native atomic function calls. Or actually organizing machine code in basic blocks.", "aSentId": 14057, "answer": "Some of the Mill stuff is really pretty cool.  \nI was somewhat disappointed at hearing some of the compromises they made to [IIRC] make it so that C++ could be target it. (It'd be better, I think, when designing a radically different architecture not to sabotage the guiding principles based on the limitations of extant language implementations.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14058, "question": "Some of the Mill stuff is really pretty cool.  \nI was somewhat disappointed at hearing some of the compromises they made to [IIRC] make it so that C++ could be target it. (It'd be better, I think, when designing a radically different architecture not to sabotage the guiding principles based on the limitations of extant language implementations.)", "aSentId": 14059, "answer": "Well, without supporting C/C++ you won't become even a marginally successful hardware platform, you will always be niche.  \nHopefully it can push the status quo far enough that getting rid of C becomes economically viable for even more far out future processors.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14060, "question": "Well, without supporting C/C++ you won't become even a marginally successful hardware platform, you will always be niche.  \nHopefully it can push the status quo far enough that getting rid of C becomes economically viable for even more far out future processors.", "aSentId": 14061, "answer": "&gt; Well, without supporting C/C++ you won't become even a marginally successful hardware platform, you will always be niche.\n\nBut what if that C/C++ support forces us into a local minimum WRT efficiency? That's not too much of a stretch to think: we know that C and C++ have some terrible properties when it comes to static analysis (aliasing is one fairly big issue) -- something like Ada which explicitly marks aliasing would, by that virtue alone, be much more provable than C/C++... and if we're willing to step outside procedural-imperative for language-choice Agda (and Idris, IIRC) provide for programs-as-proofs [which itself seems to have interesting optimization possibilities].\n\n&gt; Hopefully it can push the status quo far enough that getting rid of C becomes economically viable for even more far out future processors.\n\nI agree -- I'm of the opinion that C's popularity has actually held CS back by decades and wasted much effort. (There's truth to the saying \"*you can't polish a turd*\", and a lot of languages try to \"fix\" C.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14062, "question": "&gt; Well, without supporting C/C++ you won't become even a marginally successful hardware platform, you will always be niche.\n\nBut what if that C/C++ support forces us into a local minimum WRT efficiency? That's not too much of a stretch to think: we know that C and C++ have some terrible properties when it comes to static analysis (aliasing is one fairly big issue) -- something like Ada which explicitly marks aliasing would, by that virtue alone, be much more provable than C/C++... and if we're willing to step outside procedural-imperative for language-choice Agda (and Idris, IIRC) provide for programs-as-proofs [which itself seems to have interesting optimization possibilities].\n\n&gt; Hopefully it can push the status quo far enough that getting rid of C becomes economically viable for even more far out future processors.\n\nI agree -- I'm of the opinion that C's popularity has actually held CS back by decades and wasted much effort. (There's truth to the saying \"*you can't polish a turd*\", and a lot of languages try to \"fix\" C.)", "aSentId": 14063, "answer": "(Mill team)\n\nFun to read this chat :)\n\nWe haven't had to sacrifice much at the alter of C, and we're immune to false aliasing ;)\n\nWe bring new features, especially around security and things like threading and TLS which we hope are wildly adopted even by people with large c/c++ codebases.\n\nOur next talk is in Amsterdam 10th April: http://millcomputing.com/event/awesome-it-symposium-on-the-mill-architecture/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14064, "question": "(Mill team)\n\nFun to read this chat :)\n\nWe haven't had to sacrifice much at the alter of C, and we're immune to false aliasing ;)\n\nWe bring new features, especially around security and things like threading and TLS which we hope are wildly adopted even by people with large c/c++ codebases.\n\nOur next talk is in Amsterdam 10th April: http://millcomputing.com/event/awesome-it-symposium-on-the-mill-architecture/", "aSentId": 14065, "answer": "&gt; Fun to read this chat :)\n\nThank you; it's a fun topic, IMO.  \n(Personally I'd like to see more architectures break from the traditional and try new things, so thank you for your work!)\n\n&gt; We haven't had to sacrifice much at the alter of C, and we're immune to false aliasing ;)\n\nI know it wasn't much (and I know it wasn't aliasing in-particular), but I'm still disappointed that C/C++ is considered at all. (IMO, the language/compilers should not drive the architecture.)\n\n&gt; We bring new features, especially around security and things like threading and TLS which we hope are wildly adopted even by people with large c/c++ codebases.\n\nHm, I actually haven't gotten to to the security vid on your site yet. (It's been on my \"to watch\" list for some time, but I'd frankly forgotten about it.)\n\n&gt; Our next talk is in Amsterdam 10th April\n\nNice.  \nI currently lack the funds to do something like that, even if it weren't overseas. (But you guys'll be posting the video, right?)\n\nThe [micro-]threading looks interesting -- would it map well to Ada's Tasks? or Erlang's actors, or is it more low-level?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14062, "question": "&gt; Well, without supporting C/C++ you won't become even a marginally successful hardware platform, you will always be niche.\n\nBut what if that C/C++ support forces us into a local minimum WRT efficiency? That's not too much of a stretch to think: we know that C and C++ have some terrible properties when it comes to static analysis (aliasing is one fairly big issue) -- something like Ada which explicitly marks aliasing would, by that virtue alone, be much more provable than C/C++... and if we're willing to step outside procedural-imperative for language-choice Agda (and Idris, IIRC) provide for programs-as-proofs [which itself seems to have interesting optimization possibilities].\n\n&gt; Hopefully it can push the status quo far enough that getting rid of C becomes economically viable for even more far out future processors.\n\nI agree -- I'm of the opinion that C's popularity has actually held CS back by decades and wasted much effort. (There's truth to the saying \"*you can't polish a turd*\", and a lot of languages try to \"fix\" C.)", "aSentId": 14067, "answer": "Tackling the aliasing problem from hardware would require hard capabilities. And requiring capabilities from the hardware would make you throw away 99% of existing software and the languages it was written in.  \nTackling it from the compiler side is already possible, as long as the language supports it.  \nBut C has far more problems than that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14068, "question": "Tackling the aliasing problem from hardware would require hard capabilities. And requiring capabilities from the hardware would make you throw away 99% of existing software and the languages it was written in.  \nTackling it from the compiler side is already possible, as long as the language supports it.  \nBut C has far more problems than that.", "aSentId": 14069, "answer": "&gt; But C has far more problems than that.\n\nQuite agreed; I was using the one point as illustrative of how these problems have real impacts in our capabilities.\n\n&gt; Tackling the aliasing problem from hardware would require hard capabilities.\n&gt; \n&gt;\n&gt; Tackling it from the compiler side is already possible, as long as the language supports it.\n\nFor the particular problem of aliasing, we could tackle it at the language level -- my point was that the [essentially] pandering to C's limitations has real impacts.\n\n&gt; And requiring capabilities from the hardware would make you throw away 99% of existing software and the languages it was written in.\n\nI'm not sure that would *necessarily* be a bad thing; if you started out with a proved HW-system, and then added a type-safe OS, we could have [provably-correct] compilers which emit provably correct code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14058, "question": "Some of the Mill stuff is really pretty cool.  \nI was somewhat disappointed at hearing some of the compromises they made to [IIRC] make it so that C++ could be target it. (It'd be better, I think, when designing a radically different architecture not to sabotage the guiding principles based on the limitations of extant language implementations.)", "aSentId": 14071, "answer": "Where did you hear that?  I'd love to read it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14072, "question": "Where did you hear that?  I'd love to read it.", "aSentId": 14073, "answer": "It was mentioned, almost in passing, in one of the videos on [their site](http://millcomputing.com/docs/). (Sorry, but I've forgotten *which* video.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14058, "question": "Some of the Mill stuff is really pretty cool.  \nI was somewhat disappointed at hearing some of the compromises they made to [IIRC] make it so that C++ could be target it. (It'd be better, I think, when designing a radically different architecture not to sabotage the guiding principles based on the limitations of extant language implementations.)", "aSentId": 14075, "answer": "Well in the grand design of things maybe. But it is quite a challenge to introduce a new CPU architecture, if it goes with a complete new system and language tu run on it, it is guaranteed to be a huge market failure.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14056, "question": "Well, there is the [Mill architecture](http://millcomputing.com), which is still going forward. A major design goal there is to map common high level abstractions efficiently to hardware. Like actually using SSA on the machine, which pretty much all compilers use and have to abandon again with suboptimal register allocations. Or having native atomic function calls. Or actually organizing machine code in basic blocks.", "aSentId": 14077, "answer": "The mill doesn't quite qualify, because it doesn't do anything special in hardware for high level languages -- whatever benefits you get seem to me like they should apply across the board.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14078, "question": "The mill doesn't quite qualify, because it doesn't do anything special in hardware for high level languages -- whatever benefits you get seem to me like they should apply across the board.", "aSentId": 14079, "answer": "There are actually quite a few features that are pretty high level. Like the reserved bits for garbage collection and tagging in pointers, or the explicit nested pipelined loop support. Even some degree of polymorphism at the instruction level.\n\nBut you are right, overall the Mill is intended to be generalist and support all languages equally and not be married to one particular set of high level abstractions.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14054, "question": "The \"high-level CPU\" challenge", "aSentId": 14081, "answer": "Even something is simple as tagged memory (for a precise GC), separate register files for pointers and everything else and hardware read and write barriers (for GC again), added on top of an otherwise normal RISC would make a huge difference. Tweaking cache pre-fetches for this tagged memory is an extra bonus.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14082, "question": "Even something is simple as tagged memory (for a precise GC), separate register files for pointers and everything else and hardware read and write barriers (for GC again), added on top of an otherwise normal RISC would make a huge difference. Tweaking cache pre-fetches for this tagged memory is an extra bonus.", "aSentId": 14083, "answer": "Yeah, another area which can greatly benefit from hardware implementation is concurrency/synchronization. If \"problems that could be done more efficiently in hardware\" is such a rare unicorn, why is Intel working hard on implementing efficient hardware transactional memory and making all kinds of advancements in supporting different sorts of vector operations?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14082, "question": "Even something is simple as tagged memory (for a precise GC), separate register files for pointers and everything else and hardware read and write barriers (for GC again), added on top of an otherwise normal RISC would make a huge difference. Tweaking cache pre-fetches for this tagged memory is an extra bonus.", "aSentId": 14085, "answer": "&gt;  Even something is simple as tagged memory (for a precise GC), separate register files for pointers and everything else\n\nHow much of the GC time is spent deciding if a value is an pointer or an integer? I got the impression that was negligible, to the point that nobody seems to even bother mentioning it as something to optimize when writing a GC.\n\n&gt; and hardware read and write barriers (for GC again)\n\nHow is this different from memory barriers? What would the win be over kernels providing more useful synchronization primitives? (The impression I got is that the Azul JVM gets more or less the same benefits out of custom Linux patches as it gets out of their custom hardware.)\n\n&gt;  Tweaking cache pre-fetches for this tagged memory is an extra bonus.\n\nHow would you tweak it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14054, "question": "The \"high-level CPU\" challenge", "aSentId": 14087, "answer": "You might want to look into the architecture of early-ish Lisp machines, that had hardware specifically built for Lisp's requirements (e.g. it had tagged memory).\n\nThe idea of such a CPU, in and by itself, is not new. Thirty years ago it eventually failed not because the resulting systems were slow -- they weren't -- but because they were *highly* specialized.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14089, "question": "&gt; I'll just mention that static typing (irregardless of the type inference technique) characterizes lower-level languages, because now I have to think about types\n\nWould anyone here claim that Haskell is low-level because it has static types? What about Idris or Agda?", "aSentId": 14090, "answer": "Depends on what you mean by low-level. In this context the author means thinking about anything that is not directly related to solving the problem. That could be any number of things and in some cases it can mean fighting with the compiler about the types. I characterize such impedance mismatches as indicators of low-levelness because you still have to translate the problem and its solution into a form that the compiler can understand. Then again at some point this translation process becomes second nature and you're back to the blub paradox where the low-levelness of the language does not feel like low-leveless because you've internalized the bits from which you can synthesize solutions.\n\nEdit: as /u/jeandem mentioned the mismatch between one's conceptual understanding of a domain and what the compiler expects have nothing to do with types per se. It was just an example to demonstrate that any detail irrelevant to the problem is a low-level detail that is simply there because the underlying substrate can not express certain concepts directly. The underlying substrate most often being the programming language and its associated primitives. Going a bit lower the underlying substrate becomes the hardware and the compilers that target them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14091, "question": "Depends on what you mean by low-level. In this context the author means thinking about anything that is not directly related to solving the problem. That could be any number of things and in some cases it can mean fighting with the compiler about the types. I characterize such impedance mismatches as indicators of low-levelness because you still have to translate the problem and its solution into a form that the compiler can understand. Then again at some point this translation process becomes second nature and you're back to the blub paradox where the low-levelness of the language does not feel like low-leveless because you've internalized the bits from which you can synthesize solutions.\n\nEdit: as /u/jeandem mentioned the mismatch between one's conceptual understanding of a domain and what the compiler expects have nothing to do with types per se. It was just an example to demonstrate that any detail irrelevant to the problem is a low-level detail that is simply there because the underlying substrate can not express certain concepts directly. The underlying substrate most often being the programming language and its associated primitives. Going a bit lower the underlying substrate becomes the hardware and the compilers that target them.", "aSentId": 14092, "answer": "Since dynamically typed languages also have types, then they are also low-level: you just have the privilege of not worrying about them until you run (and crash?) your program. Then a high-level language should be an untyped one, perhaps one in which all values are blobs of bytes, or perhaps of strings. Congrats, now you're free of scaffolding that can distract you from your problem domain. We have the pleasure of offering you these things to model your problem: strings, and more strings (or perhaps bytes, and more bytes).\n\nThings can be inherently complex and low-level, but anything can be used in a way that makes things harder for yourself. Byzantine stairwells can be built from any material (and to think, you only needed a ladder to clean your gutters).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14093, "question": "Since dynamically typed languages also have types, then they are also low-level: you just have the privilege of not worrying about them until you run (and crash?) your program. Then a high-level language should be an untyped one, perhaps one in which all values are blobs of bytes, or perhaps of strings. Congrats, now you're free of scaffolding that can distract you from your problem domain. We have the pleasure of offering you these things to model your problem: strings, and more strings (or perhaps bytes, and more bytes).\n\nThings can be inherently complex and low-level, but anything can be used in a way that makes things harder for yourself. Byzantine stairwells can be built from any material (and to think, you only needed a ladder to clean your gutters).", "aSentId": 14094, "answer": "I don't see what dynamic or static has anything to do with worrying about unnecessary details. I did not mention anything about dynamic languages because I was trying to avoid this exact conversation that I've had a million times with static type advocates and dynamic type advocates. I'm honestly tired of it. I don't care one way or the other. Give me a tool to solve problems with as little overhead as possible. How you go about doing that I honestly don't care about.\n\nGetting back to the main point of the article. My current tool of choice is TypeScript. I like mixing and matching different typing regimes and it strikes a really good balance between being pragmatic and providing some form of safety net for enforcing invariants with types. Coupled with the work that is being done on V8 to take better advantage of types to create faster code I'm pretty happy with how the software side of things is progressing. If something similar could be done with hardware then that would be pretty nice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14095, "question": "I don't see what dynamic or static has anything to do with worrying about unnecessary details. I did not mention anything about dynamic languages because I was trying to avoid this exact conversation that I've had a million times with static type advocates and dynamic type advocates. I'm honestly tired of it. I don't care one way or the other. Give me a tool to solve problems with as little overhead as possible. How you go about doing that I honestly don't care about.\n\nGetting back to the main point of the article. My current tool of choice is TypeScript. I like mixing and matching different typing regimes and it strikes a really good balance between being pragmatic and providing some form of safety net for enforcing invariants with types. Coupled with the work that is being done on V8 to take better advantage of types to create faster code I'm pretty happy with how the software side of things is progressing. If something similar could be done with hardware then that would be pretty nice.", "aSentId": 14096, "answer": "&gt; I don't see what dynamic or static has anything to do with worrying about unnecessary details.\n\nWhen you reply to someone talking about static typing, and you mention static typing as an example of potential impendance mismatch, and you say\n\n&gt; translate the problem and its solution into a form that the compiler can understand\n\n, I assume that replying by talking about the subject that the author brought up in the first place is fair game. I'm sorry if you feel that is bewildering.\n\n&gt; I did not mention anything about dynamic languages because I was trying to avoid this exact conversation that I've had a million times with static type advocates and dynamic type advocates. I'm honestly tired of it. I don't care one way or the other.\n\nI presume you mean dynamic/static advocates as in, arguing which is better? Not relevant in this case, since I unified them into one camp - *typed* programming language - to contrast them with another, namely the so-called untyped ones. Again, as a response to the author's mention of static typing, which is the topic that you seemed to stick to.\n\n&gt; I'm honestly tired of it. I don't care one way or the other.\n\nIf you don't want to engage in discussions about typing, then why are you replying to a post about typing to begin with? Yes, I guess you tried to generalize the topic, but don't act exasperated when the topic goes back to typing in particular again - that's perfectly natural, and expected.\n\nI can't know what topics are too pass\u00e9 for your to engage in. Even so, there is no reason for us to consider each other as two people that have to reply in a defensive manner to each other (or to reply to each other at all) - these are just ideas, and we might not even agree with the ideas that we present ourselves.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14097, "question": "&gt; I don't see what dynamic or static has anything to do with worrying about unnecessary details.\n\nWhen you reply to someone talking about static typing, and you mention static typing as an example of potential impendance mismatch, and you say\n\n&gt; translate the problem and its solution into a form that the compiler can understand\n\n, I assume that replying by talking about the subject that the author brought up in the first place is fair game. I'm sorry if you feel that is bewildering.\n\n&gt; I did not mention anything about dynamic languages because I was trying to avoid this exact conversation that I've had a million times with static type advocates and dynamic type advocates. I'm honestly tired of it. I don't care one way or the other.\n\nI presume you mean dynamic/static advocates as in, arguing which is better? Not relevant in this case, since I unified them into one camp - *typed* programming language - to contrast them with another, namely the so-called untyped ones. Again, as a response to the author's mention of static typing, which is the topic that you seemed to stick to.\n\n&gt; I'm honestly tired of it. I don't care one way or the other.\n\nIf you don't want to engage in discussions about typing, then why are you replying to a post about typing to begin with? Yes, I guess you tried to generalize the topic, but don't act exasperated when the topic goes back to typing in particular again - that's perfectly natural, and expected.\n\nI can't know what topics are too pass\u00e9 for your to engage in. Even so, there is no reason for us to consider each other as two people that have to reply in a defensive manner to each other (or to reply to each other at all) - these are just ideas, and we might not even agree with the ideas that we present ourselves.", "aSentId": 14098, "answer": "Agreed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14093, "question": "Since dynamically typed languages also have types, then they are also low-level: you just have the privilege of not worrying about them until you run (and crash?) your program. Then a high-level language should be an untyped one, perhaps one in which all values are blobs of bytes, or perhaps of strings. Congrats, now you're free of scaffolding that can distract you from your problem domain. We have the pleasure of offering you these things to model your problem: strings, and more strings (or perhaps bytes, and more bytes).\n\nThings can be inherently complex and low-level, but anything can be used in a way that makes things harder for yourself. Byzantine stairwells can be built from any material (and to think, you only needed a ladder to clean your gutters).", "aSentId": 14100, "answer": "&gt; strings, and more strings \n\nThat is how we build our civilization on language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14091, "question": "Depends on what you mean by low-level. In this context the author means thinking about anything that is not directly related to solving the problem. That could be any number of things and in some cases it can mean fighting with the compiler about the types. I characterize such impedance mismatches as indicators of low-levelness because you still have to translate the problem and its solution into a form that the compiler can understand. Then again at some point this translation process becomes second nature and you're back to the blub paradox where the low-levelness of the language does not feel like low-leveless because you've internalized the bits from which you can synthesize solutions.\n\nEdit: as /u/jeandem mentioned the mismatch between one's conceptual understanding of a domain and what the compiler expects have nothing to do with types per se. It was just an example to demonstrate that any detail irrelevant to the problem is a low-level detail that is simply there because the underlying substrate can not express certain concepts directly. The underlying substrate most often being the programming language and its associated primitives. Going a bit lower the underlying substrate becomes the hardware and the compilers that target them.", "aSentId": 14102, "answer": "I think of high or low-level in terms of abstraction (and judging by wikipedia, it seems I'm not alone). Haskell isn't normally a language that people complain about as not being sufficiently abstract.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14103, "question": "I think of high or low-level in terms of abstraction (and judging by wikipedia, it seems I'm not alone). Haskell isn't normally a language that people complain about as not being sufficiently abstract.", "aSentId": 14104, "answer": "Right, the point is you're still using a proxy for high-level vs low-level. In your case the proxy is abstraction. In the author's case it is something else.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14105, "question": "Right, the point is you're still using a proxy for high-level vs low-level. In your case the proxy is abstraction. In the author's case it is something else.", "aSentId": 14106, "answer": "I was going to re-read the article to check your assertion, then I read the first paragraph:\n\n&gt; Do you love (\"very\") high-level languages? Like Lisp, Smalltalk, Python, Ruby? Or maybe Haskell, ML? I love high-level languages.\n\nOops.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14091, "question": "Depends on what you mean by low-level. In this context the author means thinking about anything that is not directly related to solving the problem. That could be any number of things and in some cases it can mean fighting with the compiler about the types. I characterize such impedance mismatches as indicators of low-levelness because you still have to translate the problem and its solution into a form that the compiler can understand. Then again at some point this translation process becomes second nature and you're back to the blub paradox where the low-levelness of the language does not feel like low-leveless because you've internalized the bits from which you can synthesize solutions.\n\nEdit: as /u/jeandem mentioned the mismatch between one's conceptual understanding of a domain and what the compiler expects have nothing to do with types per se. It was just an example to demonstrate that any detail irrelevant to the problem is a low-level detail that is simply there because the underlying substrate can not express certain concepts directly. The underlying substrate most often being the programming language and its associated primitives. Going a bit lower the underlying substrate becomes the hardware and the compilers that target them.", "aSentId": 14108, "answer": "I think the current obsession of differentiating  languages into low and high level is silly. There is no low level or high level, there is only layers of contexts. For example, I am thinking about how to fix the car, there is the frame and power train. The screws are out of context. Then once I figured out what to probe, getting the screws out can move into my context and become the focus. \n\nSo at one context, we are figuring out the components of the program and the work flow, then when we down to certain part, we will consider the types and storage. There is no level, there is only context.\n\nSo we see the problem of current programming languages. They put everything into the same context. At any 100 lines of code in any language, we read from types to functions to expressions, there is only one context.\n\nWith only one context, we have this dilemma: should we prefer the car at component level or screw level? There is no correct answer.\n\nOf course we don't see it silly, because it is the only thing we have.\n\nI think we need the current lower level languages like C. Because the car won't run well if we can't tighten the screws. Then we need a meta layer that can allow us to write programs in layers of contexts. With that, we will be programming both at high level and low level. When there is enough culture built up, we will mostly working at the high level context with the low level context in sight for feedback. The efficient feedback system will make this all work.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14089, "question": "&gt; I'll just mention that static typing (irregardless of the type inference technique) characterizes lower-level languages, because now I have to think about types\n\nWould anyone here claim that Haskell is low-level because it has static types? What about Idris or Agda?", "aSentId": 14110, "answer": "I'm pretty sure the statement is that static typing is a characteristic of low-level languages, not that being low-level is a characteristic of statically typed languages.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14112, "question": "I would be interested to see hardware support for performing operations on a arbitrary subset of bits in a register with no overhead.  Something like `add %r1[2:64] %r2[0:62] %r3`.  A lot of high level languages use, or would use, some form of tagging.  Especially now that 64bit integers are the norm, there are a lot of potentially useful bits that go unused.\n\nLisp machines had support for similar ideas, but they did so by adding tags directly instead of supporting more general masked operations.  This could be way off base and probably isn't radical enough for the author, but it would help with implementing GC'd languages.", "aSentId": 14113, "answer": "This is an issue of entropy in hardware design. Code bits are not free; yo can never have enough I$1, and the signal paths to push instructions around, and the shifters to decode them, are often a significant fraction of the hardware area and power budgets.\n\nConsequently, while bit level addressing (which has recurred in many forms in the history of CPU architecture) seems elegant in its generality, the over number of code bits required to perform an action are reduced if first the bit fields are extracted to a larger-granularity unit, the actual work is done in that unit, and then the result bits are injected into the bit field. So the hardware does it that way, and the compilers deal with it.\n\nThe big loss in modern ISA is not access to bit fields per se, but in the absence of pointers to bit sized and aligned data. A bit field is not a first-class citizen. Of course, you can define a bit pointer as an abstract object in the HLL of your choice and (mostly) have it act like a real pointer, but the performance is lacking compared to non-bit pointers or simple static bitfields.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14120, "question": "Lucene: The Good Parts (a look inside Elasticsearch)", "aSentId": 14121, "answer": "More of how it works, not a minimum set of API to cover most of use cases.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14123, "question": "A success story for Haxe", "aSentId": 14124, "answer": "&gt; I learned what\u2019s REAL strict typing, \n\nWhat's \"strict typing\"?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14125, "question": "&gt; I learned what\u2019s REAL strict typing, \n\nWhat's \"strict typing\"?", "aSentId": 14126, "answer": "An informal term describing some type systems' support for enforcing more preconditions, invariants, and postconditions at compile time than others.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14127, "question": "An informal term describing some type systems' support for enforcing more preconditions, invariants, and postconditions at compile time than others.", "aSentId": 14128, "answer": "&gt; more \n\nThen it should be *stricter*; not *strict*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14129, "question": "&gt; more \n\nThen it should be *stricter*; not *strict*.", "aSentId": 14130, "answer": "Eh. The post made clear what the languages in question were. I think people can figure out that the usage of \"strict\" there is colloquial.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14131, "question": "Eh. The post made clear what the languages in question were. I think people can figure out that the usage of \"strict\" there is colloquial.", "aSentId": 14132, "answer": "Though isn't it ironic to proclaim that \"I learned what's REAL &lt;colloquial and non-standard term&gt;\" ? ;) I'll shut up now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14125, "question": "&gt; I learned what\u2019s REAL strict typing, \n\nWhat's \"strict typing\"?", "aSentId": 14134, "answer": "strong typing, think java vs weak typing javascript", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14135, "question": "strong typing, think java vs weak typing javascript", "aSentId": 14136, "answer": "Oh, *strong* typing. I prefer to call strong/strict typing for *solid* typing......", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14123, "question": "A success story for Haxe", "aSentId": 14138, "answer": "This is the type of article I like to see here. Instead of bashing something you're geeking out about some cool tech.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14123, "question": "A success story for Haxe", "aSentId": 14140, "answer": "I'm a huge haxe fan although I've not used it to the same degree you have. \n\nI've been mainly using it in conjunction with HaxeFlixel which has been a total pleasure. Once you get the initial setup done with haxelib etc the development process is a breeze.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14142, "question": "We ran into massive problems using Haxe. Their HXCPP garbage collector really sucks. We had massive memory leaks that didn't seem to decrease no matter what we cleared. Had to ditch the whole codebase.", "aSentId": 14143, "answer": "I really liked Haxe, but the GC... oh God, and the GC when transpiled to C++ oh dear GOD... Still better than AS3 or JavaScript, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14146, "question": "Google to close Google Code open source project hosting", "aSentId": 14147, "answer": "This is a slightly modified snippet extracted from something I wrote last year predicting the Google Code shutdown. https://medium.com/@joewalnes/some-2015-tech-predictions-1e78ff31cbfd\n\n----\n\n**It's not about Mercurial vs Git** (or about CSS)\n\nWhen Google Code added Mercurial support, Mercurial and Git were roughly equal in popularity. Git was more functional, but Mercurial was a lot simpler to use. In fact, almost everyone I spoke to at the time preferred Mercurial and honestly I thought it was going to be the winner. Project hosting sites that had typically used centralized source control systems like CVS or SVN scrambled to add Git and Mercurial support (including Google Code).\n\nThen GitHub happened. They realized that the it's not just the source control system that should be decentralized but every aspect of the project. Projects could be forked with a single click, pull requests created and tracked, network graphs explored. It created an organic and discoverable open-source ecosystem, the likes of which we never saw on Google Code, SourceForge, etc. Anyone could explore ideas in existing projects without having to gain committer access. It was magical.\n\nGitHub may have just as easily decided to bet on Mercurial instead. I believe if that would have happened, Mercurial would be the most widely used system today. BitBucket did something similar for Mercurial and did pretty well, but GitHub always had the lead.\n\nIt was the project hosting sites that lead the source control systems, not the other way round So, back to Google Code. It could have been something huge and it could have made Mercurial the winner, but Google Code never grokked the importance of \"social coding\". Even though the source code was decentralized, the projects themselves were still centralized. Decentralized project concepts such as forking, network graphs, pull requests, etc - this was all from the new world of GitHub.\n\nOver the past two years we've seen Google release new open-source projects on GitHub, then existing projects starting to migrate. Recently, Go started migration too\u200a\u2014\u200athis is no casual move because it affects the import paths used in a vast amount of user created Go code which will build breakages. Yeah, the writing is on the wall for Google Code.\n\nWhen SourceForge fell out of favor it was sold. It\u2019s now filled with ads, especially deceiving ones on project downloads page which try to trick users into downloading some malware infested turd burner. In fact, for a while SourceForge were actively modifying genuine project releases to include spyware. Cocks.\n\nGoogle didn't do a SourceForge. If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this\u200a\u2014\u200akilling products takes guts.\n\nGoogle Code\u200a\u2014\u200aI salute you. You did well, you made the open source world a better place, and above all you stepped aside when you knew the time was right.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14148, "question": "This is a slightly modified snippet extracted from something I wrote last year predicting the Google Code shutdown. https://medium.com/@joewalnes/some-2015-tech-predictions-1e78ff31cbfd\n\n----\n\n**It's not about Mercurial vs Git** (or about CSS)\n\nWhen Google Code added Mercurial support, Mercurial and Git were roughly equal in popularity. Git was more functional, but Mercurial was a lot simpler to use. In fact, almost everyone I spoke to at the time preferred Mercurial and honestly I thought it was going to be the winner. Project hosting sites that had typically used centralized source control systems like CVS or SVN scrambled to add Git and Mercurial support (including Google Code).\n\nThen GitHub happened. They realized that the it's not just the source control system that should be decentralized but every aspect of the project. Projects could be forked with a single click, pull requests created and tracked, network graphs explored. It created an organic and discoverable open-source ecosystem, the likes of which we never saw on Google Code, SourceForge, etc. Anyone could explore ideas in existing projects without having to gain committer access. It was magical.\n\nGitHub may have just as easily decided to bet on Mercurial instead. I believe if that would have happened, Mercurial would be the most widely used system today. BitBucket did something similar for Mercurial and did pretty well, but GitHub always had the lead.\n\nIt was the project hosting sites that lead the source control systems, not the other way round So, back to Google Code. It could have been something huge and it could have made Mercurial the winner, but Google Code never grokked the importance of \"social coding\". Even though the source code was decentralized, the projects themselves were still centralized. Decentralized project concepts such as forking, network graphs, pull requests, etc - this was all from the new world of GitHub.\n\nOver the past two years we've seen Google release new open-source projects on GitHub, then existing projects starting to migrate. Recently, Go started migration too\u200a\u2014\u200athis is no casual move because it affects the import paths used in a vast amount of user created Go code which will build breakages. Yeah, the writing is on the wall for Google Code.\n\nWhen SourceForge fell out of favor it was sold. It\u2019s now filled with ads, especially deceiving ones on project downloads page which try to trick users into downloading some malware infested turd burner. In fact, for a while SourceForge were actively modifying genuine project releases to include spyware. Cocks.\n\nGoogle didn't do a SourceForge. If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this\u200a\u2014\u200akilling products takes guts.\n\nGoogle Code\u200a\u2014\u200aI salute you. You did well, you made the open source world a better place, and above all you stepped aside when you knew the time was right.", "aSentId": 14149, "answer": "GitHub started in 2008 and Google Code only added Mercurial in 2010 (afair). By that time GitHub was already extremely popular.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14148, "question": "This is a slightly modified snippet extracted from something I wrote last year predicting the Google Code shutdown. https://medium.com/@joewalnes/some-2015-tech-predictions-1e78ff31cbfd\n\n----\n\n**It's not about Mercurial vs Git** (or about CSS)\n\nWhen Google Code added Mercurial support, Mercurial and Git were roughly equal in popularity. Git was more functional, but Mercurial was a lot simpler to use. In fact, almost everyone I spoke to at the time preferred Mercurial and honestly I thought it was going to be the winner. Project hosting sites that had typically used centralized source control systems like CVS or SVN scrambled to add Git and Mercurial support (including Google Code).\n\nThen GitHub happened. They realized that the it's not just the source control system that should be decentralized but every aspect of the project. Projects could be forked with a single click, pull requests created and tracked, network graphs explored. It created an organic and discoverable open-source ecosystem, the likes of which we never saw on Google Code, SourceForge, etc. Anyone could explore ideas in existing projects without having to gain committer access. It was magical.\n\nGitHub may have just as easily decided to bet on Mercurial instead. I believe if that would have happened, Mercurial would be the most widely used system today. BitBucket did something similar for Mercurial and did pretty well, but GitHub always had the lead.\n\nIt was the project hosting sites that lead the source control systems, not the other way round So, back to Google Code. It could have been something huge and it could have made Mercurial the winner, but Google Code never grokked the importance of \"social coding\". Even though the source code was decentralized, the projects themselves were still centralized. Decentralized project concepts such as forking, network graphs, pull requests, etc - this was all from the new world of GitHub.\n\nOver the past two years we've seen Google release new open-source projects on GitHub, then existing projects starting to migrate. Recently, Go started migration too\u200a\u2014\u200athis is no casual move because it affects the import paths used in a vast amount of user created Go code which will build breakages. Yeah, the writing is on the wall for Google Code.\n\nWhen SourceForge fell out of favor it was sold. It\u2019s now filled with ads, especially deceiving ones on project downloads page which try to trick users into downloading some malware infested turd burner. In fact, for a while SourceForge were actively modifying genuine project releases to include spyware. Cocks.\n\nGoogle didn't do a SourceForge. If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this\u200a\u2014\u200akilling products takes guts.\n\nGoogle Code\u200a\u2014\u200aI salute you. You did well, you made the open source world a better place, and above all you stepped aside when you knew the time was right.", "aSentId": 14151, "answer": "&gt; They realized that the it's not just the source control system that should be decentralized but every aspect of the project.\n\n... and then the community proceeded to centralize onto it instead, and now a depressing number of people think git == github.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14152, "question": "&gt; They realized that the it's not just the source control system that should be decentralized but every aspect of the project.\n\n... and then the community proceeded to centralize onto it instead, and now a depressing number of people think git == github.", "aSentId": 14153, "answer": "The perils of success.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14148, "question": "This is a slightly modified snippet extracted from something I wrote last year predicting the Google Code shutdown. https://medium.com/@joewalnes/some-2015-tech-predictions-1e78ff31cbfd\n\n----\n\n**It's not about Mercurial vs Git** (or about CSS)\n\nWhen Google Code added Mercurial support, Mercurial and Git were roughly equal in popularity. Git was more functional, but Mercurial was a lot simpler to use. In fact, almost everyone I spoke to at the time preferred Mercurial and honestly I thought it was going to be the winner. Project hosting sites that had typically used centralized source control systems like CVS or SVN scrambled to add Git and Mercurial support (including Google Code).\n\nThen GitHub happened. They realized that the it's not just the source control system that should be decentralized but every aspect of the project. Projects could be forked with a single click, pull requests created and tracked, network graphs explored. It created an organic and discoverable open-source ecosystem, the likes of which we never saw on Google Code, SourceForge, etc. Anyone could explore ideas in existing projects without having to gain committer access. It was magical.\n\nGitHub may have just as easily decided to bet on Mercurial instead. I believe if that would have happened, Mercurial would be the most widely used system today. BitBucket did something similar for Mercurial and did pretty well, but GitHub always had the lead.\n\nIt was the project hosting sites that lead the source control systems, not the other way round So, back to Google Code. It could have been something huge and it could have made Mercurial the winner, but Google Code never grokked the importance of \"social coding\". Even though the source code was decentralized, the projects themselves were still centralized. Decentralized project concepts such as forking, network graphs, pull requests, etc - this was all from the new world of GitHub.\n\nOver the past two years we've seen Google release new open-source projects on GitHub, then existing projects starting to migrate. Recently, Go started migration too\u200a\u2014\u200athis is no casual move because it affects the import paths used in a vast amount of user created Go code which will build breakages. Yeah, the writing is on the wall for Google Code.\n\nWhen SourceForge fell out of favor it was sold. It\u2019s now filled with ads, especially deceiving ones on project downloads page which try to trick users into downloading some malware infested turd burner. In fact, for a while SourceForge were actively modifying genuine project releases to include spyware. Cocks.\n\nGoogle didn't do a SourceForge. If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this\u200a\u2014\u200akilling products takes guts.\n\nGoogle Code\u200a\u2014\u200aI salute you. You did well, you made the open source world a better place, and above all you stepped aside when you knew the time was right.", "aSentId": 14155, "answer": "Which basically means that, once again, google failed at the social thing. They are unable to take the lead in any social networking mechanism. When they did, briefly, with orkut, they were invaded by brazilians.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14156, "question": "Which basically means that, once again, google failed at the social thing. They are unable to take the lead in any social networking mechanism. When they did, briefly, with orkut, they were invaded by brazilians.\n", "aSentId": 14157, "answer": "They got _really_ close with Plus. They pulled a Cartman though and held the gates closed _wayyyyy_ too long. People initially really wanted to try it, begged for invites, but Google kept it closed. Then people just stopped caring, and Google still kept it closed. Then people were just confused, and Google forced it on them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14158, "question": "They got _really_ close with Plus. They pulled a Cartman though and held the gates closed _wayyyyy_ too long. People initially really wanted to try it, begged for invites, but Google kept it closed. Then people just stopped caring, and Google still kept it closed. Then people were just confused, and Google forced it on them.", "aSentId": 14159, "answer": "Have you even seen Google+ comments on other sites (YouTube, Blogger, etc)? Instead of actual comments on the article/post they are just out-of-context statement like \"check out this article\". It's completely incomprehensible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14160, "question": "Have you even seen Google+ comments on other sites (YouTube, Blogger, etc)? Instead of actual comments on the article/post they are just out-of-context statement like \"check out this article\". It's completely incomprehensible.", "aSentId": 14161, "answer": "That all came way later, after the forced integration.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14162, "question": "That all came way later, after the forced integration.", "aSentId": 14163, "answer": "Speaking of which is one of main reasons I refuse to use g+.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14162, "question": "That all came way later, after the forced integration.", "aSentId": 14165, "answer": "The forced integration is sooo stupidly retarded. You can't even rate or comment on apps in the play store without a f*cking G+ profile. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14158, "question": "They got _really_ close with Plus. They pulled a Cartman though and held the gates closed _wayyyyy_ too long. People initially really wanted to try it, begged for invites, but Google kept it closed. Then people just stopped caring, and Google still kept it closed. Then people were just confused, and Google forced it on them.", "aSentId": 14167, "answer": "I hear this a lot, about Plus failing due to keeping the gates closed too long. I honestly don't believe that caused it's downfall. It probably reduced to total number of users, but I think it was always destined to be what it is today.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14168, "question": "I hear this a lot, about Plus failing due to keeping the gates closed too long. I honestly don't believe that caused it's downfall. It probably reduced to total number of users, but I think it was always destined to be what it is today.", "aSentId": 14169, "answer": "IIRC Plus first hit right when Facebook did a big update, people were really wanting a Facebook replacement and \"Circles\" were easier to use than the somewhat hidden (at the time) lists feature of Facebook. I remember pretty much everyone I know wanting to try Plus but there not being enough invites, even non-tech people.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14170, "question": "IIRC Plus first hit right when Facebook did a big update, people were really wanting a Facebook replacement and \"Circles\" were easier to use than the somewhat hidden (at the time) lists feature of Facebook. I remember pretty much everyone I know wanting to try Plus but there not being enough invites, even non-tech people.", "aSentId": 14171, "answer": "My group of friends managed to get lots of invites thanks to some connections. Everyone got really excited for a few days but no one ever bothered switching. That's what I think the problem is, getting people to put in the effort to switch. I think it takes a generational leap in quality to get a large user base to switch, and I don't think Plus provided that. Was it better than Facebook? Probably. Was it \"better enough\" to get people to overcome laziness? I don't think so.\n\nOf course I'm speaking about how I see things via my own perception. I hardly ever switch anything. I don't upgrade the OS on my computers or phones. I rarely upgrade devices, and I definitely won't switch from one service to a competitor if I'm already \"comfortable\". It's laziness, and I think that laziness is hard to overcome, even if the new alternative is better. If you want me to switch or upgrade, you have to offer something that completely changes how I use the product.\n\n/random thoughts", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14172, "question": "My group of friends managed to get lots of invites thanks to some connections. Everyone got really excited for a few days but no one ever bothered switching. That's what I think the problem is, getting people to put in the effort to switch. I think it takes a generational leap in quality to get a large user base to switch, and I don't think Plus provided that. Was it better than Facebook? Probably. Was it \"better enough\" to get people to overcome laziness? I don't think so.\n\nOf course I'm speaking about how I see things via my own perception. I hardly ever switch anything. I don't upgrade the OS on my computers or phones. I rarely upgrade devices, and I definitely won't switch from one service to a competitor if I'm already \"comfortable\". It's laziness, and I think that laziness is hard to overcome, even if the new alternative is better. If you want me to switch or upgrade, you have to offer something that completely changes how I use the product.\n\n/random thoughts", "aSentId": 14173, "answer": "One rule of business I learned long ago is \"don't say no to money\". When customers want to buy your stuff, you take their money! Google doesn't seem to have learned this lesson; their tactic of rolling out gmail slowly and living on the buzz until it was a success worked because, the service itself was so good. But G+wasn't head and shoulders above FB; it was a few features (at best) ahead of FB. \n\nSo their delay tactics really just gave FB time to come to feature parity before they lost their network effects. Also, email is highly portable; if I start using an address at cia.com instead of gmail.com, I can still communicate with all my contacts. FB, being proprietary isn't that way with G+.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14174, "question": "One rule of business I learned long ago is \"don't say no to money\". When customers want to buy your stuff, you take their money! Google doesn't seem to have learned this lesson; their tactic of rolling out gmail slowly and living on the buzz until it was a success worked because, the service itself was so good. But G+wasn't head and shoulders above FB; it was a few features (at best) ahead of FB. \n\nSo their delay tactics really just gave FB time to come to feature parity before they lost their network effects. Also, email is highly portable; if I start using an address at cia.com instead of gmail.com, I can still communicate with all my contacts. FB, being proprietary isn't that way with G+.", "aSentId": 14175, "answer": "Tech superiority is not the real reason of gmail succes versus G+.\n\nGmail works even if your friends use Yahoo.\n\nG+ doesn't work if your friends use Facebook.\n\nNot opening the gates at once was an unbeleivably stupid thing to do. Yes, I had a G+ invite, but what am I going to do there ? Circlejerk with a few friends ? I gmail only allowed you to contact gmail users, progressive rollout would have been a disaster.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14176, "question": "Tech superiority is not the real reason of gmail succes versus G+.\n\nGmail works even if your friends use Yahoo.\n\nG+ doesn't work if your friends use Facebook.\n\nNot opening the gates at once was an unbeleivably stupid thing to do. Yes, I had a G+ invite, but what am I going to do there ? Circlejerk with a few friends ? I gmail only allowed you to contact gmail users, progressive rollout would have been a disaster.\n", "aSentId": 14177, "answer": "Didn't I just say that?\n\n&gt; Also, email is highly portable; if I start using an address at cia.com instead of gmail.com, I can still communicate with all my contacts. FB, being proprietary isn't.\n\nThought so....\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14172, "question": "My group of friends managed to get lots of invites thanks to some connections. Everyone got really excited for a few days but no one ever bothered switching. That's what I think the problem is, getting people to put in the effort to switch. I think it takes a generational leap in quality to get a large user base to switch, and I don't think Plus provided that. Was it better than Facebook? Probably. Was it \"better enough\" to get people to overcome laziness? I don't think so.\n\nOf course I'm speaking about how I see things via my own perception. I hardly ever switch anything. I don't upgrade the OS on my computers or phones. I rarely upgrade devices, and I definitely won't switch from one service to a competitor if I'm already \"comfortable\". It's laziness, and I think that laziness is hard to overcome, even if the new alternative is better. If you want me to switch or upgrade, you have to offer something that completely changes how I use the product.\n\n/random thoughts", "aSentId": 14179, "answer": "That's a good policy to have. There have been so many \"upgrades\" lately that have really been downgrades. Android 5? Worse than 4. uTorrent? Worse. SourceForce? Worse. Facebook? Worse.\n\nEveryone is just piling on crap, bloat, useless features, ads, and anti-privacy features.\n\nIf you find something you like, don't upgrade.\n\nG+ may have been marginally better than Facebook, but like you said, it wasn't nearly good enough to warrant a switch. And they really should have known that. They should never have opened the doors until it was leaps and bounds better.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14180, "question": "That's a good policy to have. There have been so many \"upgrades\" lately that have really been downgrades. Android 5? Worse than 4. uTorrent? Worse. SourceForce? Worse. Facebook? Worse.\n\nEveryone is just piling on crap, bloat, useless features, ads, and anti-privacy features.\n\nIf you find something you like, don't upgrade.\n\nG+ may have been marginally better than Facebook, but like you said, it wasn't nearly good enough to warrant a switch. And they really should have known that. They should never have opened the doors until it was leaps and bounds better.", "aSentId": 14181, "answer": "Right. My rare upgrade policy actually started with flash several years ago. I bought a laptop and everything worked fine. I would frequently use it to watch Netflix/Hulu/other things that required flash. After a few months of use I got an upgrade notification for flash and I upgraded. After upgrading, all flash based video sites started functioning terribly, and my laptop had to be frequently restarted while streaming. I couldn't find a way to downgrade flash and suffered through this for weeks, hoping that a new upgrade would solve it, but nothing. I eventually reinstalled the OS and everything worked fine, until I accidentally updated flash again. Ever since then I made it policy to never update flash, and that has spilled over to other things. My phone wants to update to add watch support or it fixes some obscure bug? I don't plan on using that so no thanks.\n\nAnd yea, that's what I'm saying about G+. It was probably better than Facebook in multiple ways, I just don't think it was meaningful enough to get hundreds of millions of people to get off their lazy asses (myself included).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14182, "question": "Right. My rare upgrade policy actually started with flash several years ago. I bought a laptop and everything worked fine. I would frequently use it to watch Netflix/Hulu/other things that required flash. After a few months of use I got an upgrade notification for flash and I upgraded. After upgrading, all flash based video sites started functioning terribly, and my laptop had to be frequently restarted while streaming. I couldn't find a way to downgrade flash and suffered through this for weeks, hoping that a new upgrade would solve it, but nothing. I eventually reinstalled the OS and everything worked fine, until I accidentally updated flash again. Ever since then I made it policy to never update flash, and that has spilled over to other things. My phone wants to update to add watch support or it fixes some obscure bug? I don't plan on using that so no thanks.\n\nAnd yea, that's what I'm saying about G+. It was probably better than Facebook in multiple ways, I just don't think it was meaningful enough to get hundreds of millions of people to get off their lazy asses (myself included).", "aSentId": 14183, "answer": "Uhm flash is the last thing I would not update. This is terrible advice. I'd rather uninstall flash than use some exploitable old version.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14184, "question": "Uhm flash is the last thing I would not update. This is terrible advice. I'd rather uninstall flash than use some exploitable old version.", "aSentId": 14185, "answer": "It would be nice if they separated security updates from version updates, but that's a pain in the ass.\n\nI know what freefoodisgood thinking though. Quite frankly, for all practical purposes, for all the wizardry that modern OS's give, I really think that most of it is wasted. Where in windows 3.1 or 95 I could just open a folder and it flashed open immediately, modern windows attempt to preview everything whether you want it or not. I just decided to see just how long it takes to open my downloads folder and it still hasn't finished while I wrote the last couple of sentences. Yeah, these things can be switched off(but the option is in a different place every version of windows), but it would be nice if the fast version was the default. As time goes by, things get increasingly more stupid.  In windows 7 they actually made some smart decisions. I could navigate more or less anything with the keyboard. Powering down is just three key-presses: start, right, enter. In windows 8? The fastest way I've found to do it is win+m, alt+f4, enter. But this doesn't always work as alt+f4 context targeting appears to be bizarre at times. For users who actually want to navigate fast with a keyboard rather than fucking around with a mouse or touch-screen windows 8 appears to be an abomination(maybe I just haven't spent long enough trying to get it to work for me as I only have it on my personal laptop which I rarely need to use)\n\nThe insistence of companies to take something good and overhaul it in pointless  ways annoys me to  no end", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14184, "question": "Uhm flash is the last thing I would not update. This is terrible advice. I'd rather uninstall flash than use some exploitable old version.", "aSentId": 14187, "answer": "Same thing goes for putting off updating your phone's OS. Some of those \"obscure bugs\" you don't think you care about may very well be security vulnerabilities.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14184, "question": "Uhm flash is the last thing I would not update. This is terrible advice. I'd rather uninstall flash than use some exploitable old version.", "aSentId": 14189, "answer": "Yeah, but each flash update increasingly makes it more difficult to not accidentally install McCaffee AV. They moved the opt-out from the installer and put it on the website.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14172, "question": "My group of friends managed to get lots of invites thanks to some connections. Everyone got really excited for a few days but no one ever bothered switching. That's what I think the problem is, getting people to put in the effort to switch. I think it takes a generational leap in quality to get a large user base to switch, and I don't think Plus provided that. Was it better than Facebook? Probably. Was it \"better enough\" to get people to overcome laziness? I don't think so.\n\nOf course I'm speaking about how I see things via my own perception. I hardly ever switch anything. I don't upgrade the OS on my computers or phones. I rarely upgrade devices, and I definitely won't switch from one service to a competitor if I'm already \"comfortable\". It's laziness, and I think that laziness is hard to overcome, even if the new alternative is better. If you want me to switch or upgrade, you have to offer something that completely changes how I use the product.\n\n/random thoughts", "aSentId": 14191, "answer": "I like plus. Its not the eternal September of Facebook.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14170, "question": "IIRC Plus first hit right when Facebook did a big update, people were really wanting a Facebook replacement and \"Circles\" were easier to use than the somewhat hidden (at the time) lists feature of Facebook. I remember pretty much everyone I know wanting to try Plus but there not being enough invites, even non-tech people.", "aSentId": 14193, "answer": "The problem always was that even if two thirds of your friends made the move to g+ there would always be that other third, so everyone kept their facebook account and continued to check it. With no-one actually leaving, the remaining third decided not to bother, and with the remaining third not bothering, the movers gave up on migration and just stuck with fb.\n\nThere was nothing about the technical capabilities of either platform. G+ was probably better, but I can't even be bothered to do an analysis because it's a waste of time.\n\nReplacing FB with anything right now is a monumental task that could  only possibly happen if FB fucked up on a massive scale, and  I can't even imagine what they'd need to do to piss people off enough that everyone would just move, especially when many people have additional anchors in FB like their photo collections.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14194, "question": "The problem always was that even if two thirds of your friends made the move to g+ there would always be that other third, so everyone kept their facebook account and continued to check it. With no-one actually leaving, the remaining third decided not to bother, and with the remaining third not bothering, the movers gave up on migration and just stuck with fb.\n\nThere was nothing about the technical capabilities of either platform. G+ was probably better, but I can't even be bothered to do an analysis because it's a waste of time.\n\nReplacing FB with anything right now is a monumental task that could  only possibly happen if FB fucked up on a massive scale, and  I can't even imagine what they'd need to do to piss people off enough that everyone would just move, especially when many people have additional anchors in FB like their photo collections.", "aSentId": 14195, "answer": "&gt; especially when many people have additional anchors in FB like their photo collections\n\nFacebook shits all over my photos by scaling them to 1/5 the resolution with heavy jpeg compression. It has taught me to only upload highlights to facebook, while I let g+ and apple simply slurp in every photo i take.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14168, "question": "I hear this a lot, about Plus failing due to keeping the gates closed too long. I honestly don't believe that caused it's downfall. It probably reduced to total number of users, but I think it was always destined to be what it is today.", "aSentId": 14197, "answer": "I'd reckon Google gave Facebook too much time to catch up by keeping their gates closed for so long. Google Plus initially looked like it was basically a \"better Facebook\" but by the time they finally opened up to the public Facebook had already caught up on most of the improvements and people just figured \"Eh, why switch now\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14168, "question": "I hear this a lot, about Plus failing due to keeping the gates closed too long. I honestly don't believe that caused it's downfall. It probably reduced to total number of users, but I think it was always destined to be what it is today.", "aSentId": 14199, "answer": "It's not that they held out too long, it's that they didn't let everyone in at once. It's a *social networking site*. You need *people* to socialize with. All at once. There's no half-assing it. No one is going to join a site to talk with themself.\n\nThat... and I don't think you can PM people. Or if you can, I don't know how.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14200, "question": "It's not that they held out too long, it's that they didn't let everyone in at once. It's a *social networking site*. You need *people* to socialize with. All at once. There's no half-assing it. No one is going to join a site to talk with themself.\n\nThat... and I don't think you can PM people. Or if you can, I don't know how.", "aSentId": 14201, "answer": "Hover over their icon and you can open a gchat window with anyone in your circles. Gchat also has the advantage over FBM that chat logs are indexed in your gmail, so you can actually search through your chat logs for previous messages. Of course, gchat is way more convenient to use through gmail, and having the chatbar on the side is just way more convenient than what g+ has going on.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14202, "question": "Hover over their icon and you can open a gchat window with anyone in your circles. Gchat also has the advantage over FBM that chat logs are indexed in your gmail, so you can actually search through your chat logs for previous messages. Of course, gchat is way more convenient to use through gmail, and having the chatbar on the side is just way more convenient than what g+ has going on.", "aSentId": 14203, "answer": "You can search your chat log with Facebook as well.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14200, "question": "It's not that they held out too long, it's that they didn't let everyone in at once. It's a *social networking site*. You need *people* to socialize with. All at once. There's no half-assing it. No one is going to join a site to talk with themself.\n\nThat... and I don't think you can PM people. Or if you can, I don't know how.", "aSentId": 14205, "answer": "&gt;It's not that they held out too long, it's that they didn't let everyone in at once. It's a social networking site. You need people to socialize with. All at once.\n\nIt's sort of ironic that Facebook started as a service exclusively for college students, and you needed a *.edu* e-mail address to register with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14206, "question": "&gt;It's not that they held out too long, it's that they didn't let everyone in at once. It's a social networking site. You need people to socialize with. All at once.\n\nIt's sort of ironic that Facebook started as a service exclusively for college students, and you needed a *.edu* e-mail address to register with.", "aSentId": 14207, "answer": "Sure, but by the time they went wide, they were already a lot better than the competition.\n\nAlso, Facebook's exclusivity *included* the entire social groups of many users (college students).\n\nGoogle's was more or less arbitrary.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14200, "question": "It's not that they held out too long, it's that they didn't let everyone in at once. It's a *social networking site*. You need *people* to socialize with. All at once. There's no half-assing it. No one is going to join a site to talk with themself.\n\nThat... and I don't think you can PM people. Or if you can, I don't know how.", "aSentId": 14209, "answer": "Yes, the invite model worked so well for gmail because gmail doesn't depend on others being on there. But doing the same thing for a closed \"social network\" was just stupid. I got an invite shortly after G+ was launched and it was a desert. I added the two people I knew, played around with it, and then didn't really look at it since then except for adding the occasional person that did made it on there. Google invites always spread along technical people. Which of course can be awesome. But sucks for a social networking site.\n\nAlso Google created all the hype around G+ and sure, being invite-only initially helped with the hype. But the hype quickly faded away and was completely gone before they opened it.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14158, "question": "They got _really_ close with Plus. They pulled a Cartman though and held the gates closed _wayyyyy_ too long. People initially really wanted to try it, begged for invites, but Google kept it closed. Then people just stopped caring, and Google still kept it closed. Then people were just confused, and Google forced it on them.", "aSentId": 14214, "answer": "Google+ today serves a very different purpose from Facebook.  Where, aside from some groups, Facebook is filled with absolute crap (people seeking validation, stupid reshared images and videos, etc.), G+ is used by some people as a blogging platform.  Also, due to Facebook's friend system, it is really hard for a user to filter the content on their feed.  Aside from unsubscribing from every annoying friend you have, there's no effective filtering tools.  G+'s follow system solves this problem solely by its design.  Simply don't add annoying people to your circles, even if they add you.\n\nAs far as communicating with your friends, I'd say they're about equal.  Everyone of my friends who has an Android phone uses Google hangouts, which I believe is a superior messaging system to Facebook messenger.  The only people I use messenger for are people with iPhones.\n\nI agree with /u/freefoodisgood in that G+ as it is today is likely how it would have ended up even without an invite system, perhaps with more users.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14216, "question": "This is the main issue.  Unlike gmail where it's just access to standard email, + is a private community.  So by holding back invites so long, the people that did get invites weren't using the service cause none of their friends were there yet.\n\nOnce I got on + there was a couple of posts like \"is anyone here?\" then you'd see they were back on facebook to talk to their friends.\n\nSomeone in marketing clearly though \"the invite thing worked so well with gmail, lets do it again with +\" but they didn't understand the nature of the technology and the difference this meant.  A social platform with no people is not a social platform.. it's just a platform.", "aSentId": 14217, "answer": "&gt; Someone in marketing clearly though \"the invite thing worked so well with gmail, lets do it again with +\" but they didn't understand the nature of the technology and the difference this meant.\n\nYou'd have thought they would have learnt from Wave's similar failure.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14156, "question": "Which basically means that, once again, google failed at the social thing. They are unable to take the lead in any social networking mechanism. When they did, briefly, with orkut, they were invaded by brazilians.\n", "aSentId": 14221, "answer": "It's not that they failed. Google Code was successful for a long time--But now Github does everything they do, but better. So why pay to have an inferior product on the market?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14222, "question": "It's not that they failed. Google Code was successful for a long time--But now Github does everything they do, but better. So why pay to have an inferior product on the market?", "aSentId": 14223, "answer": "i am way more interested in how sourceforge managed to become a wasteland, to be honest...\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14224, "question": "i am way more interested in how sourceforge managed to become a wasteland, to be honest...\n", "aSentId": 14225, "answer": "And yet still some projects cling onto it, like some kind of suicide pact. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14156, "question": "Which basically means that, once again, google failed at the social thing. They are unable to take the lead in any social networking mechanism. When they did, briefly, with orkut, they were invaded by brazilians.\n", "aSentId": 14227, "answer": "I think hangouts is pretty good.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14228, "question": "I think hangouts is pretty good.", "aSentId": 14229, "answer": "yes, if they made a standalone client, I might even consider it as a replacement for skype (because honestly, skype is so bad it makes kittens cry)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14230, "question": "yes, if they made a standalone client, I might even consider it as a replacement for skype (because honestly, skype is so bad it makes kittens cry)", "aSentId": 14231, "answer": "Have you given firefox hello a shot? It works pretty well - the best part is people can join a chat from any browser - can send a link only from firefox though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14232, "question": "Have you given firefox hello a shot? It works pretty well - the best part is people can join a chat from any browser - can send a link only from firefox though.", "aSentId": 14233, "answer": "Firefox Hello is great. I've even had luck using it with people running Chrome since it just requires WebRTC support and a Hello client on one side. The one thing that's missing is group chat, which they intend to add eventually.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14234, "question": "Firefox Hello is great. I've even had luck using it with people running Chrome since it just requires WebRTC support and a Hello client on one side. The one thing that's missing is group chat, which they intend to add eventually.", "aSentId": 14235, "answer": "A distant second missing feature is text chat. Surprisingly useful when trying to figure out why you can't hear the other person.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14230, "question": "yes, if they made a standalone client, I might even consider it as a replacement for skype (because honestly, skype is so bad it makes kittens cry)", "aSentId": 14237, "answer": "AIM 4 lyfe", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14230, "question": "yes, if they made a standalone client, I might even consider it as a replacement for skype (because honestly, skype is so bad it makes kittens cry)", "aSentId": 14239, "answer": "The Chrome extension minimizes to tray and can be used if no Chrome browser windows are open, if you care about standalone from a UI standpoint. If it's about not running Chrome in the background, though, you're SOL.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14240, "question": "The Chrome extension minimizes to tray and can be used if no Chrome browser windows are open, if you care about standalone from a UI standpoint. If it's about not running Chrome in the background, though, you're SOL.", "aSentId": 14241, "answer": "Yeah... and Chrome still seems to have some memory issues. I often have to close the whole damn thing, including the little tray thing to refresh it.\n\nThey shouldn't bundle things like that. It makes the whole system worse.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14242, "question": "Yeah... and Chrome still seems to have some memory issues. I often have to close the whole damn thing, including the little tray thing to refresh it.\n\nThey shouldn't bundle things like that. It makes the whole system worse.", "aSentId": 14243, "answer": "Yep. I'm using the hangout client in Gmail as most of my friends have switched, and that's far from ideal. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14242, "question": "Yeah... and Chrome still seems to have some memory issues. I often have to close the whole damn thing, including the little tray thing to refresh it.\n\nThey shouldn't bundle things like that. It makes the whole system worse.", "aSentId": 14245, "answer": "Isn't Chrome's memory issue related to pre-fetching or something? /randomthingsIhear", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14240, "question": "The Chrome extension minimizes to tray and can be used if no Chrome browser windows are open, if you care about standalone from a UI standpoint. If it's about not running Chrome in the background, though, you're SOL.", "aSentId": 14247, "answer": "the hangouts plugin in os x is absolutely horrible, to the point of unusability", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14248, "question": "the hangouts plugin in os x is absolutely horrible, to the point of unusability", "aSentId": 14249, "answer": "Which one are you using the one with the chat-bubble-heads or the old one? I'm using the old one on Yosemite and it works fine. The only issue I have is that it doesn't have a white-icon in dark mode.. but except for that it's fine. So what kind of issues do you have?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14250, "question": "Which one are you using the one with the chat-bubble-heads or the old one? I'm using the old one on Yosemite and it works fine. The only issue I have is that it doesn't have a white-icon in dark mode.. but except for that it's fine. So what kind of issues do you have?", "aSentId": 14251, "answer": "I am using the ones with the chat-bubble-heads, is there still a way to access the old one?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14253, "question": "Tox, decentralized Skype replacement ", "aSentId": 14254, "answer": "No alternative is a real alternative. It's not about software features, it's about the size of the network. Everyone is on skype. Nobody is on tox.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14253, "question": "Tox, decentralized Skype replacement ", "aSentId": 14256, "answer": "You can only talk with other Tox users though, right? It uses its own communication protocol?\n\nThat, unfortunately is a killer. Even if I download it, I have to convince my friends install it too for it to be of any use.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14257, "question": "You can only talk with other Tox users though, right? It uses its own communication protocol?\n\nThat, unfortunately is a killer. Even if I download it, I have to convince my friends install it too for it to be of any use.", "aSentId": 14258, "answer": "&gt;I have to convince my friends install it too for it to be of any use.\n\nyuppp. skype is like facebook. useful because everyone i need to skype with has skype and i have their username.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14257, "question": "You can only talk with other Tox users though, right? It uses its own communication protocol?\n\nThat, unfortunately is a killer. Even if I download it, I have to convince my friends install it too for it to be of any use.", "aSentId": 14260, "answer": "Indeed. Exactly like Hangouts and Skype.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14261, "question": "Indeed. Exactly like Hangouts and Skype.", "aSentId": 14262, "answer": "Yesss....but people actually use those.\n\nAnd...you can actually hangout just by sending someone a link. They don't need to DL and install an app.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14228, "question": "I think hangouts is pretty good.", "aSentId": 14266, "answer": "The thing they scrapped jabber for? Not installing that one, nope. At least with jabber you can move to another server and keep the contacts, this thing one day they shutdown and you're fucked.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14267, "question": "The thing they scrapped jabber for? Not installing that one, nope. At least with jabber you can move to another server and keep the contacts, this thing one day they shutdown and you're fucked.", "aSentId": 14268, "answer": "We had our Jabber and interservice messages for five minutes, and now we're back to proprietary networks for our IM needs. Get with the program. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14267, "question": "The thing they scrapped jabber for? Not installing that one, nope. At least with jabber you can move to another server and keep the contacts, this thing one day they shutdown and you're fucked.", "aSentId": 14270, "answer": "I just have one link to the hangout and all my clients and I just go there at a scheduled time. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14273, "question": "&gt; wheb they did, they were invaded by brazilians\n\nAnd... What is the problem with that? It worked anyway.", "aSentId": 14274, "answer": "It was a self-fulfilling community. Only brazilians went in, which brought more brazilians. Non-brazilians didn't find many reasons to go to what seemed like a more and more portuguese based community, so they didn't join or left.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14275, "question": "It was a self-fulfilling community. Only brazilians went in, which brought more brazilians. Non-brazilians didn't find many reasons to go to what seemed like a more and more portuguese based community, so they didn't join or left.\n", "aSentId": 14276, "answer": "But they left because as you said it lacked english content, but also they left because they didn't have the will force to create content for others to stay. But Orkut sure as hell wasn't a failed experiment.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14279, "question": "Salute.\n\nThe only bad thing and maybe they will do this.  There are still popular projects on the site.  I wish they did a thing of just keep it read only forever.  People still have scripts and whatever pulling subversion code from google code.  All that goes away.", "aSentId": 14280, "answer": "GitHub should perhaps take it upon themselves to copy over all those projects. Maybe. Not entirely sure if this is a good idea or not.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14282, "question": "&gt; If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this \u2014 killing products takes guts.\n\nI'm not sure whether it takes guts or simply financial aspect is more important than respect for the client. With each another project I got the sense that Google spawn a lot of projects they don't really dedicate into, make all potential customers feel ambiguous not knowing whether or not Google treat this particular project seriously or will they take them down just when they'll finally get convinced to use it.\n\nAt this point I'm using only search engine, Chrome and GMail. I made the decision to not use any more product because I feel that they are some brilliant but spoiled ADHD children who design their toys for fun and throw them to the trash can once got bored with them. Recently I stared considering abandoning Chrome and GMail as well - just to cut the ties with their ecosystem. I don't know whether they won't make another attempt to shove some project down my throat just to cancel it few months later.\n\nIt's not about quality. It's just that I don't trust them as a reliable service provider anymore.", "aSentId": 14283, "answer": "&gt; I'm not sure whether it takes guts or simply financial aspect is more important than respect for the client.\n\nI'd say a year of heads up before shutting down is pretty respectful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14282, "question": "&gt; If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this \u2014 killing products takes guts.\n\nI'm not sure whether it takes guts or simply financial aspect is more important than respect for the client. With each another project I got the sense that Google spawn a lot of projects they don't really dedicate into, make all potential customers feel ambiguous not knowing whether or not Google treat this particular project seriously or will they take them down just when they'll finally get convinced to use it.\n\nAt this point I'm using only search engine, Chrome and GMail. I made the decision to not use any more product because I feel that they are some brilliant but spoiled ADHD children who design their toys for fun and throw them to the trash can once got bored with them. Recently I stared considering abandoning Chrome and GMail as well - just to cut the ties with their ecosystem. I don't know whether they won't make another attempt to shove some project down my throat just to cancel it few months later.\n\nIt's not about quality. It's just that I don't trust them as a reliable service provider anymore.", "aSentId": 14285, "answer": "I don't think \"Is there a chance this will be shut down?\" is a reasonable way to evaluate these things. Anything could shut down, whether it's Google or a small company.\n\nA better question is \"How painful will it be for me if this shuts down?\" So if it's something where it's going to be extremely difficult to migrate off of it, then I think being wary of that situation is pretty reasonable. However in this case, there's a better alternative and Google has made it pretty easy to migrate there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14286, "question": "I don't think \"Is there a chance this will be shut down?\" is a reasonable way to evaluate these things. Anything could shut down, whether it's Google or a small company.\n\nA better question is \"How painful will it be for me if this shuts down?\" So if it's something where it's going to be extremely difficult to migrate off of it, then I think being wary of that situation is pretty reasonable. However in this case, there's a better alternative and Google has made it pretty easy to migrate there.", "aSentId": 14287, "answer": "&gt; I don't think \"Is there a chance this will be shut down?\" is a reasonable way to evaluate these things.\n\nBut \"How big is the chance that it will get shut down?\" is a very reasonable concern.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14288, "question": "&gt; I don't think \"Is there a chance this will be shut down?\" is a reasonable way to evaluate these things.\n\nBut \"How big is the chance that it will get shut down?\" is a very reasonable concern.", "aSentId": 14289, "answer": "I think it's still more useful to look at it as \"How long do I expect until this shuts down?\" Because eventually everything shuts down, and what you really want to know is \"How much value can I get from this while it is available?\" and weigh that against the expected setup and migration costs as well as the cost and value propositions of other alternatives.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14288, "question": "&gt; I don't think \"Is there a chance this will be shut down?\" is a reasonable way to evaluate these things.\n\nBut \"How big is the chance that it will get shut down?\" is a very reasonable concern.", "aSentId": 14291, "answer": "Yep, that's why I still use AOL as my internet service provider!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14282, "question": "&gt; If there's anything we\u2019ve learned from Google over the years is that they\u2019re not afraid of shutting down projects that don\u2019t work out. By the way, I really respect Google for this \u2014 killing products takes guts.\n\nI'm not sure whether it takes guts or simply financial aspect is more important than respect for the client. With each another project I got the sense that Google spawn a lot of projects they don't really dedicate into, make all potential customers feel ambiguous not knowing whether or not Google treat this particular project seriously or will they take them down just when they'll finally get convinced to use it.\n\nAt this point I'm using only search engine, Chrome and GMail. I made the decision to not use any more product because I feel that they are some brilliant but spoiled ADHD children who design their toys for fun and throw them to the trash can once got bored with them. Recently I stared considering abandoning Chrome and GMail as well - just to cut the ties with their ecosystem. I don't know whether they won't make another attempt to shove some project down my throat just to cancel it few months later.\n\nIt's not about quality. It's just that I don't trust them as a reliable service provider anymore.", "aSentId": 14293, "answer": "Name one company that promises to keep or support a product forever.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14294, "question": "Name one company that promises to keep or support a product forever.", "aSentId": 14295, "answer": "I think there was a company that promised to store your data forever.  And then a year later they were bought out and shut down.  Oops.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14294, "question": "Name one company that promises to keep or support a product forever.", "aSentId": 14297, "answer": "posthaven!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14300, "question": "It might be a long shot idea, but what do you think the odds are that Google comes out in the next two years with a move to acquire GitHub? \n\nSeems to me that it's reasonable to believe that Google still wants a code hosting solution. And many of the tech giants like scooping up other companies into their portfolios to augment their offerings rather than fight for market share of their own.", "aSentId": 14301, "answer": "Low. Google Code was a project built driven by Google engineers because they were dissatisfied with the alternatives. It never really fit into Google's strategy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14303, "question": "I think there's a bit of revisionism at play here.\n\nGithub became popular because git already had a huge momentum behind it, not the other way around. Github certainly added even more energy to that momentum but the git/mercurial battle was decided years before github became a thing. github just solidified the landscape.\n", "aSentId": 14304, "answer": "&gt; Github became popular because git already had a huge momentum behind it\n\nYes. Github became popular because they had the (non)sense to put 'G', 'I' and 'T' into their name. Most people think 'git' and 'github' is the same thing even today.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14303, "question": "I think there's a bit of revisionism at play here.\n\nGithub became popular because git already had a huge momentum behind it, not the other way around. Github certainly added even more energy to that momentum but the git/mercurial battle was decided years before github became a thing. github just solidified the landscape.\n", "aSentId": 14306, "answer": "Which is unfortunate, because Git is crap and Mercurial is not.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14307, "question": "Which is unfortunate, because Git is crap and Mercurial is not.", "aSentId": 14308, "answer": "Mercurial's branching model is bad. Its policy on historical revisionism is bad. Its interface is much more *different* than git's than better; they shuffled the pain points, but there's still pieces of it that are idiotic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14309, "question": "Mercurial's branching model is bad. Its policy on historical revisionism is bad. Its interface is much more *different* than git's than better; they shuffled the pain points, but there's still pieces of it that are idiotic.", "aSentId": 14310, "answer": "Wow, your information is like half a decade out-of-date. Allow me to educate you.\n\n&gt;Mercurial's branching model is bad.\n\nMercurial has several branching models: permanent named branches, bookmarks, and anonymous heads.\n\nA permanent named branch is a label that is attached to a commit when it is created, and does not normally change. This isn't very suitable for highly decentralized development, but it can help track development progress on more tightly-knit teams.\n\nA bookmark is equivalent to a Git branch. Does the same shit. 'Nuff said.\n\nAn anonymous head is like an anonymous branch in Git: a commit that exists, but has no branch (resp. bookmark) pointing to it.\n\n&gt;Its policy on historical revisionism is bad.\n\nIts policy on historical revision doesn't exist. Mercurial allows history editing, same as Git. It even has a feature for tracking which commits have already been pushed out, so you don't accidentally edit something someone else already has.\n\n&gt;Its interface is much more different than git's than better; they shuffled the pain points, but there's still pieces of it that are idiotic.\n\nSuch as?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14311, "question": "Wow, your information is like half a decade out-of-date. Allow me to educate you.\n\n&gt;Mercurial's branching model is bad.\n\nMercurial has several branching models: permanent named branches, bookmarks, and anonymous heads.\n\nA permanent named branch is a label that is attached to a commit when it is created, and does not normally change. This isn't very suitable for highly decentralized development, but it can help track development progress on more tightly-knit teams.\n\nA bookmark is equivalent to a Git branch. Does the same shit. 'Nuff said.\n\nAn anonymous head is like an anonymous branch in Git: a commit that exists, but has no branch (resp. bookmark) pointing to it.\n\n&gt;Its policy on historical revisionism is bad.\n\nIts policy on historical revision doesn't exist. Mercurial allows history editing, same as Git. It even has a feature for tracking which commits have already been pushed out, so you don't accidentally edit something someone else already has.\n\n&gt;Its interface is much more different than git's than better; they shuffled the pain points, but there's still pieces of it that are idiotic.\n\nSuch as?", "aSentId": 14312, "answer": "most arguments i see against mercurial are like this, where they're essentially talking about mercurial 1.x\n\nthe worst part is that i always see that branching thing come up, but no one ever likes to mention unreachable git commits and garbage collection in that context ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14313, "question": "most arguments i see against mercurial are like this, where they're essentially talking about mercurial 1.x\n\nthe worst part is that i always see that branching thing come up, but no one ever likes to mention unreachable git commits and garbage collection in that context ", "aSentId": 14314, "answer": "Not even just 1.x. The late 1.x versions had most of the modern stuff. More like everyone thinks Mercurial is still at 1.0.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14316, "question": "&gt; Go started migration too\u200a\u2014\u200athis is no casual move because it affects the import paths used in a vast amount of user created Go code which will build breakages.\n\nWait, what? You can write Go code which imports modules from the web at run time?", "aSentId": 14317, "answer": "AFAIK, the go compiler will import modules from the web.  The compiled binary won't.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14316, "question": "&gt; Go started migration too\u200a\u2014\u200athis is no casual move because it affects the import paths used in a vast amount of user created Go code which will build breakages.\n\nWait, what? You can write Go code which imports modules from the web at run time?", "aSentId": 14319, "answer": "No.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14321, "question": "I hate to disagree with you but I think it *is* about mercurial [and every other source code control system, free or not] versus git. Regardless of Sourceforge or Google Code or GitHub, git won because it is the best command-line tool for source code control.\n\nMy employer, for example, switched to git from CVS and we haven't looked back since, or even considered another system. It doesn't matter how much harder git is to use. It's so much better than the competition that nobody minds the learning curve.\n\nWe're UNIX developers. We use the command line to develop software. We eventually arrive at the best command-line tools. Sometimes it takes decades. Will a better tool than git for source code control be written? I guess that's possible but it would be a waste of time. Spend your time improving another system.\n\nIf you're not a UNIX developer then git might indeed be a hindrance, so I'll restrict my point to UNIX and Linux specifically with the understanding that this is the programming subreddit and not the linux subreddit.", "aSentId": 14322, "answer": "&gt; It's so much better than the competition that nobody minds the learning curve.\n\nmercurial and git are functionally equivalent, with different interfaces to pretty much the same underlying model. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14323, "question": "&gt; It's so much better than the competition that nobody minds the learning curve.\n\nmercurial and git are functionally equivalent, with different interfaces to pretty much the same underlying model. \n", "aSentId": 14324, "answer": "That's true of every piece of software that performs same functions. Video players, word processors, etc. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14325, "question": "That's true of every piece of software that performs same functions. Video players, word processors, etc. ", "aSentId": 14326, "answer": "Mercurial is so functionally equivalent to git that there's a transparent bidirectional hg-git plugin. I've been using Mercurial as my sole way of interacting with git for like 4-5 years now without a hitch.\n\nThe only real differences, afaik are: 1) Mercurial can't do octopus-merges (i.e. merge can only have two parents) and 2) Git doesn't store file moves (it *infers* them, by checking whether the diffs for an added and removed file are the same, but this means it can't track \"move + edit\" changes)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14321, "question": "I hate to disagree with you but I think it *is* about mercurial [and every other source code control system, free or not] versus git. Regardless of Sourceforge or Google Code or GitHub, git won because it is the best command-line tool for source code control.\n\nMy employer, for example, switched to git from CVS and we haven't looked back since, or even considered another system. It doesn't matter how much harder git is to use. It's so much better than the competition that nobody minds the learning curve.\n\nWe're UNIX developers. We use the command line to develop software. We eventually arrive at the best command-line tools. Sometimes it takes decades. Will a better tool than git for source code control be written? I guess that's possible but it would be a waste of time. Spend your time improving another system.\n\nIf you're not a UNIX developer then git might indeed be a hindrance, so I'll restrict my point to UNIX and Linux specifically with the understanding that this is the programming subreddit and not the linux subreddit.", "aSentId": 14328, "answer": "&gt; If you're not a UNIX developer then git might indeed be a hindrance\n\nYet it doesn't seem to be. One big non-UNIX dev community is Microsoft/Visual Studio. The advantages of git over Microsoft's own TFVC (Team Foundation Version Control) for most projects are unavoidable. At one point last year MS focused so heavily on bringing git up to parity with TFVC that people leapt to the conclusion that they were getting reading to abandon TFVC altogether.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14321, "question": "I hate to disagree with you but I think it *is* about mercurial [and every other source code control system, free or not] versus git. Regardless of Sourceforge or Google Code or GitHub, git won because it is the best command-line tool for source code control.\n\nMy employer, for example, switched to git from CVS and we haven't looked back since, or even considered another system. It doesn't matter how much harder git is to use. It's so much better than the competition that nobody minds the learning curve.\n\nWe're UNIX developers. We use the command line to develop software. We eventually arrive at the best command-line tools. Sometimes it takes decades. Will a better tool than git for source code control be written? I guess that's possible but it would be a waste of time. Spend your time improving another system.\n\nIf you're not a UNIX developer then git might indeed be a hindrance, so I'll restrict my point to UNIX and Linux specifically with the understanding that this is the programming subreddit and not the linux subreddit.", "aSentId": 14330, "answer": "&gt; git won because it is the best command-line tool for source code control.\n\nIn what way is Mercurial an inferior command line tool? Genuinely interested (as someone who prefers Mercurial, but also prefers to use a GUI.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14334, "question": "&gt; preferred Mercurial and honestly I thought it was going to be the winner\n\nIt still is the winner.\n\n&gt; Then GitHub happened\n\nGithub is a cesspool.", "aSentId": 14335, "answer": "Winner by which definition?\n\nUsability? Sanity? Yeah, Mercurial wins hands-down.\n\nPopularity? Hell no. Git is, paradoxically, ridiculously popular.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14336, "question": "Winner by which definition?\n\nUsability? Sanity? Yeah, Mercurial wins hands-down.\n\nPopularity? Hell no. Git is, paradoxically, ridiculously popular.", "aSentId": 14337, "answer": "&gt; Usability? Sanity? Yeah, Mercurial wins hands-down.\n\nThat's the only definition that matters. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14338, "question": "&gt; Usability? Sanity? Yeah, Mercurial wins hands-down.\n\nThat's the only definition that matters. ", "aSentId": 14339, "answer": "Instant win: the runner-up defines itself to be the actual winner.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14146, "question": "Google to close Google Code open source project hosting", "aSentId": 14341, "answer": "I bet there's some project that finally migrated from CVS to Google Code last week that's super pissed.  ;-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14342, "question": "I bet there's some project that finally migrated from CVS to Google Code last week that's super pissed.  ;-)", "aSentId": 14343, "answer": "Maybe PostNuke?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14146, "question": "Google to close Google Code open source project hosting", "aSentId": 14345, "answer": "As someone who used google code for a few years before finally switching to GitHub, I'm absolutely not surprised at all.\n\nI started using Google Code because I was really, really tired of Sourceforge completely redoing their start page every few months. This was way, way back when. Also, I dislike that sourceforge's page for a project started off with a description and you had to click a few things to finally browse the code.\n\nAt first, Google Code only supported svn. I don't really care for svn. I remember distinctly that they planned git support in the future but 'git is hard to work with the wiki/somethingsomething' so it took a long, long time to finally get git to work.\n\nI've never liked Google Code's interface. Someone comes to look at my project and the first thing they see is the intro page about what the thing does. Okay, fair enough. But to get to the code I again have to go through some clicking.\n\nWhat drove me to GitHub is that:\n\n* Everyone seemed to be jumping to it (I at least wanted to give it a fair shake).\n\n* Code metrics. It's awesome having a profile page where I can actually see what I'm doing, and how much I'm doing it. Google code, to the best of my memory, offered no such thing.\n\n* Really useful integration with issues and auto-issue closing. I don't usually close my issues manually. GitHub will close it for me if I write 'fixes #nnn'. I can't remember ever getting that to work at Google Code, if it was ever supposed to.\n\n* GitHub tells me how many visitors I'm getting, where they're coming from, uniques, non-uniques, and more. Google Code has, umm...Probably none of that.\n\n* GitHub's front page is the toplevel source code view, with the README.md at the bottom. I wanna look at code first, then the description later.\n\n* GitHub has page for me to put a picture and a nice colorful thing to show my commit history. This is a great place to link to in order to show what I've done.\n\nI respect Google Code for being far better than Sourceforge was at the time. But GitHub did the social thing better, and I think that's really why GitHub became popular. Google Code could have been better. However, I don't feel as if there was any real effort behind making Google Code awesome. I never heard much about new features being released during the entire time I was there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14346, "question": "As someone who used google code for a few years before finally switching to GitHub, I'm absolutely not surprised at all.\n\nI started using Google Code because I was really, really tired of Sourceforge completely redoing their start page every few months. This was way, way back when. Also, I dislike that sourceforge's page for a project started off with a description and you had to click a few things to finally browse the code.\n\nAt first, Google Code only supported svn. I don't really care for svn. I remember distinctly that they planned git support in the future but 'git is hard to work with the wiki/somethingsomething' so it took a long, long time to finally get git to work.\n\nI've never liked Google Code's interface. Someone comes to look at my project and the first thing they see is the intro page about what the thing does. Okay, fair enough. But to get to the code I again have to go through some clicking.\n\nWhat drove me to GitHub is that:\n\n* Everyone seemed to be jumping to it (I at least wanted to give it a fair shake).\n\n* Code metrics. It's awesome having a profile page where I can actually see what I'm doing, and how much I'm doing it. Google code, to the best of my memory, offered no such thing.\n\n* Really useful integration with issues and auto-issue closing. I don't usually close my issues manually. GitHub will close it for me if I write 'fixes #nnn'. I can't remember ever getting that to work at Google Code, if it was ever supposed to.\n\n* GitHub tells me how many visitors I'm getting, where they're coming from, uniques, non-uniques, and more. Google Code has, umm...Probably none of that.\n\n* GitHub's front page is the toplevel source code view, with the README.md at the bottom. I wanna look at code first, then the description later.\n\n* GitHub has page for me to put a picture and a nice colorful thing to show my commit history. This is a great place to link to in order to show what I've done.\n\nI respect Google Code for being far better than Sourceforge was at the time. But GitHub did the social thing better, and I think that's really why GitHub became popular. Google Code could have been better. However, I don't feel as if there was any real effort behind making Google Code awesome. I never heard much about new features being released during the entire time I was there.", "aSentId": 14347, "answer": "&gt; GitHub's front page is the toplevel source code view, with the README.md at the bottom. I wanna look at code first, then the description later.\n\nOddly enough, this is what drives me nuts about Github.  It's annoying to go to a page and not see any hint as to what I'm looking at without scrolling.\n\nI'd love to see a blurb that goes at the top of the page, then the directory listing, then README.md.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14348, "question": "&gt; GitHub's front page is the toplevel source code view, with the README.md at the bottom. I wanna look at code first, then the description later.\n\nOddly enough, this is what drives me nuts about Github.  It's annoying to go to a page and not see any hint as to what I'm looking at without scrolling.\n\nI'd love to see a blurb that goes at the top of the page, then the directory listing, then README.md.", "aSentId": 14349, "answer": "BitBucket does this. I think they even let you customize which page to go to first.\n\nTheir UI needs some fine-tuning, but it's not terrible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14348, "question": "&gt; GitHub's front page is the toplevel source code view, with the README.md at the bottom. I wanna look at code first, then the description later.\n\nOddly enough, this is what drives me nuts about Github.  It's annoying to go to a page and not see any hint as to what I'm looking at without scrolling.\n\nI'd love to see a blurb that goes at the top of the page, then the directory listing, then README.md.", "aSentId": 14351, "answer": "There is a blurb at the top of the page, so long as the GitHub repo owner writes one.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14346, "question": "As someone who used google code for a few years before finally switching to GitHub, I'm absolutely not surprised at all.\n\nI started using Google Code because I was really, really tired of Sourceforge completely redoing their start page every few months. This was way, way back when. Also, I dislike that sourceforge's page for a project started off with a description and you had to click a few things to finally browse the code.\n\nAt first, Google Code only supported svn. I don't really care for svn. I remember distinctly that they planned git support in the future but 'git is hard to work with the wiki/somethingsomething' so it took a long, long time to finally get git to work.\n\nI've never liked Google Code's interface. Someone comes to look at my project and the first thing they see is the intro page about what the thing does. Okay, fair enough. But to get to the code I again have to go through some clicking.\n\nWhat drove me to GitHub is that:\n\n* Everyone seemed to be jumping to it (I at least wanted to give it a fair shake).\n\n* Code metrics. It's awesome having a profile page where I can actually see what I'm doing, and how much I'm doing it. Google code, to the best of my memory, offered no such thing.\n\n* Really useful integration with issues and auto-issue closing. I don't usually close my issues manually. GitHub will close it for me if I write 'fixes #nnn'. I can't remember ever getting that to work at Google Code, if it was ever supposed to.\n\n* GitHub tells me how many visitors I'm getting, where they're coming from, uniques, non-uniques, and more. Google Code has, umm...Probably none of that.\n\n* GitHub's front page is the toplevel source code view, with the README.md at the bottom. I wanna look at code first, then the description later.\n\n* GitHub has page for me to put a picture and a nice colorful thing to show my commit history. This is a great place to link to in order to show what I've done.\n\nI respect Google Code for being far better than Sourceforge was at the time. But GitHub did the social thing better, and I think that's really why GitHub became popular. Google Code could have been better. However, I don't feel as if there was any real effort behind making Google Code awesome. I never heard much about new features being released during the entire time I was there.", "aSentId": 14353, "answer": "&gt; GitHub tells me how many visitors I'm getting, where they're coming from, uniques, non-uniques, and more. Google Code has, umm...Probably none of that.\n\nYou can easily track this with Google Analytics which is quite simple to do on Google Code. Considering Analytics is one of Google's core competencies it's odd you'd assume they don't have such an offer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14355, "question": "In case you didn't know, Bitbucket offers free private git repos.\n\nI never understood the \"social\" part of github (but then again I don't contribute much to FOSS projects). What drew me to github was simple:\n\n- Free git hosting\n- No bullshit. The project page is the code.\n\nBitbucket came late to the git game - they used to be mercurial only, which I didn't use/like. Once bitbucket came to the git scene with free private repos, I kinda switched to it.", "aSentId": 14356, "answer": "&gt;No bullshit. The project page is the code.\n\nSeriously. Sourceforge is terrible when it comes to this, and googlecode to a lesser extent as well.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14355, "question": "In case you didn't know, Bitbucket offers free private git repos.\n\nI never understood the \"social\" part of github (but then again I don't contribute much to FOSS projects). What drew me to github was simple:\n\n- Free git hosting\n- No bullshit. The project page is the code.\n\nBitbucket came late to the git game - they used to be mercurial only, which I didn't use/like. Once bitbucket came to the git scene with free private repos, I kinda switched to it.", "aSentId": 14358, "answer": "I use both. I use Github for public repos. It's a lot nicer, but I use Bitbucket for private repos.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14355, "question": "In case you didn't know, Bitbucket offers free private git repos.\n\nI never understood the \"social\" part of github (but then again I don't contribute much to FOSS projects). What drew me to github was simple:\n\n- Free git hosting\n- No bullshit. The project page is the code.\n\nBitbucket came late to the git game - they used to be mercurial only, which I didn't use/like. Once bitbucket came to the git scene with free private repos, I kinda switched to it.", "aSentId": 14360, "answer": "I love Bitbucket. Use it as a personal repo. There are some embarrassing codes that you just don't share with the world - or in my case, confidential code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14362, "question": "&gt; In case you didn't know, Bitbucket offers free private git repos.\n\nSo does gitlab.", "aSentId": 14363, "answer": "I hate gitlab for several reasons, mainly a long standing bug where new projects would get their .wiki repo created, but not the actual repo itself. This caused a lot of breakages.\n\nI switched to Gogs for self-hosting, and love it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14365, "question": "&gt; I never understood the \"social\" part of github \n\nI don't understand the \"social coding\" thing at all, maybe I'm using github wrong. Is there a hidden twitter-like section on the site? What makes github more social than say, bitbucket or gitlab?", "aSentId": 14366, "answer": "Most GitHub repos are public and not private, bitbucket doesn't even have a search feature. They're catering to different markets.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14367, "question": "Most GitHub repos are public and not private, bitbucket doesn't even have a search feature. They're catering to different markets.", "aSentId": 14368, "answer": "I don't think I've ever discovered worthwhile github repos via searching. It was always external links on sites like reddit, hacker news, etc.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14369, "question": "I don't think I've ever discovered worthwhile github repos via searching. It was always external links on sites like reddit, hacker news, etc.", "aSentId": 14370, "answer": "I regularly check out the \"trending\" repos page on github. You can filter by language and find projects that are currently popular. It's a great way to keep up with new things. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14369, "question": "I don't think I've ever discovered worthwhile github repos via searching. It was always external links on sites like reddit, hacker news, etc.", "aSentId": 14372, "answer": "Have you checked out Github's [Explore](https://github.com/explore) page? They have some pretty interesting stuff. And the trending at the bottom of that page is very interesting, too. For example, [here's a list of trending Scala repos for this month](https://github.com/trending?l=scala&amp;since=weekly).\n\nBut yeah, search is iffy. Main issue to me is that there's just too many low quality repos. I was going to try and find a nice specific use of the search feature by searching for something specific: \"simple c compiler\", but it failed. Many results weren't very simple at all and others were completely undocumented (the main reason I'd want to see a *simple* C compiler is for the learning experience, where documentation is a must). I then tried to search for \"final fantasy tactics\" to see what kinds of similar open-source games were made, but pretty much everything was low quality.\n\nPoor readmes, poor readmes everywhere.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14365, "question": "&gt; I never understood the \"social\" part of github \n\nI don't understand the \"social coding\" thing at all, maybe I'm using github wrong. Is there a hidden twitter-like section on the site? What makes github more social than say, bitbucket or gitlab?", "aSentId": 14374, "answer": "Github's UI makes it very easy to fork and contribute back to projects. I've casually submitted patches to projects in a matter of minutes. It's also very easy at a glance to see alls projects a user has contributed to. \n\nI've never used Gitlab, but Bitbucket has a similar feature set, however it's UI isn't as refined as Github though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14365, "question": "&gt; I never understood the \"social\" part of github \n\nI don't understand the \"social coding\" thing at all, maybe I'm using github wrong. Is there a hidden twitter-like section on the site? What makes github more social than say, bitbucket or gitlab?", "aSentId": 14376, "answer": "Bitbucket is also a social coding site. It and GitHub do approximately the same thing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14380, "question": "Hello, Google Code... there there, we've all been through this.\n\nTake a seat next to Google Wave over there.", "aSentId": 14381, "answer": "HAI, I'M GOOGLE READER\n\nYou go sit in your corner, with your bucket, Google Reader.\n\nOKAY ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14380, "question": "Hello, Google Code... there there, we've all been through this.\n\nTake a seat next to Google Wave over there.", "aSentId": 14383, "answer": "Doesn't Google Wave live on as Apache Wave though?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14384, "question": "Doesn't Google Wave live on as Apache Wave though?", "aSentId": 14385, "answer": "Yeah, but in the form of Google's \"here, take this, we don't want it anymore\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14380, "question": "Hello, Google Code... there there, we've all been through this.\n\nTake a seat next to Google Wave over there.", "aSentId": 14387, "answer": "I still don't know what Google Wave was supposed to be.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14388, "question": "I still don't know what Google Wave was supposed to be.", "aSentId": 14389, "answer": "Only the greatest collaboration tool ever invented.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14388, "question": "I still don't know what Google Wave was supposed to be.", "aSentId": 14391, "answer": "Greatest communication and colaboration tool EVER. I'm still sad about its dead :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14394, "question": "Didn't they announce they were phasing out google code a year or so ago? I remember many projects I was interested in migrated to github at that time because of that", "aSentId": 14395, "answer": "They did disable downloads a while ago. That along with the lack of any new features for years was a pretty good indicator that it would be shutting down in the near future, but I don't remember them actually announcing that before.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14397, "question": "Are there any alternatives to Google Code for svn hosting? I can find plenty of places that will let me use mercurial or git, but what about svn?", "aSentId": 14398, "answer": "GitHub's repo's can be used over the svn protocol", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14400, "question": "Is there a estimated lifespan of google products/projects around anywhere?\n\n", "aSentId": 14401, "answer": "Google code lasted 8 years, so ...\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14403, "question": "Good. Google Code sucked in the age of github and bitbucket, et al.", "aSentId": 14404, "answer": "Now if we can only get the stragglers off of Sourceforge...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14405, "question": "Now if we can only get the stragglers off of Sourceforge...", "aSentId": 14406, "answer": "Without competition github will stagnate and quickly turn into *old* sf.net or worse ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14407, "question": "Without competition github will stagnate and quickly turn into *old* sf.net or worse ;)", "aSentId": 14408, "answer": "You're 100% correct, but I wouldn't exactly call SF competition; it's like the MySpace of code sites.  Bitbucket is competition.\n\nThen there are things like GitLab, which let anyone create their own GitHub.  Would be interesting to see GitLab type sites springing up around individual communities, rather than \"one site to rule them all\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14410, "question": "I wonder how this will effect Project Zero. They rely on public/private issues for their auto-disclosure, and GitHub doesn't offer that type of flexibility.", "aSentId": 14411, "answer": "They can create a secondary private repository for the private issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14412, "question": "They can create a secondary private repository for the private issues.", "aSentId": 14413, "answer": "That's.... annoying, but a good suggestion. There are some issues I want to keep 'secret' from my clients because I don't want them bugging me about them until I'm ready to deal with them... but I still want to keep track of them. I might do this too. Thanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14414, "question": "That's.... annoying, but a good suggestion. There are some issues I want to keep 'secret' from my clients because I don't want them bugging me about them until I'm ready to deal with them... but I still want to keep track of them. I might do this too. Thanks.", "aSentId": 14415, "answer": "Best is then to run a separate issue tracker (all them features), most popular issues trackers have Git(Hub) integration.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14418, "question": "When is App Engine going to get the knife?", "aSentId": 14419, "answer": "Why are you expecting App Engine to get the knife? It's a cornerstone service in their Cloud Platform.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14420, "question": "Why are you expecting App Engine to get the knife? It's a cornerstone service in their Cloud Platform.", "aSentId": 14421, "answer": "It's a unpopular platform with little benefit to their core business which is advertising.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14420, "question": "Why are you expecting App Engine to get the knife? It's a cornerstone service in their Cloud Platform.", "aSentId": 14423, "answer": "They got trampled on in the cloud market. AWS, Heroku, even Azure are all better services. Google is not exactly known for keeping 2nd place products around.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14424, "question": "They got trampled on in the cloud market. AWS, Heroku, even Azure are all better services. Google is not exactly known for keeping 2nd place products around.", "aSentId": 14425, "answer": "If a product that people pay Google to use and have built their entire businesses on disappears, any goodwill non-core Google products have left will be gone.  They'll never be able to grow beyond Search, Maps, Gmail, and Android.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14426, "question": "If a product that people pay Google to use and have built their entire businesses on disappears, any goodwill non-core Google products have left will be gone.  They'll never be able to grow beyond Search, Maps, Gmail, and Android.", "aSentId": 14427, "answer": "I'm not sure they can do that now. History dictates they won't be able to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14426, "question": "If a product that people pay Google to use and have built their entire businesses on disappears, any goodwill non-core Google products have left will be gone.  They'll never be able to grow beyond Search, Maps, Gmail, and Android.", "aSentId": 14429, "answer": "They have a reputation now (and for the past few years) of abandoning anything that isn't dominant, and that reputation will prevent any new product of theirs from gaining much traction, so they're stuck with what they have now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14430, "question": "They have a reputation now (and for the past few years) of abandoning anything that isn't dominant, and that reputation will prevent any new product of theirs from gaining much traction, so they're stuck with what they have now.", "aSentId": 14431, "answer": "The asterisk so far has been \"unless it's profitable\".  I don't recall any businesses being left in the lurch when core infrastructure they rented from Google was discontinued, and I'd be really surprised if they started now, which is why I can't imagine App Engine being retired.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14426, "question": "If a product that people pay Google to use and have built their entire businesses on disappears, any goodwill non-core Google products have left will be gone.  They'll never be able to grow beyond Search, Maps, Gmail, and Android.", "aSentId": 14433, "answer": "They're busy building space ships, robots, self driving cars, global WiFi, becoming a Cell service provider, and an ISP.\n\nThey're reaching beyond internet into \"the next big thing\".\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14424, "question": "They got trampled on in the cloud market. AWS, Heroku, even Azure are all better services. Google is not exactly known for keeping 2nd place products around.", "aSentId": 14435, "answer": "Why would you compare app engine to any of those? The only similarity is that you could theoretically call both \"cloud\". GCE and AWS are directly comparable. App Engine and AWS are apples and oranges.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14424, "question": "They got trampled on in the cloud market. AWS, Heroku, even Azure are all better services. Google is not exactly known for keeping 2nd place products around.", "aSentId": 14437, "answer": "&gt; Google is not exactly known for keeping 2nd place products around.\n\nCrap, what's that say about Android?\n\nIt's more common, and you'll pry my '14 Moto X out of my cold, dead hands (hopefully not literally). But in terms of several different factors, Android is #2.\n\nI'm serious; if they get rid of #2 products with alarming regularity, are they going to leave all of us in a lurch someday soon?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14438, "question": "&gt; Google is not exactly known for keeping 2nd place products around.\n\nCrap, what's that say about Android?\n\nIt's more common, and you'll pry my '14 Moto X out of my cold, dead hands (hopefully not literally). But in terms of several different factors, Android is #2.\n\nI'm serious; if they get rid of #2 products with alarming regularity, are they going to leave all of us in a lurch someday soon?", "aSentId": 14439, "answer": "Android has the largest mobile OS market share by far (over 75% and growing). App Engine is like the BlackBerry of cloud platforms, they have a tiny market share.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14441, "question": "How did Google go from a company pushing open source, thinking like a coder in terms of products and general philosophy, and a company people were generally excited about (I remember how every product Google released made a huge wave (pun intended)) to a company that's quickly becoming conservative, big corporation, big brother (tracking you even when you ask not to be tracked), and neutral on net neutrality (basically at this point I have to start to believe that it took that position because it doesn't want any new competitors, but it knows that if it openly advocated against net neutrality, there would be huge repercussions)?", "aSentId": 14442, "answer": "I'd say it (openly) turned when it made Google Chrome and used whatever tactics it used to push it.  To date, the fact that I don't trust google is the main reason I don't use Chrome if I can help it at all.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14443, "question": "I'd say it (openly) turned when it made Google Chrome and used whatever tactics it used to push it.  To date, the fact that I don't trust google is the main reason I don't use Chrome if I can help it at all.", "aSentId": 14444, "answer": "Yep. Everyone was up in arms over oracle and the ask bar but look at how many installers are trying to push chrome on people. \n\nGoogke wants to lock down the web. If they can sell you the access, the hardware and the software then they'll do just that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14443, "question": "I'd say it (openly) turned when it made Google Chrome and used whatever tactics it used to push it.  To date, the fact that I don't trust google is the main reason I don't use Chrome if I can help it at all.", "aSentId": 14446, "answer": "Firefox is still the only true browser thank god. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14448, "question": "This makes it very hard for me to consider using their products in the future.", "aSentId": 14449, "answer": "Why? Google Code was around for a reasonably long lifespan, it's clear that the developer mind share has largely abandoned it, and they're closing it down in phases with a clear migration path to a thriving alternate platform. It seems like they couldn't have done a better job of retiring it while minimizing pain to their users.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14450, "question": "Why? Google Code was around for a reasonably long lifespan, it's clear that the developer mind share has largely abandoned it, and they're closing it down in phases with a clear migration path to a thriving alternate platform. It seems like they couldn't have done a better job of retiring it while minimizing pain to their users.", "aSentId": 14451, "answer": "I have to agree. It makes sense why they are closing it too, unfortunately I've found a large majority of my schools textbooks on google code as well as an occasional movies. Getting DMCA notices for that stuff constantly and being abused definitely is not a good thing for Google.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14450, "question": "Why? Google Code was around for a reasonably long lifespan, it's clear that the developer mind share has largely abandoned it, and they're closing it down in phases with a clear migration path to a thriving alternate platform. It seems like they couldn't have done a better job of retiring it while minimizing pain to their users.", "aSentId": 14453, "answer": "Was it that hard to keep it afloat for Google though? Lots of project relied on it. Nobody asks them to develop it like Google Plus, just put maybe one programmer on it in charge of fixing bugs and slowly adding some features. It's no youtube, code doesn't weigh much.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14454, "question": "Was it that hard to keep it afloat for Google though? Lots of project relied on it. Nobody asks them to develop it like Google Plus, just put maybe one programmer on it in charge of fixing bugs and slowly adding some features. It's no youtube, code doesn't weigh much.", "aSentId": 14455, "answer": "I mean I don't know anything you don't, but the statement from Google makes it pretty clear that they felt that the number of projects relying on it didn't justify the administrative overhead to deal with spam and abuse, and that offering assisted migration to multiple choices of frankly better platforms was a better way to meet the community's needs. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14456, "question": "I mean I don't know anything you don't, but the statement from Google makes it pretty clear that they felt that the number of projects relying on it didn't justify the administrative overhead to deal with spam and abuse, and that offering assisted migration to multiple choices of frankly better platforms was a better way to meet the community's needs. ", "aSentId": 14457, "answer": "Maybe if they migrated all projects, not just those with owners... And made redirects so that links still work. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14454, "question": "Was it that hard to keep it afloat for Google though? Lots of project relied on it. Nobody asks them to develop it like Google Plus, just put maybe one programmer on it in charge of fixing bugs and slowly adding some features. It's no youtube, code doesn't weigh much.", "aSentId": 14459, "answer": "We found the non-programmer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14448, "question": "This makes it very hard for me to consider using their products in the future.", "aSentId": 14461, "answer": "Ah, it's not hard. A Google product needs to meet one of two criteria to stay alive:\n\n1. Make money\n2. Be Google+\n\nAs long as one of those is met, you're safe to keep using it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14462, "question": "Ah, it's not hard. A Google product needs to meet one of two criteria to stay alive:\n\n1. Make money\n2. Be Google+\n\nAs long as one of those is met, you're safe to keep using it.", "aSentId": 14463, "answer": "You spelt \"Sell Ads\" wrong there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14464, "question": "You spelt \"Sell Ads\" wrong there.", "aSentId": 14465, "answer": "Doesn't sell ads fall under making money...?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14464, "question": "You spelt \"Sell Ads\" wrong there.", "aSentId": 14467, "answer": "You... spelled... \"spelled\" wrong, there...?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14468, "question": "You... spelled... \"spelled\" wrong, there...?", "aSentId": 14469, "answer": "It's a big world out there http://grammarist.com/spelling/spelled-spelt/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14462, "question": "Ah, it's not hard. A Google product needs to meet one of two criteria to stay alive:\n\n1. Make money\n2. Be Google+\n\nAs long as one of those is met, you're safe to keep using it.", "aSentId": 14471, "answer": "This makes me sad for the inevitable fate of Google Scholar.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14472, "question": "This makes me sad for the inevitable fate of Google Scholar.", "aSentId": 14473, "answer": "What? No! Nearly every paper I read came from there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14462, "question": "Ah, it's not hard. A Google product needs to meet one of two criteria to stay alive:\n\n1. Make money\n2. Be Google+\n\nAs long as one of those is met, you're safe to keep using it.", "aSentId": 14475, "answer": "Google+ is dying too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14476, "question": "Google+ is dying too.", "aSentId": 14477, "answer": "Dy*ing?* Google+ was never alive in the first place. It's dead on arrival.\n\nAnyway, that's the point. Google is willing to pour money into Google+ despite the project being doomed to failure. Google products must make money *or* be Google+.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14478, "question": "Dy*ing?* Google+ was never alive in the first place. It's dead on arrival.\n\nAnyway, that's the point. Google is willing to pour money into Google+ despite the project being doomed to failure. Google products must make money *or* be Google+.", "aSentId": 14479, "answer": "That makes me sad, too, because G+ was (is) quite honestly *good*.  If I could convince people to ditch Facebook and move over to G+, I think all of us would be happy.  But we're still on Facebook, aren't we?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14480, "question": "That makes me sad, too, because G+ was (is) quite honestly *good*.  If I could convince people to ditch Facebook and move over to G+, I think all of us would be happy.  But we're still on Facebook, aren't we?", "aSentId": 14481, "answer": "Yeah, no. Plastering your real name online\u2014as is required by both\u2014is *not* good.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14476, "question": "Google+ is dying too.", "aSentId": 14483, "answer": "They will still pour many millions of dollars into it. They want to be the next Facebook and until they find a way to do that, G+ is their guiding star along with the ad network cash cow.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14484, "question": "They will still pour many millions of dollars into it. They want to be the next Facebook and until they find a way to do that, G+ is their guiding star along with the ad network cash cow.", "aSentId": 14485, "answer": "Maybe, maybe not.\n\nhttp://www.pocket-lint.com/news/133026-is-google-dead-google-confirms-it-ll-turn-photos-and-streams-into-new-products", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14448, "question": "This makes it very hard for me to consider using their products in the future.", "aSentId": 14488, "answer": "Why? They've been pretty good at consistently allowing you to export your data.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14492, "question": "What are the odds of them shutting down gmail?", "aSentId": 14493, "answer": "0 - This has nothing to do with gmail.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14494, "question": "0 - This has nothing to do with gmail.\n", "aSentId": 14495, "answer": "    They closed Buzz, Orkut, Reader, and Code, guys, is Search next?!?!?!? /s", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14496, "question": "    They closed Buzz, Orkut, Reader, and Code, guys, is Search next?!?!?!? /s", "aSentId": 14497, "answer": "They shut down stuff that was losing money. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14500, "question": "How does github afford their hosting? I've never seen ads.. ", "aSentId": 14501, "answer": "They charge for private repos.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14502, "question": "They charge for private repos.", "aSentId": 14503, "answer": "I knew that.. Honestly. Can I get vc for my brain? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14510, "question": "This just shocking I can't believe Google closed another amazing service...they better not pull this shit on with fiber", "aSentId": 14511, "answer": "Amazing? Google Code didn't even have pull requests!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14512, "question": "Amazing? Google Code didn't even have pull requests!", "aSentId": 14513, "answer": "I know git is God and all, but it had potential!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14514, "question": "I know git is God and all, but it had potential!", "aSentId": 14515, "answer": "Pull requests remove what was previously a major roadblock in open-source development: allowing people to contribute without any sort of pre-approval.\n\nPreviously, you had to email a patch to a mailing list (which nobody pays attention to and is full of spam) or attach it to a bug report (which is often not even possible and/or also full of spam). Then the project lead would have to do a bunch of manual steps to integrate your changes. Blech.\n\nPull requests make it easy for you to submit changes, and for the project lead to review, approve, and integrate them. This is a huge step forward. Any code hosting site that wishes to remain relevant *must* support this feature.\n\nGit has nothing to do with it, by the way. Any distributed version-control system can use this model.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14516, "question": "Pull requests remove what was previously a major roadblock in open-source development: allowing people to contribute without any sort of pre-approval.\n\nPreviously, you had to email a patch to a mailing list (which nobody pays attention to and is full of spam) or attach it to a bug report (which is often not even possible and/or also full of spam). Then the project lead would have to do a bunch of manual steps to integrate your changes. Blech.\n\nPull requests make it easy for you to submit changes, and for the project lead to review, approve, and integrate them. This is a huge step forward. Any code hosting site that wishes to remain relevant *must* support this feature.\n\nGit has nothing to do with it, by the way. Any distributed version-control system can use this model.", "aSentId": 14517, "answer": "&gt; Any distributed version-control system can use this model\n\nGiven it's implemented in the hosting service, pull requests can be independent of the version-control system.  Google Code could have implemented Pull Requests for SVN if it wanted to. It just didn't want to maintain Google Code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14512, "question": "Amazing? Google Code didn't even have pull requests!", "aSentId": 14519, "answer": "I know git is God and all, but it had potential!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14522, "question": "&gt; The company says that the closure is due to Google Code being inundated with spam and abuse and that these problems had come to dominate the workload of administering the service.\n\nI love these BS reasons Google comes up with. Really. It's too spammy and you can't handle it. Really?", "aSentId": 14523, "answer": "If you had a project that was say 70% spam/abuse and 30% content and trending in the direction of spam would you go to the effort to maintain it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14522, "question": "&gt; The company says that the closure is due to Google Code being inundated with spam and abuse and that these problems had come to dominate the workload of administering the service.\n\nI love these BS reasons Google comes up with. Really. It's too spammy and you can't handle it. Really?", "aSentId": 14525, "answer": "Yeah, but is there enough motivation, anymore, to pay money to maintain it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14528, "question": "Hi r/programming. I've found ~400 broken links in the top 1000 GitHub projects (some false positives). Help me send in pull requests to slightly improve the open source community.", "aSentId": 14529, "answer": "If you tell me which links are broken in llvm-mirror/{llvm,clang,libcxxabi,libcxx} I'll fix them upstream.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14530, "question": "If you tell me which links are broken in llvm-mirror/{llvm,clang,libcxxabi,libcxx} I'll fix them upstream.", "aSentId": 14531, "answer": "I'd be happy to help with this, but I'll need to nontrivially extend the code to crawl every file in the repo rather than just the README's.\nI've filed an issue here if you want to follow my progress: https://github.com/bamos/girl/issues/17", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14528, "question": "Hi r/programming. I've found ~400 broken links in the top 1000 GitHub projects (some false positives). Help me send in pull requests to slightly improve the open source community.", "aSentId": 14533, "answer": "Wow, great initiative! Definitely one of those things that feel painfully obvious once someone's done them. Super good idea. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14528, "question": "Hi r/programming. I've found ~400 broken links in the top 1000 GitHub projects (some false positives). Help me send in pull requests to slightly improve the open source community.", "aSentId": 14535, "answer": "Interesting! I was bored waiting for a deployment so I went ahead and submitted a couple pull requests. Thanks!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14537, "question": "What's a pull request?", "aSentId": 14538, "answer": "It's when you try and submit a change to an external git repository. You're basically requesting that they pull the change from your repository.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14539, "question": "It's when you try and submit a change to an external git repository. You're basically requesting that they pull the change from your repository.", "aSentId": 14540, "answer": "Thanks!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14537, "question": "What's a pull request?", "aSentId": 14542, "answer": "Who the fuck is downvoting this?\n\nIt's a request to the maintainers of a git repository to accept changes you made on your local branch (your local version of the project). If that sounded like gibberish do some Googling for \"git basics\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14543, "question": "Who the fuck is downvoting this?\n\nIt's a request to the maintainers of a git repository to accept changes you made on your local branch (your local version of the project). If that sounded like gibberish do some Googling for \"git basics\"", "aSentId": 14544, "answer": "&gt; Who the fuck is downvoting this?\n\nPeople, who think *pull request* is easy enough to google?\n\nAlso, your description was not only gibberish but also partly wrong/incomplete: the term *pull request* might have been coined by GitHub (or rather its [meaning was extended](http://git-scm.com/docs/git-request-pull)) but the concept works for pretty much every VCS. A *local branch* is not the *local version of the project*. Commonly you'd refer to it as *fork* (*local* doesn't really apply here). And I think even on GitHub you're free to choose any branch and even any commit you like to include it in your *pull request*. Googling for Git basics won't bring you any explanation of what a *pull request* is because it's not a core concept of Git and to my knowledge Git itself doesn't have any actual implementation that makes *pull requests* work automatically like on GitHub.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14537, "question": "What's a pull request?", "aSentId": 14546, "answer": "It's a poorly named way of saying your code is just a bill sitting on capitol hill and if they accept it, it becomes a law.\n\nIt should be called \"code submission\" rather than \"pull request\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14549, "question": "This is a great, you could probably use a similar idea to find spelling errors in readmes  ", "aSentId": 14550, "answer": "Good idea! This can be done with tools like https://github.com/btford/write-good and http://aspell.net/,\nbut there would likely be a lot more false positives,\nespecially with inline code in READMEs.\n\nPart of me wants to generalize `girl`to be an arbitrary\nGitHub project linter, but I'll hold off on this for now.\nTypos/spelling errors are good to clean from polished\ndocumentation, but don't inconvenience users like\nbroken links.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14551, "question": "Good idea! This can be done with tools like https://github.com/btford/write-good and http://aspell.net/,\nbut there would likely be a lot more false positives,\nespecially with inline code in READMEs.\n\nPart of me wants to generalize `girl`to be an arbitrary\nGitHub project linter, but I'll hold off on this for now.\nTypos/spelling errors are good to clean from polished\ndocumentation, but don't inconvenience users like\nbroken links.", "aSentId": 14552, "answer": "That'd be really cool though. Think of all the things you could do with a general linter. It could do static analysis for your favourite language and find easy-to-fix bugs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14551, "question": "Good idea! This can be done with tools like https://github.com/btford/write-good and http://aspell.net/,\nbut there would likely be a lot more false positives,\nespecially with inline code in READMEs.\n\nPart of me wants to generalize `girl`to be an arbitrary\nGitHub project linter, but I'll hold off on this for now.\nTypos/spelling errors are good to clean from polished\ndocumentation, but don't inconvenience users like\nbroken links.", "aSentId": 14554, "answer": "&gt; Typos/spelling errors are good to have in polished documentation, \n\nwhat about pro grammer errors?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14551, "question": "Good idea! This can be done with tools like https://github.com/btford/write-good and http://aspell.net/,\nbut there would likely be a lot more false positives,\nespecially with inline code in READMEs.\n\nPart of me wants to generalize `girl`to be an arbitrary\nGitHub project linter, but I'll hold off on this for now.\nTypos/spelling errors are good to clean from polished\ndocumentation, but don't inconvenience users like\nbroken links.", "aSentId": 14556, "answer": "It's definitely more of a nitpick than broken links. This is a great idea.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14558, "question": "You could automate the creation of an issue instead and leave updating the link to the owner. That just makes a lot more sense to me. Either way the owner needs to take an action, but by creating an issue you'll allow them to decide how to correct the link and you'll be able to automate the entire process.", "aSentId": 14559, "answer": "I considered this and agree that sending automatic issues would be ideal, but I worry that such a system has subtle complexities that are nontrivial to implement (20+ hours) and would cause noise and annoy developers if not done correctly. I think the easiest way to resolve these complexities while having a larger impact is to publish the page with the information as I've done and ask for people to submit 100% accurate PR's.\n\nFor example, how frequently should this run and how should repositories that ignore the issues be handled? Multiple issues shouldn't be filed if the links in a repo don't change, but what if new links appear in a repo and the previously broken links aren't fixed? Ideally, the program should add a comment to the previously submitted issue.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14566, "question": "Can't you automate creation of PRs using the Github API? ", "aSentId": 14567, "answer": "It would be difficult to determine why the links were broken and create a suitable pull request for it. How would you automate detecting if the link is misspelt, if the page has moved, or if the page is just temporarily down?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14568, "question": "It would be difficult to determine why the links were broken and create a suitable pull request for it. How would you automate detecting if the link is misspelt, if the page has moved, or if the page is just temporarily down?", "aSentId": 14569, "answer": "IDK! Could people also have automated key-scraping on GitHub too? This is an open research question.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14572, "question": "Konrad Zuse: (Nearly) the German Turing", "aSentId": 14573, "answer": "Z3 - the first device we can reasonably call a computer (since it was Turing Complete)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14574, "question": "Z3 - the first device we can reasonably call a computer (since it was Turing Complete)", "aSentId": 14575, "answer": "A few years ago I attended a tour in the Deutsches Museum where they showed some basic computations on the Z4. Since the relays are all stacked in a rack, you can actually read the memory state by sight. It also contains a hidden giant Z, which you only see if you look at the memory from the right angle. Cool stuff!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14574, "question": "Z3 - the first device we can reasonably call a computer (since it was Turing Complete)", "aSentId": 14577, "answer": "That's the modern meaning. At the time, a computer (device) was simply a machine capable of doing the job of a computer (human) - ie, perform arithmetic calculations and display the results, what we'd call a calculator.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14578, "question": "That's the modern meaning. At the time, a computer (device) was simply a machine capable of doing the job of a computer (human) - ie, perform arithmetic calculations and display the results, what we'd call a calculator.", "aSentId": 14579, "answer": "Yeah but what I mean is that WE can reasonably call it a computer not the people of the time :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14574, "question": "Z3 - the first device we can reasonably call a computer (since it was Turing Complete)", "aSentId": 14581, "answer": "It's only Turing Complete on paper, it lacked a conditional operator.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14572, "question": "Konrad Zuse: (Nearly) the German Turing", "aSentId": 14584, "answer": "Zuse is like the Tesla guy of computing. This doesn't make much sense now except that over a decade ago Tesla was much forgotten and all fame went to guys like Edison and Westinghouse. Then it became hip to be a Tesla fan. Zuse deserves the same restoration. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14585, "question": "Zuse is like the Tesla guy of computing. This doesn't make much sense now except that over a decade ago Tesla was much forgotten and all fame went to guys like Edison and Westinghouse. Then it became hip to be a Tesla fan. Zuse deserves the same restoration. ", "aSentId": 14586, "answer": "The problem with this comparison is that Tesla's work did influence the development of his field despite the fact that his inventions were applied by other people. Zuse did great things before anyone else but they remained lost until other people managed to build more advanced machines.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14585, "question": "Zuse is like the Tesla guy of computing. This doesn't make much sense now except that over a decade ago Tesla was much forgotten and all fame went to guys like Edison and Westinghouse. Then it became hip to be a Tesla fan. Zuse deserves the same restoration. ", "aSentId": 14588, "answer": "Only Tesla never worked for the Nazis on genocide related projects.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14589, "question": "Only Tesla never worked for the Nazis on genocide related projects.", "aSentId": 14590, "answer": "The indexing and such needed for logistics in the 40s did not require computers, just tabulating machines like what IBM built then. The tattoos on Holocaust victims actually corresponded to a IBM tabulation index. \n\nZuse did help out the Luftwaffe with some calculations. Mostly though his computers were bombed early on and he never got much support for his work regardless.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14572, "question": "Konrad Zuse: (Nearly) the German Turing", "aSentId": 14592, "answer": "At my University the CS building had two PC labs, named Zuse and Turing. It's pretty neat to read more about these people all of the sudden :p", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14595, "question": "Program shows corrupt data and randomly crashes. Am I declaring these arrays of structs right?", "aSentId": 14596, "answer": "Just a quick look, but:\n\n    char line1_padded[16];\n    sprintf(line1_padded, \"%-16s\", line1);\nYou're not providing enough space for the strings.  Strings have null-terminators.  A safer option is to use snprintf:\n\n    char line1_padded[20];\n    snprintf(line1_padded, sizeof(line1_padded), \"%-16s\", line1);\nThat way you can't overflow the buffer even if it isn't big enough for the format.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14597, "question": "Just a quick look, but:\n\n    char line1_padded[16];\n    sprintf(line1_padded, \"%-16s\", line1);\nYou're not providing enough space for the strings.  Strings have null-terminators.  A safer option is to use snprintf:\n\n    char line1_padded[20];\n    snprintf(line1_padded, sizeof(line1_padded), \"%-16s\", line1);\nThat way you can't overflow the buffer even if it isn't big enough for the format.\n\n", "aSentId": 14598, "answer": "Isn't `line1_padded[16]` enough for 16 characters and a null terminator (17 characters counting from 0)?  I had `lcd_print_digital_control` and `lcd_print_analog_control` in there before implementing structs and it worked without any issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14600, "question": "A functional choice", "aSentId": 14601, "answer": "&gt; You have to adopt a functional mindset to work with Haskell, there is **no partial application** or dipping the toes in, it's all or nothing.\n\nSince every function in Haskell is curried, you use partial application all the time. ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14602, "question": "&gt; You have to adopt a functional mindset to work with Haskell, there is **no partial application** or dipping the toes in, it's all or nothing.\n\nSince every function in Haskell is curried, you use partial application all the time. ;)", "aSentId": 14603, "answer": "Since technically all functions only take one parameter one could also argue, that partial application really is impossible. Stupid me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14602, "question": "&gt; You have to adopt a functional mindset to work with Haskell, there is **no partial application** or dipping the toes in, it's all or nothing.\n\nSince every function in Haskell is curried, you use partial application all the time. ;)", "aSentId": 14605, "answer": "Also, is this really true? What prevents you from wrapping everything under one giant do block in the IO monad?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14606, "question": "Also, is this really true? What prevents you from wrapping everything under one giant do block in the IO monad?", "aSentId": 14607, "answer": "Sanity and integrity", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14600, "question": "A functional choice", "aSentId": 14609, "answer": "for the jvm, if lisp is an issue, then try scala ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14600, "question": "A functional choice", "aSentId": 14611, "answer": "Where there is an article on functional programming, there is Fibonacci sequence.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14612, "question": "Where there is an article on functional programming, there is Fibonacci sequence.", "aSentId": 14613, "answer": "It's a law: the value of functional programming can only be shown with a math example devoid of anything that could be construed as an object. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14615, "question": "To people reading this:\n\n&gt;The functional paradigm isn't best suited to solve every problem, which is fine! But it doesn't even feel suitable for most, which is disappointing.\n\nThis is not true. It only means that he himself has no clue how to solve most problems with functional approach so he makes an extrapolation and comes to the wrong conclusion that if he can't do it, then it is not possible or very hard for others as well.\n\nHaskell is a general purpose language well suited to solve majority of everyday programming tasks including such mainstays as interfacing with databases and writing web applications. That already covers practically everything you usually write with PHP, JSP, ASP, python, ruby, java, c#\n\nWe use haskell in production for all our web applications and backend services and i know thousands of other companies do, and not only such giants as Facebook.\n\nHaskell web frameworks and haskell database libraries are mature. You can start making web applications with haskell right now.\n\nTooling is indeed a bit of a problem, but remember, lack of VisualStudio support never stopped ruby and python and nodejs web revolution.\n\n ", "aSentId": 14616, "answer": "&gt; This is not true. It only means that he himself has no clue how to solve most problems with functional approach so he makes an extrapolation and comes to the wrong conclusion that if he can't do it, then it is not possible or very hard for others as well.\n\nOr to put it less harshly, functional programming doesn't have the human capital so far that imperative programming does.  There are not nearly as many thousands of books, articles and blog posts explaining how to solve specific problems functionally as there are for imperative.\n\nYou can't just dismiss the human factor here.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14615, "question": "To people reading this:\n\n&gt;The functional paradigm isn't best suited to solve every problem, which is fine! But it doesn't even feel suitable for most, which is disappointing.\n\nThis is not true. It only means that he himself has no clue how to solve most problems with functional approach so he makes an extrapolation and comes to the wrong conclusion that if he can't do it, then it is not possible or very hard for others as well.\n\nHaskell is a general purpose language well suited to solve majority of everyday programming tasks including such mainstays as interfacing with databases and writing web applications. That already covers practically everything you usually write with PHP, JSP, ASP, python, ruby, java, c#\n\nWe use haskell in production for all our web applications and backend services and i know thousands of other companies do, and not only such giants as Facebook.\n\nHaskell web frameworks and haskell database libraries are mature. You can start making web applications with haskell right now.\n\nTooling is indeed a bit of a problem, but remember, lack of VisualStudio support never stopped ruby and python and nodejs web revolution.\n\n ", "aSentId": 14618, "answer": "First of all, this:\n\n&gt; This is not true. It only means that he himself has no clue\n\nis a bit harsh, especially toward the author of a post which feels fairly reasonable and balanced to me.\n\nSecond, he addresses your very complaint in his article. He's clearly saying the problem has nothing to do with Haskell-the-language but with Haskell-the-ecosystem.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14619, "question": "First of all, this:\n\n&gt; This is not true. It only means that he himself has no clue\n\nis a bit harsh, especially toward the author of a post which feels fairly reasonable and balanced to me.\n\nSecond, he addresses your very complaint in his article. He's clearly saying the problem has nothing to do with Haskell-the-language but with Haskell-the-ecosystem.\n", "aSentId": 14620, "answer": "&gt; Second, he addresses your very complaint in his article. He's clearly saying the problem has nothing to do with Haskell-the-language but with Haskell-the-ecosystem.\n\nI don't really understand his argument there. In the post he doesn't suggest anything that the other languages have/can do that Haskell doesn't/can't. There are still areas that Haskell has next to no exosystem support (game programming), but things like web (Yesod, Snap, and Scotty are all actively maintained and a joy to use, and the server warp is stupidly well performant), data (acid-state is wonderful to use, and there are mature libraries for all the big db backends), and numbers (vector is incredibly powerful and well optimized, and if you want scary good performance you have accelerate).\n\nHis criticisms of Haskell sound like criticisms that were valid circa 2002, not ones that are relavent to the ecosystem today.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14615, "question": "To people reading this:\n\n&gt;The functional paradigm isn't best suited to solve every problem, which is fine! But it doesn't even feel suitable for most, which is disappointing.\n\nThis is not true. It only means that he himself has no clue how to solve most problems with functional approach so he makes an extrapolation and comes to the wrong conclusion that if he can't do it, then it is not possible or very hard for others as well.\n\nHaskell is a general purpose language well suited to solve majority of everyday programming tasks including such mainstays as interfacing with databases and writing web applications. That already covers practically everything you usually write with PHP, JSP, ASP, python, ruby, java, c#\n\nWe use haskell in production for all our web applications and backend services and i know thousands of other companies do, and not only such giants as Facebook.\n\nHaskell web frameworks and haskell database libraries are mature. You can start making web applications with haskell right now.\n\nTooling is indeed a bit of a problem, but remember, lack of VisualStudio support never stopped ruby and python and nodejs web revolution.\n\n ", "aSentId": 14622, "answer": "&gt;We use haskell in production for all our web applications and backend services and i know thousands of other companies do, and not only such giants as Facebook.\n\nWhen did Facebook abandon PHP in favor of haskell for all their web application code? \n\nMaybe this was meant to be sarcastic and not serious?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14624, "question": "&gt;  I couldn't imagine building a large application in Haskell. That's not because I think it isn't performant, or that I think the code would be unmaintainable, on the contrary. But it doesn't have enough infrastructure, tooling or community around it to support every day applications. I get the impression that Haskell is still primarily used for academic purposes.\n\nToo bad he feels this way, because many other people are using Haskell to build large every day applications. We are! The entire backend of [Silk](http://silk.co/product) is Haskell and we're doing fine!", "aSentId": 14625, "answer": "To be fair, his observation is both cautious and accurate, though, especially if you're accustomed to Microsoft-level tooling and community.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14626, "question": "To be fair, his observation is both cautious and accurate, though, especially if you're accustomed to Microsoft-level tooling and community.", "aSentId": 14627, "answer": "Or even the community support for popular open source solutions, like Java or Python.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14626, "question": "To be fair, his observation is both cautious and accurate, though, especially if you're accustomed to Microsoft-level tooling and community.", "aSentId": 14629, "answer": "I've read more than one comment that says Haskell is difficult to debug because of tooling and its lazy nature.  Is that accurate? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14630, "question": "I've read more than one comment that says Haskell is difficult to debug because of tooling and its lazy nature.  Is that accurate? ", "aSentId": 14631, "answer": "Disclaimer: I dabbled in Haskell for a couple of months years ago. I do not program in it regularly, and honestly feel compelled to disclaim \"knowing\" the language, even though years of Scala and OCaml probably narrow the understanding gap a lot compared to coming from other languages.\n\nWith that out of the way...\n\n&gt; I've read more than one comment that says Haskell is difficult to debug because of tooling...\n\nIn the sense of not being a plugin to Visual Studio or Eclipse, this is probably true in some sense. But I read [this](http://chrisdone.com/posts/ghci-debugger), and it's consistent with my experience of both Scala and OCaml, too: I can't remember the last time I used a debugger _per se_, but they exist if you want them.\n\n&gt; ...and its lazy nature.\n\nThe laziness thing I think bites people more, at least anecdotally. It may be that as you learn the language better and write more idiomatically, you tend to run into issues of building up piles of unevaluated thunks less, with the time-and-space issues that come with them. Because Scala and OCaml are both strict, I don't encounter those issues at work (Scala) or recreationally (OCaml). But it wouldn't surprise me if there were a lot of truth to the idea that those are \"newbie\" issues. After all, people (especially at Facebook, apparently) are building real, large systems with Haskell successfully.\n\nI guess if there's a message I'd like to convey overall, it's to, when dealing with a paradigm that's truly new to you, be prepared to accept some struggle in the short term that dissipates over time. Purity and laziness are genuinely different, so they impose a different way of programming than most people are used to. Whether it's worth it or not is the judgment you are trying to make. But I don't think that judgment can be made reasonably after just a few weeks' experience.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14632, "question": "Disclaimer: I dabbled in Haskell for a couple of months years ago. I do not program in it regularly, and honestly feel compelled to disclaim \"knowing\" the language, even though years of Scala and OCaml probably narrow the understanding gap a lot compared to coming from other languages.\n\nWith that out of the way...\n\n&gt; I've read more than one comment that says Haskell is difficult to debug because of tooling...\n\nIn the sense of not being a plugin to Visual Studio or Eclipse, this is probably true in some sense. But I read [this](http://chrisdone.com/posts/ghci-debugger), and it's consistent with my experience of both Scala and OCaml, too: I can't remember the last time I used a debugger _per se_, but they exist if you want them.\n\n&gt; ...and its lazy nature.\n\nThe laziness thing I think bites people more, at least anecdotally. It may be that as you learn the language better and write more idiomatically, you tend to run into issues of building up piles of unevaluated thunks less, with the time-and-space issues that come with them. Because Scala and OCaml are both strict, I don't encounter those issues at work (Scala) or recreationally (OCaml). But it wouldn't surprise me if there were a lot of truth to the idea that those are \"newbie\" issues. After all, people (especially at Facebook, apparently) are building real, large systems with Haskell successfully.\n\nI guess if there's a message I'd like to convey overall, it's to, when dealing with a paradigm that's truly new to you, be prepared to accept some struggle in the short term that dissipates over time. Purity and laziness are genuinely different, so they impose a different way of programming than most people are used to. Whether it's worth it or not is the judgment you are trying to make. But I don't think that judgment can be made reasonably after just a few weeks' experience.", "aSentId": 14633, "answer": "&gt; The laziness thing I think bites people more, at least anecdotally. It may be that as you learn the language better and write more idiomatically, you tend to run into issues of building up piles of unevaluated thunks less, with the time-and-space issues that come with them. Because Scala and OCaml are both strict, I don't encounter those issues at work (Scala) or recreationally (OCaml). But it wouldn't surprise me if there were a lot of truth to the idea that those are \"newbie\" issues. After all, people (especially at Facebook, apparently) are building real, large systems with Haskell successfully.\n\nThe issue is sort of that people make a big deal about laziness, so new programmers try to write code that takes advantage of it, but it's really easy to accidentally write something that forces evaluation of the whole structure you're trying to lazily traverse.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14630, "question": "I've read more than one comment that says Haskell is difficult to debug because of tooling and its lazy nature.  Is that accurate? ", "aSentId": 14635, "answer": "Its only hard to debug if you insist on using procedural debugging methods and ideas. In my experience debugging Haskell is easier because each function can be tested in isolation (due to referential transparency) without having to build a specific test rig. Combine that with the fact that the type system catches more than half the bugs I write anyways makes Haskell vastly better than the other languages I use (Python, C, Matlab) in the bug department.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14630, "question": "I've read more than one comment that says Haskell is difficult to debug because of tooling and its lazy nature.  Is that accurate? ", "aSentId": 14637, "answer": "I would say that the debugging tools aren't very good (lack of stack traces when an exception is thrown is one long-standing issue -- it turns out that stack traces are harder in a lazy-evaluated language); however, the compiler catches up front a lot of the mistakes that in most other languages you would have to find through testing, so I think I spend less time debugging in Haskell than I would an equivalently complex program in a more mainstream imperative language.  It's like any toolchain -- you get used to what you have and learn to work around the limitations and exploit the strengths of the tools you have.\n\nLaziness does make debugging more complicated.  You don't need to worry about computing the wrong answer because of laziness -- it can't change the results returned by a non-crashing program, but it's pretty easy to overrun the stack by evaluating a pile of nested thunks all at once, which can be frustrating.  (Stackoverflow.com is an awesome resource, but its existence has basically made it impossible to google for help in diagnosing an actual stack overflow.)\n\nLaziness does make it possible to write programs that would never terminate in a strict language, so you do get something in exchange for the extra complexity.  Whether it's worth it is something that Haskell programmers don't all agree on.  Certainly, Haskell would have become a very different language without laziness -- uncertainty about run-time execution order is one of the main reasons Haskell has such a rigid system for controlling side-effects, which has led to a lot of interesting and powerful technologies that solve old problems in new ways that wouldn't have existed otherwise.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14639, "question": "&gt; Haskell employs all common features seen in the biggest functional languages.\n\nTemplateHaskell is nowhere near as powerful as the macro system of a Lisp, and the module system is far more simplistic than the modules of a ML. If you don't count Lisps and MLs as big functional languages, what does count?", "aSentId": 14640, "answer": "&gt;  powerful as the macro system of a Lisp\n\nDo you really want something as powerful as macros? I personally don't. You are left with no guarantees over what code does once you start introducing macros.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14639, "question": "&gt; Haskell employs all common features seen in the biggest functional languages.\n\nTemplateHaskell is nowhere near as powerful as the macro system of a Lisp, and the module system is far more simplistic than the modules of a ML. If you don't count Lisps and MLs as big functional languages, what does count?", "aSentId": 14642, "answer": "&gt; Haskell employs all **common features**\n\n[emphasis added]\n\nYou could argue that macros are a defining feature of Lisp, not a common feature of FP languages.  Likewise with ML and higher order modules.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14644, "question": "I've balked at lisp syntax too, but it's a LOT easier to get the hang of than Haskell syntax which is just super complex and weird imo.\n\nThere are clearly issues with clojure/lisp syntax like the wild west of parameters (I strongly prefer Objective-C here) and just the noise introduced by paren that really adds no information in many cases.\n\nThat being said it was a joy to learn Clojure and it's a pretty nice language to work in.", "aSentId": 14645, "answer": "I understand that Haskell's syntax being difficult due to being unfamiliar, but I don't buy that it is super complex considering that the total set of syntactic constructs is absolutely tiny compared to most modern languages. \n\nOne of the things that makes it seem complex is the level to which Prelude functions/types are used for every task. The upside of this is that nearly every simple task is already solved by some function in Prelude, it just takes time to learn all the idiomatic ones.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14646, "question": "I understand that Haskell's syntax being difficult due to being unfamiliar, but I don't buy that it is super complex considering that the total set of syntactic constructs is absolutely tiny compared to most modern languages. \n\nOne of the things that makes it seem complex is the level to which Prelude functions/types are used for every task. The upside of this is that nearly every simple task is already solved by some function in Prelude, it just takes time to learn all the idiomatic ones.", "aSentId": 14647, "answer": "Yeah. I don't think you can make an argument for Haskell being complex syntactically. You could write the EBNF of Haskell2010 on the back of a napkin.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14648, "question": "Yeah. I don't think you can make an argument for Haskell being complex syntactically. You could write the EBNF of Haskell2010 on the back of a napkin.", "aSentId": 14649, "answer": "You can write Brainfuck's grammar in a couple of lines.\n\nThe size of the grammar has nothing to do with the syntactic complexity of the language.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14650, "question": "You can write Brainfuck's grammar in a couple of lines.\n\nThe size of the grammar has nothing to do with the syntactic complexity of the language.\n", "aSentId": 14651, "answer": "I'm not sure I see your point. Yes. Brainfuck and Haskell both share a relatively simple syntax.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14644, "question": "I've balked at lisp syntax too, but it's a LOT easier to get the hang of than Haskell syntax which is just super complex and weird imo.\n\nThere are clearly issues with clojure/lisp syntax like the wild west of parameters (I strongly prefer Objective-C here) and just the noise introduced by paren that really adds no information in many cases.\n\nThat being said it was a joy to learn Clojure and it's a pretty nice language to work in.", "aSentId": 14653, "answer": "I learned some beginner level Haskell and Clojure.  I think lisp is elegant in its simplicity, but I also really liked Haskell's syntax.  I loved how I could look at the type signature and figure out the implementation or at least how to use the function.  \n\nBut once you get past the Haskell basics, there are these weird comments you can put in your files that seem to change language functionality.  e.g., `{-# OPTIONS -fglasgow-exts #-}`    This stuff started to really intimidate me.  I didn't use the language much more after that (for unrelated reasons).  But, it made me feel like I couldn't tell if I learned the majority of the syntax or the tip of the iceberg. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14654, "question": "I learned some beginner level Haskell and Clojure.  I think lisp is elegant in its simplicity, but I also really liked Haskell's syntax.  I loved how I could look at the type signature and figure out the implementation or at least how to use the function.  \n\nBut once you get past the Haskell basics, there are these weird comments you can put in your files that seem to change language functionality.  e.g., `{-# OPTIONS -fglasgow-exts #-}`    This stuff started to really intimidate me.  I didn't use the language much more after that (for unrelated reasons).  But, it made me feel like I couldn't tell if I learned the majority of the syntax or the tip of the iceberg. ", "aSentId": 14655, "answer": "Language extensions are certainly a deep rabbit hole, but you can get easily get by without using any. The only two that I reach for with any regularity are OverloadedStrings and RecordWildCards which are both simple and useful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14656, "question": "Language extensions are certainly a deep rabbit hole, but you can get easily get by without using any. The only two that I reach for with any regularity are OverloadedStrings and RecordWildCards which are both simple and useful.", "aSentId": 14657, "answer": "Which ever one gives you `forall` seems useful, too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14654, "question": "I learned some beginner level Haskell and Clojure.  I think lisp is elegant in its simplicity, but I also really liked Haskell's syntax.  I loved how I could look at the type signature and figure out the implementation or at least how to use the function.  \n\nBut once you get past the Haskell basics, there are these weird comments you can put in your files that seem to change language functionality.  e.g., `{-# OPTIONS -fglasgow-exts #-}`    This stuff started to really intimidate me.  I didn't use the language much more after that (for unrelated reasons).  But, it made me feel like I couldn't tell if I learned the majority of the syntax or the tip of the iceberg. ", "aSentId": 14659, "answer": "Btw, Glasgow opts is deprecated now; we're supposed to turn on individual extensions as needed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14644, "question": "I've balked at lisp syntax too, but it's a LOT easier to get the hang of than Haskell syntax which is just super complex and weird imo.\n\nThere are clearly issues with clojure/lisp syntax like the wild west of parameters (I strongly prefer Objective-C here) and just the noise introduced by paren that really adds no information in many cases.\n\nThat being said it was a joy to learn Clojure and it's a pretty nice language to work in.", "aSentId": 14661, "answer": "The only thing that might feel complex about Haskell's syntax is how layout is significant. But even then, that's optional.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14665, "question": "Non-technical? Non-business? Non-issue.", "aSentId": 14666, "answer": "It works the other way too - my schooling and jobs have all been highly technical but I have strived to both \"increase my word power\" as readers digest might put it, and increase my technical writing skills which helps when writing blog entries and Rosetta Code tasks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14668, "question": "Emacs, the most extensible and customizable editor for programming", "aSentId": 14669, "answer": "Emacs is an amazing operating system, I'm really happy they added evil mode to give it a good text editor. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14670, "question": "Emacs is an amazing operating system, I'm really happy they added evil mode to give it a good text editor. ", "aSentId": 14671, "answer": "hey whatever it takes to get vim weenies to realize their editor is inferior.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14672, "question": "hey whatever it takes to get vim weenies to realize their editor is inferior.", "aSentId": 14673, "answer": "Inferior as an OS, sure.  But vi got text editing right.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14670, "question": "Emacs is an amazing operating system, I'm really happy they added evil mode to give it a good text editor. ", "aSentId": 14675, "answer": "lel classic joke.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14668, "question": "Emacs, the most extensible and customizable editor for programming", "aSentId": 14677, "answer": "Kids these days with their object oriented programing, and their extensible and customizable editors.  Get off my lawn!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14678, "question": "Kids these days with their object oriented programing, and their extensible and customizable editors.  Get off my lawn!", "aSentId": 14679, "answer": "Well, Emacs has EIOIO, which is aguarbly much more powerful than most object systems out there. XD", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14668, "question": "Emacs, the most extensible and customizable editor for programming", "aSentId": 14681, "answer": "True before, still true now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14683, "question": "Why graphics drivers need updates for every new major AAA game", "aSentId": 14684, "answer": "It's nice to have a clean slate with Vulkan - now the cycle can begin again :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14685, "question": "It's nice to have a clean slate with Vulkan - now the cycle can begin again :-)", "aSentId": 14686, "answer": "the question is when it will be ready for use in production. Will gamedev studios immediately jump into using Vulkan? or they wait (several years... ?) \nBut definitely, we need a fresh start! :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14687, "question": "the question is when it will be ready for use in production. Will gamedev studios immediately jump into using Vulkan? or they wait (several years... ?) \nBut definitely, we need a fresh start! :)", "aSentId": 14688, "answer": "Best case scenario:\n\nImmediately on publication of the standard this fall, most major game engines (Unity 5, UE4, Source 2) see \"secret\" patches implementing Vulkan renderers immediately, meaning almost all games running on the latest engines just announced will also have Vulkan support for the most part. Simultaneously, Valve releases their Intel Vulkan Linux driver as free software, AMD reveals their implementation as another free software driver, the combination brings to Mesa and GCC SPIR-V compilers for GLSL and other languages and Khronos releases their SPIR-V to LLVM compiler the same day, meaning all Intel and AMD GPUs see free software driver support on day one, that they can also use on every other platform (Mesa is actually portable).\n\nThat combination means you both have games and graphics that support it on day one.\n\nWorst case scenario:\n\nThe draft changes significantly in later months or is delayed, internal politics means no implementation is right, a lot more bloat or unknown problems emerge that mean all these secret backdoor implementations companies are preparing are completely broken, game engines have no idea what to expect and are not on the \"inside\" of the dealings, and the specification has a lot of bullshit (ex: GL 4.0 shader subroutines or 3.2 compatibility profile) that hugely hamper implementation by GPU manufacturers.\n\nThat means not only do you not have a working implementation on launch, the earliest you might see game engines using it is pushed back years, and in all likelihood sufficient politics will motivate engine developers to take all the wind out of the sails and ignore Vulkan entirely until its provably stable if their first impressions are botched with broken drivers or verbose and alien APIs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14689, "question": "Best case scenario:\n\nImmediately on publication of the standard this fall, most major game engines (Unity 5, UE4, Source 2) see \"secret\" patches implementing Vulkan renderers immediately, meaning almost all games running on the latest engines just announced will also have Vulkan support for the most part. Simultaneously, Valve releases their Intel Vulkan Linux driver as free software, AMD reveals their implementation as another free software driver, the combination brings to Mesa and GCC SPIR-V compilers for GLSL and other languages and Khronos releases their SPIR-V to LLVM compiler the same day, meaning all Intel and AMD GPUs see free software driver support on day one, that they can also use on every other platform (Mesa is actually portable).\n\nThat combination means you both have games and graphics that support it on day one.\n\nWorst case scenario:\n\nThe draft changes significantly in later months or is delayed, internal politics means no implementation is right, a lot more bloat or unknown problems emerge that mean all these secret backdoor implementations companies are preparing are completely broken, game engines have no idea what to expect and are not on the \"inside\" of the dealings, and the specification has a lot of bullshit (ex: GL 4.0 shader subroutines or 3.2 compatibility profile) that hugely hamper implementation by GPU manufacturers.\n\nThat means not only do you not have a working implementation on launch, the earliest you might see game engines using it is pushed back years, and in all likelihood sufficient politics will motivate engine developers to take all the wind out of the sails and ignore Vulkan entirely until its provably stable if their first impressions are botched with broken drivers or verbose and alien APIs.", "aSentId": 14690, "answer": "What ever happened to shader subroutines? I know that absolutely nobody uses them but why is that? Did they turn out slower than alternative approaches (eg. uber shaders)?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14687, "question": "the question is when it will be ready for use in production. Will gamedev studios immediately jump into using Vulkan? or they wait (several years... ?) \nBut definitely, we need a fresh start! :)", "aSentId": 14692, "answer": "Seems like engine makers are on board already. For studios that aren't huge I'm guessing it depends which hardware get Vulkan drivers. If not all reasonably old devices have Vulkan drivers I can see them forgoing Vulkan for a while. I'm also guessing that DX12 might be ready sooner and if their games are primarily Windows-based, they'd probably choose DX12 for now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14693, "question": "Seems like engine makers are on board already. For studios that aren't huge I'm guessing it depends which hardware get Vulkan drivers. If not all reasonably old devices have Vulkan drivers I can see them forgoing Vulkan for a while. I'm also guessing that DX12 might be ready sooner and if their games are primarily Windows-based, they'd probably choose DX12 for now.", "aSentId": 14694, "answer": "DX12 will probably launch sooner (it is launched together with Windows 10, right?), but because it is unsupported on anything but Windows 10 you can bet no more than 10% of Windows users can actually use it by the time Vulkan is released. Assuming manufacturers will release drivers for Vulkan for older Windows versions, Vulkan might actually win over the Windows crowd too. Given the support Vulkan is seeing from engine builders (UE4, Unity, Source2, DICE -- let's hope they even backport Vulkan support to BF4 and Hardline), I'm guessing that's even quite likely to happen.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14695, "question": "DX12 will probably launch sooner (it is launched together with Windows 10, right?), but because it is unsupported on anything but Windows 10 you can bet no more than 10% of Windows users can actually use it by the time Vulkan is released. Assuming manufacturers will release drivers for Vulkan for older Windows versions, Vulkan might actually win over the Windows crowd too. Given the support Vulkan is seeing from engine builders (UE4, Unity, Source2, DICE -- let's hope they even backport Vulkan support to BF4 and Hardline), I'm guessing that's even quite likely to happen.", "aSentId": 14696, "answer": "I am guessing Microsoft is hoping for a faster uptake on Windows 10 since its free for Windows 7 and 8 users.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14687, "question": "the question is when it will be ready for use in production. Will gamedev studios immediately jump into using Vulkan? or they wait (several years... ?) \nBut definitely, we need a fresh start! :)", "aSentId": 14698, "answer": "Most of the bigger studios with engine departments are already investigating it. They'll package it into the engines when they're ready, and everyone else who uses those engines will get the benefit automatically.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14700, "question": "EA/Dice already started using Mantle, and Valve is also heavily involved, so probably not too long for some. Two years at most I would say, considering it will take almost a year to have hardware come out with support for it.", "aSentId": 14701, "answer": "Vulkan does not need new hardware. It is expected to work on any graphics card with OpenGL ES 3.1.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14685, "question": "It's nice to have a clean slate with Vulkan - now the cycle can begin again :-)", "aSentId": 14705, "answer": "Well hopefully the Vulkan API, being so low level will say \"fuck off\" if you're trying to use it incorrectly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14706, "question": "Well hopefully the Vulkan API, being so low level will say \"fuck off\" if you're trying to use it incorrectly.", "aSentId": 14707, "answer": "If you don't use the validation layer, it's pretty likely to just cause undefined behavior I think. Hopefully the validation layer will be good.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14708, "question": "If you don't use the validation layer, it's pretty likely to just cause undefined behavior I think. Hopefully the validation layer will be good.", "aSentId": 14709, "answer": "Or just hard-crash.  Have fun!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14706, "question": "Well hopefully the Vulkan API, being so low level will say \"fuck off\" if you're trying to use it incorrectly.", "aSentId": 14711, "answer": "Why?! Low-level is exactly where you do not hold someone's hand. If they fuck up, they are on their own.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14712, "question": "Why?! Low-level is exactly where you do not hold someone's hand. If they fuck up, they are on their own.", "aSentId": 14713, "answer": "that's exactly what he said", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14714, "question": "that's exactly what he said", "aSentId": 14715, "answer": "He said it in a way that implies it would throw an error. Instead, lack of validation would cause all sorts of weirdness, from outright exceptions to random shit showing up on the screen. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14716, "question": "He said it in a way that implies it would throw an error. Instead, lack of validation would cause all sorts of weirdness, from outright exceptions to random shit showing up on the screen. ", "aSentId": 14717, "answer": "Which is why the move is to now get the devs to *be able to* debug and resolve that in game development, rather than having GPU driver maintainers debug it after game release.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14716, "question": "He said it in a way that implies it would throw an error. Instead, lack of validation would cause all sorts of weirdness, from outright exceptions to random shit showing up on the screen. ", "aSentId": 14719, "answer": "As a software developer, all sorts of weirdness and random shit showing up on the screen is typically how computers tell us (and our code) to \"fuck off\". I think that's what /u/peolorat is getting at.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14720, "question": "As a software developer, all sorts of weirdness and random shit showing up on the screen is typically how computers tell us (and our code) to \"fuck off\". I think that's what /u/peolorat is getting at.", "aSentId": 14721, "answer": "As a software developer, I prefer an error code or exception. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14722, "question": "As a software developer, I prefer an error code or exception. ", "aSentId": 14723, "answer": "What we prefer and what we get are not always aligned. You'll normally be able to count on getting an error code or exception if you're using a high level language. Unless there's some kind of bug in the language itself.\n\nThe lower level you get, the less assurance you have of that. As the saying goes, \"with great power comes great responsibility.\" The hardware is trusting you to tell it the right things to do. If you tell it the wrong things to do, it may still do them, and it won't be an error because who's to say there isn't a legitimate reason that someone might want to do that? The hardware's not going to assume it knows better than you, that's not its job. Its job is to do what you tell it as fast as it possibly can.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14716, "question": "He said it in a way that implies it would throw an error. Instead, lack of validation would cause all sorts of weirdness, from outright exceptions to random shit showing up on the screen. ", "aSentId": 14725, "answer": "All of which are better than *working correctly anyway*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14712, "question": "Why?! Low-level is exactly where you do not hold someone's hand. If they fuck up, they are on their own.", "aSentId": 14728, "answer": "From such an important API I would expect that it has some kind of debug mode where it doesnt just produce weirdness if you mess it up, but rather tells you what its problem is. In non debug mode it can use some fast path without any validation", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14729, "question": "From such an important API I would expect that it has some kind of debug mode where it doesnt just produce weirdness if you mess it up, but rather tells you what its problem is. In non debug mode it can use some fast path without any validation", "aSentId": 14730, "answer": "That's exactly what it has. It's called the validation layer, which is optional ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14706, "question": "Well hopefully the Vulkan API, being so low level will say \"fuck off\" if you're trying to use it incorrectly.", "aSentId": 14732, "answer": "There is no market benefit to making a game not work at all with your card. Customers will blame you.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14733, "question": "There is no market benefit to making a game not work at all with your card. Customers will blame you.", "aSentId": 14734, "answer": "That's where the validation layer is important.  \"It doesn't pass validation, so it's no surprise it doesn't run on most hardware.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14735, "question": "That's where the validation layer is important.  \"It doesn't pass validation, so it's no surprise it doesn't run on most hardware.\"", "aSentId": 14736, "answer": "If you count on developers to do things the right way, you'll quickly end up with the same quandary I point out above.\n\nIf developers really employed (or cared about) such rigor the last system wouldn't have become a mess.\n\nBoss: \"Call of Duty 23 doesn't work\"\n\nYou: \"Well, the developer didn't run the validation I guess. Sucks to be him!\"\n\nBoss: \"More like sucks to be you if you don't fix it.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14737, "question": "If you count on developers to do things the right way, you'll quickly end up with the same quandary I point out above.\n\nIf developers really employed (or cared about) such rigor the last system wouldn't have become a mess.\n\nBoss: \"Call of Duty 23 doesn't work\"\n\nYou: \"Well, the developer didn't run the validation I guess. Sucks to be him!\"\n\nBoss: \"More like sucks to be you if you don't fix it.\"", "aSentId": 14738, "answer": "The developers will have a firm, resolute criteria to judge if they've done the right thing before release.\n\nDeveloper:  \"Call of Duty 23 doesn't pass validation.\"  \nBoss:  \"Why should we care?\"  \nDeveloper:  \"It won't run right.\"  \nEA Boss:  \"So what?\"  \nAny other boss:  \"We need the goodwill of our customers, so don't ship it until it works.\"\n\nSadly, it makes a difference when you're the Comcast of the industry and you have so many exclusives deals that every customer will buy your product even if it's a crock of shit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14739, "question": "The developers will have a firm, resolute criteria to judge if they've done the right thing before release.\n\nDeveloper:  \"Call of Duty 23 doesn't pass validation.\"  \nBoss:  \"Why should we care?\"  \nDeveloper:  \"It won't run right.\"  \nEA Boss:  \"So what?\"  \nAny other boss:  \"We need the goodwill of our customers, so don't ship it until it works.\"\n\nSadly, it makes a difference when you're the Comcast of the industry and you have so many exclusives deals that every customer will buy your product even if it's a crock of shit.", "aSentId": 14740, "answer": "EA Boss: \"So what? It works on most machines, including all the ones from our co-marketer, AMD. And if we don't put it out this week it won't be on shelves in time. Ship it.\"\n\nIf you count on developers to do the right thing for your business you'll go broke in short order.\n\nAnd on top of all this, you're assuming the test in question is 100% exhaustive when no test is. If you think you can test every possible combination of a non-trivial piece of software you believe you can do something no one else can.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14733, "question": "There is no market benefit to making a game not work at all with your card. Customers will blame you.", "aSentId": 14742, "answer": "that's why many publishers have compatibility labs that are just insane arrays of hardware to test.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14685, "question": "It's nice to have a clean slate with Vulkan - now the cycle can begin again :-)", "aSentId": 14744, "answer": "I am legitimately excited for DX12 and Vulkan as a programmer - but I completely understand the sentiment!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14747, "question": "I wouldn't bet the inheritance on Vulkan being any more popular than OpenGL already is, tbh. The smart bet is DX 12. ", "aSentId": 14748, "answer": "Yea, I mean, talk about an insane uphill battle to get adoption.  Source 2 is already pushing forward, but still, large scale acceptance will take awhile.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14747, "question": "I wouldn't bet the inheritance on Vulkan being any more popular than OpenGL already is, tbh. The smart bet is DX 12. ", "aSentId": 14750, "answer": "Based on what? Vulkan has more platform support, even among Windows versions, and already has ~~literally all~~ most relevant hardware *and* software vendors aboard.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14751, "question": "Based on what? Vulkan has more platform support, even among Windows versions, and already has ~~literally all~~ most relevant hardware *and* software vendors aboard.", "aSentId": 14752, "answer": "Epic and Valve are the only relevant software venders?  Ok...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14747, "question": "I wouldn't bet the inheritance on Vulkan being any more popular than OpenGL already is, tbh. The smart bet is DX 12. ", "aSentId": 14754, "answer": "Given that both are starting with a clean slate and that DX12 runs on Windows 10 while Vulkan will run on pretty much anything I'd put my money on Vulkan becoming the popular choice by quite a margin.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14756, "question": "Vulkan is not going to take off.", "aSentId": 14757, "answer": "Every major tech company in the world other than Microsoft is in on it.\n\nI would be surprised if it *didn't* take off.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14758, "question": "Every major tech company in the world other than Microsoft is in on it.\n\nI would be surprised if it *didn't* take off.", "aSentId": 14759, "answer": "I will PayPal you $500 if any AAA game is released only using vulkan.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14760, "question": "I will PayPal you $500 if any AAA game is released only using vulkan.", "aSentId": 14761, "answer": "RemindMe! One year", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14762, "question": "RemindMe! One year", "aSentId": 14763, "answer": "There should be a website that lets you place bets that cover events over extended periods of time... Like, once you put your money where your mouth is, it's truly locked in until that date. Can't imagine many people would be too interested in it though. Or maybe they would. Political elections, Superbowl result predictions made right before the first game of the season... can't even begin to imagine what kind of legal complications there might be though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14764, "question": "There should be a website that lets you place bets that cover events over extended periods of time... Like, once you put your money where your mouth is, it's truly locked in until that date. Can't imagine many people would be too interested in it though. Or maybe they would. Political elections, Superbowl result predictions made right before the first game of the season... can't even begin to imagine what kind of legal complications there might be though.", "aSentId": 14765, "answer": "longbets.org", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14764, "question": "There should be a website that lets you place bets that cover events over extended periods of time... Like, once you put your money where your mouth is, it's truly locked in until that date. Can't imagine many people would be too interested in it though. Or maybe they would. Political elections, Superbowl result predictions made right before the first game of the season... can't even begin to imagine what kind of legal complications there might be though.", "aSentId": 14767, "answer": "That's an awesome idea!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14764, "question": "There should be a website that lets you place bets that cover events over extended periods of time... Like, once you put your money where your mouth is, it's truly locked in until that date. Can't imagine many people would be too interested in it though. Or maybe they would. Political elections, Superbowl result predictions made right before the first game of the season... can't even begin to imagine what kind of legal complications there might be though.", "aSentId": 14769, "answer": "Intrade.\n\nThough it died due to legal issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14762, "question": "RemindMe! One year", "aSentId": 14772, "answer": "That's a little outlandishly optimistic, the spec isn't finished and you think that all relevant vendors will have mature drivers/tools within a time-frame that allows a non-tiny game to be made and finished *exclusively* with a vulkan backend within one year?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14773, "question": "That's a little outlandishly optimistic, the spec isn't finished and you think that all relevant vendors will have mature drivers/tools within a time-frame that allows a non-tiny game to be made and finished *exclusively* with a vulkan backend within one year?", "aSentId": 14774, "answer": "I agree, but I'm hoping by that time we'll at least start hearing more about it and have a better idea of vendors/engines/games that will be supporting it. Then I'll setup another reminder if required ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14760, "question": "I will PayPal you $500 if any AAA game is released only using vulkan.", "aSentId": 14776, "answer": "This is a safer bet than most people realize.\n\n\"Only\" is the key word.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14777, "question": "This is a safer bet than most people realize.\n\n\"Only\" is the key word.", "aSentId": 14778, "answer": "Also, 'AAA' is nice-and-vague! Even if Valve comes out with a Vulkan-only game in the next few years he can just say, \"Valve aren't AAA, they're indie!\". ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14779, "question": "Also, 'AAA' is nice-and-vague! Even if Valve comes out with a Vulkan-only game in the next few years he can just say, \"Valve aren't AAA, they're indie!\". ", "aSentId": 14780, "answer": "He won't need to.\n\nPeople aren't going to suddenly stop releasing games that use DirectX. \n\nInertia is a hell of a thing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14781, "question": "He won't need to.\n\nPeople aren't going to suddenly stop releasing games that use DirectX. \n\nInertia is a hell of a thing.", "aSentId": 14782, "answer": "In all honesty, I don't see any reason other than 'inertia' for developers to keep using DirectX assuming Vulkan is supported well on Windows. Seems like you get all the multiplatform benefits of OpenGL without any of the classic API/state machine problems. \n\nWith Vulkan you have the possibility of hitting all big PC platforms, the biggest mobile platforms, and even the potential to handle future devices and platforms. With D3D12 you're getting Windows, Windows Phone, and Xbox One.\n\nAny serious game engine that wants to license itself out to other developers will eventually support both in order to hit *all* of those platforms. But, if I had to pick one API to start with, I'd pick the more modern one that supports more platforms with an overall larger user base - Vulkan. Remember, Windows is no longer the majority platform.. The smartest move Microsoft could make at this point would be to drop Direct3D after 12 or turn it into a higher level of abstraction on top of Vulkan, lest they make their slice of the pie that much smaller. Old MS would never do that, but hopefully the new leadership is smart enough to know that \"if you can't beat 'em, join 'em\".\n\nEdit: Not that it even matters, because I can only imagine that middleware engines like Unreal, Unity, Source 2, etc., are only going to become more popular with AAA and indie game devs as time goes on. We'll probably start to see a bigger separation between 'game companies' and 'engine companies'. Companies like Capcom and Square Enix are finding it benefits them more to focus on making games by licencing UE4, and it helps indies make great games with tiny teams. Those engines are going to support everything, and the average game dev will have nothing to do with rendering code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14760, "question": "I will PayPal you $500 if any AAA game is released only using vulkan.", "aSentId": 14784, "answer": "If I have an existing engine, why in the Hell would I throw away my already working stuff? I've already got paths for DX and OpenGL, why wouldn't I just add a third path?\n\nThis idea that it's only taken off if stuff is shipped with it exclusively is idiotic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14785, "question": "If I have an existing engine, why in the Hell would I throw away my already working stuff? I've already got paths for DX and OpenGL, why wouldn't I just add a third path?\n\nThis idea that it's only taken off if stuff is shipped with it exclusively is idiotic.", "aSentId": 14786, "answer": "Because you get more performance?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14787, "question": "Because you get more performance?", "aSentId": 14788, "answer": "That's why I might add Vulkan support. Doesn't give me a reason to get rid of all my existing work, which currently allows me to reach far more consumers", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14787, "question": "Because you get more performance?", "aSentId": 14790, "answer": "$60 from someone getting substandard performance is still $60.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14787, "question": "Because you get more performance?", "aSentId": 14792, "answer": "You get all the performance you're going to get by adding a Vulkan path. Dropping the others won't help you.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14795, "question": "My guess it'll probably only be the major studios using it. I think the novelty of low level and writing directly to memory instead of using function calls, will wear off.", "aSentId": 14796, "answer": "&gt; I think the novelty of low level and writing directly to memory instead of using function calls\n\nThat's not what vulkan does.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14797, "question": "&gt; I think the novelty of low level and writing directly to memory instead of using function calls\n\nThat's not what vulkan does.", "aSentId": 14798, "answer": "It blows my mind the disconnect between what people think Vulkan is and what it actually is.\n\n\nIt's  OpenGL with all the 1.x/2.x spec crap and all the shitty code OP is talking about ripped out.  It has a new name so developers don't go trying to write OpenGL 1/2 code and hope it works anymore.\n\n\nWhat it isn't: \n\n* A drop down box in an IDE that gives you an instant build for linux.\n\n* Some esoteric low level API for graphics cards, those are the drivers vendor specific  Vulkan implementations will call into...\n\n* An API that will make 3D graphics so easy a grade schooler can do it.\n\n* A set of features for making the best looking games we've seen in the past decade.\n\n* a way to make your old graphics card get 100 more FPS in current existing games ala the DirectX 12 update which does massive code optimization.  NEW Games that utilize it (are written in vulkan, not openGL) may get better FPS than they would using OGL due to not going through all the code OP is talking about.  Clear shouldn't be a 1000+ line function, it should clear the buffer...\n\n\nWhat it is:\n\n* A multi-company collaboration to define the best practices for a free and open 3d rendering API based off the Mantle project.\n\n* A rename of the current technology that is OpenGL to remove the expectation of backwards compatibility of OpenGL 1/2 legacy code and practices that people still use when  making new applications.  Since openGL 4 still supports all that crap because deprecation never meant actually removing old unused functionality.\n\n* A move away from what OP is talking about by defining a clear and concise standard that cannot be wavered.\n\n\n\nthe fact that so many non-programmers care about vulkan and spout crap about it all over the internet is really really cringey.  It's literally an update to open GL like v3 was.  A complete re-write and re-thinking of the paradigm in which openGL works to better operate with newer hardware.  The mistake they made the first time was calling it OpenGL 3, because everyone kept and still keeps writing the old style code.  80% of the tutorials online are for \"old\" openGL. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14799, "question": "It blows my mind the disconnect between what people think Vulkan is and what it actually is.\n\n\nIt's  OpenGL with all the 1.x/2.x spec crap and all the shitty code OP is talking about ripped out.  It has a new name so developers don't go trying to write OpenGL 1/2 code and hope it works anymore.\n\n\nWhat it isn't: \n\n* A drop down box in an IDE that gives you an instant build for linux.\n\n* Some esoteric low level API for graphics cards, those are the drivers vendor specific  Vulkan implementations will call into...\n\n* An API that will make 3D graphics so easy a grade schooler can do it.\n\n* A set of features for making the best looking games we've seen in the past decade.\n\n* a way to make your old graphics card get 100 more FPS in current existing games ala the DirectX 12 update which does massive code optimization.  NEW Games that utilize it (are written in vulkan, not openGL) may get better FPS than they would using OGL due to not going through all the code OP is talking about.  Clear shouldn't be a 1000+ line function, it should clear the buffer...\n\n\nWhat it is:\n\n* A multi-company collaboration to define the best practices for a free and open 3d rendering API based off the Mantle project.\n\n* A rename of the current technology that is OpenGL to remove the expectation of backwards compatibility of OpenGL 1/2 legacy code and practices that people still use when  making new applications.  Since openGL 4 still supports all that crap because deprecation never meant actually removing old unused functionality.\n\n* A move away from what OP is talking about by defining a clear and concise standard that cannot be wavered.\n\n\n\nthe fact that so many non-programmers care about vulkan and spout crap about it all over the internet is really really cringey.  It's literally an update to open GL like v3 was.  A complete re-write and re-thinking of the paradigm in which openGL works to better operate with newer hardware.  The mistake they made the first time was calling it OpenGL 3, because everyone kept and still keeps writing the old style code.  80% of the tutorials online are for \"old\" openGL. ", "aSentId": 14800, "answer": "I don't know if I would say that it's \"still OpenGL\", it has very little in common with OpenGL (other than being a 3D API and being made by Khronos).  \nEven the reference GLSL to SPIR-V compiler is not part of the Vulkan standard itself.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14801, "question": "I don't know if I would say that it's \"still OpenGL\", it has very little in common with OpenGL (other than being a 3D API and being made by Khronos).  \nEven the reference GLSL to SPIR-V compiler is not part of the Vulkan standard itself.\n", "aSentId": 14802, "answer": "yeah, im in /r/programming and not pc gaming haha.\n\n\nIt's a re-write by all intents and purposes with a new paradigm.  The reason it isn't called \"openGL\" anything though is to remove those expectations that we can keep writing the same old code we've been writing since 1997.  remember it was coined GLNext before Vulkan.\n\n\nIt's doing OpenGL 3 the right way.  which was like Vulkan in it's intent but kept the old code around.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14799, "question": "It blows my mind the disconnect between what people think Vulkan is and what it actually is.\n\n\nIt's  OpenGL with all the 1.x/2.x spec crap and all the shitty code OP is talking about ripped out.  It has a new name so developers don't go trying to write OpenGL 1/2 code and hope it works anymore.\n\n\nWhat it isn't: \n\n* A drop down box in an IDE that gives you an instant build for linux.\n\n* Some esoteric low level API for graphics cards, those are the drivers vendor specific  Vulkan implementations will call into...\n\n* An API that will make 3D graphics so easy a grade schooler can do it.\n\n* A set of features for making the best looking games we've seen in the past decade.\n\n* a way to make your old graphics card get 100 more FPS in current existing games ala the DirectX 12 update which does massive code optimization.  NEW Games that utilize it (are written in vulkan, not openGL) may get better FPS than they would using OGL due to not going through all the code OP is talking about.  Clear shouldn't be a 1000+ line function, it should clear the buffer...\n\n\nWhat it is:\n\n* A multi-company collaboration to define the best practices for a free and open 3d rendering API based off the Mantle project.\n\n* A rename of the current technology that is OpenGL to remove the expectation of backwards compatibility of OpenGL 1/2 legacy code and practices that people still use when  making new applications.  Since openGL 4 still supports all that crap because deprecation never meant actually removing old unused functionality.\n\n* A move away from what OP is talking about by defining a clear and concise standard that cannot be wavered.\n\n\n\nthe fact that so many non-programmers care about vulkan and spout crap about it all over the internet is really really cringey.  It's literally an update to open GL like v3 was.  A complete re-write and re-thinking of the paradigm in which openGL works to better operate with newer hardware.  The mistake they made the first time was calling it OpenGL 3, because everyone kept and still keeps writing the old style code.  80% of the tutorials online are for \"old\" openGL. ", "aSentId": 14804, "answer": "&gt; \n&gt; \n&gt; \n&gt; \n&gt; a way to make your old graphics card get 100 more FPS in current existing games ala the DirectX 12 update which does massive code optimization.\n\nMaybe I misunderstand this bit but are you saying that DirectX 12 will give a massive performance boost while Vulkan does not?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14805, "question": "&gt; \n&gt; \n&gt; \n&gt; \n&gt; a way to make your old graphics card get 100 more FPS in current existing games ala the DirectX 12 update which does massive code optimization.\n\nMaybe I misunderstand this bit but are you saying that DirectX 12 will give a massive performance boost while Vulkan does not?", "aSentId": 14806, "answer": "Direct X 12 will give a boost to existing games because it is a massive code-cleanup and optimization to an API that isn't changing.  Games using DirectX 9/10/11 will make API calls into code that runs better.\n\n\nVulkan will not because it is a completely new API and won't be compatible with existing openGL code.  Old games won't take advantage of it.  Vulkan will result in a performance boost to new games using it using the equivalent graphics commands because again, it's a clean new API.  If you draw the same thing in OpenGL and Vulkan Vulkan will likely run better.\n\n\nedit:\n\nIt's a great step forward for the APU platform and intel graphics cards because the hacked up state of directX and OpenGL cripples them more than they should be.  Intel's ogl libs are usually pretty terrible too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14807, "question": "Direct X 12 will give a boost to existing games because it is a massive code-cleanup and optimization to an API that isn't changing.  Games using DirectX 9/10/11 will make API calls into code that runs better.\n\n\nVulkan will not because it is a completely new API and won't be compatible with existing openGL code.  Old games won't take advantage of it.  Vulkan will result in a performance boost to new games using it using the equivalent graphics commands because again, it's a clean new API.  If you draw the same thing in OpenGL and Vulkan Vulkan will likely run better.\n\n\nedit:\n\nIt's a great step forward for the APU platform and intel graphics cards because the hacked up state of directX and OpenGL cripples them more than they should be.  Intel's ogl libs are usually pretty terrible too.", "aSentId": 14808, "answer": "&gt;Direct X 12 will give a boost to existing games because it is a massive code-cleanup and optimization to an API that isn't changing. Games using DirectX 9/10/11 will make API calls into code that runs better.\n\nWhat? Do you have any idea what you are talking about?\n\n&gt;Vulkan will not because it is a completely new API and won't be compatible with existing openGL code. Old games won't take advantage of it. Vulkan will result in a performance boost to new games using it using the equivalent graphics commands because again, it's a clean new API. If you draw the same thing in OpenGL and Vulkan Vulkan will likely run better.\n\nThe exact same is true of DX12. Only new/rewritten games will benefit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14809, "question": "&gt;Direct X 12 will give a boost to existing games because it is a massive code-cleanup and optimization to an API that isn't changing. Games using DirectX 9/10/11 will make API calls into code that runs better.\n\nWhat? Do you have any idea what you are talking about?\n\n&gt;Vulkan will not because it is a completely new API and won't be compatible with existing openGL code. Old games won't take advantage of it. Vulkan will result in a performance boost to new games using it using the equivalent graphics commands because again, it's a clean new API. If you draw the same thing in OpenGL and Vulkan Vulkan will likely run better.\n\nThe exact same is true of DX12. Only new/rewritten games will benefit.", "aSentId": 14810, "answer": "That is exactly what I was thinking. Developers that want to upgrade to DX12 can't just swap out the library and gain a massive performance boost.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14799, "question": "It blows my mind the disconnect between what people think Vulkan is and what it actually is.\n\n\nIt's  OpenGL with all the 1.x/2.x spec crap and all the shitty code OP is talking about ripped out.  It has a new name so developers don't go trying to write OpenGL 1/2 code and hope it works anymore.\n\n\nWhat it isn't: \n\n* A drop down box in an IDE that gives you an instant build for linux.\n\n* Some esoteric low level API for graphics cards, those are the drivers vendor specific  Vulkan implementations will call into...\n\n* An API that will make 3D graphics so easy a grade schooler can do it.\n\n* A set of features for making the best looking games we've seen in the past decade.\n\n* a way to make your old graphics card get 100 more FPS in current existing games ala the DirectX 12 update which does massive code optimization.  NEW Games that utilize it (are written in vulkan, not openGL) may get better FPS than they would using OGL due to not going through all the code OP is talking about.  Clear shouldn't be a 1000+ line function, it should clear the buffer...\n\n\nWhat it is:\n\n* A multi-company collaboration to define the best practices for a free and open 3d rendering API based off the Mantle project.\n\n* A rename of the current technology that is OpenGL to remove the expectation of backwards compatibility of OpenGL 1/2 legacy code and practices that people still use when  making new applications.  Since openGL 4 still supports all that crap because deprecation never meant actually removing old unused functionality.\n\n* A move away from what OP is talking about by defining a clear and concise standard that cannot be wavered.\n\n\n\nthe fact that so many non-programmers care about vulkan and spout crap about it all over the internet is really really cringey.  It's literally an update to open GL like v3 was.  A complete re-write and re-thinking of the paradigm in which openGL works to better operate with newer hardware.  The mistake they made the first time was calling it OpenGL 3, because everyone kept and still keeps writing the old style code.  80% of the tutorials online are for \"old\" openGL. ", "aSentId": 14812, "answer": "&gt; It's OpenGL with all the 1.x/2.x spec crap and all the shitty \n\nPlease, do not spread misinformation. Vulkan has nothing to do with OpenGL. They are two parallel project (OpenGL will be developed stil). Basically Vulkan is Mantle + SPIR-V language.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14813, "question": "&gt; It's OpenGL with all the 1.x/2.x spec crap and all the shitty \n\nPlease, do not spread misinformation. Vulkan has nothing to do with OpenGL. They are two parallel project (OpenGL will be developed stil). Basically Vulkan is Mantle + SPIR-V language.\n\n", "aSentId": 14814, "answer": "I over simplified it a bit.  It's most definitely an eventual replacement for openGL though. I don't think by developing the project with the code name glnext for a year or so really says much about OpenGL sticking around for a long period of time afterwards.\n\n\nI know OpenGL 4.5 is about to come out too though.\n\n\nedit: Vulkan is a clean start so embeded systems and APU/intel HD cards don't suck so bad, by getting rid of all the hacky fixes and stuff over the years.  And it gets everyone on the same page.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14816, "question": "&gt;It's OpenGL with all the 1.x/2.x spec crap and all the shitty code OP is talking about ripped out.\n\nIts not, its Mantle based.", "aSentId": 14817, "answer": "It is, it was also termed as GLNext.  I mean I over-simplified it a bit but it's much like the move from v2 to v3.  v3 wasn't openGL as we knew it, it was radically different, except it still included OpenGL 1/2 specs as well, hence why no one actually moved away from it.\n\n\nI mean deep down Vulkan is a re-write from scratch and a very well defined specification.  It's a hard set of rules everyone is actually going to follow this time, so that it doesn't end up bloated and misused.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14818, "question": "It is, it was also termed as GLNext.  I mean I over-simplified it a bit but it's much like the move from v2 to v3.  v3 wasn't openGL as we knew it, it was radically different, except it still included OpenGL 1/2 specs as well, hence why no one actually moved away from it.\n\n\nI mean deep down Vulkan is a re-write from scratch and a very well defined specification.  It's a hard set of rules everyone is actually going to follow this time, so that it doesn't end up bloated and misused.", "aSentId": 14819, "answer": "&gt; v3 wasn't openGL as we knew it, it was radically different\n\nI don't think it was that all, which was why many people were disappointed at the time.\n\nIf you think that shaders, vbos, etc. are new to OpenGL 3 then you are wrong.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14797, "question": "&gt; I think the novelty of low level and writing directly to memory instead of using function calls\n\nThat's not what vulkan does.", "aSentId": 14821, "answer": "[Oh, but it does.](http://stackoverflow.com/questions/28835100/how-do-ubos-ssbos-differ-from-vulkans-shader-memory-bindings) It's not really new though. It was supported in OpenGL already via extensions.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14822, "question": "[Oh, but it does.](http://stackoverflow.com/questions/28835100/how-do-ubos-ssbos-differ-from-vulkans-shader-memory-bindings) It's not really new though. It was supported in OpenGL already via extensions.", "aSentId": 14823, "answer": "I thought he was talking about manually writing to the command buffer or something.\n\nYeah, passing data via \"map/unmap\" versus passing data as a parameter to a function does not seem like a huge difference to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14797, "question": "&gt; I think the novelty of low level and writing directly to memory instead of using function calls\n\nThat's not what vulkan does.", "aSentId": 14825, "answer": "it is for shader data at least, although thinking about it, perhaps that isn't so terrible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14795, "question": "My guess it'll probably only be the major studios using it. I think the novelty of low level and writing directly to memory instead of using function calls, will wear off.", "aSentId": 14827, "answer": "I'll bet Unreal and Unity will jump on it fairly quickly. There's a lot of users right there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14828, "question": "I'll bet Unreal and Unity will jump on it fairly quickly. There's a lot of users right there.", "aSentId": 14829, "answer": "Well, duh ;) Valve, DICE, Oxide Games, Epic and Unity guys did give a presentation at GDC together.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14758, "question": "Every major tech company in the world other than Microsoft is in on it.\n\nI would be surprised if it *didn't* take off.", "aSentId": 14831, "answer": "Almost every single AAA game released is on at least 2 (PC and XBOX) Microsoft platforms. The only things that aren't are nintendo games and the rare Playstation exclusive.\n\nMicrosoft not being in on it is a huge deal.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14832, "question": "Almost every single AAA game released is on at least 2 (PC and XBOX) Microsoft platforms. The only things that aren't are nintendo games and the rare Playstation exclusive.\n\nMicrosoft not being in on it is a huge deal.", "aSentId": 14833, "answer": "Windows drivers will happen since AMD, Nvidia, and Intel are in on it.\n\nAAA developers already have to use multiple different APIs for their games. In a typical multiplatform release you'll see 3-4 different APIs in use: PS4 (called GNM, IIRC it's based on OGL), Xbone (D3D-based but a bit different from Windows), Windows (almost always D3D), and Linux and OSX (OGL).\n\nMaking something Vulkan exclusive would be just as ridiculous as making it OGL or D3D exclusive.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14834, "question": "Windows drivers will happen since AMD, Nvidia, and Intel are in on it.\n\nAAA developers already have to use multiple different APIs for their games. In a typical multiplatform release you'll see 3-4 different APIs in use: PS4 (called GNM, IIRC it's based on OGL), Xbone (D3D-based but a bit different from Windows), Windows (almost always D3D), and Linux and OSX (OGL).\n\nMaking something Vulkan exclusive would be just as ridiculous as making it OGL or D3D exclusive.", "aSentId": 14835, "answer": "There are plenty of games that are D3D exclusive, it's only very recently where this stopped being the trend. Linux AAA support is a relatively new phenomenon.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14836, "question": "There are plenty of games that are D3D exclusive, it's only very recently where this stopped being the trend. Linux AAA support is a relatively new phenomenon.", "aSentId": 14837, "answer": "&gt; Linux AAA support is a relatively new phenomenon.\n\nI would say that it was a really isolated phenomenon until recently. I remember playing UT2004 on Linux. But damn were X11 and the proprietary GPU drivers brittle as fuck on Debian, basically every update left me with a black screen and made me tinker with the xorg.conf again (or reinstall the driver if the kernel got an update).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14838, "question": "&gt; Linux AAA support is a relatively new phenomenon.\n\nI would say that it was a really isolated phenomenon until recently. I remember playing UT2004 on Linux. But damn were X11 and the proprietary GPU drivers brittle as fuck on Debian, basically every update left me with a black screen and made me tinker with the xorg.conf again (or reinstall the driver if the kernel got an update).", "aSentId": 14839, "answer": "I played Rune and Tribes2 a great deal (finished Rune, and played 50-60 person Tribes maps regularly) around 2001-2. I didn't have problems. On a well-maintained (I install everything by source tarballs) Slackware though. But I'd be more inclined to say Loki did a fantastic job (as might be evident in SDL and OpenAL being offshoots of their porting).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14838, "question": "&gt; Linux AAA support is a relatively new phenomenon.\n\nI would say that it was a really isolated phenomenon until recently. I remember playing UT2004 on Linux. But damn were X11 and the proprietary GPU drivers brittle as fuck on Debian, basically every update left me with a black screen and made me tinker with the xorg.conf again (or reinstall the driver if the kernel got an update).", "aSentId": 14841, "answer": "UT2004 even came with linux binaries on the dvd, a thing not even id managed for Doom3. They needed a patch to not crash on my system after some time, but then that was the only problem I ever had with that game, and it took only a week or so.\n\nThere's still remarkably many people online playing it, particularly onslaught.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14834, "question": "Windows drivers will happen since AMD, Nvidia, and Intel are in on it.\n\nAAA developers already have to use multiple different APIs for their games. In a typical multiplatform release you'll see 3-4 different APIs in use: PS4 (called GNM, IIRC it's based on OGL), Xbone (D3D-based but a bit different from Windows), Windows (almost always D3D), and Linux and OSX (OGL).\n\nMaking something Vulkan exclusive would be just as ridiculous as making it OGL or D3D exclusive.", "aSentId": 14843, "answer": "&gt; PS4 (called GNM, IIRC it's based on OGL)\n\nAFAIK GNM is not OGL based. GNM more directly and correctly exposes the modern hardware, and it may be more correct to say Mantle/Vulkan is based on GNM, or is GNM-like. (PS4 uses AMD GPU, Mantle is AMD's next-gen PC Graphics API before it is revised and rebranded to become Vulkan.)\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14756, "question": "Vulkan is not going to take off.", "aSentId": 14845, "answer": "Why don't you think so? Quite a few companies were interested in Mantle, and Vulkan is bascially Mantle with even better appeal.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14756, "question": "Vulkan is not going to take off.", "aSentId": 14847, "answer": "It's already taking off though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14848, "question": "It's already taking off though.", "aSentId": 14849, "answer": "Many things get this far - the thing isn't whether they *start* taking off but whether they ever *finish* taking off (and get widely accepted and used) or whether they crash and burn first.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14683, "question": "Why graphics drivers need updates for every new major AAA game", "aSentId": 14852, "answer": "I knew a guy who used to work on them for NVidia.\n\nOne of the biggest reasons isn't addressed here.\n\nThe biggest reason is that the companies know that cards are measured by performance on AAA titles. So they put in specific optimizations in the driver for each AAA title. Well, almost all. Some of them they just go to the company and help them rewrite the game before it comes out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14853, "question": "I knew a guy who used to work on them for NVidia.\n\nOne of the biggest reasons isn't addressed here.\n\nThe biggest reason is that the companies know that cards are measured by performance on AAA titles. So they put in specific optimizations in the driver for each AAA title. Well, almost all. Some of them they just go to the company and help them rewrite the game before it comes out.", "aSentId": 14854, "answer": "To give an example, there was a AAA game that spent 2/3rds of its time drawing stuff that was so far out in the distance it was barely resolved. And it was drawn with the same draw quality including AA as close-up triangles.\n\nNVidia changed the driver so it would draw those triangles in a lower quality and with lesser AA than the near ones. It made the frame rate much more even (change less with what you were looking at), and you couldn't see the difference.\n\nThe game could have done this itself, but it didn't. So NVidia did it after the fact.\n\nThis kind of thing was exposed at one time with people noticing that if you renamed programs (including benchmarks) before you ran them, the results were noticeably different in performance and sometimes quality. In the benchmark case it was pretty pernicious because they could just make the triangles look like garbage since no one ever looked at them, just measured how fast they came out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14855, "question": "To give an example, there was a AAA game that spent 2/3rds of its time drawing stuff that was so far out in the distance it was barely resolved. And it was drawn with the same draw quality including AA as close-up triangles.\n\nNVidia changed the driver so it would draw those triangles in a lower quality and with lesser AA than the near ones. It made the frame rate much more even (change less with what you were looking at), and you couldn't see the difference.\n\nThe game could have done this itself, but it didn't. So NVidia did it after the fact.\n\nThis kind of thing was exposed at one time with people noticing that if you renamed programs (including benchmarks) before you ran them, the results were noticeably different in performance and sometimes quality. In the benchmark case it was pretty pernicious because they could just make the triangles look like garbage since no one ever looked at them, just measured how fast they came out.", "aSentId": 14856, "answer": "quack3.exe", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14683, "question": "Why graphics drivers need updates for every new major AAA game", "aSentId": 14858, "answer": "Well that's depressing. At least now I know why drivers are hundreds of MB in size.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14859, "question": "Well that's depressing. At least now I know why drivers are hundreds of MB in size.", "aSentId": 14860, "answer": "And also, somewhat relatedly, why mesa and other FOSS implementations are so absolutely adamant on spec-compliance. They can't be arsed to fix game code, and the only way to get companies to fix their games is to say \"you know, just follow the spec, if you do, *then* it's our problem, otherwise, get lost\".\n\nAll that probably results in quite some lost performance, unrecoverably so, but also saves metric tons of aspirin.\n\nThings are arguably easier to debug, too, at least the game developers have insight to the whole stack (modulo firmware). Choose a fast path, yes, but if you leave the spec doing that, you're on your own.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14861, "question": "And also, somewhat relatedly, why mesa and other FOSS implementations are so absolutely adamant on spec-compliance. They can't be arsed to fix game code, and the only way to get companies to fix their games is to say \"you know, just follow the spec, if you do, *then* it's our problem, otherwise, get lost\".\n\nAll that probably results in quite some lost performance, unrecoverably so, but also saves metric tons of aspirin.\n\nThings are arguably easier to debug, too, at least the game developers have insight to the whole stack (modulo firmware). Choose a fast path, yes, but if you leave the spec doing that, you're on your own.", "aSentId": 14862, "answer": "im amazed ati/nvida play that game.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14863, "question": "im amazed ati/nvida play that game.", "aSentId": 14864, "answer": "Seems to me it is in their favor, keeping the price to entry so high for competition.\n\nOr maybe they where just overtaken by over-aggressive marketing departments, getting new shit out the door and polish the turds before they drip too much on their customer's floors.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14865, "question": "Seems to me it is in their favor, keeping the price to entry so high for competition.\n\nOr maybe they where just overtaken by over-aggressive marketing departments, getting new shit out the door and polish the turds before they drip too much on their customer's floors.", "aSentId": 14866, "answer": "the entry barrier is gigantic. Some support guys wont matter.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14867, "question": "the entry barrier is gigantic. Some support guys wont matter.", "aSentId": 14868, "answer": "Yeah... first you have to build a factory to produce the GPU you just designed. I can't even begin to imagine how much that would cost.\n\nEdit: I found an article [here](http://www.semiconductor-technology.com/projects/amd/) claiming that a fab in Germany costed $2.5 billion over 4 years to build, starting in 2003. Probably costs even more now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14869, "question": "Yeah... first you have to build a factory to produce the GPU you just designed. I can't even begin to imagine how much that would cost.\n\nEdit: I found an article [here](http://www.semiconductor-technology.com/projects/amd/) claiming that a fab in Germany costed $2.5 billion over 4 years to build, starting in 2003. Probably costs even more now.", "aSentId": 14870, "answer": "you can outsource chip production, but good luck designing a competitive product.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14871, "question": "you can outsource chip production, but good luck designing a competitive product.", "aSentId": 14872, "answer": "If you outsource to a modern fab like TSMC, Samsung, GlobalFoundries, etc. it'll absolutely be competitive. Because that's what everyone else is using as well. Unless you're Intel. \n\nSure, you might not be competitive with Intel's cutting-edge process, since they rarely manufacture chips for other companies they don't have a very close relationship with (they are always a process node or so ahead of everyone else - this is why Intel is starting to ship chips at 14nm while everyone else is still at 20nm-28nm). But it will be competitive with pretty much every other semiconductor company in the world. This is also part of the reason why AMD's per-core CPU performance and performance/watt lag so far behind Intel's (not only do they have an inferior architecture, they are gimped by the process too). ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14873, "question": "If you outsource to a modern fab like TSMC, Samsung, GlobalFoundries, etc. it'll absolutely be competitive. Because that's what everyone else is using as well. Unless you're Intel. \n\nSure, you might not be competitive with Intel's cutting-edge process, since they rarely manufacture chips for other companies they don't have a very close relationship with (they are always a process node or so ahead of everyone else - this is why Intel is starting to ship chips at 14nm while everyone else is still at 20nm-28nm). But it will be competitive with pretty much every other semiconductor company in the world. This is also part of the reason why AMD's per-core CPU performance and performance/watt lag so far behind Intel's (not only do they have an inferior architecture, they are gimped by the process too). ", "aSentId": 14874, "answer": "thats what i said. Production isnt the issue. But designing a competitive product/ chip is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14875, "question": "thats what i said. Production isnt the issue. But designing a competitive product/ chip is.", "aSentId": 14876, "answer": "Read your sentence wrong :P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14873, "question": "If you outsource to a modern fab like TSMC, Samsung, GlobalFoundries, etc. it'll absolutely be competitive. Because that's what everyone else is using as well. Unless you're Intel. \n\nSure, you might not be competitive with Intel's cutting-edge process, since they rarely manufacture chips for other companies they don't have a very close relationship with (they are always a process node or so ahead of everyone else - this is why Intel is starting to ship chips at 14nm while everyone else is still at 20nm-28nm). But it will be competitive with pretty much every other semiconductor company in the world. This is also part of the reason why AMD's per-core CPU performance and performance/watt lag so far behind Intel's (not only do they have an inferior architecture, they are gimped by the process too). ", "aSentId": 14878, "answer": "&gt; If you outsource to a modern fab like TSMC, Samsung, GlobalFoundries, etc. it'll absolutely be competitive.\n\nAre you suggesting that that fab will design your GPU for you? Or are you ignoring YEARS of experience and R&amp;D both nvidia and amd have behind them? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14869, "question": "Yeah... first you have to build a factory to produce the GPU you just designed. I can't even begin to imagine how much that would cost.\n\nEdit: I found an article [here](http://www.semiconductor-technology.com/projects/amd/) claiming that a fab in Germany costed $2.5 billion over 4 years to build, starting in 2003. Probably costs even more now.", "aSentId": 14880, "answer": "A startup can get a custom chip fabbed on a modern process (28nm, and very soon, 20nm) with \"relatively\" little initial investment (recent example: Bitcoin ASICs). You don't need to own a fab to have custom chips made.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14881, "question": "A startup can get a custom chip fabbed on a modern process (28nm, and very soon, 20nm) with \"relatively\" little initial investment (recent example: Bitcoin ASICs). You don't need to own a fab to have custom chips made.", "aSentId": 14882, "answer": "my impression is that \"little investment\" in this case is still millions of dollars.\n\nThe masks alone can run in the $1-$2 million range. That's before getting into design, verification, software, or EDA tool costs. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14869, "question": "Yeah... first you have to build a factory to produce the GPU you just designed. I can't even begin to imagine how much that would cost.\n\nEdit: I found an article [here](http://www.semiconductor-technology.com/projects/amd/) claiming that a fab in Germany costed $2.5 billion over 4 years to build, starting in 2003. Probably costs even more now.", "aSentId": 14884, "answer": "And that fab is meant for 65nm, that's seriously ancient now.\n\nThe latest cards are sub-30nm I believe, and Intel is pushing the process limitations like a crack addict trying to get their fix.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14863, "question": "im amazed ati/nvida play that game.", "aSentId": 14887, "answer": "If Battlefield 5 is less buggy on NVIDIA cars, then people will buy NVIDIA cards instead of ATI cards when they upgrade their GPU.\n\nIt doesn't matter who's at fault for the bugs to begin with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14888, "question": "If Battlefield 5 is less buggy on NVIDIA cars, then people will buy NVIDIA cards instead of ATI cards when they upgrade their GPU.\n\nIt doesn't matter who's at fault for the bugs to begin with.", "aSentId": 14889, "answer": "&gt; NVIDIA cars\n\nHeh, the chip that runs the display in a Tesla is made by NVIDIA.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14863, "question": "im amazed ati/nvida play that game.", "aSentId": 14891, "answer": "They must have some reason to play it but I'm having a hard time thinking of any. The game makers depend on them way more than they depend on game makers - they can pretty much call the shots. It's not like EA can do anything to nvidia if they tell EA to fix their code. They're not going to create a rival graphics card.\n\nMaybe game makers are getting kickbacks and guarantees for driver bug fixes for putting video card marquees at the beginning of games. Maybe EA could go to nvidia and tell them they're going to start telling people to buy ATI cards if they don't play ball. Either way, this is odd and lame for me as a game player.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14892, "question": "They must have some reason to play it but I'm having a hard time thinking of any. The game makers depend on them way more than they depend on game makers - they can pretty much call the shots. It's not like EA can do anything to nvidia if they tell EA to fix their code. They're not going to create a rival graphics card.\n\nMaybe game makers are getting kickbacks and guarantees for driver bug fixes for putting video card marquees at the beginning of games. Maybe EA could go to nvidia and tell them they're going to start telling people to buy ATI cards if they don't play ball. Either way, this is odd and lame for me as a game player.", "aSentId": 14893, "answer": "Gamers would kick up a massive fuss if the latest AAA games didn't run perfectly on their card but did for someone else. It's in the best interest of the GPU manufacturers to make sure every new game works on their card just in case it doesn't work for their competitor and they can steal a few customers. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14861, "question": "And also, somewhat relatedly, why mesa and other FOSS implementations are so absolutely adamant on spec-compliance. They can't be arsed to fix game code, and the only way to get companies to fix their games is to say \"you know, just follow the spec, if you do, *then* it's our problem, otherwise, get lost\".\n\nAll that probably results in quite some lost performance, unrecoverably so, but also saves metric tons of aspirin.\n\nThings are arguably easier to debug, too, at least the game developers have insight to the whole stack (modulo firmware). Choose a fast path, yes, but if you leave the spec doing that, you're on your own.", "aSentId": 14896, "answer": "I imagine it worked both ways.  A lot of games probably did things incorrectly because for awhile the driver was buggy.  So when you go to fix it you can either put in the compatibility kludge, or break a bunch of games that are no longer supported, which will result in some people not upgrading their driver, which will make an even bigger mess and make your hardware look bad.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14859, "question": "Well that's depressing. At least now I know why drivers are hundreds of MB in size.", "aSentId": 14898, "answer": "When you start including code to support specific applications in the driver... it kinda stops being a driver.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14899, "question": "When you start including code to support specific applications in the driver... it kinda stops being a driver.", "aSentId": 14900, "answer": "It's a pattern-matching AI. Catalyst AI (wink wink)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14902, "question": "&gt; Their idea was to produce a nice, pretty looking front end and deal with all the awful stuff quietly in the background. Yeah it's easy to code against, but it was always a bitch and a half to debug or tune. \n\nI'm actually a bit sick of the crowd that focuses on how simple/ easy APIs are while ignoring the problem domain they abstract away, ending up with painfully leaky abstractions everywhere. \n\nI'm glad that we may see APIs that are closer to the pipeline, closer to how things work, so that we can write what we intend, and write the abstractions that we need, for our applications, and anyone who doesn't want to can just look for a higher level generic API that has all of the problems that we're running into now.", "aSentId": 14903, "answer": "I like how Graham Sellers put it. Vulkan \"is not really a low level API , it's just a much much better abstraction of the hardware we have today\". I mean, you still talk to the driver and the driver still pretty much has to transform your calls into something the GPU can process.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14904, "question": "I like how Graham Sellers put it. Vulkan \"is not really a low level API , it's just a much much better abstraction of the hardware we have today\". I mean, you still talk to the driver and the driver still pretty much has to transform your calls into something the GPU can process.", "aSentId": 14905, "answer": "That's good to hear. Personally I'll just be happy when the average graphics tutorial (OpenGL particularly) isn't advising people to do things like glBegin() glEnd() still...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14906, "question": "That's good to hear. Personally I'll just be happy when the average graphics tutorial (OpenGL particularly) isn't advising people to do things like glBegin() glEnd() still...", "aSentId": 14907, "answer": "It's good that it has a new name, because now you can google for \"vulkan tutorial\" instead of \"opengl tutorial\", and you might get something that's actually relevant to modern graphics programming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14908, "question": "It's good that it has a new name, because now you can google for \"vulkan tutorial\" instead of \"opengl tutorial\", and you might get something that's actually relevant to modern graphics programming.", "aSentId": 14909, "answer": "On only pure Vulkan, it takes something like 600 lines of code to put a triangle on the screen. You need to roll your own GPU memory management. There will be no Vulkan tutorials that are meant for 3d beginners.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14910, "question": "On only pure Vulkan, it takes something like 600 lines of code to put a triangle on the screen. You need to roll your own GPU memory management. There will be no Vulkan tutorials that are meant for 3d beginners.", "aSentId": 14911, "answer": "Isn't Vulcan an API which can be handled via c or Ruby and whatnot? Chances are that there will be a good bit of wrappers if it is really that much code to get a triangle on the screen. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14912, "question": "Isn't Vulcan an API which can be handled via c or Ruby and whatnot? Chances are that there will be a good bit of wrappers if it is really that much code to get a triangle on the screen. ", "aSentId": 14913, "answer": "Yes, and some of them will look like OpenGL 1/2 (good for beginners to get results quickly), and some of them will look like OpenGL 3/4, and some of them will look completely different.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14912, "question": "Isn't Vulcan an API which can be handled via c or Ruby and whatnot? Chances are that there will be a good bit of wrappers if it is really that much code to get a triangle on the screen. ", "aSentId": 14915, "answer": "The amount of code contains minimal boilerplate. It's so large because there are real policy choices that need to be made, from how you organize your graphics pipeline to things like gpu memory management. Any wrapper that shrinks it needs to be really opinionated, to the point that it's not really a Vulkan wrapper, it's a 3d engine that uses Vulkan in some specific way.\n\nNormal people already mostly use third-party engines to do 3D. The era of Vulkan/DX12 makes them nearly mandatory. And that's okay.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14910, "question": "On only pure Vulkan, it takes something like 600 lines of code to put a triangle on the screen. You need to roll your own GPU memory management. There will be no Vulkan tutorials that are meant for 3d beginners.", "aSentId": 14917, "answer": "Exactly. You're gonna see tutorials for simple Vulkan-based engines, you're even gonna see engines that focus on code clarity above performance for research and example reasons (AKA code-is-tutorial). But the era of tutorials for \"Hello Triangle\" directly on top of the GPU abstraction layer is probably over.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14918, "question": "Exactly. You're gonna see tutorials for simple Vulkan-based engines, you're even gonna see engines that focus on code clarity above performance for research and example reasons (AKA code-is-tutorial). But the era of tutorials for \"Hello Triangle\" directly on top of the GPU abstraction layer is probably over.", "aSentId": 14919, "answer": "Which is good - nobody really needed this. \n\nDifferent engines will have different layers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14910, "question": "On only pure Vulkan, it takes something like 600 lines of code to put a triangle on the screen. You need to roll your own GPU memory management. There will be no Vulkan tutorials that are meant for 3d beginners.", "aSentId": 14921, "answer": "Does that exclude window management?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14922, "question": "Does that exclude window management?", "aSentId": 14923, "answer": "I'm not sure, not my number. I do know it includes manually allocating GPU memory from a single large buffer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14906, "question": "That's good to hear. Personally I'll just be happy when the average graphics tutorial (OpenGL particularly) isn't advising people to do things like glBegin() glEnd() still...", "aSentId": 14925, "answer": "It's really, really hard to teach people the full workings of modern OpenGL from the ground up.  It's probably misguided to teach the fixed-function pipeline for a while and then say \"throw most of that away, here's how to write, compile, link, and load a shader program.\"  But that appears to be the most common approach (it's what they taught in my graphics course; I learned the modern version because I didn't want everything I learned to be antiquated).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14926, "question": "It's really, really hard to teach people the full workings of modern OpenGL from the ground up.  It's probably misguided to teach the fixed-function pipeline for a while and then say \"throw most of that away, here's how to write, compile, link, and load a shader program.\"  But that appears to be the most common approach (it's what they taught in my graphics course; I learned the modern version because I didn't want everything I learned to be antiquated).", "aSentId": 14927, "answer": "I don't think it's such a bad idea to teach graphics first on a fixed function pipeline. While the technology has changed enormously, the fundamental concepts haven't and a fixed function pipeline is just simpler.\n\nAnd if you're not a beginner you probably already know OpenGL :).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14928, "question": "I don't think it's such a bad idea to teach graphics first on a fixed function pipeline. While the technology has changed enormously, the fundamental concepts haven't and a fixed function pipeline is just simpler.\n\nAnd if you're not a beginner you probably already know OpenGL :).", "aSentId": 14929, "answer": "Maybe I'm just weird but I found the fixed function stop utterly confusing and getting into the more modern forms was a lot simpler.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14930, "question": "Maybe I'm just weird but I found the fixed function stop utterly confusing and getting into the more modern forms was a lot simpler.", "aSentId": 14931, "answer": "It's confusing, because you saw the end-state of it. It started with a few simple toggles. Then they added more toggles. Then a shitload more. You saw that state, and properly found it confusing. 30 api calls to do what a 3-line shader can do. The driver-code to convert shading-related toggles into a shader is about 70,000 lines. API statemachine toggles are like 700k+ lines .", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14930, "question": "Maybe I'm just weird but I found the fixed function stop utterly confusing and getting into the more modern forms was a lot simpler.", "aSentId": 14933, "answer": "You don't need to learn the whole fixed function pipeline - just enough to get some triangles on the screen, so you can learn about triangles and vertices and 3D math and stuff.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14928, "question": "I don't think it's such a bad idea to teach graphics first on a fixed function pipeline. While the technology has changed enormously, the fundamental concepts haven't and a fixed function pipeline is just simpler.\n\nAnd if you're not a beginner you probably already know OpenGL :).", "aSentId": 14935, "answer": "I was a beginner at the time I took the class.  The prof mentioned a couple times that everything we were doing was deprecated and considered bad practice, so I learned both.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14906, "question": "That's good to hear. Personally I'll just be happy when the average graphics tutorial (OpenGL particularly) isn't advising people to do things like glBegin() glEnd() still...", "aSentId": 14937, "answer": "This scares me, because I've tried to teach myself OpenGL once or twice, and almost every tutorial I see includes those function calls. =/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14938, "question": "This scares me, because I've tried to teach myself OpenGL once or twice, and almost every tutorial I see includes those function calls. =/", "aSentId": 14939, "answer": "Don't worry about it! Just be aware that you've been learning the older 'fixed function pipeline' way for doing OpenGL. The more modern way of doing rendering is with a 'programmable pipeline', where you compile your own shader programs and pass data to them.\n\nVulkan is a bigger leap in that, programmable, direction and is moving completely away from the old fixed function stuff. The reason the 'hello triangle' program is a lot bigger now is that you're forced to do extra work at the beginning to set up your virtual devices and your pipeline before you start actually rendering.\n\nIf you learn as much as you can about the programmable pipeline and how shaders work (also look into OpenCL!), you'll probably be in good shape to start learning Vulkan by the time the API is finalized.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14940, "question": "Don't worry about it! Just be aware that you've been learning the older 'fixed function pipeline' way for doing OpenGL. The more modern way of doing rendering is with a 'programmable pipeline', where you compile your own shader programs and pass data to them.\n\nVulkan is a bigger leap in that, programmable, direction and is moving completely away from the old fixed function stuff. The reason the 'hello triangle' program is a lot bigger now is that you're forced to do extra work at the beginning to set up your virtual devices and your pipeline before you start actually rendering.\n\nIf you learn as much as you can about the programmable pipeline and how shaders work (also look into OpenCL!), you'll probably be in good shape to start learning Vulkan by the time the API is finalized.", "aSentId": 14941, "answer": "That's intriguing. I'm very familiar with OpenCL. (Did my senior seminar presentation on it about a month ago, heh.) Are there any resources that can help me build on that prior knowledge to get into modern 3D rendering?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14938, "question": "This scares me, because I've tried to teach myself OpenGL once or twice, and almost every tutorial I see includes those function calls. =/", "aSentId": 14943, "answer": "None of the tutorials in the sidebar of /r/opengl use the fixed function pipeline. I liked https://open.gl/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14938, "question": "This scares me, because I've tried to teach myself OpenGL once or twice, and almost every tutorial I see includes those function calls. =/", "aSentId": 14945, "answer": "Learn using OpenGL ES 2.0 (or higher) tutorials meant for mobile instead. They will teach you 90% of what you need for modern OpenGL on the desktop. There is no fixed function at all in those APIs, and the ES2 header is pretty damn small.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14948, "question": "What should we use instead and what resources are available to teach us the right way?", "aSentId": 14949, "answer": "You need to be passing your vertices to a shader program. Look up GLSL, vertex arrays and vertex buffers. Specifically, target at least OpenGL3 and above.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14951, "question": "We're not supposed to use glBegin() anymore? What do you use instead? I haven't done any graphics programming in a decade...", "aSentId": 14952, "answer": "glDrawElements using VBO (Vertex Buffer Objects) would be a start. glBegin is like training wheels. You'll never *want* to use them again once you take them off and learn how to ride properly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14951, "question": "We're not supposed to use glBegin() anymore? What do you use instead? I haven't done any graphics programming in a decade...", "aSentId": 14954, "answer": "Shader programs, vertex buffers, etc. You pass your vertices to a shader to render now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14902, "question": "&gt; Their idea was to produce a nice, pretty looking front end and deal with all the awful stuff quietly in the background. Yeah it's easy to code against, but it was always a bitch and a half to debug or tune. \n\nI'm actually a bit sick of the crowd that focuses on how simple/ easy APIs are while ignoring the problem domain they abstract away, ending up with painfully leaky abstractions everywhere. \n\nI'm glad that we may see APIs that are closer to the pipeline, closer to how things work, so that we can write what we intend, and write the abstractions that we need, for our applications, and anyone who doesn't want to can just look for a higher level generic API that has all of the problems that we're running into now.", "aSentId": 14956, "answer": "If you make it close \"to how things work\" **now**, it just won't work in future.\n\nE.g. in early 90s people did things directly on top of \"bare metal\" because it was the only way to do it.  It wasn't pretty.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14902, "question": "&gt; Their idea was to produce a nice, pretty looking front end and deal with all the awful stuff quietly in the background. Yeah it's easy to code against, but it was always a bitch and a half to debug or tune. \n\nI'm actually a bit sick of the crowd that focuses on how simple/ easy APIs are while ignoring the problem domain they abstract away, ending up with painfully leaky abstractions everywhere. \n\nI'm glad that we may see APIs that are closer to the pipeline, closer to how things work, so that we can write what we intend, and write the abstractions that we need, for our applications, and anyone who doesn't want to can just look for a higher level generic API that has all of the problems that we're running into now.", "aSentId": 14958, "answer": "This is 99% of the problem I have with HTML5, and the UI paradigm in Android. Just give me a fucking VM for god's sake!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14960, "question": "Game-specific special cases -- as far as the eye can see.", "aSentId": 14961, "answer": "All the way down, in fact.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14966, "question": "I'd love to see a full source code leak of one of the nvidia or amd gpu drivers at some point... ", "aSentId": 14967, "answer": "I hope your internet doesn't have data caps.../s", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14969, "question": "It seems like production studios are able to pawn off work to video card drivers to meet deadlines. ", "aSentId": 14970, "answer": "Not \"are able\"... \"must\". Even the major production studios do not appear to get permission to peer inside the drivers, and if they encounter a problem that they can't resolve by just bashing on the code until it works, are all but legally enjoined from reverse engineering the graphics cards drivers to figure out what's really going on.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14971, "question": "Not \"are able\"... \"must\". Even the major production studios do not appear to get permission to peer inside the drivers, and if they encounter a problem that they can't resolve by just bashing on the code until it works, are all but legally enjoined from reverse engineering the graphics cards drivers to figure out what's really going on.", "aSentId": 14972, "answer": "The article made it sound like the API's are well documented.  There's just so much information to grok that it's far easier to just get it working enough for release day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14973, "question": "The article made it sound like the API's are well documented.  There's just so much information to grok that it's far easier to just get it working enough for release day.", "aSentId": 14974, "answer": "The API is well documented. The implementations, even at the driver level, are not perfectly implemented, and vary from card to card, driver version to driver version. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14973, "question": "The article made it sound like the API's are well documented.  There's just so much information to grok that it's far easier to just get it working enough for release day.", "aSentId": 14976, "answer": "I can provide you a simple API to \"scrape a webpage\" that takes in a URL and returns you a CSV file of \"all the relevant information on the page\". I can specify this in one line. The implementation is impossibly massive because under the hood I'll have a gigantic `if url.startsWith(\"http://reddit.com/\")` block that switches on every conceivable page to custom implement whatever extractor makes sense.\n\nThat's what the problem is here; the majority of the code in these drivers is `if card == GTX980 &amp;&amp; game = GTA4.patchedLessThan('1.3.4.124')`, to say nothing of \n\n    if calledWithoutStartContext() {\n        implicitlyAndSecretlyDoLotsOfBullshit() \n    }\n\nIt's not the size of the surface, it's the sheer staggering size of what that surface is hiding.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14977, "question": "I can provide you a simple API to \"scrape a webpage\" that takes in a URL and returns you a CSV file of \"all the relevant information on the page\". I can specify this in one line. The implementation is impossibly massive because under the hood I'll have a gigantic `if url.startsWith(\"http://reddit.com/\")` block that switches on every conceivable page to custom implement whatever extractor makes sense.\n\nThat's what the problem is here; the majority of the code in these drivers is `if card == GTX980 &amp;&amp; game = GTA4.patchedLessThan('1.3.4.124')`, to say nothing of \n\n    if calledWithoutStartContext() {\n        implicitlyAndSecretlyDoLotsOfBullshit() \n    }\n\nIt's not the size of the surface, it's the sheer staggering size of what that surface is hiding.", "aSentId": 14978, "answer": "Jesus christ, game development is worse than enterprise.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14979, "question": "Jesus christ, game development is worse than enterprise.", "aSentId": 14980, "answer": "I've hacked my fair share around bugs in JVM implementations on mobile devices and yes, it's still a better job than enterprise.\n\nSome of those implementations were atrocious. Others were nice, until you hit some corner case... One I specifically remember was the Motorola A1000. After some time running, reading a value from a byte array would randomly yield values outside byte range (that is, there were patterns in bits higher than #7 that shouldn't be there). No, there's no way in hell that's going to be patched, J2ME phones don't get patched, but luckily that phone had enough memory to just bump the array to ints. *Finding* that cause was the tricky bit. QA had to come over to show me the bug on the phone before I even believed it could exist, I thought they were fucking with me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14979, "question": "Jesus christ, game development is worse than enterprise.", "aSentId": 14982, "answer": "Nah, people just like to complain a lot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14979, "question": "Jesus christ, game development is worse than enterprise.", "aSentId": 14984, "answer": "AAA game development practically _is_ enterprise.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14969, "question": "It seems like production studios are able to pawn off work to video card drivers to meet deadlines. ", "aSentId": 14986, "answer": "Considering the large production studios are pretty much the sole reason video cards are being purchased, at least in any quick upgrade procession...it makes a lot of sense the card makers would bend over backwards to make the games run as best as they can.  It really is good for everyone concerned.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14987, "question": "Considering the large production studios are pretty much the sole reason video cards are being purchased, at least in any quick upgrade procession...it makes a lot of sense the card makers would bend over backwards to make the games run as best as they can.  It really is good for everyone concerned.", "aSentId": 14988, "answer": "Many years ago, yes. But CUDA / GPGPU drives a lot of development now.  Obviously not as much as gaming market, but yea, it isn't just driven by games anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14969, "question": "It seems like production studios are able to pawn off work to video card drivers to meet deadlines. ", "aSentId": 14990, "answer": "Yea it doesn't work like that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14992, "question": "wait, nvidia fixes Game company fuckups via their driver? :X", "aSentId": 14993, "answer": "No, nvidia don't have a working implementation of their driver in the first place, and rather than fix that they fix the edge cases that come up. AMD do the same. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14994, "question": "No, nvidia don't have a working implementation of their driver in the first place, and rather than fix that they fix the edge cases that come up. AMD do the same. ", "aSentId": 14995, "answer": "More like AMD try to do the same but can't catch up as quickly, which is why their drivers have the reputation they do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14996, "question": "More like AMD try to do the same but can't catch up as quickly, which is why their drivers have the reputation they do.", "aSentId": 14997, "answer": "From what I understand, AMD is actually closer to the spec than NVIDIA. NVIDIA, on the other hand, is more fault tolerant. They do a better job of doing what the devs probably wanted but coded incorrectly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 14999, "question": "Is there anywhere to learn information like this to avoid conflicts with drivers?\nMaybe I didn't understand the article correctly, but I feel like if I'm making a game, there's more I can do on my part.", "aSentId": 15000, "answer": "The best thing you can do is to test on as many hardware and driver combinations you can to avoid creating bugs in your application that are masked by specific drivers.\n\nBut that's just a best practice advice anyone would give you, and especially for smaller devs it can be too expensive.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15002, "question": "Opinion from someone who have never touch driver code or wrote anything graphics intensive. \n\nTo me it seems that simply AAA games do not comply to any specs (they do exist, right?), or maybe do not even try to. Then driver engineers, instead of saying 'get lost', are trying to fit the driver for the game. IMHO it should be opposite. \n\nGame programmers should comply to specs and problem is solved.", "aSentId": 15003, "answer": "That's not necessary true. OP describe everything from hardware vendor point of view.  But the reality is driver itself can have bug as well (just like every software) and devs have to find ways to work around them.  There is also the business side of this whole thing. EVERY graphic card vendor want his card to show up as the best choice in whatever latest gaming benchmark on Tom's Hardware (or any hardware review website).  So they will go the extra mile and go INTO the driver and optimize just for that game, They are the only people that have access to the actual hardware level of the driver which game devs don't have access to.\n\nThe software side of things can be made better by better API or diagnostic tools in the future, but chances are the hardware are going to get updated faster than tools can catch up... The business side of things is just the way it is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15002, "question": "Opinion from someone who have never touch driver code or wrote anything graphics intensive. \n\nTo me it seems that simply AAA games do not comply to any specs (they do exist, right?), or maybe do not even try to. Then driver engineers, instead of saying 'get lost', are trying to fit the driver for the game. IMHO it should be opposite. \n\nGame programmers should comply to specs and problem is solved.", "aSentId": 15005, "answer": "When you want to be cutting edge and make your game really push what hardware can do, it is hard to avoid.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15002, "question": "Opinion from someone who have never touch driver code or wrote anything graphics intensive. \n\nTo me it seems that simply AAA games do not comply to any specs (they do exist, right?), or maybe do not even try to. Then driver engineers, instead of saying 'get lost', are trying to fit the driver for the game. IMHO it should be opposite. \n\nGame programmers should comply to specs and problem is solved.", "aSentId": 15007, "answer": "Well, it's not only a spec thing... There's a performance component to it too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15009, "question": "&gt; That essentially took a three year lag time from when we got hardware to the point that compute could be directly integrated into the core of a render pipeline, which is considered normal today but was bluntly revolutionary at production scale in 2012\n\nCan someone explain this a little simpler, I mostly don't understand the definition of 'compute' that he's using here, unless that's just directly referencing shader cores. ", "aSentId": 15010, "answer": "Refer to 'compute' earlier in the same paragraph.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15012, "question": "&gt; ultimately what it comes down to is the new models are hard to code for\n\nI find that hard to believe.  For one, coding against OpenGL has always been extremely painful due to an insane state machine model.  Secondly, I've written some 3D rendering code that runs on the CPU.  I mean instead of using DirectX or OpenGL, writing the code that draws a line on the screen or sample a texture to color a triangle.  What I found is, when your API isn't actively fighting against you, rendering 3D graphics is actually pretty easy.\n\nI mean, seriously, I wrote a 3D wireframe renderer.  in BASIC.  in jr. high.  real-time animation of spinning objects, you could fly around with the camera, the whole nine wards.  And it really wasn't even that complicated.\n\nFast forward about seven years and now I'm a junior in college taking a computer graphics class, and I'm absolutely flabbergasted at how difficult it is to do even the simplest thing in OpenGL...\n\nAnd this guy is saying the replacement for OpenGL is going to be even harder to use?", "aSentId": 15013, "answer": "OpenGL is hard to use in the sense that the documentation is spotty, the API itself is just obtuse, and it has lots of bugs, edge cases, etc. I *suspect* the difficulty with the newer APIs is that you'll need to prerequisite knowledge of a 3D rendering pipeline in order to do 3D rendering since the API will more closely match the underlying pipelines. To most people who don't understand 3D graphics, that's harder than following tutorials on a cryptic API.\n\nAt least, that's what I got from it. I might be entirely wrong, and corrections would be appreciated.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15012, "question": "&gt; ultimately what it comes down to is the new models are hard to code for\n\nI find that hard to believe.  For one, coding against OpenGL has always been extremely painful due to an insane state machine model.  Secondly, I've written some 3D rendering code that runs on the CPU.  I mean instead of using DirectX or OpenGL, writing the code that draws a line on the screen or sample a texture to color a triangle.  What I found is, when your API isn't actively fighting against you, rendering 3D graphics is actually pretty easy.\n\nI mean, seriously, I wrote a 3D wireframe renderer.  in BASIC.  in jr. high.  real-time animation of spinning objects, you could fly around with the camera, the whole nine wards.  And it really wasn't even that complicated.\n\nFast forward about seven years and now I'm a junior in college taking a computer graphics class, and I'm absolutely flabbergasted at how difficult it is to do even the simplest thing in OpenGL...\n\nAnd this guy is saying the replacement for OpenGL is going to be even harder to use?", "aSentId": 15015, "answer": "&gt; What I found is, when your API isn't actively fighting against you, rendering 3D graphics is actually pretty easy.\n\nI suspect this has more to do with the fact that you were rendering with the CPU rather than any inherent flaws in the APIs. Their primary purpose is to abstract away the GPU pipeline, which is significantly less intuitive to code for than *anything* that runs directly on the CPU, particularly when sitting on top of an OS with virtual memory and whatnot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15012, "question": "&gt; ultimately what it comes down to is the new models are hard to code for\n\nI find that hard to believe.  For one, coding against OpenGL has always been extremely painful due to an insane state machine model.  Secondly, I've written some 3D rendering code that runs on the CPU.  I mean instead of using DirectX or OpenGL, writing the code that draws a line on the screen or sample a texture to color a triangle.  What I found is, when your API isn't actively fighting against you, rendering 3D graphics is actually pretty easy.\n\nI mean, seriously, I wrote a 3D wireframe renderer.  in BASIC.  in jr. high.  real-time animation of spinning objects, you could fly around with the camera, the whole nine wards.  And it really wasn't even that complicated.\n\nFast forward about seven years and now I'm a junior in college taking a computer graphics class, and I'm absolutely flabbergasted at how difficult it is to do even the simplest thing in OpenGL...\n\nAnd this guy is saying the replacement for OpenGL is going to be even harder to use?", "aSentId": 15017, "answer": "That's like comparing writing a Java program to print Hello World to writing a C program to take input from a hardware device and display it to a display device to print Hello World.  They do the same thing, but one has abstracted the hard stuff away for you at the cost of limiting what you can do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15018, "question": "That's like comparing writing a Java program to print Hello World to writing a C program to take input from a hardware device and display it to a display device to print Hello World.  They do the same thing, but one has abstracted the hard stuff away for you at the cost of limiting what you can do.", "aSentId": 15019, "answer": "So like in C doing that is trivial with printf and scanf, but in Java you need an InputStream, InputStreamReader, BufferedReader, OutputStream, and a PrintStream class?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15021, "question": "Sometimes I just wonder why games and such cant just hand over a scene graph to the graphics driver and just say render this.", "aSentId": 15022, "answer": "OpenGL and DirectX were already too close to that model.  It's impossible to get peak performance because the driver must handle the most general case possible.  Real applications usually have additional structure that can be exploited for performance.  A game needs to render many different low-poly objects with separate textures, while a CAD or mesh modeling program needs to display a few high-poly objects.  OpenGL must support both, but the driver has no way to know - and thus, exploit - that structure besides runtime heuristics.  Game developers want to get closer to the metal, to manipulate command queues, memory transfers, etc.\n\nIt sounds like you want something like a game engine without the AI, physics, etc.  Once the low-level gfx APIs become popular, I bet there will be a market for such a tool.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15023, "question": "OpenGL and DirectX were already too close to that model.  It's impossible to get peak performance because the driver must handle the most general case possible.  Real applications usually have additional structure that can be exploited for performance.  A game needs to render many different low-poly objects with separate textures, while a CAD or mesh modeling program needs to display a few high-poly objects.  OpenGL must support both, but the driver has no way to know - and thus, exploit - that structure besides runtime heuristics.  Game developers want to get closer to the metal, to manipulate command queues, memory transfers, etc.\n\nIt sounds like you want something like a game engine without the AI, physics, etc.  Once the low-level gfx APIs become popular, I bet there will be a market for such a tool.", "aSentId": 15024, "answer": "A game engine without the AI, physics, etc is the scene graph.\n\nWhere is this additional structure that real applications have?\n\nWhy data driven and or declaritive system isnt used more in 3d graphics is beyond me.\n\nFiddling around with command queues, memory transfers and such is a sign of tight binding and probably will break once the rendering pipeline changes yet again.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15025, "question": "A game engine without the AI, physics, etc is the scene graph.\n\nWhere is this additional structure that real applications have?\n\nWhy data driven and or declaritive system isnt used more in 3d graphics is beyond me.\n\nFiddling around with command queues, memory transfers and such is a sign of tight binding and probably will break once the rendering pipeline changes yet again.", "aSentId": 15026, "answer": "This conversation reminds me a lot of a friend of mine, who was trying to argue that the filesystem model is outdated, and it's time to move on to something more like a database.\n\nThe thing was, though, a database is not the best model for everything you'd want to store in nonvolatile storage. Neither is a filesystem, but a filesystem is *fantastic* at being the underpinning for higher-level abstractions. So a database is way easier to implement on top of a filesystem, than it is to implement a filesystem on top of a database. So it makes more sense for the filesystem to be the universal interface.\n\nEverything you're advocating for would work great *as a specific use case.* Not so much for the \"building blocks of life\" that a general-purpose hardware abstraction has to be. It's much easier to build an OpenGL-like layer on top of a Vulkan-like layer, than the other way around.\n\nThis is actually one of the harshest lessons of the last decade of GPU APIs. We've been dealing with the pain of an API that got in the way of flexible layering, rather than encouraging it. We've spent years building filesystems on top of databases and gritting our teeth at how hard it is to make them performant. We've been bitten by putting a huge portion of the stack's high-level complexity in the part of the stack that each IHV has to reimplement (and that open source has to reimplement again, *ffuuuccckkkkk*).\n\nNobody's arguing that a declarative approach to 3D graphics is worthless, or useless, or bad, or anything like that. Declarative is good. Databases are good too. They should exist! Just, they should exist at a layer which makes sense for them to exist on. This really is a perfect job for a higher level library, which would work portably anywhere there's a Vulkan driver (which is easy for any IHV or open source team to write because the Vulkan spec is small and a good match for the hardware).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15025, "question": "A game engine without the AI, physics, etc is the scene graph.\n\nWhere is this additional structure that real applications have?\n\nWhy data driven and or declaritive system isnt used more in 3d graphics is beyond me.\n\nFiddling around with command queues, memory transfers and such is a sign of tight binding and probably will break once the rendering pipeline changes yet again.", "aSentId": 15028, "answer": "The smart console engines from FP developers always data-drive their render.  They have subtle but clear-cut layers and memory allocations for cache efficiency so that when it gets time to pass on what will go to renderer, it is fast.  The render pipeline in general is pretty stable, you're not forced into compute or hull shaders, they just fall away without usage.  Again, people don't write their engines to the most general case of support, they write their engines with clear goals for art, engineering, and design so that it can be as flexible as they need (or think they need) and provide the artistic feel they want from their render steps.  \n\nSure UDK writes a very general renderer, but UDK is also a hog that constantly need maintenance and optimizations from teams that use it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15025, "question": "A game engine without the AI, physics, etc is the scene graph.\n\nWhere is this additional structure that real applications have?\n\nWhy data driven and or declaritive system isnt used more in 3d graphics is beyond me.\n\nFiddling around with command queues, memory transfers and such is a sign of tight binding and probably will break once the rendering pipeline changes yet again.", "aSentId": 15030, "answer": "When you consider the game engine and the driver API together as a single system, that's kind of the way it's going. How many games use a 3rd party engine rather than rolling their own?\n\nWith new low-level APIs, the major engines will have easier/better access to the underlying hardware, and developers will simultaneously be more dependent on those engines.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15021, "question": "Sometimes I just wonder why games and such cant just hand over a scene graph to the graphics driver and just say render this.", "aSentId": 15032, "answer": "Because there's not enough control. What if you want an improved shadow quality over the version the scene graph provides? Or you want to disable ambient occlusion in favour of real GI as your scene is simple enough to support it? Or if you want to handle thousands of instances of the same simple model, or a handful of very complex ones?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15021, "question": "Sometimes I just wonder why games and such cant just hand over a scene graph to the graphics driver and just say render this.", "aSentId": 15034, "answer": "The spec for that would be absurd.  So many in-house engines use clever tricks for rendering.  Some render a frame behind, some render two frames behind, some don't do depth pass at the same time as others.  Some have many render targets they composite in very specific ways to get results.  Its simply impossible to abstract that away into a scene graph that will be 100% working.  On top of that, how do you distill all the extra bits and bobs out of your engine-side scene graph to prep for driver-side hand-over.  That memcpy is going to be huge and inefficient.\n\nA simple example that makes life hard : alpha-blending and transparency.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15036, "question": "Can someone ELI5 the difference between current state DirectX, and how Mantle, Vulcan, and DX12 are different? I'm so confused.", "aSentId": 15037, "answer": "No, it is pretty technical and doesn't fit anything a five year old would understand.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15038, "question": "No, it is pretty technical and doesn't fit anything a five year old would understand.", "aSentId": 15039, "answer": "Fine. ELI CS major :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15040, "question": "Fine. ELI CS major :)", "aSentId": 15041, "answer": "So, current DX11 (and OpenGL for that matter) are basically really complex state machines. The graphics commands modify the state that the drivers are keeping track of. When going to render, the driver uses the state to send commands to the GPU.\n\nThe new APIs all slim down what the driver does. Instead, it is more of a direct interface with the GPU. The state is managed by the program. This is good for a number of reasons. The biggest is that it lets the developers have the GPU do exactly what they want. It is good for the vendors because they ship smaller, less complex drivers. The drivers no longer have to guess what the intent of the developer is.\n\nThe biggest gain for the developers is that multithreading should be a lot easier. In the past, due to how the driver's state was managed, it could be really difficult to use multiple CPU cores to talk to the GPU. Now, with the new API, we can build up commands on multiple cores as long as they don't interfere with each other.\n\nVulkan, Mantle and DX12 are all very similar in functionality. AMD actually gave Mantle to the Khronos group as a base for Vulkan. Exactly how much the APIs differ is still kind of unknown right now, since Vulkan and Mantle specs haven't been published yet. Vulkan has the advantage that it will run on Windows, Linux (thanks to the push from Valve and SteamOS), mobile and hopefully OS X.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15042, "question": "So, current DX11 (and OpenGL for that matter) are basically really complex state machines. The graphics commands modify the state that the drivers are keeping track of. When going to render, the driver uses the state to send commands to the GPU.\n\nThe new APIs all slim down what the driver does. Instead, it is more of a direct interface with the GPU. The state is managed by the program. This is good for a number of reasons. The biggest is that it lets the developers have the GPU do exactly what they want. It is good for the vendors because they ship smaller, less complex drivers. The drivers no longer have to guess what the intent of the developer is.\n\nThe biggest gain for the developers is that multithreading should be a lot easier. In the past, due to how the driver's state was managed, it could be really difficult to use multiple CPU cores to talk to the GPU. Now, with the new API, we can build up commands on multiple cores as long as they don't interfere with each other.\n\nVulkan, Mantle and DX12 are all very similar in functionality. AMD actually gave Mantle to the Khronos group as a base for Vulkan. Exactly how much the APIs differ is still kind of unknown right now, since Vulkan and Mantle specs haven't been published yet. Vulkan has the advantage that it will run on Windows, Linux (thanks to the push from Valve and SteamOS), mobile and hopefully OS X.", "aSentId": 15043, "answer": "Huh awesome. But how do dx12 and vulcan differ? (besides which systems they run on), behaviorally are they identical? Lower level calls that interact more with the hardware directly?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15044, "question": "Huh awesome. But how do dx12 and vulcan differ? (besides which systems they run on), behaviorally are they identical? Lower level calls that interact more with the hardware directly?", "aSentId": 15045, "answer": "Yeah, from what I understand DX12 and Vulkan are very similar in their approach. I haven't paid much attention to DX12 since I am more interested in the platforms that Vulkan will target, so it may have some different features that I am unaware of but the ideas behind the two are basically the same.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15050, "question": "This is why I'm absolutely terrified to learn anything about OpenGL/directx, there are so many versions and crazy shit to figure out / domain knowledge, and it doesn't help that even the supposed experts, the people writing these AAA gsmes/applications don't even know what is going on either so the gpu vendor has to help them", "aSentId": 15051, "answer": "Well people do know, but from the get-go you're given enough rope to hang yourself.  Don't learn OpenGL that **is** a waste of time.  DX12 is your best bet unless you're already in consoles, then learn Xbox's DX and Sony's APIs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15052, "question": "Well people do know, but from the get-go you're given enough rope to hang yourself.  Don't learn OpenGL that **is** a waste of time.  DX12 is your best bet unless you're already in consoles, then learn Xbox's DX and Sony's APIs.", "aSentId": 15053, "answer": "Or if you want things to work on Linux or OSX.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15052, "question": "Well people do know, but from the get-go you're given enough rope to hang yourself.  Don't learn OpenGL that **is** a waste of time.  DX12 is your best bet unless you're already in consoles, then learn Xbox's DX and Sony's APIs.", "aSentId": 15055, "answer": "Why is OpenGL a waste of time? Because of Vulcan or whatever it is coming out? It seems ogl us a lot more prevalent then DirectX ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15057, "question": "\nThis is also why when you find a driver that works. You don't change it!", "aSentId": 15058, "answer": "Except a new game might come out and that game actually expose a bug in that driver, now you gotta update it as well. \n\nDriver is software, and software has bugs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15059, "question": "Except a new game might come out and that game actually expose a bug in that driver, now you gotta update it as well. \n\nDriver is software, and software has bugs.", "aSentId": 15060, "answer": "\nWhich then breaks all you other games :D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15062, "question": "It's not the fucking GPU manufacturer's responsibility to patch their drivers to accommodate broken code. It's the developers' responsibility to write their code to driver spec, and if it doesn't work because they didn't do it right, the driver team should respond with \"That feature is working as intend. WONTFIX. Fix your code.\" ", "aSentId": 15063, "answer": "He mentions that often times they can't, because they don't have dev drivers, because all the gpu vendors are scared that their company secrets will get leaked. Irs easier for NVIDIA and ATI to do it cause they have the code for the game (probably) and the dev gpu driver so they can see exactly what's going on and how to fix it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15064, "question": "He mentions that often times they can't, because they don't have dev drivers, because all the gpu vendors are scared that their company secrets will get leaked. Irs easier for NVIDIA and ATI to do it cause they have the code for the game (probably) and the dev gpu driver so they can see exactly what's going on and how to fix it.", "aSentId": 15065, "answer": "The GPU vendor can put out the I/O specs for the API without giving them the source code to the driver. They *can* document every function and call and what they do and how they work without giving anything up like that, but the engine coders have to actually RTFM and *listen.*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15062, "question": "It's not the fucking GPU manufacturer's responsibility to patch their drivers to accommodate broken code. It's the developers' responsibility to write their code to driver spec, and if it doesn't work because they didn't do it right, the driver team should respond with \"That feature is working as intend. WONTFIX. Fix your code.\" ", "aSentId": 15067, "answer": "Meanwhile your competition makes it their responsibility to fix bad games and they eat your market share.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15062, "question": "It's not the fucking GPU manufacturer's responsibility to patch their drivers to accommodate broken code. It's the developers' responsibility to write their code to driver spec, and if it doesn't work because they didn't do it right, the driver team should respond with \"That feature is working as intend. WONTFIX. Fix your code.\" ", "aSentId": 15069, "answer": "Whoa, dude! Are you a hippie or something?!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15071, "question": "Someone needs to write the equivalent of application verifier but for driver code. \n\nMicrosoft Application verifier will hook your application and check that you are doing everything correctly. Perhaps a software reference driver everyone agrees renders the way its supposed to **and** will reject anything invalid. \n\nThat way everyone has a benchmark to develop for. Something like the acid test for HTML.\n\nI use application verifier with full API checking as well as heap corruption in buffer bounds. Things run much slower but I know I'm not screwing things up.\n\nAlternatively, NVIDIA and ATI really need to start calling out these common bugs. A developer will never know they're doing something wrong unless they're told something is wrong. For example this blog post just mentioned beginFrame. Now every software vendor can check if they actually are calling begin frame. that's one thing out of 10000 now off the list.", "aSentId": 15072, "answer": "Note: to within experimental error, *nobody* uses Application Verifier.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15073, "question": "Note: to within experimental error, *nobody* uses Application Verifier.", "aSentId": 15074, "answer": "I do!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15071, "question": "Someone needs to write the equivalent of application verifier but for driver code. \n\nMicrosoft Application verifier will hook your application and check that you are doing everything correctly. Perhaps a software reference driver everyone agrees renders the way its supposed to **and** will reject anything invalid. \n\nThat way everyone has a benchmark to develop for. Something like the acid test for HTML.\n\nI use application verifier with full API checking as well as heap corruption in buffer bounds. Things run much slower but I know I'm not screwing things up.\n\nAlternatively, NVIDIA and ATI really need to start calling out these common bugs. A developer will never know they're doing something wrong unless they're told something is wrong. For example this blog post just mentioned beginFrame. Now every software vendor can check if they actually are calling begin frame. that's one thing out of 10000 now off the list.", "aSentId": 15076, "answer": "OpenGL has the debug output extension. Depending on vendor, it could be anything from great to fucking useless.\n\nDirect3D (being seemingly better architected...) has the debug layer, which in Direct3D10+ works pretty well: you set a flag when creating your Direct3D device, and it puts D3D in a special mode where any errors/warnings cause it to print a message to the TTY and/or pop you into the debugger. There could well be things that it doesn't check for, but from the D3D11 coding I did it seemed to be fairly thorough, certainly for the standard stuff. If your program ran without printing anything out or dumping you into the debugger then you could be pretty sure that you at least hadn't done anything obviously stupid. (It picked up a few subtle things I got wrong too.)\n\n(There was similar functionality in D3D9, but it was a bit less amazing, because the debug flag was global, and affected all D3D apps. So if you switched it on, you got globally reduced performance, and the possibility of programs that would just stop working. This affected some commonly-used programs that I'm too much of a professional to mention. 3D Studio MAX was one of them though.)\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15079, "question": "another reason to stop supporting pc gaming ", "aSentId": 15080, "answer": "DENISE!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15084, "question": "BBC to give one million mini-computers to schoolchildren", "aSentId": 15085, "answer": "What are those kids going to do with a PDP-11?\n\nSeriously though, this looks like a cool program. I'm sure quite a few kids will put these to good use.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15086, "question": "What are those kids going to do with a PDP-11?\n\nSeriously though, this looks like a cool program. I'm sure quite a few kids will put these to good use.", "aSentId": 15087, "answer": "&gt; What are those kids going to do with a PDP-11?\n\nCanfield their asses off.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15084, "question": "BBC to give one million mini-computers to schoolchildren", "aSentId": 15089, "answer": "I have mixed opinions on this.\n\nThe original idea of the BBC Micro, and schools promoting computers was an excellent idea and may well have been responsible for the UK's strong position in computing today.\n\nEncouraging computer use is also an awesome idea. And I love the geek potential of mini computers.\n\nI do wonder if this will have the same effect as the original BBC though. The BBC Micro was a modern technology in the 80's! You could get it to do all sorts of things that you can't do with other devices. These days, there's an app for that. Will there be a strong enough incentive for kids to learn to use it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15084, "question": "BBC to give one million mini-computers to schoolchildren", "aSentId": 15091, "answer": "Giving 1 million school children airplanes won't make them pilots.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15092, "question": "Giving 1 million school children airplanes won't make them pilots.", "aSentId": 15093, "answer": "Yes but it gives the opportunity for those who wouldn't otherwise be coders/pilots the chance to discover their possible propensity.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15092, "question": "Giving 1 million school children airplanes won't make them pilots.", "aSentId": 15095, "answer": "If you ever wonder why the artists or musicians suck or are otherwise non-existent on your home turf, it's shitty attitudes like this are the reason why.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15097, "question": "Google Code shutting down", "aSentId": 15098, "answer": "They were largely dead to me anyway, because they removed download hosting. If you have a project that builds release tarballs (like, say, ANYTHING THAT USES GNU AUTOTOOLS) you know that checking generated files into source control isn't the correct way.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15099, "question": "They were largely dead to me anyway, because they removed download hosting. If you have a project that builds release tarballs (like, say, ANYTHING THAT USES GNU AUTOTOOLS) you know that checking generated files into source control isn't the correct way.", "aSentId": 15100, "answer": "Huh when did they remove download hosting? I just went to my old project and it still has some downloads available so was this something they disabled for new projects?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15101, "question": "Huh when did they remove download hosting? I just went to my old project and it still has some downloads available so was this something they disabled for new projects?", "aSentId": 15102, "answer": "It was something like that. Old downloads stay, new downloads couldn't go up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15097, "question": "Google Code shutting down", "aSentId": 15104, "answer": "This is becoming kind of cliche for Google.\n\n1) Announce 'exciting new project'\n\n2) Get people using it.\n\n3) Terminate it... or a large part of it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15105, "question": "This is becoming kind of cliche for Google.\n\n1) Announce 'exciting new project'\n\n2) Get people using it.\n\n3) Terminate it... or a large part of it.", "aSentId": 15106, "answer": "Well it's not true this time. While Google Code quickly became popular after it was released in 2006 (against sourceforge) it has simply lost out against GitHub since then. Even Google has moved most of its open source projects to GitHub by now.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15107, "question": "Well it's not true this time. While Google Code quickly became popular after it was released in 2006 (against sourceforge) it has simply lost out against GitHub since then. Even Google has moved most of its open source projects to GitHub by now.\n", "aSentId": 15108, "answer": "What I'm worried about is the code there. It happens to me every few months that I stumble upon some nice library thats hosted there. Now the source of these abandoned, but useful libraries will be gone forever.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15109, "question": "What I'm worried about is the code there. It happens to me every few months that I stumble upon some nice library thats hosted there. Now the source of these abandoned, but useful libraries will be gone forever.", "aSentId": 15110, "answer": "The mail from google said the following:\n&gt; Early next year, the site will shut down, but project data will be available for download in an archive format.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15111, "question": "The mail from google said the following:\n&gt; Early next year, the site will shut down, but project data will be available for download in an archive format.", "aSentId": 15112, "answer": "Forever? Or is that the usual \"you will still be able to download stuff for a slightly longer period\"?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15113, "question": "Forever? Or is that the usual \"you will still be able to download stuff for a slightly longer period\"?", "aSentId": 15114, "answer": "I would naively assume forever. It would be ironic of Google themselves contribute to link rot, which they dislike when others do it. :)\n\nThey also have a history of being pretty good at maintaining redirects on old URLs and such.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15115, "question": "I would naively assume forever. It would be ironic of Google themselves contribute to link rot, which they dislike when others do it. :)\n\nThey also have a history of being pretty good at maintaining redirects on old URLs and such.", "aSentId": 15116, "answer": "It says \"during 2016\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15117, "question": "It says \"during 2016\".", "aSentId": 15118, "answer": "Well, that should be enough time to rehost the content to external archives, but still that's not an ideal solution...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15115, "question": "I would naively assume forever. It would be ironic of Google themselves contribute to link rot, which they dislike when others do it. :)\n\nThey also have a history of being pretty good at maintaining redirects on old URLs and such.", "aSentId": 15120, "answer": "I have now read on HN that they will try to make permanent deep links for projects that have moved, so most should be safe. And let's hope archive.org comes in to keep the rest.\n\nBut the whole thing shuts down in 2016 other than that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15111, "question": "The mail from google said the following:\n&gt; Early next year, the site will shut down, but project data will be available for download in an archive format.", "aSentId": 15122, "answer": "Awesome!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15109, "question": "What I'm worried about is the code there. It happens to me every few months that I stumble upon some nice library thats hosted there. Now the source of these abandoned, but useful libraries will be gone forever.", "aSentId": 15124, "answer": "I hope that's where archive.org steps in.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15125, "question": "I hope that's where archive.org steps in.", "aSentId": 15126, "answer": "It seems like archive.org doesn't archive the release archives and because it uses JavaScript is also doesn't archive the source browser.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15109, "question": "What I'm worried about is the code there. It happens to me every few months that I stumble upon some nice library thats hosted there. Now the source of these abandoned, but useful libraries will be gone forever.", "aSentId": 15128, "answer": "I mean, the tarballs are going to exist all through 2016. When the service gets shuttered it will be quickly apparent what inactive projects should get migrated by someone to elsewhere.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15107, "question": "Well it's not true this time. While Google Code quickly became popular after it was released in 2006 (against sourceforge) it has simply lost out against GitHub since then. Even Google has moved most of its open source projects to GitHub by now.\n", "aSentId": 15131, "answer": "I don't see why this means they should shut it down. It makes sense for new project but I would expect them to keep it around for at least half a decade after that for existing ones.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15132, "question": "I don't see why this means they should shut it down. It makes sense for new project but I would expect them to keep it around for at least half a decade after that for existing ones.", "aSentId": 15133, "answer": "Someone has to spend time managing the servers, dealing with complaints, etc. The cost may not be worth it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15132, "question": "I don't see why this means they should shut it down. It makes sense for new project but I would expect them to keep it around for at least half a decade after that for existing ones.", "aSentId": 15135, "answer": "It costs money to run, maintain and secured, and if it gets hacked then it's \"News at Ten!!! Google Product Hacked!!! Microsoft Shares Up!!!\"\n\nIt's basically money for a service that gives them no real benefit (they moved to GitHub) and has the chance to hurt them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15136, "question": "It costs money to run, maintain and secured, and if it gets hacked then it's \"News at Ten!!! Google Product Hacked!!! Microsoft Shares Up!!!\"\n\nIt's basically money for a service that gives them no real benefit (they moved to GitHub) and has the chance to hurt them.", "aSentId": 15137, "answer": "&gt;It's basically money for a service that gives them no real benefit (they moved to GitHub) and has the chance to hurt them.\n\nAs opposed to money for a service that gives them no real benefit and already has hurt them - Google plus.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15138, "question": "&gt;It's basically money for a service that gives them no real benefit (they moved to GitHub) and has the chance to hurt them.\n\nAs opposed to money for a service that gives them no real benefit and already has hurt them - Google plus.", "aSentId": 15139, "answer": "Ayyy", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15136, "question": "It costs money to run, maintain and secured, and if it gets hacked then it's \"News at Ten!!! Google Product Hacked!!! Microsoft Shares Up!!!\"\n\nIt's basically money for a service that gives them no real benefit (they moved to GitHub) and has the chance to hurt them.", "aSentId": 15141, "answer": "I look at it the other way around. Google Product Shuts Down - Better Use Microsoft's Product's - they stop being updated (except for security) but they run for a *very* long time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15142, "question": "I look at it the other way around. Google Product Shuts Down - Better Use Microsoft's Product's - they stop being updated (except for security) but they run for a *very* long time.", "aSentId": 15143, "answer": "You would use Microsoft's repos over github? Even MS doesn't. .NET went to github already.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15144, "question": "You would use Microsoft's repos over github? Even MS doesn't. .NET went to github already.", "aSentId": 15145, "answer": "For open source, yes. Codeplex was actually a very nice project, but just for the community sake it's better to be on github.\n\nBut for private team stuff? TFS online is a much better system, especially if it's .NET related.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15144, "question": "You would use Microsoft's repos over github? Even MS doesn't. .NET went to github already.", "aSentId": 15147, "answer": "I would use Microsoft's repos over Google's and I did. Now I do not have 1 year deadline to migrate a project that is \"done\" and a project that I do not care about developing anymore to GitHub. Ideally I would never need to migrate them because why would I? Of course at some point Codeplex will be dead and I will need to do it but they are already better than Google because they outlived Google Code. \n\nIn fact I use MS's alternative for any comparable service. For example I use Microsoft's e-mail service. I don't use Microsoft's search engine (except on my phone) simply because I do not see it as comparable but if it was only slightly worse I would.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15148, "question": "I would use Microsoft's repos over Google's and I did. Now I do not have 1 year deadline to migrate a project that is \"done\" and a project that I do not care about developing anymore to GitHub. Ideally I would never need to migrate them because why would I? Of course at some point Codeplex will be dead and I will need to do it but they are already better than Google because they outlived Google Code. \n\nIn fact I use MS's alternative for any comparable service. For example I use Microsoft's e-mail service. I don't use Microsoft's search engine (except on my phone) simply because I do not see it as comparable but if it was only slightly worse I would.", "aSentId": 15149, "answer": "I wonder if you've been unlucky? I can think of a lot of Microsoft projects that have gone. Zune, the original tablets, Windows XP etc.\n\nI think one difference is that Microsoft doesn't release a lot of smaller projects, so there's less chance that one will go under. Google seems more prepared to experiment, and push stuff out there to see how it does.\n\nCertainly if you're an enterprise, you may wish to be cautious of using the latest XYZ because you don't know if it will still be around in 10 years.\n\nMS's email was hotmail - that kind of died and came back as Outlook online. I wouldn't say it's still alive in the same shape or form.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15150, "question": "I wonder if you've been unlucky? I can think of a lot of Microsoft projects that have gone. Zune, the original tablets, Windows XP etc.\n\nI think one difference is that Microsoft doesn't release a lot of smaller projects, so there's less chance that one will go under. Google seems more prepared to experiment, and push stuff out there to see how it does.\n\nCertainly if you're an enterprise, you may wish to be cautious of using the latest XYZ because you don't know if it will still be around in 10 years.\n\nMS's email was hotmail - that kind of died and came back as Outlook online. I wouldn't say it's still alive in the same shape or form.", "aSentId": 15151, "answer": "Windows XP just stopped being supported last year after 13 years and I can assure you that it still works if I wanted to use it. I think that's longer than every single Google product except search and ads products and again it still works. I don't see how Outlook is different from Hotmail. It got a new interface and a marketing refresh but nobody forced anyone to drop their e-mail address or migrate their data. They did stop some services. Windows Live Messenger and Live Mesh come to mind but WML transition to Skype was reasonable (more reasonable than what Google are about to do with gtalk and hangouts) and Live Mesh was still a beta when they dropped it. I don't think Zune ever stopped working and it is not like your Zune needs security updates (as is the case with Win XP)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15152, "question": "Windows XP just stopped being supported last year after 13 years and I can assure you that it still works if I wanted to use it. I think that's longer than every single Google product except search and ads products and again it still works. I don't see how Outlook is different from Hotmail. It got a new interface and a marketing refresh but nobody forced anyone to drop their e-mail address or migrate their data. They did stop some services. Windows Live Messenger and Live Mesh come to mind but WML transition to Skype was reasonable (more reasonable than what Google are about to do with gtalk and hangouts) and Live Mesh was still a beta when they dropped it. I don't think Zune ever stopped working and it is not like your Zune needs security updates (as is the case with Win XP)", "aSentId": 15153, "answer": "When I was transitioned from hotmail to Live, some things broke and I had to re-create an account with a different name. When I was transitioned again from Live to Outlook, it was fine but I lost access to one of my GFWL (games for windows live) accounts. (And now GFWL itself is gone).\n\nMoving a repo to a new hostr isn't really that hard and it's very well documented. If we're measuring software quality on its lifespan, I can say that the horse and cart is has outlasted steam power, and will outlast petrol.\n\nI agree that quick changes can be very annoying for the user, but any change is disruptive and when it comes to Microsoft replacing things, the change over, in my experience, is usually traumatic in some way. (I won't even talk about Windows Vista and Windows 8 and original Windows Phone)\n\nI can assure you that Zune players were discontinued many years ago, and that some modern games will NOT work on Windows XP.\n\nI dont even want to take sides here but I want to say that switching repos isn't really very hard. I don't want to have to do it, but then again, I don't want to have to use a horse and cart anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15154, "question": "When I was transitioned from hotmail to Live, some things broke and I had to re-create an account with a different name. When I was transitioned again from Live to Outlook, it was fine but I lost access to one of my GFWL (games for windows live) accounts. (And now GFWL itself is gone).\n\nMoving a repo to a new hostr isn't really that hard and it's very well documented. If we're measuring software quality on its lifespan, I can say that the horse and cart is has outlasted steam power, and will outlast petrol.\n\nI agree that quick changes can be very annoying for the user, but any change is disruptive and when it comes to Microsoft replacing things, the change over, in my experience, is usually traumatic in some way. (I won't even talk about Windows Vista and Windows 8 and original Windows Phone)\n\nI can assure you that Zune players were discontinued many years ago, and that some modern games will NOT work on Windows XP.\n\nI dont even want to take sides here but I want to say that switching repos isn't really very hard. I don't want to have to do it, but then again, I don't want to have to use a horse and cart anymore.", "aSentId": 15155, "answer": "I don't see how the fact that some games new games do not run on XP and that Zune players are not sold anymore is equivalent to Google products just disappearing. With MS products you can continue to use them for whatever you used them before they were discontinued.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15156, "question": "I don't see how the fact that some games new games do not run on XP and that Zune players are not sold anymore is equivalent to Google products just disappearing. With MS products you can continue to use them for whatever you used them before they were discontinued.", "aSentId": 15157, "answer": "&gt; I don't see how the fact that some games new games do not run on XP ... is equivalent to Google products just disappearing. With MS products you can continue to use them\n\nThe difference is cloud vs local, not Google vs Microsoft.\n\nYour issue is with cloud platforms, not with any company name.\n\nIf both Microsoft and Google were to vanish tomorrow, both Live/Outlook and GMail/GDrive would both be gone. Windows Phones and Android phones would remain and continue to operate.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15158, "question": "&gt; I don't see how the fact that some games new games do not run on XP ... is equivalent to Google products just disappearing. With MS products you can continue to use them\n\nThe difference is cloud vs local, not Google vs Microsoft.\n\nYour issue is with cloud platforms, not with any company name.\n\nIf both Microsoft and Google were to vanish tomorrow, both Live/Outlook and GMail/GDrive would both be gone. Windows Phones and Android phones would remain and continue to operate.", "aSentId": 15159, "answer": "That would be fine if MS services did not outlive by a lot Google services. Codeplex has not yet announced shutdown. Also Windows products are supported for much longer with security updates without the need to upgrade. Google recently declared that they would not fix a security issue for 1+ billion users because they should upgrade to the latest Android. MS even fixed XP beyond the support deadline which was 13 years not 2 as in Google's case.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15154, "question": "When I was transitioned from hotmail to Live, some things broke and I had to re-create an account with a different name. When I was transitioned again from Live to Outlook, it was fine but I lost access to one of my GFWL (games for windows live) accounts. (And now GFWL itself is gone).\n\nMoving a repo to a new hostr isn't really that hard and it's very well documented. If we're measuring software quality on its lifespan, I can say that the horse and cart is has outlasted steam power, and will outlast petrol.\n\nI agree that quick changes can be very annoying for the user, but any change is disruptive and when it comes to Microsoft replacing things, the change over, in my experience, is usually traumatic in some way. (I won't even talk about Windows Vista and Windows 8 and original Windows Phone)\n\nI can assure you that Zune players were discontinued many years ago, and that some modern games will NOT work on Windows XP.\n\nI dont even want to take sides here but I want to say that switching repos isn't really very hard. I don't want to have to do it, but then again, I don't want to have to use a horse and cart anymore.", "aSentId": 15161, "answer": "What was wrong with Windows 8? Works fine. In fact, it's a better OS in every way than Windows 7. Every way.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15162, "question": "What was wrong with Windows 8? Works fine. In fact, it's a better OS in every way than Windows 7. Every way.", "aSentId": 15163, "answer": "&gt; What was wrong with Windows 8? \n\nIt's not selling very well and is being replaced fast. Seems it has some problem.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15152, "question": "Windows XP just stopped being supported last year after 13 years and I can assure you that it still works if I wanted to use it. I think that's longer than every single Google product except search and ads products and again it still works. I don't see how Outlook is different from Hotmail. It got a new interface and a marketing refresh but nobody forced anyone to drop their e-mail address or migrate their data. They did stop some services. Windows Live Messenger and Live Mesh come to mind but WML transition to Skype was reasonable (more reasonable than what Google are about to do with gtalk and hangouts) and Live Mesh was still a beta when they dropped it. I don't think Zune ever stopped working and it is not like your Zune needs security updates (as is the case with Win XP)", "aSentId": 15165, "answer": "Windows XP absolutely needs security updates if it's going to be exposed to the internet. Just because it's not the latest OS doesn't mean it's not being targeted.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15166, "question": "Windows XP absolutely needs security updates if it's going to be exposed to the internet. Just because it's not the latest OS doesn't mean it's not being targeted.", "aSentId": 15167, "answer": "This is true but XP is just 3 years younger than Google so I think we can reasonably say that it makes sense to drop this type of support. Also I think that it can still update via Windows Update and get the patches that are released and the activation service is still running so you can activate a new installation. Basically the services that power Windows XP are not shut down by MS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15150, "question": "I wonder if you've been unlucky? I can think of a lot of Microsoft projects that have gone. Zune, the original tablets, Windows XP etc.\n\nI think one difference is that Microsoft doesn't release a lot of smaller projects, so there's less chance that one will go under. Google seems more prepared to experiment, and push stuff out there to see how it does.\n\nCertainly if you're an enterprise, you may wish to be cautious of using the latest XYZ because you don't know if it will still be around in 10 years.\n\nMS's email was hotmail - that kind of died and came back as Outlook online. I wouldn't say it's still alive in the same shape or form.", "aSentId": 15169, "answer": "My hotmail account from 1996 still works fine. I have more storage now and a couple extra aliases. But if you send stuff to my exact address from the beginning, it still gets to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15170, "question": "My hotmail account from 1996 still works fine. I have more storage now and a couple extra aliases. But if you send stuff to my exact address from the beginning, it still gets to me.", "aSentId": 15171, "answer": "Yea but I lost a one of my GFWL accounts in the migration from Hotmail -&gt; Live -&gt; Outlook.\n\nThe procedure wasn't seamless and was kind of equivalent to signing up for a new thing ... I think I had to create an account on Skype for Live? I never bothered to do it.\n\nWhich reminds me, GFWL is gone/going/influx too, isn't it? I think I was going to be shut down, and some games were patched to use a different multiplayer, now I hear it might be merging into XBox?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15172, "question": "Yea but I lost a one of my GFWL accounts in the migration from Hotmail -&gt; Live -&gt; Outlook.\n\nThe procedure wasn't seamless and was kind of equivalent to signing up for a new thing ... I think I had to create an account on Skype for Live? I never bothered to do it.\n\nWhich reminds me, GFWL is gone/going/influx too, isn't it? I think I was going to be shut down, and some games were patched to use a different multiplayer, now I hear it might be merging into XBox?", "aSentId": 15173, "answer": "I am not sure if it is the case for all games but the single game I owned on GFWL was transferred to Steam and I read this was the case for other high profile title. GFWL was probably the worst MS product I ever used but still it worked fine for me at the end I guess.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15150, "question": "I wonder if you've been unlucky? I can think of a lot of Microsoft projects that have gone. Zune, the original tablets, Windows XP etc.\n\nI think one difference is that Microsoft doesn't release a lot of smaller projects, so there's less chance that one will go under. Google seems more prepared to experiment, and push stuff out there to see how it does.\n\nCertainly if you're an enterprise, you may wish to be cautious of using the latest XYZ because you don't know if it will still be around in 10 years.\n\nMS's email was hotmail - that kind of died and came back as Outlook online. I wouldn't say it's still alive in the same shape or form.", "aSentId": 15175, "answer": "&gt; the original tablet\n\nWhat the heck is that supposed to mean?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15176, "question": "&gt; the original tablet\n\nWhat the heck is that supposed to mean?", "aSentId": 15177, "answer": "Perhaps it was a bad example to pick, but I was referring to the fact that I -think- Microsoft launched the first tablet that was using/based on a general purpose operating system and touch in the early 2000s. \n\nAs I consider it, I think the earlier ones like Palm or newton weren't really general purpose touch screen devices in the way that we would understand them today, and in their day were classed as personal assistants just for your phonebook etc. I could well be wrong.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15132, "question": "I don't see why this means they should shut it down. It makes sense for new project but I would expect them to keep it around for at least half a decade after that for existing ones.", "aSentId": 15179, "answer": "Exactly, make it read only so the projects on it don't die, and it takes 0 maintenance besides server space", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15107, "question": "Well it's not true this time. While Google Code quickly became popular after it was released in 2006 (against sourceforge) it has simply lost out against GitHub since then. Even Google has moved most of its open source projects to GitHub by now.\n", "aSentId": 15181, "answer": "&gt; sourceforce\n\nSourceForce Strike Team, move out!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15105, "question": "This is becoming kind of cliche for Google.\n\n1) Announce 'exciting new project'\n\n2) Get people using it.\n\n3) Terminate it... or a large part of it.", "aSentId": 15183, "answer": "You should ask for your money back.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15105, "question": "This is becoming kind of cliche for Google.\n\n1) Announce 'exciting new project'\n\n2) Get people using it.\n\n3) Terminate it... or a large part of it.", "aSentId": 15185, "answer": "Google keeps crying wolf about free services, and I'll be damned if I ever believe them again.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15186, "question": "Google keeps crying wolf about free services, and I'll be damned if I ever believe them again.", "aSentId": 15187, "answer": "Well, it's like dealing with Microsoft. You can use their software, make a good living with it.. but just don't openly TRUST them.\n\nWith Google.. you can use their services, just don't TRUST that they'll continue to be there. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15188, "question": "Well, it's like dealing with Microsoft. You can use their software, make a good living with it.. but just don't openly TRUST them.\n\nWith Google.. you can use their services, just don't TRUST that they'll continue to be there. ", "aSentId": 15189, "answer": "What is untrustworthy about Microsoft?  They're open sourcing everything important sans Windows, they could've litigated against Mono and Xamarin but didn't.  Everything they sell outside of azure runs locally and doesn't phone home. \n\nFor consumers they always seem to support products longer than most would. \n\nI dunno, they haven't been seen doing much shady toward developers in ten years.  Microsoft still productizes stuff that Google will go an open source route with, but that doesn't make them untrustworthy.  I mean, really all these cloud providers are being given a lot of trust with your data and the hope that they stay alive, I think more than ever before.. but no one complains.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15190, "question": "What is untrustworthy about Microsoft?  They're open sourcing everything important sans Windows, they could've litigated against Mono and Xamarin but didn't.  Everything they sell outside of azure runs locally and doesn't phone home. \n\nFor consumers they always seem to support products longer than most would. \n\nI dunno, they haven't been seen doing much shady toward developers in ten years.  Microsoft still productizes stuff that Google will go an open source route with, but that doesn't make them untrustworthy.  I mean, really all these cloud providers are being given a lot of trust with your data and the hope that they stay alive, I think more than ever before.. but no one complains.", "aSentId": 15191, "answer": "Been dealing with Microsoft since the Apple ][ days.\n\nAs a developer, I'm not really in the habit of trusting any big corporation. Each has their appeal and their danger. The danger with Microsoft is they have historically tried hard to promote lockin, 'embrace and extend' causing problems, and their tendency to hype products then vaporize them (ChromeFX, Fahrenheit, etc).\n\nMaybe they are getting better, but it takes a long time to fix broken trust.\n\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15192, "question": "Been dealing with Microsoft since the Apple ][ days.\n\nAs a developer, I'm not really in the habit of trusting any big corporation. Each has their appeal and their danger. The danger with Microsoft is they have historically tried hard to promote lockin, 'embrace and extend' causing problems, and their tendency to hype products then vaporize them (ChromeFX, Fahrenheit, etc).\n\nMaybe they are getting better, but it takes a long time to fix broken trust.\n\n\n", "aSentId": 15193, "answer": "Definitely true but oddly enough there are people like me raised in the days of them treating developers like gold and being impressed with them.  I think you have a healthy distrust too (I never use a cloud service I can't run locally).\n\nI still think certain products are awful but as far as trust I give them an A.  They've just been doing the right thing for too long for me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15194, "question": "Definitely true but oddly enough there are people like me raised in the days of them treating developers like gold and being impressed with them.  I think you have a healthy distrust too (I never use a cloud service I can't run locally).\n\nI still think certain products are awful but as far as trust I give them an A.  They've just been doing the right thing for too long for me.", "aSentId": 15195, "answer": "That's kind of my overall point. You shouldn't *trust* any corporation, they are just trying to push products and make a profit. However you can still deal with them and engage them.\n\nIt's just worth knowing, historically, what ways certain corporations have disappointed in the past. Then.. you gird yourself against running into that problem.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15190, "question": "What is untrustworthy about Microsoft?  They're open sourcing everything important sans Windows, they could've litigated against Mono and Xamarin but didn't.  Everything they sell outside of azure runs locally and doesn't phone home. \n\nFor consumers they always seem to support products longer than most would. \n\nI dunno, they haven't been seen doing much shady toward developers in ten years.  Microsoft still productizes stuff that Google will go an open source route with, but that doesn't make them untrustworthy.  I mean, really all these cloud providers are being given a lot of trust with your data and the hope that they stay alive, I think more than ever before.. but no one complains.", "aSentId": 15197, "answer": "They're better in the markets where they need to be.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15199, "question": "&gt; 1) Announce 'exciting new project'\n\n*Eight* years ago.\n\n&gt; 2) Get people using it.\n\nLet them use it *for free* the entire time.\n\n&gt; 3) Terminate it... or a large part of it.\n\nShut it down years after it's become clear that the problem it was created to solve is now being solved admirably by other companies\u2014in this case GitHub.\n\nI don't understand anyone who is mad at Google for giving the world a much better alternative to SourceForge (ugh, remember when that was the *only* free source code hosting site?) for *years* for *free*.\n\nGoogle is about seventeen years old. Of *course* it's an increasing trend that it will have a larger list of completed projects. IBM doesn't sell cheese slicers anymore and I'm pretty sure HP doesn't still sell oscilloscopes. The world moves on and product lines change.", "aSentId": 15200, "answer": "HP guy here, can confirm about oscilloscopes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15097, "question": "Google Code shutting down", "aSentId": 15202, "answer": "I am thinking Github is slowly becoming a force to reckon with.  \n\nMonths ago I thought about using Google Code. It was difficult to get started, and hard to navigate the landing page. I couldn't even figure out how to commit code remotely. \n\nHonestly if they really tried they could have made it much more appealing to developers. Instead it turned out to be sort of a novelty and the home to outdated, undocumented jQuery plugins that were last updated years ago.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15203, "question": "I am thinking Github is slowly becoming a force to reckon with.  \n\nMonths ago I thought about using Google Code. It was difficult to get started, and hard to navigate the landing page. I couldn't even figure out how to commit code remotely. \n\nHonestly if they really tried they could have made it much more appealing to developers. Instead it turned out to be sort of a novelty and the home to outdated, undocumented jQuery plugins that were last updated years ago.", "aSentId": 15204, "answer": "&gt; I am thinking Github is slowly becoming a force to reckon with.\n\nBECOMING?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15205, "question": "&gt; I am thinking Github is slowly becoming a force to reckon with.\n\nBECOMING?", "aSentId": 15206, "answer": "Github is arguably the main reason why 'git' itself is so popular, its so complicated (cause it was written for one of the most complicated things out there, the Linux kernel). I don't think I have ever seen this happen with anything else", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15207, "question": "Github is arguably the main reason why 'git' itself is so popular, its so complicated (cause it was written for one of the most complicated things out there, the Linux kernel). I don't think I have ever seen this happen with anything else", "aSentId": 15208, "answer": "I'm FAR from a fan of Git, I use it on a daily basis and I've embraced it for years, but it's full of warts.\n\nI see it a lot like Vim, they both kind of suck from a UX perspective, but because of incumbent advantage there aren't really any solid alternatives in that space.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15209, "question": "I'm FAR from a fan of Git, I use it on a daily basis and I've embraced it for years, but it's full of warts.\n\nI see it a lot like Vim, they both kind of suck from a UX perspective, but because of incumbent advantage there aren't really any solid alternatives in that space.", "aSentId": 15210, "answer": "The dvcs space is quite diverse, with hg and (lesser known) bzr which all do the same thing, and all have utilities that export/import repos from the fast-export format\r\rWhile the dvcses are good, the websites that use them to foster communication are the ones that are iffy. Bitbucket is ok I guess, and launch pad seems more for very large projects (aka Ubuntu, tracking every program Ubuntu uses) and has some missing features cause canonical's priorities are weird.\r\rAs long as I'm not locked into using it forever (which I'm not thanks to fast export), I can deal with using git, but doesn't mean ill like it :P \r\r", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15209, "question": "I'm FAR from a fan of Git, I use it on a daily basis and I've embraced it for years, but it's full of warts.\n\nI see it a lot like Vim, they both kind of suck from a UX perspective, but because of incumbent advantage there aren't really any solid alternatives in that space.", "aSentId": 15212, "answer": "I think Git is fine, it just shouldn't be the tool we directly interface with. Git flow is a great addition, and GUI programs abstract away all of the pain and make it's more obscure features accessible in intuitive ways (staging hunks, stashing etc)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15213, "question": "I think Git is fine, it just shouldn't be the tool we directly interface with. Git flow is a great addition, and GUI programs abstract away all of the pain and make it's more obscure features accessible in intuitive ways (staging hunks, stashing etc)", "aSentId": 15214, "answer": "staging hunks: \"git add -p\"\n\nstashing: \"git stash\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15215, "question": "staging hunks: \"git add -p\"\n\nstashing: \"git stash\"", "aSentId": 15216, "answer": "Well done I guess?\n\nNot the point.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15213, "question": "I think Git is fine, it just shouldn't be the tool we directly interface with. Git flow is a great addition, and GUI programs abstract away all of the pain and make it's more obscure features accessible in intuitive ways (staging hunks, stashing etc)", "aSentId": 15218, "answer": "The GitHub Windows desktop app is fucking beautiful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15219, "question": "The GitHub Windows desktop app is fucking beautiful.", "aSentId": 15220, "answer": "But lacks functionality", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15221, "question": "But lacks functionality", "aSentId": 15222, "answer": "Like what? It's always done what I need it to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15223, "question": "Like what? It's always done what I need it to.", "aSentId": 15224, "answer": "I may be wrong with these, but:\n\n- [amending a commit](https://github.com/baldwindavid/github-for-mac-issues/issues/30)\n- rebasing\n- force push\n- bisecting\n\n(SourceTree has the first two, but to be honest, I find rebasing from console more intuitive)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15219, "question": "The GitHub Windows desktop app is fucking beautiful.", "aSentId": 15226, "answer": "Source tee is an excellent alternative. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15219, "question": "The GitHub Windows desktop app is fucking beautiful.", "aSentId": 15228, "answer": "Partial to SmartGit myself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15207, "question": "Github is arguably the main reason why 'git' itself is so popular, its so complicated (cause it was written for one of the most complicated things out there, the Linux kernel). I don't think I have ever seen this happen with anything else", "aSentId": 15230, "answer": "&gt; Github is arguably the main reason why 'git' itself is so popular\n\nNo, it's the other way around.\n\nGit is complicated, but it's still the winning choice, for two reasons:\n\n* It's not opinionated. It can support any workflow equally well. (Switching to a new VCS is OK, but having the VCS to force you to change your workflow habits is a non-starter.)\n* It's fast. Other 'modern' VCS's at the time were slow. (As in, 'I started cloning the repository an hour ago and I'm still waiting' kind of slow.)\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15205, "question": "&gt; I am thinking Github is slowly becoming a force to reckon with.\n\nBECOMING?", "aSentId": 15232, "answer": "yes\n\nAt least for me. I still tend to look at Sourceforge for open-source software. \n\nI am lagging so far behind, I barely noticed that google code is there. Guess there was no point in noticing it\n\nAnd my own projects are all on my personal homepage. It even got a guestbook\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15233, "question": "yes\n\nAt least for me. I still tend to look at Sourceforge for open-source software. \n\nI am lagging so far behind, I barely noticed that google code is there. Guess there was no point in noticing it\n\nAnd my own projects are all on my personal homepage. It even got a guestbook\n\n", "aSentId": 15234, "answer": "Are you a time traveller from 15 years ago by any chance?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15235, "question": "Are you a time traveller from 15 years ago by any chance?", "aSentId": 15236, "answer": "That is around the time I made my homepage\n\nNever change a running system\n\n\nLast time I checked, it still  supported IE5.5. Not sure about IE5, because I could not find that anywhere anymore to test ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15237, "question": "That is around the time I made my homepage\n\nNever change a running system\n\n\nLast time I checked, it still  supported IE5.5. Not sure about IE5, because I could not find that anywhere anymore to test ", "aSentId": 15238, "answer": "&gt; Never change a running system\n\nIf you're not moving forward, you're falling behind.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15235, "question": "Are you a time traveller from 15 years ago by any chance?", "aSentId": 15240, "answer": "This reminds me: In three or four years, someone's going to have to search the birth records for John Titor, so we can all make sure he goes back in time 15 years from now and stops the 2036 problem.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15241, "question": "This reminds me: In three or four years, someone's going to have to search the birth records for John Titor, so we can all make sure he goes back in time 15 years from now and stops the 2036 problem.", "aSentId": 15242, "answer": "I think you mean \"she\".\n\nI know, I know, Steins;Gate only picket up that myth.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15233, "question": "yes\n\nAt least for me. I still tend to look at Sourceforge for open-source software. \n\nI am lagging so far behind, I barely noticed that google code is there. Guess there was no point in noticing it\n\nAnd my own projects are all on my personal homepage. It even got a guestbook\n\n", "aSentId": 15244, "answer": "But do you have a \"under construction\" gif? No website is completed without it.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15233, "question": "yes\n\nAt least for me. I still tend to look at Sourceforge for open-source software. \n\nI am lagging so far behind, I barely noticed that google code is there. Guess there was no point in noticing it\n\nAnd my own projects are all on my personal homepage. It even got a guestbook\n\n", "aSentId": 15246, "answer": "Obvious troll is obvious.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15247, "question": "Obvious troll is obvious.", "aSentId": 15248, "answer": "No troll, just how I feel\n\nI can PM you the link to my homepage.\n\nOr post a photo of my rotary phone &amp;#3232;\\_&amp;#3232;\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15205, "question": "&gt; I am thinking Github is slowly becoming a force to reckon with.\n\nBECOMING?", "aSentId": 15250, "answer": "SLOWLY?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15203, "question": "I am thinking Github is slowly becoming a force to reckon with.  \n\nMonths ago I thought about using Google Code. It was difficult to get started, and hard to navigate the landing page. I couldn't even figure out how to commit code remotely. \n\nHonestly if they really tried they could have made it much more appealing to developers. Instead it turned out to be sort of a novelty and the home to outdated, undocumented jQuery plugins that were last updated years ago.", "aSentId": 15252, "answer": "Google code's UI was always awful, I mean they had sourceforge at the time to at least look at what a useable UI for this kind of stuff was but just didn't ever make it anything more than a repo on a server with a half-assed blog style bug/ticket tracking thing if you could call it that.\n\n\nIt was never a great place to work with unless you were broke and had no choice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15253, "question": "Google code's UI was always awful, I mean they had sourceforge at the time to at least look at what a useable UI for this kind of stuff was but just didn't ever make it anything more than a repo on a server with a half-assed blog style bug/ticket tracking thing if you could call it that.\n\n\nIt was never a great place to work with unless you were broke and had no choice.", "aSentId": 15254, "answer": "It's easy to feel that way if you didn't use pre-gcode sourceforge, which was a nightmare. Many outlets praised gcode when it was new for its clean and sleek UI.\n\nI mean, times have changed since then, but the perspective is worthwhile.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15255, "question": "It's easy to feel that way if you didn't use pre-gcode sourceforge, which was a nightmare. Many outlets praised gcode when it was new for its clean and sleek UI.\n\nI mean, times have changed since then, but the perspective is worthwhile.", "aSentId": 15256, "answer": "Yeah Google Code's UI was a breath of fresh air at the time.\n\nSourceforge was horrible at the time and despite updates since is still horrible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15203, "question": "I am thinking Github is slowly becoming a force to reckon with.  \n\nMonths ago I thought about using Google Code. It was difficult to get started, and hard to navigate the landing page. I couldn't even figure out how to commit code remotely. \n\nHonestly if they really tried they could have made it much more appealing to developers. Instead it turned out to be sort of a novelty and the home to outdated, undocumented jQuery plugins that were last updated years ago.", "aSentId": 15258, "answer": "There are some nice projects on Google Code though... Hopefully they'll migrate before it all dies.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15259, "question": "There are some nice projects on Google Code though... Hopefully they'll migrate before it all dies.", "aSentId": 15260, "answer": "[spyder](https://github.com/spyder-ide/spyder/) did shortly *before* the announcement :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15262, "question": "I could have swore they announced Google code was end of life a year or more back, but this reads like an initial announcement.", "aSentId": 15263, "answer": "Are you thinking of code search maybe?  That was a different doomed Google service, which has been gone for a couple of years. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15265, "question": "Is this Google planning to buy GitHub?", "aSentId": 15266, "answer": "I hope not", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15265, "question": "Is this Google planning to buy GitHub?", "aSentId": 15268, "answer": "See google video then YouTube. I think this is likely.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15276, "question": "Interesting that `Github` was the only company not hyperlinked.", "aSentId": 15277, "answer": "It's seems more likely that you missed the earlier instance where it was linked. Far from being snubbed, they were linked in the opening paragraph, first.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15278, "question": "It's seems more likely that you missed the earlier instance where it was linked. Far from being snubbed, they were linked in the opening paragraph, first.", "aSentId": 15279, "answer": "touche. good catch.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15282, "question": "KDE Frameworks 5.8.0 Released", "aSentId": 15283, "answer": "And we still running 4.12 in Debian...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15285, "question": "12 years Later - What I've learned along the way", "aSentId": 15286, "answer": "The biggest problem with trying to educate your peers is their willingness to learn.  In a good working environment everyone understands there is always something they can learn which is great since everyone is usually willing to teach as well.\n\nIn a bad working environment, well, best to just get out as soon as you can before it negatively effects you to the point where you can never recover.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15287, "question": "The biggest problem with trying to educate your peers is their willingness to learn.  In a good working environment everyone understands there is always something they can learn which is great since everyone is usually willing to teach as well.\n\nIn a bad working environment, well, best to just get out as soon as you can before it negatively effects you to the point where you can never recover.", "aSentId": 15288, "answer": "&gt; The biggest problem with trying to educate your peers is their willingness to learn\n\na thousand times this. my sad conclusion after twenty years is that most developers will only learn when told to, and only on the company dime", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15287, "question": "The biggest problem with trying to educate your peers is their willingness to learn.  In a good working environment everyone understands there is always something they can learn which is great since everyone is usually willing to teach as well.\n\nIn a bad working environment, well, best to just get out as soon as you can before it negatively effects you to the point where you can never recover.", "aSentId": 15290, "answer": "this is all environment dependent to be sure, but the act of trying to educate goes down to a habit on a commit-by-commit basis.  Just writing more details into a PR is enough to get the ball rolling. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15285, "question": "12 years Later - What I've learned along the way", "aSentId": 15292, "answer": "The content about PSD seems misplaced in the block with the hilarious code comments.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15285, "question": "12 years Later - What I've learned along the way", "aSentId": 15294, "answer": "&gt; Some of that is no doubt do to the culture of the web and it\u2019s construction crew being such a new industry. Unfortunately, I don\u2019t know how well it\u2019s maturing sometimes.\n\nI've read that the population of programmers doubles every ~5 to 10 years. With the constant influx of new developers and a culture that promotes self-learning and new-ness at the expense of mentoring and history, I don't think the \"culture\" can mature without some large external force.\n\nThe same problems persist because all the new technologies just copy the mistakes made by the previous group. (i.e. JavaScript will grow, but it won't improve much.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15296, "question": "&gt; It\u2019s hard to imagine now that people had no idea what would happen when you put a human being in space. \n\nWorked for Yuri Gagarin nonetheless.", "aSentId": 15297, "answer": "gagarin not so much an astronaut but a human test dummy. the goal of the soviet system was to demonstrate that the state was omnipotent (\"nurture\"....whereas nazi germany was \"nature\" - the supposition that supermen were independent of the system)...gagarin was a factory worker. the goal was to show that the soviet *system* was so superior that it could put a factory worker into space", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15298, "question": "gagarin not so much an astronaut but a human test dummy. the goal of the soviet system was to demonstrate that the state was omnipotent (\"nurture\"....whereas nazi germany was \"nature\" - the supposition that supermen were independent of the system)...gagarin was a factory worker. the goal was to show that the soviet *system* was so superior that it could put a factory worker into space", "aSentId": 15299, "answer": "Your point being what, exactly?\n\nI don't care what you think about Gagarin so I won't argue about that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15300, "question": "Your point being what, exactly?\n\nI don't care what you think about Gagarin so I won't argue about that.", "aSentId": 15301, "answer": "the point being gagarin was not a party to his technology or aware of his chances of survival, so it is pointless to credit his success", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15302, "question": "the point being gagarin was not a party to his technology or aware of his chances of survival, so it is pointless to credit his success", "aSentId": 15303, "answer": "Which might be relevant if someone ever claimed that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15305, "question": "The future of Team Foundation Version control", "aSentId": 15306, "answer": "MS seems to be getting more open, but this rings of the old MS where instead they are appropriating ideas from the OSS community and charging a lot of money for it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15305, "question": "The future of Team Foundation Version control", "aSentId": 15308, "answer": "Microsoft is full of these empty promises. They said the same thing about ASP.NET webforms, but its being treated as a redheaded step-child.\n\nTo be honest, its good. I would like microsoft to invest in the best emerging technologies (MVC, Git/GitHub, etc). Leave the archaic alone to die. No new project should be written in web forms using VB.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15309, "question": "Microsoft is full of these empty promises. They said the same thing about ASP.NET webforms, but its being treated as a redheaded step-child.\n\nTo be honest, its good. I would like microsoft to invest in the best emerging technologies (MVC, Git/GitHub, etc). Leave the archaic alone to die. No new project should be written in web forms using VB.", "aSentId": 15310, "answer": "Devil's advocate- maybe having a competitor will keep the version control space fresh.  You don't want to give one company a monopoly on VCS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15311, "question": "Devil's advocate- maybe having a competitor will keep the version control space fresh.  You don't want to give one company a monopoly on VCS.", "aSentId": 15312, "answer": "There are plenty companies adding features to the open source git, like BitBucket, Stash, TFS, etc. I'm talking about the VCS, which no one could ever *own* git, but I get your point.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 15311, "question": "Devil's advocate- maybe having a competitor will keep the version control space fresh.  You don't want to give one company a monopoly on VCS.", "aSentId": 15314, "answer": "I'd rather have Subversion as the centralized VC choice.  I far prefer having version control integrated in Windows Explorer over the IDE (although there's Ankh if you want that), and the whole checkout model is just a nuisance.", "corpus": "reddit"}]
