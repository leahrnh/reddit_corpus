[{"docID": "t5_2fwo", "qSentId": 35813, "question": "How do you make programmers work 60-80 hours per week?", "aSentId": 35814, "answer": "You hire young coders that don't know better. At least that's how they got me.\n\nedit: was 19, bursting at the seams with passion that needed a direction, small startup with a washed out dot com era CEO full of dumb money, you know the type that watched too many Steve jobs documentaries, hired me and fed me a dream in return for my soul. I work for myself now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35815, "question": "You hire young coders that don't know better. At least that's how they got me.\n\nedit: was 19, bursting at the seams with passion that needed a direction, small startup with a washed out dot com era CEO full of dumb money, you know the type that watched too many Steve jobs documentaries, hired me and fed me a dream in return for my soul. I work for myself now.", "aSentId": 35816, "answer": "The manipulations..\n\n\"Be a team player\"\n\n\"Boxer comes in early and stays late every day...\"\n\n\"'Some of us' have noticed you aren't as engaged as others here.\"\n\n\"We are in crunch time. Yes we are always in crunch time but we need 80 hours a week instead of 60 this time. It should all blow over in a couple months.\"\n\n\"Look either you're passionate about the work here and willing to put in the hours like everyone else or you should think about a different profession.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35817, "question": "The manipulations..\n\n\"Be a team player\"\n\n\"Boxer comes in early and stays late every day...\"\n\n\"'Some of us' have noticed you aren't as engaged as others here.\"\n\n\"We are in crunch time. Yes we are always in crunch time but we need 80 hours a week instead of 60 this time. It should all blow over in a couple months.\"\n\n\"Look either you're passionate about the work here and willing to put in the hours like everyone else or you should think about a different profession.\"", "aSentId": 35818, "answer": "in my last job it was a perpetual round of\n\n\"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35819, "question": "in my last job it was a perpetual round of\n\n\"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"", "aSentId": 35820, "answer": "&gt; \"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"\n\nAh, the \"*fake it till you make it*\" style of production.  \nIn my experience, it never works.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35821, "question": "&gt; \"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"\n\nAh, the \"*fake it till you make it*\" style of production.  \nIn my experience, it never works.", "aSentId": 35822, "answer": "&gt; In my experience, it never works.\n\nIn my experience, it usually works. The customer gets a half baked feature, the engineers pull late nights fixing it after it ships, and nobody is fully satisfied, but the money changes hands and the businesses keep going.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35823, "question": "&gt; In my experience, it never works.\n\nIn my experience, it usually works. The customer gets a half baked feature, the engineers pull late nights fixing it after it ships, and nobody is fully satisfied, but the money changes hands and the businesses keep going.", "aSentId": 35824, "answer": "I've been considering contacting some lawyers to see which ones are available for businesses to hire when half-baked work is delivered and they want to sue the contractors.\n\nLicensing for software engineers isn't something I'm really keen on but at the same time, we need some kind of mechanism to punish the shoddy work that's put out there. The industry is swimming in cash and it's allowing all sorts of snake oil salesmen to push their shit code on everyone.\n\nI've been on 3 projects in the last year that were done by shitty contractors who took 9+ months to build out basic functionality. Those contractors should have been paid less or sued, that's how poor the work was. No way of verifying that the software even met the acceptance criteria, barely any unit tests (constant regressions), poor/low skilled devs assigned to the project, etc. A lawyer who was willing to go after these fuckers would have a field day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35825, "question": "I've been considering contacting some lawyers to see which ones are available for businesses to hire when half-baked work is delivered and they want to sue the contractors.\n\nLicensing for software engineers isn't something I'm really keen on but at the same time, we need some kind of mechanism to punish the shoddy work that's put out there. The industry is swimming in cash and it's allowing all sorts of snake oil salesmen to push their shit code on everyone.\n\nI've been on 3 projects in the last year that were done by shitty contractors who took 9+ months to build out basic functionality. Those contractors should have been paid less or sued, that's how poor the work was. No way of verifying that the software even met the acceptance criteria, barely any unit tests (constant regressions), poor/low skilled devs assigned to the project, etc. A lawyer who was willing to go after these fuckers would have a field day.", "aSentId": 35826, "answer": "I know that the people who built out 5 of the 8 systems I work on should be sued for their incompetence.  We're talking SQL injection issues all over the place.  We had to sell our client an enhancement package to get that mess straightened out--over something that should never have happened in the first place.\n\nAt least my company is about working smart and being open, not working hard and sweeping it under the rug.  We'll take a momentarily pissed off client over doing the job wrong.  Our management knows how to handle that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35823, "question": "&gt; In my experience, it never works.\n\nIn my experience, it usually works. The customer gets a half baked feature, the engineers pull late nights fixing it after it ships, and nobody is fully satisfied, but the money changes hands and the businesses keep going.", "aSentId": 35828, "answer": "In our company, we don't sell features we don't have unless we have an actual plan to develop them. And then we're pretty up front about not having it yet. We've had contracts that take effect when feature X works, and even when delayed, it's usually a successful compromise between sales and engineering.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35823, "question": "&gt; In my experience, it never works.\n\nIn my experience, it usually works. The customer gets a half baked feature, the engineers pull late nights fixing it after it ships, and nobody is fully satisfied, but the money changes hands and the businesses keep going.", "aSentId": 35830, "answer": "&gt; In my experience, it usually works. \n\nI agree. In my experience, this is how it *always* works. The problem is that managers aren't good at programming and programmers aren't good at managing. \n\nThe true success stories are those companies who people who are capable of both programming *and* managing. And they are rare.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35821, "question": "&gt; \"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"\n\nAh, the \"*fake it till you make it*\" style of production.  \nIn my experience, it never works.", "aSentId": 35833, "answer": "...also known as \u201cMarketing writes checks that Engineering can\u2019t cash\u201d.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35834, "question": "...also known as \u201cMarketing writes checks that Engineering can\u2019t cash\u201d.", "aSentId": 35835, "answer": "aka:\n\n    &lt;sales&gt; HEY GUYS WE JUST MADE A HUGE SALE\n    &lt;engineering&gt; oh dear god what did you promise\n    &lt;sales&gt; nothing big, just &lt;massive feature that requires refactoring half the application&gt;. Btw they want to start using us next week", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35836, "question": "aka:\n\n    &lt;sales&gt; HEY GUYS WE JUST MADE A HUGE SALE\n    &lt;engineering&gt; oh dear god what did you promise\n    &lt;sales&gt; nothing big, just &lt;massive feature that requires refactoring half the application&gt;. Btw they want to start using us next week", "aSentId": 35837, "answer": "Get it in writing. \nYou'll never have to name and shame, because they will know it's documented.  It will sort itself out.  Demand it. \n\nBe prepared to look elsewhere...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35834, "question": "...also known as \u201cMarketing writes checks that Engineering can\u2019t cash\u201d.", "aSentId": 35839, "answer": "I don't like that saying because it makes it seem like it's Engineering's fault", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35840, "question": "I don't like that saying because it makes it seem like it's Engineering's fault", "aSentId": 35841, "answer": "I don't know if it's the bank's fault if you write a check it can't cash...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35840, "question": "I don't like that saying because it makes it seem like it's Engineering's fault", "aSentId": 35843, "answer": "How about: Marketing writes checks that bounce when Engineering tries to cash them?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35834, "question": "...also known as \u201cMarketing writes checks that Engineering can\u2019t cash\u201d.", "aSentId": 35845, "answer": "&gt;...also known as \u201cMarketing writes checks that Engineering can\u2019t cash\u201d.*without a time machine*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35821, "question": "&gt; \"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"\n\nAh, the \"*fake it till you make it*\" style of production.  \nIn my experience, it never works.", "aSentId": 35847, "answer": "Works for Oracle.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35848, "question": "Works for Oracle.", "aSentId": 35849, "answer": "You need a stable of sales, marketing, and contract-law resources to be able to generate the (mis-)leads and get them locked-in.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35848, "question": "Works for Oracle.", "aSentId": 35851, "answer": "Triggered flashback to Oracle Enterprise Manager...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35848, "question": "Works for Oracle.", "aSentId": 35853, "answer": "Isn't that only because they bought an established community!? ;-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35856, "question": "there's a reason i don't work there any more :) the bit that mystified me was how they could imagine that the client wouldn't be able to tell a hastily implemented feature from a well-tested and polished one.", "aSentId": 35857, "answer": "If *none* of the features were well-tested and polished, there'd be no point of comparison.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35858, "question": "If *none* of the features were well-tested and polished, there'd be no point of comparison.", "aSentId": 35859, "answer": "hah, were you my coworker? :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35860, "question": "hah, were you my coworker? :)", "aSentId": 35861, "answer": "We've all worked there at some point.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35862, "question": "We've all worked there at some point.", "aSentId": 35863, "answer": "It's like Motel Califorina. They got pink drink-aid on ice. Koolaid is for people who hit deadlines!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35856, "question": "there's a reason i don't work there any more :) the bit that mystified me was how they could imagine that the client wouldn't be able to tell a hastily implemented feature from a well-tested and polished one.", "aSentId": 35865, "answer": "They can't tell the difference because in reality, they didn't actually need the feature and never actually used it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35866, "question": "They can't tell the difference because in reality, they didn't actually need the feature and never actually used it.", "aSentId": 35867, "answer": "We have a winner.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35856, "question": "there's a reason i don't work there any more :) the bit that mystified me was how they could imagine that the client wouldn't be able to tell a hastily implemented feature from a well-tested and polished one.", "aSentId": 35869, "answer": "You can't fool all clients all the time.  Some, yes. The ones that drive adoption in their industry? Typically not. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35871, "question": "It worked for MongoDB, which was basically just a KV store on top of mmap for the first few years.", "aSentId": 35872, "answer": "Well no one uses it a anymore. I see it slowly going poof.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35873, "question": "Well no one uses it a anymore. I see it slowly going poof.", "aSentId": 35874, "answer": "I disagree. It's everywhere I've been.  It might have been forked and renamed, but it's everywhere. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35877, "question": "False.", "aSentId": 35878, "answer": "My experience is false?  \nPlease do tell me how you're an expert in the things I've experienced... it will be amusing, illuminating, and/or creepy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35879, "question": "My experience is false?  \nPlease do tell me how you're an expert in the things I've experienced... it will be amusing, illuminating, and/or creepy.", "aSentId": 35880, "answer": "Yeah.  Just because you experienced something a certain way does not mean true for others.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35881, "question": "Yeah.  Just because you experienced something a certain way does not mean true for others.", "aSentId": 35882, "answer": "I suppose that's why he said \"In my experience\" ...\nBut yeah it sometimes works.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35819, "question": "in my last job it was a perpetual round of\n\n\"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"", "aSentId": 35884, "answer": "\"Well, then I hope the sales guys know how to code.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35819, "question": "in my last job it was a perpetual round of\n\n\"We've told the client we already have this feature. We're going to lose the entire deal if you guys can't build it out fast.\"", "aSentId": 35886, "answer": "Yeah?  Cool.\n\nWhere's my cut?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35817, "question": "The manipulations..\n\n\"Be a team player\"\n\n\"Boxer comes in early and stays late every day...\"\n\n\"'Some of us' have noticed you aren't as engaged as others here.\"\n\n\"We are in crunch time. Yes we are always in crunch time but we need 80 hours a week instead of 60 this time. It should all blow over in a couple months.\"\n\n\"Look either you're passionate about the work here and willing to put in the hours like everyone else or you should think about a different profession.\"", "aSentId": 35896, "answer": "It _always_ \"blows over\" in a few months. From now. God I'm glad I quit my startup job.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35897, "question": "It _always_ \"blows over\" in a few months. From now. God I'm glad I quit my startup job.", "aSentId": 35898, "answer": "Yeah, established companies that don't have their shit together do this too. I worked for one of the biggest banks in the U.S. and we always got these lines.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35899, "question": "Yeah, established companies that don't have their shit together do this too. I worked for one of the biggest banks in the U.S. and we always got these lines.", "aSentId": 35900, "answer": "Telecoms, banks, big engineering firms, automakers, medical equipment manufacturers. \n\nName a big project, and I'll show you the poor souls pushing 80-hour weeks to get it done. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35897, "question": "It _always_ \"blows over\" in a few months. From now. God I'm glad I quit my startup job.", "aSentId": 35902, "answer": "Only the shitty ones are like that. Usually it's the ones knocking off someone else's idea so they have to double-time it to beat them, but because they weren't smart enough to have an original idea to begin with it becomes a Bataan Death March.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35903, "question": "Only the shitty ones are like that. Usually it's the ones knocking off someone else's idea so they have to double-time it to beat them, but because they weren't smart enough to have an original idea to begin with it becomes a Bataan Death March.", "aSentId": 35904, "answer": "Originality \u2260 Being first. If an idea's time has come, there will be competition, even if you can't see it, perhaps it's operating in stealth? you certainly can't rule it out.\n\n~And as long as there's competition, [Moloch](http://slatestarcodex.com/2014/07/30/meditations-on-moloch/) will still bang his war drums, whisper visions of damnation into your managers' ears, and demand his limitless sacrifices.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35903, "question": "Only the shitty ones are like that. Usually it's the ones knocking off someone else's idea so they have to double-time it to beat them, but because they weren't smart enough to have an original idea to begin with it becomes a Bataan Death March.", "aSentId": 35906, "answer": "I've worked for three and they've all been like that. I'm starting to despair of finding one that isn't like that. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35907, "question": "I've worked for three and they've all been like that. I'm starting to despair of finding one that isn't like that. ", "aSentId": 35908, "answer": "I'm super selective about the ones I've worked for. I look for chemistry, loving the product, right technical fit, good leadership, and mutual respect. A certain dynamic among the people already there. And... a certain \"feeling.\" Usually the startup also has a bit of acclaim with the right people.\n\nDo any of the startups you've worked for still exist? All mine do (or got bought out) except for the one whose idea I never liked anyway.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35897, "question": "It _always_ \"blows over\" in a few months. From now. God I'm glad I quit my startup job.", "aSentId": 35910, "answer": "Not all startups are like that, IME I would say the majority are not like that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35911, "question": "Not all startups are like that, IME I would say the majority are not like that.", "aSentId": 35912, "answer": "There is a sweet spot for startups I know, but I just haven't found it yet. After a couple of years of working for some, I think terrible twos are not just for babies growing up.\nI think 4-5 years old could be the sweet spot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35913, "question": "There is a sweet spot for startups I know, but I just haven't found it yet. After a couple of years of working for some, I think terrible twos are not just for babies growing up.\nI think 4-5 years old could be the sweet spot.", "aSentId": 35914, "answer": "The trick is to not do California startups.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35915, "question": "The trick is to not do California startups.", "aSentId": 35916, "answer": "The \"trick\" is to live below your means. That way, if your boss starts demanding that you work twice as much as you're getting paid for, you have enough money set aside to say \"our agreement was 40 hours a week. I did 60 last week because I like you, but that's as much free work as I'm going to do, so I'm going home at the end of my day\" without being afraid of having to spend a month or two looking for a new job if you get fired.\n\nHint: You generally don't want to be working for people like that. Take a pay cut if you have to and move to a job you don't hate.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35915, "question": "The trick is to not do California startups.", "aSentId": 35918, "answer": "Another false, gross generalization. It usually mirrors the founders' own desires for a work/life balance. Not all founders want that kind of culture.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35915, "question": "The trick is to not do California startups.", "aSentId": 35920, "answer": "That's one filter, but it doesn't help when you live in IL.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35924, "question": "I work at a startup now and couldn't be happier. I work 10-4:30 M-F and have no stress with time to work on my own projects. We focus on one product, so that may help. Coming from a corporation that was soul-sucking and had the culture of less employees doing more work and 1% raises on record profit years, the startup job is heaven-sent. ", "aSentId": 35925, "answer": "Where do you work, and are you hiring? I'd love that schedule!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35926, "question": "Where do you work, and are you hiring? I'd love that schedule!", "aSentId": 35927, "answer": "It's amazing! We actually are hiring for iOS and/or Android devs, but I think only local to RDU; unless we have really strong candidates remotely. We are actually rushing to meet some March deadlines, but it's still 9:30-4:30 days. Just prioritizing. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35817, "question": "The manipulations..\n\n\"Be a team player\"\n\n\"Boxer comes in early and stays late every day...\"\n\n\"'Some of us' have noticed you aren't as engaged as others here.\"\n\n\"We are in crunch time. Yes we are always in crunch time but we need 80 hours a week instead of 60 this time. It should all blow over in a couple months.\"\n\n\"Look either you're passionate about the work here and willing to put in the hours like everyone else or you should think about a different profession.\"", "aSentId": 35929, "answer": "Every month, hand out a stupid plaque and gift certificate to starbucks to the ~~fool who spent the most time in the office~~ team player who went above and beyond.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35931, "question": "&gt; *Boxer* comes in early and stays late every day...\n\nAh, but recall what happened to poor Boxer. Kind of uncanny just how relevant the reference is here, actually.\n", "aSentId": 35932, "answer": "I didn't pick that name on accident ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35933, "question": "I didn't pick that name on accident ;)", "aSentId": 35934, "answer": "Oh, I'm aware :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35931, "question": "&gt; *Boxer* comes in early and stays late every day...\n\nAh, but recall what happened to poor Boxer. Kind of uncanny just how relevant the reference is here, actually.\n", "aSentId": 35936, "answer": "Boxer is the glue that holds this company together!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35937, "question": "Boxer is the glue that holds this company together!", "aSentId": 35938, "answer": "No no, Comrade Boxer died in the hospital!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35931, "question": "&gt; *Boxer* comes in early and stays late every day...\n\nAh, but recall what happened to poor Boxer. Kind of uncanny just how relevant the reference is here, actually.\n", "aSentId": 35940, "answer": "Can you please link or explain?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35941, "question": "Can you please link or explain?", "aSentId": 35942, "answer": "Boxer is a character in George Orwell's _Animal Farm_. The novel is a great read, so I won't spoil any more.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35944, "question": "I heard variations of all those phrases at my previous employer: a major defense contractor.  Not an attitude restricted to clueless startups or aimed solely at young, naive software engineers.", "aSentId": 35945, "answer": "I work as a contractor now, at places like that. I look at my watch and go, \"well, your contractor policy won't allow me to work more than 40 hours per week. See ya.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35947, "question": "&gt; It should all blow over in a couple months.\"\n\nThis is true for tax season in an accounting firm... everywhere else?  Not so much.\n\n\n&gt;\"Boxer comes in early and stays late every day...\"\n\nMe: Boxer has no lifer.  I'm going home to ride my bike then run.\n\n&gt;\"'Some of us' have noticed you aren't as engaged as others here.\"\n\nMe: Welp, I get everything done that 40 hours per week will allow.  \n\n&gt;or you should think about a different profession.\"\n\nMe: I do the job and work the hours I was hired for.  If you want more, then you should consider making me hourly and compensating me for the extra time.\n\n---\n\nI'd probably get shit-canned, but I'd rather change jobs then to be taken advantage of by an boss who doesn't care about me.", "aSentId": 35948, "answer": "The way they manipulate people into buying into all that kind of shit is when you literally turn the culture of the office into one of where people pride themselves on being taken advantage of.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35949, "question": "The way they manipulate people into buying into all that kind of shit is when you literally turn the culture of the office into one of where people pride themselves on being taken advantage of.", "aSentId": 35950, "answer": "&gt; when you literally turn the culture of the office into one of where people pride themselves on being taken advantage of.\n\nYep...  I could never be manipulated this way.  EVEN when I love my job, you'll never find me doing more than I was hired to do.  You pay me salary then I'm working 40 hours per week.  I'll go over that a few times per year if the job necessitates it, but it won't be a chronic situation.  \n\n---\n\nI don't understand people who buy into office culture of manipulation.  At the accounting firm I used to work there were employees who would stay late and surf the Internet just because it 'looked good,' to stay late.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35949, "question": "The way they manipulate people into buying into all that kind of shit is when you literally turn the culture of the office into one of where people pride themselves on being taken advantage of.", "aSentId": 35952, "answer": "I suspect that the quality of work isn't great in such a place, never mind morale. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35947, "question": "&gt; It should all blow over in a couple months.\"\n\nThis is true for tax season in an accounting firm... everywhere else?  Not so much.\n\n\n&gt;\"Boxer comes in early and stays late every day...\"\n\nMe: Boxer has no lifer.  I'm going home to ride my bike then run.\n\n&gt;\"'Some of us' have noticed you aren't as engaged as others here.\"\n\nMe: Welp, I get everything done that 40 hours per week will allow.  \n\n&gt;or you should think about a different profession.\"\n\nMe: I do the job and work the hours I was hired for.  If you want more, then you should consider making me hourly and compensating me for the extra time.\n\n---\n\nI'd probably get shit-canned, but I'd rather change jobs then to be taken advantage of by an boss who doesn't care about me.", "aSentId": 35954, "answer": "In California, programmers have to be paid overtime until they are in the $85k a year range.  Otherwise your boss is very likely breaking the law.  So there's that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35947, "question": "&gt; It should all blow over in a couple months.\"\n\nThis is true for tax season in an accounting firm... everywhere else?  Not so much.\n\n\n&gt;\"Boxer comes in early and stays late every day...\"\n\nMe: Boxer has no lifer.  I'm going home to ride my bike then run.\n\n&gt;\"'Some of us' have noticed you aren't as engaged as others here.\"\n\nMe: Welp, I get everything done that 40 hours per week will allow.  \n\n&gt;or you should think about a different profession.\"\n\nMe: I do the job and work the hours I was hired for.  If you want more, then you should consider making me hourly and compensating me for the extra time.\n\n---\n\nI'd probably get shit-canned, but I'd rather change jobs then to be taken advantage of by an boss who doesn't care about me.", "aSentId": 35956, "answer": "But once you start meeting insane demands, you get rewarded with *even more insane demands*!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35959, "question": "Flair, don't forget the flair.", "aSentId": 35960, "answer": "Had to chuckle that you mentioned that, I was really close to adding to the list \"Now, you know it's up to you whether or not you want to just do the bare minimum. Or... well, like Brian, for example, has thirty seven pieces of flair, okay. And a terrific smile.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35959, "question": "Flair, don't forget the flair.", "aSentId": 35962, "answer": "woooooooo!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35964, "question": "I am a team player.\n\nBoxer can come and go when he likes, I'm here when I'm at my best.\n\nI'm sorry to hear that, how do you measure engagement?\n\nI'll be here during dinner time if there's a home cooked vegetarian dinner served here. I need to eat, I'm on a diet.\n\nI can be passionate about more than one thing. A healthy lifestyle and getting adequate sleep so I can be at my best performance instead of just working like a half-baked zombie makes for better decisions.\n\nI'm so over the whole \"Work hard, play hard\" bullshit.", "aSentId": 35965, "answer": "It's not work hard play hard.  It's work yourself to death because you don't give a shit about anything else.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35968, "question": "\"It should blow over in a couple months\" can mean \"We think hiring good programmers alone will help improve the culture and management practices of our business\".", "aSentId": 35969, "answer": "I've cynically found it to mean \"In a few months we ship, and then the technical debt collectors will be coming.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35815, "question": "You hire young coders that don't know better. At least that's how they got me.\n\nedit: was 19, bursting at the seams with passion that needed a direction, small startup with a washed out dot com era CEO full of dumb money, you know the type that watched too many Steve jobs documentaries, hired me and fed me a dream in return for my soul. I work for myself now.", "aSentId": 35976, "answer": "\"Young people are just smarter\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35977, "question": "\"Young people are just smarter\"", "aSentId": 35978, "answer": "\"They're better with technology -- they grew up with it!\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35979, "question": "\"They're better with technology -- they grew up with it!\"", "aSentId": 35980, "answer": "\"Look at my three year old, he uses my tablet more than I do! He can help you!\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35981, "question": "\"Look at my three year old, he uses my tablet more than I do! He can help you!\"", "aSentId": 35982, "answer": "\"My son Bobby can help with the database!\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35983, "question": "\"My son Bobby can help with the database!\"", "aSentId": 35984, "answer": "Little Bobby Tables? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35985, "question": "Little Bobby Tables? ", "aSentId": 35986, "answer": "You are thinking of Little Bobby; Drop Tables;, actually", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35983, "question": "\"My son Bobby can help with the database!\"", "aSentId": 35988, "answer": "That boy ain't right", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35815, "question": "You hire young coders that don't know better. At least that's how they got me.\n\nedit: was 19, bursting at the seams with passion that needed a direction, small startup with a washed out dot com era CEO full of dumb money, you know the type that watched too many Steve jobs documentaries, hired me and fed me a dream in return for my soul. I work for myself now.", "aSentId": 35990, "answer": "It's the same reason why young people are drafted for the military. It's much easier to convince them to act against their self interest.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35991, "question": "It's the same reason why young people are drafted for the military. It's much easier to convince them to act against their self interest.", "aSentId": 35992, "answer": "They are also more likely to enjoy blowing shit up than old men.\n\n... Just kidding, blowing shit up just doesn't get old.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35993, "question": "They are also more likely to enjoy blowing shit up than old men.\n\n... Just kidding, blowing shit up just doesn't get old.", "aSentId": 35994, "answer": "Neither do most of the people that get blown up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35993, "question": "They are also more likely to enjoy blowing shit up than old men.\n\n... Just kidding, blowing shit up just doesn't get old.", "aSentId": 35996, "answer": "I thought you meant instead of blowing old men up for a minute... ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35991, "question": "It's the same reason why young people are drafted for the military. It's much easier to convince them to act against their self interest.", "aSentId": 35998, "answer": "Along with they are generally more in shape and adapt at learning....and the least likely to have dependents. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35999, "question": "Along with they are generally more in shape and adapt at learning....and the least likely to have dependents. ", "aSentId": 36000, "answer": "Shit, I am all those things too (at age 34) but absolutely wouldn't want to work consistent 60+ hour weeks with peaks of 80.\n\nI live alone and need some time to do laundry and go food shopping and wash the dishes and see my friends, and, like, y'know, relax and stuff. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36001, "question": "Shit, I am all those things too (at age 34) but absolutely wouldn't want to work consistent 60+ hour weeks with peaks of 80.\n\nI live alone and need some time to do laundry and go food shopping and wash the dishes and see my friends, and, like, y'know, relax and stuff. ", "aSentId": 36002, "answer": "No way, man. Having a life is for losers with no work ethic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36001, "question": "Shit, I am all those things too (at age 34) but absolutely wouldn't want to work consistent 60+ hour weeks with peaks of 80.\n\nI live alone and need some time to do laundry and go food shopping and wash the dishes and see my friends, and, like, y'know, relax and stuff. ", "aSentId": 36004, "answer": "My father is an empty nester.  He works 60-80 hour weeks out of sheer boredom at this point.  Without the kids to keep him busy, there's just nothing to *do* when he gets home.  And he gets stir crazy quickly.\n\nAnd my mom doesn't care.  It gives her time to do her own hobbies.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35999, "question": "Along with they are generally more in shape and adapt at learning....and the least likely to have dependents. ", "aSentId": 36006, "answer": "The marketing agency I was at actually made sure the junior devs were willing to stay as long as possible and tried to figure out if they had dependents or not. It was kinda fucked.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36007, "question": "The marketing agency I was at actually made sure the junior devs were willing to stay as long as possible and tried to figure out if they had dependents or not. It was kinda fucked.", "aSentId": 36008, "answer": "Damn..... That just sounds shitty.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35999, "question": "Along with they are generally more in shape and adapt at learning....and the least likely to have dependents. ", "aSentId": 36010, "answer": "&gt; adapt at learning\n\nI am a young(ish) person, and I think that's bullshit.  IME, age has absolutely no correlation with one's ability to learn.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36011, "question": "&gt; adapt at learning\n\nI am a young(ish) person, and I think that's bullshit.  IME, age has absolutely no correlation with one's ability to learn.", "aSentId": 36012, "answer": "I think its more of the older you are the harder it is to change life long habits. *shrug*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36011, "question": "&gt; adapt at learning\n\nI am a young(ish) person, and I think that's bullshit.  IME, age has absolutely no correlation with one's ability to learn.", "aSentId": 36014, "answer": "&gt; I am a young(ish) person,\n\nSo you have no life experience to back that up?\n\nI'm 28 and I'm already having bouts of not wanting to learn anything.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36011, "question": "&gt; adapt at learning\n\nI am a young(ish) person, and I think that's bullshit.  IME, age has absolutely no correlation with one's ability to learn.", "aSentId": 36016, "answer": "I've never been especially good at learning, but when I was younger, bashing my head against the books was pretty much the only productive thing I could do. I didn't even enjoy it, a lot of the time. I could see that as soon as I no longer had to I would stop, and whatever mental adaptations I might have had that made it supposedly easier for me to learn than older people would atrophy, not as a result of age itself but as a result of man's inclination towards complacency.\n\nI try to fight complacency. There is still so much to learn, but the fact is I'm not going to bother with most of simply because I don't have to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35991, "question": "It's the same reason why young people are drafted for the military. It's much easier to convince them to act against their self interest.", "aSentId": 36020, "answer": "That's a really one-sided way to look at it. Not everyone joins the military because they were duped. Sure some people get duped. But for a lot of people, the military offers an escape from \"get born, work in the town you were born in, have kids, die.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36021, "question": "That's a really one-sided way to look at it. Not everyone joins the military because they were duped. Sure some people get duped. But for a lot of people, the military offers an escape from \"get born, work in the town you were born in, have kids, die.\"", "aSentId": 36022, "answer": "He said *drafted*, not *enlist*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36023, "question": "He said *drafted*, not *enlist*.", "aSentId": 36024, "answer": "Very few country's draft anyone. Either you enlist, or it's mandatory service.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36021, "question": "That's a really one-sided way to look at it. Not everyone joins the military because they were duped. Sure some people get duped. But for a lot of people, the military offers an escape from \"get born, work in the town you were born in, have kids, die.\"", "aSentId": 36026, "answer": "Not all shortcuts are good.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36028, "question": "War: \"Young men dying for old men\"", "aSentId": 36029, "answer": "That sounds like an ancient greek romantic tragedy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36031, "question": "lol are you joking? Like I mean that as a serious question.\n\nYou honestly don't think it has anything to do with being more able bodied, or less likely to have dependents?", "aSentId": 36032, "answer": "I think you'll find that the average 25 year old is more physically and mentally capable than a 19 year old. But during the Vietnam war, they drafted 19 and 20 year olds, not 25 year olds. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36034, "question": "While it is true that we don't \"know better\", as in, we don't have the experience in the field (both in the technical and in the is-this-particular-job-offer-worth-it sense) that veteran programmers have, some time we *do* know what we're getting into and do it on purpose.\n\nI did this in one of the most prominent software company (let's call it \"X\") of a big city my country. I did it for 9 months. As you can imagine, the job itself was shit, the pay in relation to the work I had to put on was shit, but it was totally worth it, and in the end I got exactly what I came looking for: I played the \"good hard worker boy\" persona and when I quit that job I got one that paid me almost 70% more than the one I had before working at \"X\", with only 9 months more of experience. I have since left that job because I want to get my degree and it was a full time job. But I now have \"X\" on my resume and I get two or three good job offers a week.\n\nLeaving that money behind was hard, but the prospect of being able to move to the US made it worth it (that's what I want the degree for). At least so I think right now.\n\nSo yes. I *will* work 60 hours a week in my first year in the US if it's necessary, and I'll do my best to work my ass off if it gets me ahead in relation to my peers in a \"this guy is worth for your business\" sense. No, I won't do it again afterwards.\n\nIt may be that I will do it because I'm stupid, but not because I'm ignorant.", "aSentId": 36035, "answer": "I think there's a strong argument to be made for \"Get your foot in the door programming HOWEVER you can.\" and working 60-80 hours a week might be part of that price.\n\nIt's just important that other devs realize it's NOT considered acceptable and normal across the industry... instead it's a way companies take advantage of developers. Game companies are notorious for burning through fresh devs, dumping them, and bringing in a new fresh crop to burn through.\n\nSo, if you are willing to pay the price for a benefit you consider worth it - that's totally logical. Just protect yourself by realizing that you ARE being asked to pay a high price.. that it is guilt tripping from managers pushing this - NOT the case that you're a lazy non-team-player just because you don't want to sacrifice your entire life to work.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36036, "question": "I think there's a strong argument to be made for \"Get your foot in the door programming HOWEVER you can.\" and working 60-80 hours a week might be part of that price.\n\nIt's just important that other devs realize it's NOT considered acceptable and normal across the industry... instead it's a way companies take advantage of developers. Game companies are notorious for burning through fresh devs, dumping them, and bringing in a new fresh crop to burn through.\n\nSo, if you are willing to pay the price for a benefit you consider worth it - that's totally logical. Just protect yourself by realizing that you ARE being asked to pay a high price.. that it is guilt tripping from managers pushing this - NOT the case that you're a lazy non-team-player just because you don't want to sacrifice your entire life to work.\n", "aSentId": 36037, "answer": "I actually agree. But keep in mind that in my case is not \"get your foot in the door of programming HOWEVER you can\", it's \"get your foot in the door of the first world HOWEVER you can\". If you are able to see it that way, I think understanding my perspective will be easier. At my age, I have the energy to do it and I'm willing to, because I want a better life.\n\nI know I'm paying a high price, but it's a price that will have a high return of investment. If to get that return I have to pretend that I care about their shitty software and that I'm okay staying overtime debugging a method behind an overly obscure inheritance chain of hell, I'll do it.\n\nI understand that by doing that I'm kind of part of the problem, but I have come to accept it. As they say: you've got to pick your battles. I have to purposefully leave my principles on the side here.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36038, "question": "I actually agree. But keep in mind that in my case is not \"get your foot in the door of programming HOWEVER you can\", it's \"get your foot in the door of the first world HOWEVER you can\". If you are able to see it that way, I think understanding my perspective will be easier. At my age, I have the energy to do it and I'm willing to, because I want a better life.\n\nI know I'm paying a high price, but it's a price that will have a high return of investment. If to get that return I have to pretend that I care about their shitty software and that I'm okay staying overtime debugging a method behind an overly obscure inheritance chain of hell, I'll do it.\n\nI understand that by doing that I'm kind of part of the problem, but I have come to accept it. As they say: you've got to pick your battles. I have to purposefully leave my principles on the side here.", "aSentId": 36039, "answer": "That's a good point - it applies to anytime you want to 'ratchet up'\n\nThat is, you may be asked to pay a price for it. Then each of us can decide if the price is worth it. I can understand the perspective of people trying to ratchet up to the first world too - same situation of short term pain for long term gain, so long as we remember not to make it long term pain.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36038, "question": "I actually agree. But keep in mind that in my case is not \"get your foot in the door of programming HOWEVER you can\", it's \"get your foot in the door of the first world HOWEVER you can\". If you are able to see it that way, I think understanding my perspective will be easier. At my age, I have the energy to do it and I'm willing to, because I want a better life.\n\nI know I'm paying a high price, but it's a price that will have a high return of investment. If to get that return I have to pretend that I care about their shitty software and that I'm okay staying overtime debugging a method behind an overly obscure inheritance chain of hell, I'll do it.\n\nI understand that by doing that I'm kind of part of the problem, but I have come to accept it. As they say: you've got to pick your battles. I have to purposefully leave my principles on the side here.", "aSentId": 36041, "answer": "I really like you're attitude, you've got a realistic vision and you're working through it.\n\nThat and you're seem to be clued in to the industry manipulation at a very early part of your career, and you've turned it to your advantage. Bravo.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36042, "question": "I really like you're attitude, you've got a realistic vision and you're working through it.\n\nThat and you're seem to be clued in to the industry manipulation at a very early part of your career, and you've turned it to your advantage. Bravo.\n", "aSentId": 36043, "answer": "This is nice to hear. Thanks!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36038, "question": "I actually agree. But keep in mind that in my case is not \"get your foot in the door of programming HOWEVER you can\", it's \"get your foot in the door of the first world HOWEVER you can\". If you are able to see it that way, I think understanding my perspective will be easier. At my age, I have the energy to do it and I'm willing to, because I want a better life.\n\nI know I'm paying a high price, but it's a price that will have a high return of investment. If to get that return I have to pretend that I care about their shitty software and that I'm okay staying overtime debugging a method behind an overly obscure inheritance chain of hell, I'll do it.\n\nI understand that by doing that I'm kind of part of the problem, but I have come to accept it. As they say: you've got to pick your battles. I have to purposefully leave my principles on the side here.", "aSentId": 36045, "answer": "only thing to consider is burnout. once you are aware of it, it's usually too late", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36046, "question": "only thing to consider is burnout. once you are aware of it, it's usually too late", "aSentId": 36047, "answer": "Yes, I'm quite scared of it actually, because as you say and if the accounts I've read online are accurate, it's easy to confuse it with drive and motivation right up to the moment you implode", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36034, "question": "While it is true that we don't \"know better\", as in, we don't have the experience in the field (both in the technical and in the is-this-particular-job-offer-worth-it sense) that veteran programmers have, some time we *do* know what we're getting into and do it on purpose.\n\nI did this in one of the most prominent software company (let's call it \"X\") of a big city my country. I did it for 9 months. As you can imagine, the job itself was shit, the pay in relation to the work I had to put on was shit, but it was totally worth it, and in the end I got exactly what I came looking for: I played the \"good hard worker boy\" persona and when I quit that job I got one that paid me almost 70% more than the one I had before working at \"X\", with only 9 months more of experience. I have since left that job because I want to get my degree and it was a full time job. But I now have \"X\" on my resume and I get two or three good job offers a week.\n\nLeaving that money behind was hard, but the prospect of being able to move to the US made it worth it (that's what I want the degree for). At least so I think right now.\n\nSo yes. I *will* work 60 hours a week in my first year in the US if it's necessary, and I'll do my best to work my ass off if it gets me ahead in relation to my peers in a \"this guy is worth for your business\" sense. No, I won't do it again afterwards.\n\nIt may be that I will do it because I'm stupid, but not because I'm ignorant.", "aSentId": 36049, "answer": "I fail to see how killing yourself for a company that didn't reward you for it paid off.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36050, "question": "I fail to see how killing yourself for a company that didn't reward you for it paid off.", "aSentId": 36051, "answer": "The most important (IMO) one I already stated but here goes again anyways:\n\nI get to list in my resume one of the most important software companies for medium-to-large business in my country; it doesn't matter that their software is shit in terms of architecture and code quality, it works and clients (a) don't know (b) couldn't care less. I also left in great terms with my peers and one of the managers (not so much with the one who decided to hire me in the first place, *figures*), and if I learned something is that the importance of networking can not be over-stressed. This got me a great-paying, interesting job in a smaller company three weeks after I quit. I say three weeks, but that's because I was filtering opportunities. I sent my resume two days before being called, and was told to \"come on Monday\".\n\nAlso, I didn't have to kill myself. One of the systems *was* written in VB6 though, but not the main one. That one was written in Java. Well I might have killed myself a little.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36059, "question": "&gt;  I work for myself now.\n\nWhat kind of work, if you don't mind?  I've thought about freelancing myself, but it seems like about 90% of freelancing work is web development, and I'm an embedded developer.", "aSentId": 36060, "answer": "When I quit I spent 6 months, wrote 5 mobile apps, and one of them hit well enough to cover my living expenses. Freelancing can be truly terrible. Try selling your own stuff, and spread your risk across more than one product is my advice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35813, "question": "How do you make programmers work 60-80 hours per week?", "aSentId": 36064, "answer": "Is that a bona fide question submitted to Quora, or do people plant questions that allow them to write the essay they already had in mind?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36065, "question": "Is that a bona fide question submitted to Quora, or do people plant questions that allow them to write the essay they already had in mind?", "aSentId": 36066, "answer": "Sounded kind of fishy to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36065, "question": "Is that a bona fide question submitted to Quora, or do people plant questions that allow them to write the essay they already had in mind?", "aSentId": 36068, "answer": "I'm wondering if it's this guy I worked for (a total of 2 months) a few years back. Seemed like a perfectly fine boss for a little while, then once I was comfortable and working well with the team he revealed himself as some kind of poor mans pharaoh. He believed we were going to build him a pyramid as he rode on the back of his slaves. This is absolutely something he'd ask with no irony or sarcasm. That said, it's equally likely a plant question.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36065, "question": "Is that a bona fide question submitted to Quora, or do people plant questions that allow them to write the essay they already had in mind?", "aSentId": 36070, "answer": "Yep, it's probably someone trolling for material for their Medium thinkpiece.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36071, "question": "Yep, it's probably someone trolling for material for their Medium thinkpiece.", "aSentId": 36072, "answer": "[Winner winner chicken dinner.](https://medium.com/@gerrydimova/how-do-you-make-programmers-in-a-startup-work-60-80-hours-a-week-9ddc1bd6abb4)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36073, "question": "[Winner winner chicken dinner.](https://medium.com/@gerrydimova/how-do-you-make-programmers-in-a-startup-work-60-80-hours-a-week-9ddc1bd6abb4)", "aSentId": 36074, "answer": "Interesting that she's also the top response on Quora. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36073, "question": "[Winner winner chicken dinner.](https://medium.com/@gerrydimova/how-do-you-make-programmers-in-a-startup-work-60-80-hours-a-week-9ddc1bd6abb4)", "aSentId": 36076, "answer": "To be fair, if the pepsin writing that actually asked the question, that's amazingly narcissistic. The question blew up first time around, wouldn't be surprised if it's not the same person.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36071, "question": "Yep, it's probably someone trolling for material for their Medium thinkpiece.", "aSentId": 36078, "answer": "\"thinkpiece\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36082, "question": "In this case at least I don't know that it matters.  It's a legit topic for discussion.", "aSentId": 36083, "answer": "I couldn't disagree more. Whoever asked the question is an asshole. No one should ever be expected to work that many hours, and the topic of how to get them to do it shouldn't even be considered for discussion.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36084, "question": "I couldn't disagree more. Whoever asked the question is an asshole. No one should ever be expected to work that many hours, and the topic of how to get them to do it shouldn't even be considered for discussion.", "aSentId": 36085, "answer": "You pay me enough, and I will do it. Paying me enough includes providing me the requisite chemical substances to keep my mind and body going.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36086, "question": "You pay me enough, and I will do it. Paying me enough includes providing me the requisite chemical substances to keep my mind and body going.", "aSentId": 36087, "answer": "What does money matter when you don't have time to spend it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36088, "question": "What does money matter when you don't have time to spend it?", "aSentId": 36089, "answer": "Some people like to consider the long game.  Work hard for a short period, so you never have to work again.  /r/financialindependence/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36090, "question": "Some people like to consider the long game.  Work hard for a short period, so you never have to work again.  /r/financialindependence/", "aSentId": 36091, "answer": "&gt;Some people like to consider the **financial** long game\n\nWhile ignoring the mental and physical health long game.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36090, "question": "Some people like to consider the long game.  Work hard for a short period, so you never have to work again.  /r/financialindependence/", "aSentId": 36093, "answer": "Well most likely the kind of company that has to ask that kind of question won't pay you enough to reach FI anytime soon.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36094, "question": "Well most likely the kind of company that has to ask that kind of question won't pay you enough to reach FI anytime soon.", "aSentId": 36095, "answer": "Well, I'm really only responding with respect to the previous post that says, \"If you pay me enough, I'll do it.\" ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36088, "question": "What does money matter when you don't have time to spend it?", "aSentId": 36097, "answer": "Plenty. A: Save money, eventually quit. B: Even if you never got around to quitting, you could do a lot to improve the lives of others and invest in the future of humanity with that money.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36098, "question": "Plenty. A: Save money, eventually quit. B: Even if you never got around to quitting, you could do a lot to improve the lives of others and invest in the future of humanity with that money.", "aSentId": 36099, "answer": "I suppose if you don't enjoy your life outside work and you don't have friends or a family it would be fine. Sounds like a shitty situation to me though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36088, "question": "What does money matter when you don't have time to spend it?", "aSentId": 36101, "answer": "It's not for the rest of your life. I tend to take an extra side gig for a month on top of my regular 40 hours. Yeah, I may be pushing 80 but damn if 2.5 my normal pay for a month isn't worth it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 35813, "question": "How do you make programmers work 60-80 hours per week?", "aSentId": 36105, "answer": "I'm paid for 40 hours a week but I'm quite sure I'm not productive for half of that.\n\nSource: I'm posting this on working hour.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36106, "question": "I'm paid for 40 hours a week but I'm quite sure I'm not productive for half of that.\n\nSource: I'm posting this on working hour.", "aSentId": 36107, "answer": "I can get maybe 2-3 hours of really good work done in a day. Another 2-3 hours of mediocre work, and any more than that is basically wasted.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36108, "question": "I can get maybe 2-3 hours of really good work done in a day. Another 2-3 hours of mediocre work, and any more than that is basically wasted.", "aSentId": 36109, "answer": "in the mid-90s i started to factor these kinds of productivity numbers into my project plans.  i came up with the most realistic and always met project plans of anyone in the whole division.  they promoted me away from that role because nobody liked my milestone dates or my staffing requirements.  predictability isn't valued very highly in some markets", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36110, "question": "in the mid-90s i started to factor these kinds of productivity numbers into my project plans.  i came up with the most realistic and always met project plans of anyone in the whole division.  they promoted me away from that role because nobody liked my milestone dates or my staffing requirements.  predictability isn't valued very highly in some markets", "aSentId": 36111, "answer": "Just about every product manger I've spoken to. Would rather have a shoddy product that only works under certain circumstances and with plenty of workarounds than one that just works, let alone sophisticated in any way, if it meant being the first to market or otherwise opening the sales floodgates sooner.\n\nThe entire incentive structure behind those above you calling the shots revolves around time and \"making waves\" with ambitious gambles, and quantifying the quality of a product for their resume's bullet points of success is largely impossible.  As such, your predictability in estimation for a high quality product is next to useless to them, as you're estimating a thing they literally don't actually want.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36112, "question": "Just about every product manger I've spoken to. Would rather have a shoddy product that only works under certain circumstances and with plenty of workarounds than one that just works, let alone sophisticated in any way, if it meant being the first to market or otherwise opening the sales floodgates sooner.\n\nThe entire incentive structure behind those above you calling the shots revolves around time and \"making waves\" with ambitious gambles, and quantifying the quality of a product for their resume's bullet points of success is largely impossible.  As such, your predictability in estimation for a high quality product is next to useless to them, as you're estimating a thing they literally don't actually want.", "aSentId": 36113, "answer": "&gt; Just about every product manger I've spoken to. Would rather have a shoddy product that only works under certain circumstances and with plenty of workarounds than one that just works, let alone sophisticated in any way, if it meant being the first to market or otherwise opening the sales floodgates sooner.\n\nWell they aren't wrong to prefer that, TBH.  Mediocre product is the first to market, picks up steam, goes through several fixes and releases and by the time better product comes along no one can be bothered to switch.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36112, "question": "Just about every product manger I've spoken to. Would rather have a shoddy product that only works under certain circumstances and with plenty of workarounds than one that just works, let alone sophisticated in any way, if it meant being the first to market or otherwise opening the sales floodgates sooner.\n\nThe entire incentive structure behind those above you calling the shots revolves around time and \"making waves\" with ambitious gambles, and quantifying the quality of a product for their resume's bullet points of success is largely impossible.  As such, your predictability in estimation for a high quality product is next to useless to them, as you're estimating a thing they literally don't actually want.", "aSentId": 36115, "answer": "I'm a product manager, and I don't.  Also, I manage the managers and team's time not from how much they are working, but how much they aren't.  People aren't allowed to send emails at night.  I will say, \"you can't work on that\", because someone is getting burnt out and I force them to slow down.  \n\nNo kidding, I let team members have entire weeks of working vacations.  Come in, fuck off, learn something, I don't care.  You are not at home, but you are benched.  Everyone on my teams works freekin hard.\n\nMaybe I'm a revolutionary.  But people like my product.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36116, "question": "I'm a product manager, and I don't.  Also, I manage the managers and team's time not from how much they are working, but how much they aren't.  People aren't allowed to send emails at night.  I will say, \"you can't work on that\", because someone is getting burnt out and I force them to slow down.  \n\nNo kidding, I let team members have entire weeks of working vacations.  Come in, fuck off, learn something, I don't care.  You are not at home, but you are benched.  Everyone on my teams works freekin hard.\n\nMaybe I'm a revolutionary.  But people like my product.", "aSentId": 36117, "answer": "I am not a programmer, but the school I teach at is kind of like this.\n\nWe have half days, and instead of working on more school stuff, we read a book together and discuss it in a seminar.\n\nOther days when we have meetings with all the teachers?  Sometimes we go out to the art museum and dick around to just enjoy each other's company and build community.\n\nFucking awesome place to work with the little I get paid.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36116, "question": "I'm a product manager, and I don't.  Also, I manage the managers and team's time not from how much they are working, but how much they aren't.  People aren't allowed to send emails at night.  I will say, \"you can't work on that\", because someone is getting burnt out and I force them to slow down.  \n\nNo kidding, I let team members have entire weeks of working vacations.  Come in, fuck off, learn something, I don't care.  You are not at home, but you are benched.  Everyone on my teams works freekin hard.\n\nMaybe I'm a revolutionary.  But people like my product.", "aSentId": 36119, "answer": "I congratulate you on successfully fending off the desires to meet unrealistic business requirements with terrible technical requirements. You do realize that you're a unicorn, though, right? Possibly, you're not actually going to work everyday, but instead there is a persistent gas leak in an elevator you get on everyday and you just hallucinate that perfect sounding situation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36120, "question": "I congratulate you on successfully fending off the desires to meet unrealistic business requirements with terrible technical requirements. You do realize that you're a unicorn, though, right? Possibly, you're not actually going to work everyday, but instead there is a persistent gas leak in an elevator you get on everyday and you just hallucinate that perfect sounding situation.", "aSentId": 36121, "answer": "Eh, having high demand and talented developers around is half of the business equation in the long term.  My behavior isn't altruistic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36110, "question": "in the mid-90s i started to factor these kinds of productivity numbers into my project plans.  i came up with the most realistic and always met project plans of anyone in the whole division.  they promoted me away from that role because nobody liked my milestone dates or my staffing requirements.  predictability isn't valued very highly in some markets", "aSentId": 36123, "answer": "Just read a good section in Software Estimation that talks about this. You will get your most accurate planning data from previous projects. Across multiple projects you'll be factoring in all the vacations, sick days, unproductive times, the really productive days, etc. and your estimates around how much work can get done in a timeframe will be really really good.\n\nFor others reading: within 6 weeks on my current project, we have enough data within JIRA to show that our team can only handle 80hrs worth of work in 2-week sprints, basically 40hrs/week across the team. We have consistently scheduled ourselves above that and have come up short every sprint. 120hrs? kick off 40hrs of that work into the next sprint and we'll meet the goal. Keep in the sprint? we'll look like we're constantly behind.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36124, "question": "Just read a good section in Software Estimation that talks about this. You will get your most accurate planning data from previous projects. Across multiple projects you'll be factoring in all the vacations, sick days, unproductive times, the really productive days, etc. and your estimates around how much work can get done in a timeframe will be really really good.\n\nFor others reading: within 6 weeks on my current project, we have enough data within JIRA to show that our team can only handle 80hrs worth of work in 2-week sprints, basically 40hrs/week across the team. We have consistently scheduled ourselves above that and have come up short every sprint. 120hrs? kick off 40hrs of that work into the next sprint and we'll meet the goal. Keep in the sprint? we'll look like we're constantly behind.", "aSentId": 36125, "answer": "What sort of data do you keep that allows you to do that? How is it reported?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36108, "question": "I can get maybe 2-3 hours of really good work done in a day. Another 2-3 hours of mediocre work, and any more than that is basically wasted.", "aSentId": 36127, "answer": "Actually that third 2 to 3 hours is critical to the other 4 to 6 hours.\nYou may not be banging in code but you're mulling over solutions.  Exploring interesting bunny trails, learning new tools, resting your mind. \n\nDon't discount the value of unproductive time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36108, "question": "I can get maybe 2-3 hours of really good work done in a day. Another 2-3 hours of mediocre work, and any more than that is basically wasted.", "aSentId": 36129, "answer": "Yep, I'm finding this to be the case for some days and for the most productive days I'm going past 5 hrs of good work but that's maybe once a week.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36106, "question": "I'm paid for 40 hours a week but I'm quite sure I'm not productive for half of that.\n\nSource: I'm posting this on working hour.", "aSentId": 36132, "answer": "Roughly 1/3, over here. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36106, "question": "I'm paid for 40 hours a week but I'm quite sure I'm not productive for half of that.\n\nSource: I'm posting this on working hour.", "aSentId": 36134, "answer": "Man I miss how productive I was when I first started my job", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36136, "question": "I wrote about 20 lines of code at work so far this week.", "aSentId": 36137, "answer": "I did a query on my project's git logs today. I've apparently deleted 9k more LOC than I've written in about 9 months. LOC is absolutely meaningless. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36138, "question": "I did a query on my project's git logs today. I've apparently deleted 9k more LOC than I've written in about 9 months. LOC is absolutely meaningless. ", "aSentId": 36139, "answer": "You're hired.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36138, "question": "I did a query on my project's git logs today. I've apparently deleted 9k more LOC than I've written in about 9 months. LOC is absolutely meaningless. ", "aSentId": 36141, "answer": "i cut 3600 LOC in one day last week. probably the best moment of my career right there", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36138, "question": "I did a query on my project's git logs today. I've apparently deleted 9k more LOC than I've written in about 9 months. LOC is absolutely meaningless. ", "aSentId": 36143, "answer": "No it's not! Reducing LOC is the best thing you can do to a codebase.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36136, "question": "I wrote about 20 lines of code at work so far this week.", "aSentId": 36147, "answer": "more than me.  I have done 7 code reviews though and attended 4 meetings", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36148, "question": "more than me.  I have done 7 code reviews though and attended 4 meetings", "aSentId": 36149, "answer": "IMO, code reviews aren't being unproductive. You're contributing to the quality of the codebase, even if it's indirectly. An hour spent reviewing code is an entire day not wasted trying to fix really awful code.\n\nThat is, of course, if your company actually makes devs rewrite failed reviews.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36150, "question": "IMO, code reviews aren't being unproductive. You're contributing to the quality of the codebase, even if it's indirectly. An hour spent reviewing code is an entire day not wasted trying to fix really awful code.\n\nThat is, of course, if your company actually makes devs rewrite failed reviews.", "aSentId": 36151, "answer": "If truly awful code often gets to code review, your team needs to work on discussing things more before coding at all. \n\nEDIT: I'm surprised I have to say this.. I'm not advocating skipping code reviews. I'm saying that code reviews are often abused because people skip design discussions.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36152, "question": "If truly awful code often gets to code review, your team needs to work on discussing things more before coding at all. \n\nEDIT: I'm surprised I have to say this.. I'm not advocating skipping code reviews. I'm saying that code reviews are often abused because people skip design discussions.", "aSentId": 36153, "answer": "Agreed, but not having code reviews ensures that it will.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36152, "question": "If truly awful code often gets to code review, your team needs to work on discussing things more before coding at all. \n\nEDIT: I'm surprised I have to say this.. I'm not advocating skipping code reviews. I'm saying that code reviews are often abused because people skip design discussions.", "aSentId": 36155, "answer": "You do realize that open source projects have a policy of code review before accepting patches right? You do realize that their code quality is usually much higher than what you find on a proprietary project? There's always time for code reviews.\n\nIf you're pair programming, you're doing the code reviewing as you're writing the code which can save some time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36156, "question": "You do realize that open source projects have a policy of code review before accepting patches right? You do realize that their code quality is usually much higher than what you find on a proprietary project? There's always time for code reviews.\n\nIf you're pair programming, you're doing the code reviewing as you're writing the code which can save some time.", "aSentId": 36157, "answer": "Read my edit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36150, "question": "IMO, code reviews aren't being unproductive. You're contributing to the quality of the codebase, even if it's indirectly. An hour spent reviewing code is an entire day not wasted trying to fix really awful code.\n\nThat is, of course, if your company actually makes devs rewrite failed reviews.", "aSentId": 36159, "answer": "Yes, code review comments are taken by the dev and the code is reworked.  Even if it's for a comment explaining why something is there.\n\nIt's just a little bit of a shift being the most senior member of the team, less coding, more reviews and meetings.  Don't know if my persona can \"not produce\" things for the next 6 1/2 years until retirement.  It's a strange feeling at times.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36148, "question": "more than me.  I have done 7 code reviews though and attended 4 meetings", "aSentId": 36161, "answer": "In 4 days? Lucky.\n\nSometimes I think my job is \"designated code review guy\" because of my breadth of knowledge. It seems like the more stuff you know, the less productive you end up being because everyone pesters you.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36162, "question": "In 4 days? Lucky.\n\nSometimes I think my job is \"designated code review guy\" because of my breadth of knowledge. It seems like the more stuff you know, the less productive you end up being because everyone pesters you.", "aSentId": 36163, "answer": "well...I did take Mon and Tues off :|", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36165, "question": "I'm productive for maybe 5-6 hours a day. That's gone up since I've stared skipping lunch (shit's distracting, plus food comas suck)", "aSentId": 36166, "answer": "Space your calories out, man. Food comas are the path to diabetes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36167, "question": "Space your calories out, man. Food comas are the path to diabetes.", "aSentId": 36168, "answer": "food comas are much better placed when they aren't while I'm trying to program.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36165, "question": "I'm productive for maybe 5-6 hours a day. That's gone up since I've stared skipping lunch (shit's distracting, plus food comas suck)", "aSentId": 36170, "answer": "So you dont have lunch at all?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36171, "question": "So you dont have lunch at all?", "aSentId": 36172, "answer": "I might have a full fat yogurt and/or an orange if being hungry is super distracting.\n\nThe thing about eating is that it activates the parasympathetic nervous system, while programming is sympathetic nervous system work. It's not just the interruption, but the post-lunch state of mind that's the issue. No lunch = no post-lunch doldrums.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36173, "question": "I might have a full fat yogurt and/or an orange if being hungry is super distracting.\n\nThe thing about eating is that it activates the parasympathetic nervous system, while programming is sympathetic nervous system work. It's not just the interruption, but the post-lunch state of mind that's the issue. No lunch = no post-lunch doldrums.", "aSentId": 36174, "answer": "I totally agree that post-lunch reduces productivity because it makes me wanna sleep so fucking bad. But I sit right next to my manager so I cant even close my eyes for even a minute. After lunch I just sit on my desk staring at the screen for an hour and just trying not to fall asleep lol", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36178, "question": "&gt; Would you like an appointment with a dentist who is on their 80th hour of work this week?\n\nSays it all.", "aSentId": 36179, "answer": "Psch, like I'm gonna schedule a dentist appointment at eight o'clock on a Friday.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36180, "question": "Psch, like I'm gonna schedule a dentist appointment at eight o'clock on a Friday.", "aSentId": 36181, "answer": "Working seven days a week means every day is a Friday.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36183, "question": "Best comment is the one talking about insulting amounts of equity.\n\nI love MBAs: I'm going to work hard and get rewarded with millions of dollars of equity if I succeed.\n\nProgrammers: I'm going to work hard and get rewarded with thousands of dollars of equity if I succeed. And the MBAs take all the credit.", "aSentId": 36184, "answer": "What is this equity you speak of?  Do non-startup developers actually get equity?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36186, "question": "You can *be at work* 80 hours/week.  You can even fuck around in a debugger for 80 hours/week.  What you cannot do is produce high-quality work for 80 hours/week, for weeks on end.\n\nCrunch mode does not work.  Crunch mode produces zombies and buggy code.  Seen it happen, over and over.  Fell for it myself, a few times, before I learned.\n\nIt's one thing to stay a few night in a row.  It's another to enter a delusional head-space where you never leave your workstation.  Your critical faculties just kind of *stop working* -- you can no longer make solid decisions, you can no longer balance priorities.  All you can really do is lurch from one crisis to another.  And because you (and probably lots of other people around you) are sleep-deprived, you're all creating lots of crises as you go.\n\nEventually maybe you \"finish\" enough to ship it.  Or the whole project craters.  A lot of people never recover, no matter what.\n\nThe greatest work I've ever done was done on a chill 40 hour/week schedule.  Start the day fresh.  Stillness of mind, clarity of purpose.  Drive out distractions.  Enter the flow state.  Make.  Stop.  Exit flow state, chill out, swap it all out.  Go home and watch cartoons or eat a good meal or go biking or whatever.\n\nYour mind is actually *still* working on work problems when you're not actively working.  These \"background threads\" need time, there's just no getting around the need for that time.  When your mind is fresh and you're relatively unstressed, it all works naturally.  When you finally sit down at your workstation, your mind just sort of hands you these gift-wrapped solutions to problems, solutions it figured out hours ago, or when you were driving, or in the shower, or watching kung fu movies.\n\nBut not if you're frying your brain with 80 hour/week sessions.  Your *real* productivity decreases, but your *perceived intensity* increases.  It's all an illusion.", "aSentId": 36187, "answer": "&gt; It's all an illusion.\n\nAnd thats all managers want to see!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36188, "question": "&gt; It's all an illusion.\n\nAnd thats all managers want to see!", "aSentId": 36189, "answer": "I use to smoke. Was working 60-80 hours in IT. So I'd take a smoke break every hour.  my manager really wanted to be a \"chief\". So he comes up to me and talks to me about \"optics\". I smiled. He became vice president of product and it. Lasted about 6 months because he promised the world and that we could do it. I played optics. Logged my work, sat at my desk. Got an ecig that killed my cravings way quicker (15 second smoke breaks every half hour are not as noticed as 5 minute smoke breaks). Needless to say, come crunch time when the projects were under resourced I kept playing optics. I was working hard 40 hours a week and could show it.\n\nNeedless to say the vp was fired, the company almost went under and we got bought out by an investment firm.\n\nYah. Optics. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36190, "question": "I use to smoke. Was working 60-80 hours in IT. So I'd take a smoke break every hour.  my manager really wanted to be a \"chief\". So he comes up to me and talks to me about \"optics\". I smiled. He became vice president of product and it. Lasted about 6 months because he promised the world and that we could do it. I played optics. Logged my work, sat at my desk. Got an ecig that killed my cravings way quicker (15 second smoke breaks every half hour are not as noticed as 5 minute smoke breaks). Needless to say, come crunch time when the projects were under resourced I kept playing optics. I was working hard 40 hours a week and could show it.\n\nNeedless to say the vp was fired, the company almost went under and we got bought out by an investment firm.\n\nYah. Optics. ", "aSentId": 36191, "answer": "Sorry, what are optics? As in illusions?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36190, "question": "I use to smoke. Was working 60-80 hours in IT. So I'd take a smoke break every hour.  my manager really wanted to be a \"chief\". So he comes up to me and talks to me about \"optics\". I smiled. He became vice president of product and it. Lasted about 6 months because he promised the world and that we could do it. I played optics. Logged my work, sat at my desk. Got an ecig that killed my cravings way quicker (15 second smoke breaks every half hour are not as noticed as 5 minute smoke breaks). Needless to say, come crunch time when the projects were under resourced I kept playing optics. I was working hard 40 hours a week and could show it.\n\nNeedless to say the vp was fired, the company almost went under and we got bought out by an investment firm.\n\nYah. Optics. ", "aSentId": 36193, "answer": "I've heard about optics from a project manager, and from the executive on a project. He said he didn't care about how hard I was working as long as I doing it within the office between 9am and 8pm", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36186, "question": "You can *be at work* 80 hours/week.  You can even fuck around in a debugger for 80 hours/week.  What you cannot do is produce high-quality work for 80 hours/week, for weeks on end.\n\nCrunch mode does not work.  Crunch mode produces zombies and buggy code.  Seen it happen, over and over.  Fell for it myself, a few times, before I learned.\n\nIt's one thing to stay a few night in a row.  It's another to enter a delusional head-space where you never leave your workstation.  Your critical faculties just kind of *stop working* -- you can no longer make solid decisions, you can no longer balance priorities.  All you can really do is lurch from one crisis to another.  And because you (and probably lots of other people around you) are sleep-deprived, you're all creating lots of crises as you go.\n\nEventually maybe you \"finish\" enough to ship it.  Or the whole project craters.  A lot of people never recover, no matter what.\n\nThe greatest work I've ever done was done on a chill 40 hour/week schedule.  Start the day fresh.  Stillness of mind, clarity of purpose.  Drive out distractions.  Enter the flow state.  Make.  Stop.  Exit flow state, chill out, swap it all out.  Go home and watch cartoons or eat a good meal or go biking or whatever.\n\nYour mind is actually *still* working on work problems when you're not actively working.  These \"background threads\" need time, there's just no getting around the need for that time.  When your mind is fresh and you're relatively unstressed, it all works naturally.  When you finally sit down at your workstation, your mind just sort of hands you these gift-wrapped solutions to problems, solutions it figured out hours ago, or when you were driving, or in the shower, or watching kung fu movies.\n\nBut not if you're frying your brain with 80 hour/week sessions.  Your *real* productivity decreases, but your *perceived intensity* increases.  It's all an illusion.", "aSentId": 36195, "answer": "&gt; Start the day fresh. Stillness of mind, clarity of purpose. Drive out distractions\n\nCan't do that when everyone's god damn status/standup meeting is between 9 and 11am. Whole morning fucking ruined.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36196, "question": "&gt; Start the day fresh. Stillness of mind, clarity of purpose. Drive out distractions\n\nCan't do that when everyone's god damn status/standup meeting is between 9 and 11am. Whole morning fucking ruined.", "aSentId": 36197, "answer": "Yeah, that shit is obnoxious.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36186, "question": "You can *be at work* 80 hours/week.  You can even fuck around in a debugger for 80 hours/week.  What you cannot do is produce high-quality work for 80 hours/week, for weeks on end.\n\nCrunch mode does not work.  Crunch mode produces zombies and buggy code.  Seen it happen, over and over.  Fell for it myself, a few times, before I learned.\n\nIt's one thing to stay a few night in a row.  It's another to enter a delusional head-space where you never leave your workstation.  Your critical faculties just kind of *stop working* -- you can no longer make solid decisions, you can no longer balance priorities.  All you can really do is lurch from one crisis to another.  And because you (and probably lots of other people around you) are sleep-deprived, you're all creating lots of crises as you go.\n\nEventually maybe you \"finish\" enough to ship it.  Or the whole project craters.  A lot of people never recover, no matter what.\n\nThe greatest work I've ever done was done on a chill 40 hour/week schedule.  Start the day fresh.  Stillness of mind, clarity of purpose.  Drive out distractions.  Enter the flow state.  Make.  Stop.  Exit flow state, chill out, swap it all out.  Go home and watch cartoons or eat a good meal or go biking or whatever.\n\nYour mind is actually *still* working on work problems when you're not actively working.  These \"background threads\" need time, there's just no getting around the need for that time.  When your mind is fresh and you're relatively unstressed, it all works naturally.  When you finally sit down at your workstation, your mind just sort of hands you these gift-wrapped solutions to problems, solutions it figured out hours ago, or when you were driving, or in the shower, or watching kung fu movies.\n\nBut not if you're frying your brain with 80 hour/week sessions.  Your *real* productivity decreases, but your *perceived intensity* increases.  It's all an illusion.", "aSentId": 36199, "answer": "&gt; Your critical faculties just kind of stop working -- you can no longer make solid decisions, you can no longer balance priorities. All you can really do is lurch from one crisis to another. And because you (and probably lots of other people around you) are sleep-deprived, you're all creating lots of crises as you go.\n\nA project manager and myself once had to essentially throw ourselves in front of an account manager to get them to see that we HAD to let a certain dev go home as he was so sleep deprived he was essentially destroying the code base in the frantic fire mode that sprang up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36201, "question": "You promise them riches, but not explicitly.  You do not want to say / do anything that can be used as evidence in a civil suit.", "aSentId": 36202, "answer": "Or give them something terribly interesting and tell them it's impossible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36203, "question": "Or give them something terribly interesting and tell them it's impossible.", "aSentId": 36204, "answer": "[Nerd sniping](https://xkcd.com/356/)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36203, "question": "Or give them something terribly interesting and tell them it's impossible.", "aSentId": 36206, "answer": "I've fallen into that trap too many times. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36207, "question": "I've fallen into that trap too many times. ", "aSentId": 36208, "answer": "It isn't terrible to fall into that trap if the work is for yourself. Don't do that shit for someone else's gain though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36203, "question": "Or give them something terribly interesting and tell them it's impossible.", "aSentId": 36210, "answer": "What? There's no way you could build a successful company that way and then give all the revenues to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36201, "question": "You promise them riches, but not explicitly.  You do not want to say / do anything that can be used as evidence in a civil suit.", "aSentId": 36212, "answer": "The easiest is to dangle the equity carrot in their faces, without actually signing anything. Tell them the paperwork is in the pipeline and will be done soon. Keep them distracted. If they wish to quit, remind them how much time they've already put in and they'll lose out 'their' share of profits.\n\nKeep at it until you eventually fold up or get bought up. If the company shuts down, that's the end of the matter. If it's bought, they're getting nothing because the paperwork isn't in place.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36201, "question": "You promise them riches, but not explicitly.  You do not want to say / do anything that can be used as evidence in a civil suit.", "aSentId": 36214, "answer": "\"We'll be the next Google!!\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36216, "question": "&gt;How do you make programmers work 60-80 hours per week?\nIn the US:\n\n1) Make sure they're paid salary because salary is slavery.  Who doesn't love unlimited amounts of work for fixed income? When they complain, remind them \"They are paid to do a job not for their time\". Oh yeah, even though they're salary, require them to fill out a timesheet and be at work at least 40 hours a week during \"core hours\". All the downsides of salary with none of the benefits!\n\n2) Make sure you hire them fresh out of school. Young people don't realize time is the most valuable commodity we have.\n\n3) Make sure their work environment has tons of amenities. Make them forget about home. \n\n4) Make sure you mention the word \"passion\" every other conversation. \n\n5) Programmers overestimate time needed to complete a task. Remember to half any estimate.", "aSentId": 36217, "answer": "&gt; Remember to half any estimate.\n\nI tried giving formal sizings to my current manager a couple of times, accompanied by the disclaimer that it's plus or minus x% based on my confidence and the number of variables.  I'm above average at my accuracy, and I don't accept the old line that \"programmer estimates are terrible\".\n\nHis unflinching response is that he keeps a \"mental coeffiecient\" for each engineer, and then dismisses the estimate entirely, concluding that every project ought to fit into a six week sprint because agile.\n\nI've stopped giving him estimates, but I've made it clear that I take his arbitrary deadlines exactly as seriously as he takes my estimates.  I also stopped working more than 40 hours a week.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36218, "question": "&gt; Remember to half any estimate.\n\nI tried giving formal sizings to my current manager a couple of times, accompanied by the disclaimer that it's plus or minus x% based on my confidence and the number of variables.  I'm above average at my accuracy, and I don't accept the old line that \"programmer estimates are terrible\".\n\nHis unflinching response is that he keeps a \"mental coeffiecient\" for each engineer, and then dismisses the estimate entirely, concluding that every project ought to fit into a six week sprint because agile.\n\nI've stopped giving him estimates, but I've made it clear that I take his arbitrary deadlines exactly as seriously as he takes my estimates.  I also stopped working more than 40 hours a week.", "aSentId": 36219, "answer": "The best response is exactly what you've described. It's the only way to save your sanity.\n\nIn essence, what you're doing is forcing Kanban on your superiors. \"This is what I'm doing now, this is what I plan to do next, please let me know if there's something else I should do next before I finish what I'm doing now.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36218, "question": "&gt; Remember to half any estimate.\n\nI tried giving formal sizings to my current manager a couple of times, accompanied by the disclaimer that it's plus or minus x% based on my confidence and the number of variables.  I'm above average at my accuracy, and I don't accept the old line that \"programmer estimates are terrible\".\n\nHis unflinching response is that he keeps a \"mental coeffiecient\" for each engineer, and then dismisses the estimate entirely, concluding that every project ought to fit into a six week sprint because agile.\n\nI've stopped giving him estimates, but I've made it clear that I take his arbitrary deadlines exactly as seriously as he takes my estimates.  I also stopped working more than 40 hours a week.", "aSentId": 36221, "answer": "This is an excellent example of how NOT to make people work 80 hours a week.\n\nYou feel like your manager isn't taking your thoughts or your work/life balance seriously, so you \"check out\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36222, "question": "This is an excellent example of how NOT to make people work 80 hours a week.\n\nYou feel like your manager isn't taking your thoughts or your work/life balance seriously, so you \"check out\".", "aSentId": 36223, "answer": "I checked out so long ago, I don't even think I have my library code any more.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36218, "question": "&gt; Remember to half any estimate.\n\nI tried giving formal sizings to my current manager a couple of times, accompanied by the disclaimer that it's plus or minus x% based on my confidence and the number of variables.  I'm above average at my accuracy, and I don't accept the old line that \"programmer estimates are terrible\".\n\nHis unflinching response is that he keeps a \"mental coeffiecient\" for each engineer, and then dismisses the estimate entirely, concluding that every project ought to fit into a six week sprint because agile.\n\nI've stopped giving him estimates, but I've made it clear that I take his arbitrary deadlines exactly as seriously as he takes my estimates.  I also stopped working more than 40 hours a week.", "aSentId": 36225, "answer": "Anything past a month, I tell clients to make up their own number and keep it to themselves.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36226, "question": "Anything past a month, I tell clients to make up their own number and keep it to themselves.", "aSentId": 36227, "answer": "Why not?  Management does.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36229, "question": "&gt;  every project ought to fit into a six week sprint\n\nSix-week sprint is a little closer to a marathon, no?", "aSentId": 36230, "answer": "I've heard a 6 week sprint cycle described as \"mini-waterfall\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36216, "question": "&gt;How do you make programmers work 60-80 hours per week?\nIn the US:\n\n1) Make sure they're paid salary because salary is slavery.  Who doesn't love unlimited amounts of work for fixed income? When they complain, remind them \"They are paid to do a job not for their time\". Oh yeah, even though they're salary, require them to fill out a timesheet and be at work at least 40 hours a week during \"core hours\". All the downsides of salary with none of the benefits!\n\n2) Make sure you hire them fresh out of school. Young people don't realize time is the most valuable commodity we have.\n\n3) Make sure their work environment has tons of amenities. Make them forget about home. \n\n4) Make sure you mention the word \"passion\" every other conversation. \n\n5) Programmers overestimate time needed to complete a task. Remember to half any estimate.", "aSentId": 36236, "answer": "&gt; Make sure you hire them fresh out of school. Young people don't realize time is the most valuable commodity we have.\n\nThis is by *far* the most important point. Young people are naive. They don't realise what a proper job is supposed to demand in terms of commitment, they don't understand \"work/life balance\" yet, they don't have families yet. They can pick up your rad new choice of technology more quickly, they won't balk at its immaturity or unsuitability. They aren't tired of programming for fun yet, they're cheaper than experienced hires, and they don't tire so easily.\n\nAnd the best part? You get older, but fresh grads stay the *same age*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36237, "question": "&gt; Make sure you hire them fresh out of school. Young people don't realize time is the most valuable commodity we have.\n\nThis is by *far* the most important point. Young people are naive. They don't realise what a proper job is supposed to demand in terms of commitment, they don't understand \"work/life balance\" yet, they don't have families yet. They can pick up your rad new choice of technology more quickly, they won't balk at its immaturity or unsuitability. They aren't tired of programming for fun yet, they're cheaper than experienced hires, and they don't tire so easily.\n\nAnd the best part? You get older, but fresh grads stay the *same age*.", "aSentId": 36238, "answer": "If I had the money I'd guild you for the dazed and confused reference!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36216, "question": "&gt;How do you make programmers work 60-80 hours per week?\nIn the US:\n\n1) Make sure they're paid salary because salary is slavery.  Who doesn't love unlimited amounts of work for fixed income? When they complain, remind them \"They are paid to do a job not for their time\". Oh yeah, even though they're salary, require them to fill out a timesheet and be at work at least 40 hours a week during \"core hours\". All the downsides of salary with none of the benefits!\n\n2) Make sure you hire them fresh out of school. Young people don't realize time is the most valuable commodity we have.\n\n3) Make sure their work environment has tons of amenities. Make them forget about home. \n\n4) Make sure you mention the word \"passion\" every other conversation. \n\n5) Programmers overestimate time needed to complete a task. Remember to half any estimate.", "aSentId": 36240, "answer": "You hit the nail on the head. And that's not only for the US.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36245, "question": "Errr, it's pretty hard for me to ignore that this is clearly either a troll, or a faked question to post a \"reply\" to that someone wanted to post. That's not what someone who really thinks their employees ought to do 80 hours would post; that's what someone _thinks_ they would post.", "aSentId": 36246, "answer": "Yeah, was half expecting it to mention Agile.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36245, "question": "Errr, it's pretty hard for me to ignore that this is clearly either a troll, or a faked question to post a \"reply\" to that someone wanted to post. That's not what someone who really thinks their employees ought to do 80 hours would post; that's what someone _thinks_ they would post.", "aSentId": 36248, "answer": "&gt; Do we have to pay overtime? We gave few of them some equity, but it doesn't seem to work.\n\nIt's obviously someone taking the piss.\n\nKind of weird that all the replies there seems to be serious though.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36249, "question": "&gt; Do we have to pay overtime? We gave few of them some equity, but it doesn't seem to work.\n\nIt's obviously someone taking the piss.\n\nKind of weird that all the replies there seems to be serious though.\n", "aSentId": 36250, "answer": "It is a rather serious problem, even if the actual question is taking the piss.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36245, "question": "Errr, it's pretty hard for me to ignore that this is clearly either a troll, or a faked question to post a \"reply\" to that someone wanted to post. That's not what someone who really thinks their employees ought to do 80 hours would post; that's what someone _thinks_ they would post.", "aSentId": 36252, "answer": "I don't know, I've had some pretty callous managers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36254, "question": "I am experiencing inexplicable feelings of hatred for the person who posed this question. ", "aSentId": 36255, "answer": "Ohh, I think I could explic them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36257, "question": "Voice in my head: \"This kills the programmer.\"\n\nBut my answer is: Make it worth their while, pay well above market and allow them to use their choice of technologies (within reason). Become their dream job, except pay more if they work more.", "aSentId": 36258, "answer": "Sure takes care of that problem of \"options vesting\" though, doesn't it? ;-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36262, "question": "You don't if you're smart!\n\nMost programmers can only work 45 hours a week before they start working in reverse.\n\nI once had a manager call me into his office.  The conversation went like this:\n\nboss: \"We'd like you to start coming in on Saturday\"\nme: \"I have 50 hours a week in me.  I'd prefer to give those hours to you Monday thru Friday.  But if you'd like me to come in on Saturday, I can do that.  But you're still only going to get 50 hours a week out of me.\"\n\nHe never brought it up again.\n\nResearch has shown that most of the time, even those who are at the office for those rumored 60 - 80 hours a week are really only giving you 45 - 50 at best.", "aSentId": 36263, "answer": "How does that work? Did he offer any incentive for you to work weekends? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36265, "question": "How many developers are eligible for overtime pay? I know I'm not. Without a financial incentive on the employers to work their employees less, it becomes a \"mine the employee for productivity until they're burned out\" thing. Finding new people isn't hard, especially at big companies.", "aSentId": 36266, "answer": "Actually, finding new good developers is extremely hard around here (\"here\" being St. Louis).  I can't tell you how many jokers I've interviewed claiming to be \"senior devs...\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36267, "question": "Actually, finding new good developers is extremely hard around here (\"here\" being St. Louis).  I can't tell you how many jokers I've interviewed claiming to be \"senior devs...\"", "aSentId": 36268, "answer": "What do you do, and what duo you pay? And don't say \"market rates\" because everyone thinks they offer that. \n\nIf you want a good pool of applicants, offer people Silicon Valley level salaries. At your lower cost of living, it should attract many devs who can do math. Make sure to put the number in the job posting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36267, "question": "Actually, finding new good developers is extremely hard around here (\"here\" being St. Louis).  I can't tell you how many jokers I've interviewed claiming to be \"senior devs...\"", "aSentId": 36270, "answer": "I made no claim to how \"good\" these additional developers are--just that there are a lot of them. I think the good is mostly subjective. I'm talking about on the west coast too. Large companies have extremely short employee tenures because of the tension between what constitutes a \"good\" developer and work environment issues, like work week length and the competition that fuels it. Having the resources to hire aggressively from abroad also lowers hiring barriers that smaller companies have to contend with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36267, "question": "Actually, finding new good developers is extremely hard around here (\"here\" being St. Louis).  I can't tell you how many jokers I've interviewed claiming to be \"senior devs...\"", "aSentId": 36272, "answer": "A place that is using the tactic of \"work every last drop out of them until they're burned out,\" probably is not that focused on developer quality.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36273, "question": "A place that is using the tactic of \"work every last drop out of them until they're burned out,\" probably is not that focused on developer quality.", "aSentId": 36274, "answer": "That decision is usually made by seeing programmer work like factory work. It's not a correct decision but this is how it's usually rationalized. In a highly automated factory, you usually want to have production running as much as possible, as machines going round the clock can make more widgets than machines running 8 hours a day, and thus multiple shifts apply in this type of work. Multiple shifts are uncommon in programming work because different programmers are not interchangeable, and usually benefits from collaboration with other workers to solve problems. It's harder to carry it over to a guy working another shift.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36265, "question": "How many developers are eligible for overtime pay? I know I'm not. Without a financial incentive on the employers to work their employees less, it becomes a \"mine the employee for productivity until they're burned out\" thing. Finding new people isn't hard, especially at big companies.", "aSentId": 36279, "answer": "Don't forget about all of poor bastards stuck in the hells of contracting.\n\nWe've got shit for benefits &amp; no job security but at least we get paid hourly &amp; require explicit sign-offs before going a minute over 40hr.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36280, "question": "Don't forget about all of poor bastards stuck in the hells of contracting.\n\nWe've got shit for benefits &amp; no job security but at least we get paid hourly &amp; require explicit sign-offs before going a minute over 40hr.", "aSentId": 36281, "answer": "I took a 12-month contract for a large company, then at the end of it, when I expected to be converted to full time, they extended the contract for four more months.  They've since changed their rules (after six months, convert or end the contract) but in hindsight I wish I'd told them to fuck off.  One of their perks is a paid month-long sabbatical every five years - although I worked there five years, I didn't qualify because the first third of my time there didn't count.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36282, "question": "I took a 12-month contract for a large company, then at the end of it, when I expected to be converted to full time, they extended the contract for four more months.  They've since changed their rules (after six months, convert or end the contract) but in hindsight I wish I'd told them to fuck off.  One of their perks is a paid month-long sabbatical every five years - although I worked there five years, I didn't qualify because the first third of my time there didn't count.", "aSentId": 36283, "answer": "Are you shitting me? It's five weeks annual vacation standard in the EU. You get less than that every five years! How generous. Fuck that company.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36284, "question": "Are you shitting me? It's five weeks annual vacation standard in the EU. You get less than that every five years! How generous. Fuck that company.", "aSentId": 36285, "answer": "well probably on top of his standard vacation, but damn 5 weeks? get 3.5", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36282, "question": "I took a 12-month contract for a large company, then at the end of it, when I expected to be converted to full time, they extended the contract for four more months.  They've since changed their rules (after six months, convert or end the contract) but in hindsight I wish I'd told them to fuck off.  One of their perks is a paid month-long sabbatical every five years - although I worked there five years, I didn't qualify because the first third of my time there didn't count.", "aSentId": 36287, "answer": "I just saw a full-timer go on leave, and another full-timer (I think) go on vacation, and another one went on vacation. I haven't been on a real vacation to anywhere for over a year. I'm on contract so if I want to take a vacation I still have to work my hours and somehow re-arrange them so it looks like the minimum outlined in my contract.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36265, "question": "How many developers are eligible for overtime pay? I know I'm not. Without a financial incentive on the employers to work their employees less, it becomes a \"mine the employee for productivity until they're burned out\" thing. Finding new people isn't hard, especially at big companies.", "aSentId": 36289, "answer": "I actually did have a job where I was eligible for overtime - we got reclassified as the result of some lawsuit. \n\nI preferred being salaried, because I refused to work more than 40 hours a week anyway and being hourly meant having to keep track of a time clock. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36290, "question": "I actually did have a job where I was eligible for overtime - we got reclassified as the result of some lawsuit. \n\nI preferred being salaried, because I refused to work more than 40 hours a week anyway and being hourly meant having to keep track of a time clock. ", "aSentId": 36291, "answer": "That's interesting. Was your contract hourly?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36292, "question": "That's interesting. Was your contract hourly?", "aSentId": 36293, "answer": "I started as salaried. When the lawsuit finished, it was either \"promote to a salaried position\", \"sign a new contract\", or \"get fired\". Since I had been there less than a year, I didn't get a promotion, and I would rather leave on my terms (which I did) than get fired, so I signed a new contract. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36290, "question": "I actually did have a job where I was eligible for overtime - we got reclassified as the result of some lawsuit. \n\nI preferred being salaried, because I refused to work more than 40 hours a week anyway and being hourly meant having to keep track of a time clock. ", "aSentId": 36295, "answer": "I'm salaried and still have to keep track of hours.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36296, "question": "I'm salaried and still have to keep track of hours.", "aSentId": 36297, "answer": "Do you mean per project, as in \"oh, I spend about 3 hours on that today\", or as in \"when I get to the office in the morning, the first thing I have to do is punch a virtual timecard\"? Because I'm talking about the latter. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36298, "question": "Do you mean per project, as in \"oh, I spend about 3 hours on that today\", or as in \"when I get to the office in the morning, the first thing I have to do is punch a virtual timecard\"? Because I'm talking about the latter. ", "aSentId": 36299, "answer": "In theory it's just keeping track of hours, but in reality it's kinda the latter as I'll get yelled at if I'm not putting enough hours in", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36300, "question": "In theory it's just keeping track of hours, but in reality it's kinda the latter as I'll get yelled at if I'm not putting enough hours in", "aSentId": 36301, "answer": "ah, the old difference between theory and reality. Sucks, man. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36303, "question": "I know it's pretty rare, but I get paid overtime.  I'm a software engineer/programmer for a government contractor (military aviation), and I get paid for every hour I work over 40.  I make a base salary about industry/region standard, before overtime.  And since I work in one of the busier groups, I work about 50-55 hours per week on average, so the extra pay bump is not totally insignificant.  It's one of the things I really like about the company..I would take non-paid overtime, but it would have to come with a matching raise.  I think more companies should offer paid overtime, but I'm sure things are headed the opposite way.", "aSentId": 36304, "answer": "I am in a similar boat except we commit to overtime ahead of time for 2 month periods. The extra money is not insignificant and enough to entice people to work 50 hours a week", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36306, "question": "I disagree, finding good devs is very hard.  If you're looking for an ass in a chair, sure it's easy to fill, but finding someone that is actually a good developer is another matter.", "aSentId": 36307, "answer": "If you assume that ability has a normal distribution, most developers are average. Whenever I hear the line that \"good developers are hard to find,\" I wonder why people believe that's the case. Are good developers a standard deviation out from the median? What about the other ~80% of developers? Sometimes a company doesn't need \"an ass in a chair,\" just a competent worker. And a big company can sluice through competent developers and label those it deems good.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36308, "question": "If you assume that ability has a normal distribution, most developers are average. Whenever I hear the line that \"good developers are hard to find,\" I wonder why people believe that's the case. Are good developers a standard deviation out from the median? What about the other ~80% of developers? Sometimes a company doesn't need \"an ass in a chair,\" just a competent worker. And a big company can sluice through competent developers and label those it deems good.", "aSentId": 36309, "answer": "I think a problem too is what defines a good developer as its a mix of communication skills and programming ability. I've worked with plenty of programmers who are more technically-minded and capable than me but they aren't business minded and seem to always get sidetracked by what appears to be technical minutia to non-developers and thus aren't perceived as well as they could be.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36308, "question": "If you assume that ability has a normal distribution, most developers are average. Whenever I hear the line that \"good developers are hard to find,\" I wonder why people believe that's the case. Are good developers a standard deviation out from the median? What about the other ~80% of developers? Sometimes a company doesn't need \"an ass in a chair,\" just a competent worker. And a big company can sluice through competent developers and label those it deems good.", "aSentId": 36311, "answer": "Big companies can probably deal with average or just competent workers.  I run a small shop and every single dev I have has a large impact, for me it's worth it to take the time and find a high quality dev - which is not easy to do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36316, "question": "You start by inventing a bunch of imaginary money, mixing it in with all the real money in the world, and then accusing everybody else of trying to trade in imaginary money. The idea of this being to royally fuck over the global economy. If this succeeds, a few years later you will find that the number of programming jobs has become smaller than the number of comsci graduates. You then offer the comsci graduates real money (which you originally acquired by trading imaginary money for it) on the condition that they work 80 hours a week. You also tell them that their only value as human beings is defined by holding a job and earning money, and back this up by refusing to hire anyone who doesn't already have a job. Facing the possibility of bankruptcy, permanent unemployment and the shame of becoming a worthless human being, the comsci graduates will be forced to work 80 hours a week.", "aSentId": 36317, "answer": "I feel like you think like I do. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36316, "question": "You start by inventing a bunch of imaginary money, mixing it in with all the real money in the world, and then accusing everybody else of trying to trade in imaginary money. The idea of this being to royally fuck over the global economy. If this succeeds, a few years later you will find that the number of programming jobs has become smaller than the number of comsci graduates. You then offer the comsci graduates real money (which you originally acquired by trading imaginary money for it) on the condition that they work 80 hours a week. You also tell them that their only value as human beings is defined by holding a job and earning money, and back this up by refusing to hire anyone who doesn't already have a job. Facing the possibility of bankruptcy, permanent unemployment and the shame of becoming a worthless human being, the comsci graduates will be forced to work 80 hours a week.", "aSentId": 36319, "answer": "Move. If that is how you feel about your current situation just move there are lots of jobs they may not be where you currently live but there are many. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36322, "question": "Provide these services/perks on site:\n\n* Laundry\n* Foosball\n* Beer fridge\n* Artisanal toast\n", "aSentId": 36323, "answer": "Don't forget a matchmaking/dating service, as these people aren't going to have the time or energy to meet other people. And for those that are married, maybe you should provide divorce attorneys for when their spouse decides to divorce them because they're putting work before family.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36322, "question": "Provide these services/perks on site:\n\n* Laundry\n* Foosball\n* Beer fridge\n* Artisanal toast\n", "aSentId": 36325, "answer": "*Artisanal toast*\n\nI am intrigued.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36322, "question": "Provide these services/perks on site:\n\n* Laundry\n* Foosball\n* Beer fridge\n* Artisanal toast\n", "aSentId": 36327, "answer": "Agreed, toast is key\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36331, "question": "As long as I get paid overtime I'm happy..", "aSentId": 36332, "answer": "What why? Who cares about over time money when you have no time to use it", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36335, "question": "Hmm, seems the programming culture in USA is a little backwards, I always find rants like the ones in this thread about it.\n\nI've been in 2 programming jobs so far over here (Uruguay), and both were/are great. Had no problems with the culture, managers, overworking, false promises, etc. In both jobs the team created and mantained proprietary software for external clients/corporations though (not startups).\n\nI can't imagine the stress I'd have working in the conditions I hear about in USA", "aSentId": 36336, "answer": "It's not just programming.  Working conditions in the US are in general shit, in the sense that everything is balanced hugely in favor of the employer.  In fact, development used to be one of the exceptions, but that is slowly changing for the worse.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36356, "question": "For what it's worth, I worked at a startup, worked my ass off, but it paid off big time and we got acquired, and I have all kinds of money flowing in now.", "aSentId": 36357, "answer": "99% of people, even if they work as hard as you did, are not going to hit that lottery.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36358, "question": "99% of people, even if they work as hard as you did, are not going to hit that lottery.", "aSentId": 36359, "answer": "Sure. But its disingenuous to pretend that startups that require long hours are necessarily exploitative. The stakes are just high. That's a calculated risk on your part.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36360, "question": "Sure. But its disingenuous to pretend that startups that require long hours are necessarily exploitative. The stakes are just high. That's a calculated risk on your part.", "aSentId": 36361, "answer": "No it's not. There really isn't a need for that kind of exploitation. Especially when they demand out of people who do not have a significant ownership stake.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36362, "question": "No it's not. There really isn't a need for that kind of exploitation. Especially when they demand out of people who do not have a significant ownership stake.", "aSentId": 36363, "answer": "Why should you have an significant ownership stake? You didn't invest any of your money. You were hired to do a job, and if you don't like it, you can quit. \n\nSome people have such a fucked up sense of entitlement. Like the world owes them something. You negotiated your contract. They can demand your firstborn son, but ultimately it's you who decide whether or not to accept it. Telling me that people don't have permission to take calculated risks or overwork themselves to get ahead is hilarious.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36364, "question": "Why should you have an significant ownership stake? You didn't invest any of your money. You were hired to do a job, and if you don't like it, you can quit. \n\nSome people have such a fucked up sense of entitlement. Like the world owes them something. You negotiated your contract. They can demand your firstborn son, but ultimately it's you who decide whether or not to accept it. Telling me that people don't have permission to take calculated risks or overwork themselves to get ahead is hilarious.", "aSentId": 36365, "answer": "Because I'm the one doing most of the fucking work. Money is not the only thing that can be invested", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36366, "question": "Because I'm the one doing most of the fucking work. Money is not the only thing that can be invested", "aSentId": 36367, "answer": "And you traded your work/investment for a paycheque, and the small probability of a payout. That's your choice. Don't bitch about it after the fact like it's unfair. If you want to work for a startup and own it, then round up some investors and do it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36404, "question": "Warning: Unpopular opinion ahead.\n\n(Edit: I should clarify that my thoughts below are slightly tangential to the topic at hand. TL;DR: I think it's okay to set aggressive goals for your product and team if everyone buys in and is willing to scale up their efforts at key times. If you work at big company, you can stop reading now.)\n\nAlthough 80 is quite obviously dumb, 60 seems reasonable for crunch time. I think the short answer for 'how' is that it's mostly cultural. I often enjoy working 12 hour days when i'm doing something interesting. I have a lot of stake in and ownership of my work, so I'm happy to work a bit extra an go the extra mile on certain features. And my hard work is *always* recognized in one way or another. But most of that is ultimately a cultural thing.\n\nAs for the mechanics of working 12 hours: I'm probably only productive for about 9-10 of those 12 hours. Towards the end of the day I might start throwing spaghetti at the wall -- but that's a good signal for when it's time to leave.", "aSentId": 36405, "answer": "If you're expecting engineers to be putting in 60hr weeks every time there's a crunch then something in your company pipeline isn't working and needs to change. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36406, "question": "If you're expecting engineers to be putting in 60hr weeks every time there's a crunch then something in your company pipeline isn't working and needs to change. ", "aSentId": 36407, "answer": "Why?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36408, "question": "Why?", "aSentId": 36409, "answer": "why is it bad to keep redlining an engine? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36404, "question": "Warning: Unpopular opinion ahead.\n\n(Edit: I should clarify that my thoughts below are slightly tangential to the topic at hand. TL;DR: I think it's okay to set aggressive goals for your product and team if everyone buys in and is willing to scale up their efforts at key times. If you work at big company, you can stop reading now.)\n\nAlthough 80 is quite obviously dumb, 60 seems reasonable for crunch time. I think the short answer for 'how' is that it's mostly cultural. I often enjoy working 12 hour days when i'm doing something interesting. I have a lot of stake in and ownership of my work, so I'm happy to work a bit extra an go the extra mile on certain features. And my hard work is *always* recognized in one way or another. But most of that is ultimately a cultural thing.\n\nAs for the mechanics of working 12 hours: I'm probably only productive for about 9-10 of those 12 hours. Towards the end of the day I might start throwing spaghetti at the wall -- but that's a good signal for when it's time to leave.", "aSentId": 36411, "answer": "You should have enough room in your planning that there isn't a crunch time in the first place. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36412, "question": "You should have enough room in your planning that there isn't a crunch time in the first place. ", "aSentId": 36413, "answer": "Isn't that ultimately a facet of developers' estimations? The same estimations that engineers are notoriously bad at, especially in software development? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36414, "question": "Isn't that ultimately a facet of developers' estimations? The same estimations that engineers are notoriously bad at, especially in software development? ", "aSentId": 36415, "answer": "Developer estimations, and how much the company listens to those estimations.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36404, "question": "Warning: Unpopular opinion ahead.\n\n(Edit: I should clarify that my thoughts below are slightly tangential to the topic at hand. TL;DR: I think it's okay to set aggressive goals for your product and team if everyone buys in and is willing to scale up their efforts at key times. If you work at big company, you can stop reading now.)\n\nAlthough 80 is quite obviously dumb, 60 seems reasonable for crunch time. I think the short answer for 'how' is that it's mostly cultural. I often enjoy working 12 hour days when i'm doing something interesting. I have a lot of stake in and ownership of my work, so I'm happy to work a bit extra an go the extra mile on certain features. And my hard work is *always* recognized in one way or another. But most of that is ultimately a cultural thing.\n\nAs for the mechanics of working 12 hours: I'm probably only productive for about 9-10 of those 12 hours. Towards the end of the day I might start throwing spaghetti at the wall -- but that's a good signal for when it's time to leave.", "aSentId": 36417, "answer": "\"I often enjoy working 12 hour days\"\n\nIf you aren't being paid hourly or more then 40 hours a week, you are being used.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36418, "question": "\"I often enjoy working 12 hour days\"\n\nIf you aren't being paid hourly or more then 40 hours a week, you are being used.", "aSentId": 36419, "answer": "I'm being paid much more than I would if I were working hourly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36420, "question": "I'm being paid much more than I would if I were working hourly.", "aSentId": 36421, "answer": "So you're salary at a certain amount of hours a week. Why work more than you're paid for?\n\nSource: recently quit my job over constant 50+ hour weeks on a 40 hour salary. Tired of being used by poor management.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36422, "question": "So you're salary at a certain amount of hours a week. Why work more than you're paid for?\n\nSource: recently quit my job over constant 50+ hour weeks on a 40 hour salary. Tired of being used by poor management.", "aSentId": 36423, "answer": "Because some situations reward hard work. And frankly, I enjoy what I'm working on. Is that *really* so hard to believe? \n\nAll these responses are making it seem like working more than what's expected is criminal. That's such a dumb attitude. I've been there -- I've worked in roles where it was pointless to grind, but I quickly moved away from those into teams where hard work is appreciated and rewarded. In the last four years I've (over) tripled my salary by working hard and earning the trust of the people that matter. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36424, "question": "Because some situations reward hard work. And frankly, I enjoy what I'm working on. Is that *really* so hard to believe? \n\nAll these responses are making it seem like working more than what's expected is criminal. That's such a dumb attitude. I've been there -- I've worked in roles where it was pointless to grind, but I quickly moved away from those into teams where hard work is appreciated and rewarded. In the last four years I've (over) tripled my salary by working hard and earning the trust of the people that matter. ", "aSentId": 36425, "answer": "so basically what you're saying is that you were horribly underpaid for the past few years...\n\ngot it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36426, "question": "so basically what you're saying is that you were horribly underpaid for the past few years...\n\ngot it. ", "aSentId": 36427, "answer": "Just the first year really. Based on glassdoor for my area, I'm at over 2.5x the average salary. So I think the hard work has paid off.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36431, "question": "Make them?  Many great programmers want to put in those kind of hours.  Do you actually believe that most of the great software that we use  today was written by 40 hour per week programmers?  You'll never become an expert at anything if you are just working on it 9 to 5.  This isn't to say that great programmers work 80 hour weeks every week, but putting in 80 to 100 hours when you are really rolling on a project is a joy not a task.\n\nAnyone who claims it is impossible to be productive for 80+ hours in a single week is an idiot.  Maybe *you* can't, but if I'm in the right mood I certainly can work 14+ hour days for a week or two.  It has been several years since I've been in that mood, but to be honest it can be hard to shut down enough to go to actually stop working when I'm really into what I'm doing.\n\nI can agree, however, that working for more than around 16-18 hours in a single stretch does start to cause problems with code quality, or not averaging 7 hours of sleep over a stretch of several days.  You have to get enough sleep or everything goes to hell, I'm speaking from real experience in that area.  \n\nIn any case, the only point I'm trying to make is that while you may be able to say that the average programmer isn't productive over a 80 hour week, claiming that none of them are is taking it way too far.  Testing someone by giving them a boring project to do and forcing them to do it for 80 hours in one week doesn't prove that they couldn't be productive over that same period if they were really interested in the problem.  When someone is forced into a situation where they have to do a death march for a deadline they probably won't be productive in those long hours.  In cases where someone is really motivated and love what they are doing, then yes, they can be very productive during those 80+ hour weeks. \n", "aSentId": 36432, "answer": "Ok, call me an idiot. I'm absolutely sure it's not possible to be productive for more than 4 hours a day, not if you're doing anything mentally challenging. There is a huge body of research backing this. It does not matter how exciting the project is, you may still stick around for hours but you won't be productive, you won't be able to *solve problems*.\n\nBut, of course, you can convert your caffeine into CRUD 100+hrs a weak, nobody is going to argue about that.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36431, "question": "Make them?  Many great programmers want to put in those kind of hours.  Do you actually believe that most of the great software that we use  today was written by 40 hour per week programmers?  You'll never become an expert at anything if you are just working on it 9 to 5.  This isn't to say that great programmers work 80 hour weeks every week, but putting in 80 to 100 hours when you are really rolling on a project is a joy not a task.\n\nAnyone who claims it is impossible to be productive for 80+ hours in a single week is an idiot.  Maybe *you* can't, but if I'm in the right mood I certainly can work 14+ hour days for a week or two.  It has been several years since I've been in that mood, but to be honest it can be hard to shut down enough to go to actually stop working when I'm really into what I'm doing.\n\nI can agree, however, that working for more than around 16-18 hours in a single stretch does start to cause problems with code quality, or not averaging 7 hours of sleep over a stretch of several days.  You have to get enough sleep or everything goes to hell, I'm speaking from real experience in that area.  \n\nIn any case, the only point I'm trying to make is that while you may be able to say that the average programmer isn't productive over a 80 hour week, claiming that none of them are is taking it way too far.  Testing someone by giving them a boring project to do and forcing them to do it for 80 hours in one week doesn't prove that they couldn't be productive over that same period if they were really interested in the problem.  When someone is forced into a situation where they have to do a death march for a deadline they probably won't be productive in those long hours.  In cases where someone is really motivated and love what they are doing, then yes, they can be very productive during those 80+ hour weeks. \n", "aSentId": 36434, "answer": "&gt; for a week or two.\n...\n&gt;  It has been several years since I've been in that mood\n\nnuff said.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36435, "question": "&gt; for a week or two.\n...\n&gt;  It has been several years since I've been in that mood\n\nnuff said.", "aSentId": 36436, "answer": "Lol it does indeed read like \"bullshit, I burnt out for only a few years after the last crunch\". ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36431, "question": "Make them?  Many great programmers want to put in those kind of hours.  Do you actually believe that most of the great software that we use  today was written by 40 hour per week programmers?  You'll never become an expert at anything if you are just working on it 9 to 5.  This isn't to say that great programmers work 80 hour weeks every week, but putting in 80 to 100 hours when you are really rolling on a project is a joy not a task.\n\nAnyone who claims it is impossible to be productive for 80+ hours in a single week is an idiot.  Maybe *you* can't, but if I'm in the right mood I certainly can work 14+ hour days for a week or two.  It has been several years since I've been in that mood, but to be honest it can be hard to shut down enough to go to actually stop working when I'm really into what I'm doing.\n\nI can agree, however, that working for more than around 16-18 hours in a single stretch does start to cause problems with code quality, or not averaging 7 hours of sleep over a stretch of several days.  You have to get enough sleep or everything goes to hell, I'm speaking from real experience in that area.  \n\nIn any case, the only point I'm trying to make is that while you may be able to say that the average programmer isn't productive over a 80 hour week, claiming that none of them are is taking it way too far.  Testing someone by giving them a boring project to do and forcing them to do it for 80 hours in one week doesn't prove that they couldn't be productive over that same period if they were really interested in the problem.  When someone is forced into a situation where they have to do a death march for a deadline they probably won't be productive in those long hours.  In cases where someone is really motivated and love what they are doing, then yes, they can be very productive during those 80+ hour weeks. \n", "aSentId": 36438, "answer": "I stop around 40 because I know that I produce garbage after that, that I have to fix the following week.  \"You'll never be an expert\" if you're churning out mistakes so fast that you can't get better at your craft, at setting expectations with your employer, etc.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36442, "question": "16 Months of Functional Programming", "aSentId": 36443, "answer": "Hey, so we (OO Java users) have now Java 8, so instead Your version of activeById method You can just write:\n\n    public static List&lt;String&gt; activeById(List&lt;User&gt; us) {\n        return us.stream().filter(User::getActive).sorted(comparing(User::getId)).map(User::getLastName).collect(toList());\n    }\n\nAlmost the same ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36444, "question": "Hey, so we (OO Java users) have now Java 8, so instead Your version of activeById method You can just write:\n\n    public static List&lt;String&gt; activeById(List&lt;User&gt; us) {\n        return us.stream().filter(User::getActive).sorted(comparing(User::getId)).map(User::getLastName).collect(toList());\n    }\n\nAlmost the same ;)", "aSentId": 36445, "answer": "It is def better. Not all the way there, but awesome to see some of the better parts of scala come back to the Java fold. \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36444, "question": "Hey, so we (OO Java users) have now Java 8, so instead Your version of activeById method You can just write:\n\n    public static List&lt;String&gt; activeById(List&lt;User&gt; us) {\n        return us.stream().filter(User::getActive).sorted(comparing(User::getId)).map(User::getLastName).collect(toList());\n    }\n\nAlmost the same ;)", "aSentId": 36447, "answer": "&gt;now\n\nIt's been almost an entire year, you'd think people would catch up.\n\nI'm still waiting for the people I know that actually USE Java to switch to Java 8. I've become the Java 8 evangelist, and I think people are excommunicating me from their lives. ;_;", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36448, "question": "&gt;now\n\nIt's been almost an entire year, you'd think people would catch up.\n\nI'm still waiting for the people I know that actually USE Java to switch to Java 8. I've become the Java 8 evangelist, and I think people are excommunicating me from their lives. ;_;", "aSentId": 36449, "answer": "We've gone full Java 8 (as in source level 8 / target level 8) as of our most recent release. It took a bit of coaxing, people are worried about breakages, especially as some byte-code generating well-used frameworks like Spring have to be upgraded in lock-step - Spring 3 only works up until Java 1.7, Spring 4 only works from Java 1.8 upwards. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36444, "question": "Hey, so we (OO Java users) have now Java 8, so instead Your version of activeById method You can just write:\n\n    public static List&lt;String&gt; activeById(List&lt;User&gt; us) {\n        return us.stream().filter(User::getActive).sorted(comparing(User::getId)).map(User::getLastName).collect(toList());\n    }\n\nAlmost the same ;)", "aSentId": 36451, "answer": "If you like that, check out linq in c#. A lot less clutter. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36452, "question": "If you like that, check out linq in c#. A lot less clutter. ", "aSentId": 36453, "answer": "[you don't have to leave the JVM for that](https://github.com/mythz/clojure-linq-examples), and you can have even less clutter than C#while at it :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36442, "question": "16 Months of Functional Programming", "aSentId": 36455, "answer": "This article proves two great things, one of which was already widely known:\n\n1) Functional Programming is good (and everybody should do FP in their language of choice and also know a good *pure-ish* functional language like Clojure, even if just the surface)\n\n2) You can write an article from a pro Functional Programming perspective without coming across as a patronizing, condescending know-it-all\n\nDid you write this OP?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36456, "question": "This article proves two great things, one of which was already widely known:\n\n1) Functional Programming is good (and everybody should do FP in their language of choice and also know a good *pure-ish* functional language like Clojure, even if just the surface)\n\n2) You can write an article from a pro Functional Programming perspective without coming across as a patronizing, condescending know-it-all\n\nDid you write this OP?", "aSentId": 36457, "answer": "Yes, yes I did. Thank you for the kind words! :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36456, "question": "This article proves two great things, one of which was already widely known:\n\n1) Functional Programming is good (and everybody should do FP in their language of choice and also know a good *pure-ish* functional language like Clojure, even if just the surface)\n\n2) You can write an article from a pro Functional Programming perspective without coming across as a patronizing, condescending know-it-all\n\nDid you write this OP?", "aSentId": 36459, "answer": "I moved from Haskell to Clojure and felt that Clojure was not pure enough.  I am a complete novice in both, but Haskell practically forces you to separate your IO from the rest of your logic which is an interesting thing to tackle as a technical challenge.  In Clojure I can just read in a file at any function.  But, they're both very interesting languages and I liked my experience with both.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36460, "question": "I moved from Haskell to Clojure and felt that Clojure was not pure enough.  I am a complete novice in both, but Haskell practically forces you to separate your IO from the rest of your logic which is an interesting thing to tackle as a technical challenge.  In Clojure I can just read in a file at any function.  But, they're both very interesting languages and I liked my experience with both.", "aSentId": 36461, "answer": "You are correct. Haskell is more pure, but that's why I said pure-ish. It *is* interesting the stricter mode Haskell pushes you to. If it's worth it is debatable", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36456, "question": "This article proves two great things, one of which was already widely known:\n\n1) Functional Programming is good (and everybody should do FP in their language of choice and also know a good *pure-ish* functional language like Clojure, even if just the surface)\n\n2) You can write an article from a pro Functional Programming perspective without coming across as a patronizing, condescending know-it-all\n\nDid you write this OP?", "aSentId": 36463, "answer": "I agree. I did all of my personal projects in clojure for 3 years before deciding that I didn't like it for anything more than around  500 lines. I no longer use it very often, but my experience with it has made my Java and c programming much better. \n\nI'm now trying scala to see if I like it better. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36464, "question": "I agree. I did all of my personal projects in clojure for 3 years before deciding that I didn't like it for anything more than around  500 lines. I no longer use it very often, but my experience with it has made my Java and c programming much better. \n\nI'm now trying scala to see if I like it better. ", "aSentId": 36465, "answer": "Glad to hear that! Please feel free to message me any Scala questions you may have. Also remember that the #scala IRC channel is a very friendly place. :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36466, "question": "Glad to hear that! Please feel free to message me any Scala questions you may have. Also remember that the #scala IRC channel is a very friendly place. :-)", "aSentId": 36467, "answer": "Thanks. If I run into anything I can't figure out, I may take you up on that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36470, "question": "I got into fp via FSharp, now I avoid oop like a hot girl at a club full of IT guys.", "aSentId": 36471, "answer": "I wonder why? F# has great OOP features despite being functional at heart. Why not use them?\n\nUnless you meant that you got into functional programming via F# but you've since changed main language?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36472, "question": "I wonder why? F# has great OOP features despite being functional at heart. Why not use them?\n\nUnless you meant that you got into functional programming via F# but you've since changed main language?", "aSentId": 36473, "answer": "I really don't miss any OO features working in Clojure and I think a lot of the OO patterns don't really mesh well with the FP style. Most F# code I've seen in the while tends to be functional.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36475, "question": "doing FP in a non-FP tool is stupid, you will just create bloated slow programs\n\na tool like Haskell is smart about employing these techniques. non-FP tools do not include these optimizations", "aSentId": 36476, "answer": "Sure, that's why all mainstream imperative languages have been steadily adding functional features and their use is encouraged by all best-practices resources of said languages.\n\nThat's what I meant, in case it wasn't clear. I don't mean \"enforce immutability and make sure it's painful to mutate data\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36477, "question": "Sure, that's why all mainstream imperative languages have been steadily adding functional features and their use is encouraged by all best-practices resources of said languages.\n\nThat's what I meant, in case it wasn't clear. I don't mean \"enforce immutability and make sure it's painful to mutate data\"", "aSentId": 36478, "answer": "&gt; Sure, that's why all mainstream imperative languages have been steadily adding functional features\n\nThey do this because FP is the hip new thing.\n\nTrust me, functional programming in C is shitty.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36479, "question": "&gt; Sure, that's why all mainstream imperative languages have been steadily adding functional features\n\nThey do this because FP is the hip new thing.\n\nTrust me, functional programming in C is shitty.", "aSentId": 36480, "answer": "Correction: They do this because FP is the *only* hip new thing.\n\nThe problem with other programming paradigms isn't that they are old, but rather they have stagnated.  Old programming paradigms suffer from complacency, acting like programming has no room for improvement and all we need to do is keep throwing more and more programmers at problems until they are solved.\n\nFunctional programming is the only paradigm that is actually breaking new ground and making meaningful improvements to programmer's lives in practice, which is why functional programming idioms keep getting assimilated into mainstream languages.\n\nAt some point, you begin to wonder why all the innovation is happening almost exclusively in the functional programming world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36481, "question": "Correction: They do this because FP is the *only* hip new thing.\n\nThe problem with other programming paradigms isn't that they are old, but rather they have stagnated.  Old programming paradigms suffer from complacency, acting like programming has no room for improvement and all we need to do is keep throwing more and more programmers at problems until they are solved.\n\nFunctional programming is the only paradigm that is actually breaking new ground and making meaningful improvements to programmer's lives in practice, which is why functional programming idioms keep getting assimilated into mainstream languages.\n\nAt some point, you begin to wonder why all the innovation is happening almost exclusively in the functional programming world.", "aSentId": 36482, "answer": "&gt;you begin to wonder why all the innovation is happening almost exclusively in the functional programming world.\n\nI suspect it has something to do with (pure, declarative, strongly typed) functional programming being more closely married to mathematics than other programming paradigms. Pure FP is the most abstract paradigm we have at the moment (i.e. it's the paradigm farthest divorced from bare metal that still works on our Von Neumann architecture FSM computers). \n\nI'm not sure what your point was, though. Please don't mistake my comment as an attack on FP. My comment was a criticism of those languages that half-ass a number of FP features and claim to now be a \"functional language\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36483, "question": "&gt;you begin to wonder why all the innovation is happening almost exclusively in the functional programming world.\n\nI suspect it has something to do with (pure, declarative, strongly typed) functional programming being more closely married to mathematics than other programming paradigms. Pure FP is the most abstract paradigm we have at the moment (i.e. it's the paradigm farthest divorced from bare metal that still works on our Von Neumann architecture FSM computers). \n\nI'm not sure what your point was, though. Please don't mistake my comment as an attack on FP. My comment was a criticism of those languages that half-ass a number of FP features and claim to now be a \"functional language\".", "aSentId": 36484, "answer": "Then I think we agree.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36477, "question": "Sure, that's why all mainstream imperative languages have been steadily adding functional features and their use is encouraged by all best-practices resources of said languages.\n\nThat's what I meant, in case it wasn't clear. I don't mean \"enforce immutability and make sure it's painful to mutate data\"", "aSentId": 36486, "answer": "show me one recognized C guide that recommends function pointers as a best practice...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36487, "question": "show me one recognized C guide that recommends function pointers as a best practice...", "aSentId": 36488, "answer": "Understand that as a general rule, functional features have more overhead and performance cost, or at least that's what functional implementations have shown so far. So it makes sense that in a language that is usually chosen not because of developer-friendliness but for performance-bound reasons, the best practices are going to be influenced by this requirement.\n\nBut if you write modern-Java, C#, Python, Ruby, PHP or JavaScript (to name the most popular ones) in 2015 and you're not using functional features I won't say you are doing it wrong, but you're certainly not doing it as right as you could.\n\nAs a general rule, functional code is easier to both read and reason about.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36489, "question": "Understand that as a general rule, functional features have more overhead and performance cost, or at least that's what functional implementations have shown so far. So it makes sense that in a language that is usually chosen not because of developer-friendliness but for performance-bound reasons, the best practices are going to be influenced by this requirement.\n\nBut if you write modern-Java, C#, Python, Ruby, PHP or JavaScript (to name the most popular ones) in 2015 and you're not using functional features I won't say you are doing it wrong, but you're certainly not doing it as right as you could.\n\nAs a general rule, functional code is easier to both read and reason about.", "aSentId": 36490, "answer": "And even before Java 8 people have been doing some small aspects of functional programming Java for a long time with interfaces and anonymous classes. It's surely not pure, but it's a useful tool. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36442, "question": "16 Months of Functional Programming", "aSentId": 36492, "answer": "I like objects :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36493, "question": "I like objects :)", "aSentId": 36494, "answer": "Me too. That's why I'm giving scala a try after using clojure for a few years. I'm hoping it will bridge the gap for me. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36495, "question": "Me too. That's why I'm giving scala a try after using clojure for a few years. I'm hoping it will bridge the gap for me. ", "aSentId": 36496, "answer": "Out of curiosity what do you like about objects over multimethods and protocols?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36497, "question": "Out of curiosity what do you like about objects over multimethods and protocols?", "aSentId": 36498, "answer": "I have found them to lead to better organization for people who wouldn't otherwise do so. I think the encapsulation allows you to have more freedom to optimize code while knowing that you won't break outside code.\n\n While you can achieve this with smart use of private functions in functional programming, I find that people don't. I think non object oriented programming can work out as well as functional programming when I don't have to work with other people, but when I do, people write messy awful code that's worse than the messy awful code that people do write with object oriented languages. If you are going to design non object oriented code in a smart, well organized and modular  way then it's no less work than object oriented programming anyway,so I don't see the benefit. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36499, "question": "I have found them to lead to better organization for people who wouldn't otherwise do so. I think the encapsulation allows you to have more freedom to optimize code while knowing that you won't break outside code.\n\n While you can achieve this with smart use of private functions in functional programming, I find that people don't. I think non object oriented programming can work out as well as functional programming when I don't have to work with other people, but when I do, people write messy awful code that's worse than the messy awful code that people do write with object oriented languages. If you are going to design non object oriented code in a smart, well organized and modular  way then it's no less work than object oriented programming anyway,so I don't see the benefit. ", "aSentId": 36500, "answer": "&gt;I have found them to lead to better organization for people who wouldn't otherwise do so. I think the encapsulation allows you to have more freedom to optimize code while knowing that you won't break outside code.\n\nHow is that different from using namespaces though. When I have a set of functions that describe a particular workflow then I put them all in a particular namespace. The only difference that I see is that the functions are decoupled from the data that gets passed in explicitly. I see that as an extreme positive though.\n\n&gt;While you can achieve this with smart use of private functions in functional programming, I find that people don't.\n\nHow so, look at any popular Clojure libraries in the wild, it's precisely how they're structured.\n\n&gt;If you are going to design non object oriented code in a smart, well organized and modular way then it's no less work than object oriented programming anyway,so I don't see the benefit.\n\nI see two primary benefits. First is that Clojure defaults to immutability, this means that majority of the code is referentially transparent. I found this to be one of the biggest benefits when building large applications. Being able to reason about parts of the application safely is something that's practically never possible in a language like Java.\n\nSecond is that all the functions operate on a common set of data structures. This facilitates code reuse at function level. It also makes it much easier to pass data between different domains.\n\nMy team has been working with Clojure for the past 4 years and we find these to be tangible benefits in our workflow. Compared to our previous projects in Java, we're able to deliver applications faster, we have less defects and we have a much better turn around for features.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36501, "question": "&gt;I have found them to lead to better organization for people who wouldn't otherwise do so. I think the encapsulation allows you to have more freedom to optimize code while knowing that you won't break outside code.\n\nHow is that different from using namespaces though. When I have a set of functions that describe a particular workflow then I put them all in a particular namespace. The only difference that I see is that the functions are decoupled from the data that gets passed in explicitly. I see that as an extreme positive though.\n\n&gt;While you can achieve this with smart use of private functions in functional programming, I find that people don't.\n\nHow so, look at any popular Clojure libraries in the wild, it's precisely how they're structured.\n\n&gt;If you are going to design non object oriented code in a smart, well organized and modular way then it's no less work than object oriented programming anyway,so I don't see the benefit.\n\nI see two primary benefits. First is that Clojure defaults to immutability, this means that majority of the code is referentially transparent. I found this to be one of the biggest benefits when building large applications. Being able to reason about parts of the application safely is something that's practically never possible in a language like Java.\n\nSecond is that all the functions operate on a common set of data structures. This facilitates code reuse at function level. It also makes it much easier to pass data between different domains.\n\nMy team has been working with Clojure for the past 4 years and we find these to be tangible benefits in our workflow. Compared to our previous projects in Java, we're able to deliver applications faster, we have less defects and we have a much better turn around for features.", "aSentId": 36502, "answer": "&gt;&gt;I have found them to lead to better organization for people who wouldn't otherwise do so. I think the encapsulation allows you to have more freedom to optimize code while knowing that you won't break outside code.\n\n&gt;How is that different from using namespaces though. When I have a set of functions that describe a particular workflow then I put them all in a particular namespace. The only difference that I see is that the functions are decoupled from the data that gets passed in explicitly. I see that as an extreme positive though.\n\n I addressed this later in my post except for the decoupling which I alluded to. That decoupling is what makes people more often write bad code. \n\n&gt;&gt;While you can achieve this with smart use of private functions in functional programming, I find that people don't.\n\n&gt;How so, look at any popular Clojure libraries in the wild, it's precisely how they're structured.\n\nPopular libraries are often great examples of code. That doesn't mean that the applications utilizing them are written well. \n\n&gt;&gt;If you are going to design non object oriented code in a smart, well organized and modular way then it's no less work than object oriented programming anyway,so I don't see the benefit.\n\n&gt;I see two primary benefits. First is that Clojure defaults to immutability, this means that majority of the code is referentially transparent. I found this to be one of the biggest benefits when building large applications. Being able to reason about parts of the application safely is something that's practically never possible in a language like Java.\n\nImmutability isn't mutually exclusive with oop. Look at guava for Java, or even better, look at scala. \n\n&gt;Second is that all the functions operate on a common set of data structures. This facilitates code reuse at function level. It also makes it much easier to pass data between different domains.\n\n&gt;My team has been working with Clojure for the past 4 years and we find these to be tangible benefits in our workflow. Compared to our previous projects in Java, we're able to deliver applications faster, we have less defects and we have a much better turn around for features.\n\nThat's good to hear, and I'm willing to bet that immutability is the reason for that. \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36503, "question": "&gt;&gt;I have found them to lead to better organization for people who wouldn't otherwise do so. I think the encapsulation allows you to have more freedom to optimize code while knowing that you won't break outside code.\n\n&gt;How is that different from using namespaces though. When I have a set of functions that describe a particular workflow then I put them all in a particular namespace. The only difference that I see is that the functions are decoupled from the data that gets passed in explicitly. I see that as an extreme positive though.\n\n I addressed this later in my post except for the decoupling which I alluded to. That decoupling is what makes people more often write bad code. \n\n&gt;&gt;While you can achieve this with smart use of private functions in functional programming, I find that people don't.\n\n&gt;How so, look at any popular Clojure libraries in the wild, it's precisely how they're structured.\n\nPopular libraries are often great examples of code. That doesn't mean that the applications utilizing them are written well. \n\n&gt;&gt;If you are going to design non object oriented code in a smart, well organized and modular way then it's no less work than object oriented programming anyway,so I don't see the benefit.\n\n&gt;I see two primary benefits. First is that Clojure defaults to immutability, this means that majority of the code is referentially transparent. I found this to be one of the biggest benefits when building large applications. Being able to reason about parts of the application safely is something that's practically never possible in a language like Java.\n\nImmutability isn't mutually exclusive with oop. Look at guava for Java, or even better, look at scala. \n\n&gt;Second is that all the functions operate on a common set of data structures. This facilitates code reuse at function level. It also makes it much easier to pass data between different domains.\n\n&gt;My team has been working with Clojure for the past 4 years and we find these to be tangible benefits in our workflow. Compared to our previous projects in Java, we're able to deliver applications faster, we have less defects and we have a much better turn around for features.\n\nThat's good to hear, and I'm willing to bet that immutability is the reason for that. \n\n", "aSentId": 36504, "answer": "&gt;I addressed this later in my post except for the decoupling which I alluded to. That decoupling is what makes people more often write bad code.\n\nI've found that to be the opposite during my career. My experience is that people often design classes very poorly and it can be difficult to tell what the exact purpose of a particular class is.\n\nThis tends to happen quite naturally too, since you generally don't know exactly what problem you're solving, so you just add this and that and before you know it it's a giant god class. Since objects are stateful, it's often not trivial to just pull some methods out into a separate class.\n\nI find that it's much easier to refactor functional code since functions are pure and you can easily and safely reorganize things as you see fit. The lowered barrier to refactoring means that you actually end up doing it more often.\n\n&gt;Popular libraries are often great examples of code. That doesn't mean that the applications utilizing them are written well.\n\nHowever, I find that Clojure code in the wild is much easier to follow than Java code for example. I have developed Java for over a decade and I was never able to contribute meaningfully to a single project. You open it up and it's a giant maze of class hierarchies and interfaces. You poke around for a bit and say fuck it, let somebody else do it. By contrast, I've successfully contributed to many Clojure libraries and conversely many people have contributed to mine.\n\nI don't find that anything magically changes when it comes to building closed source applications. I've worked on plenty Java projects that had completely impenetrable code bases that were atrociously structured.\n\n&gt;Immutability isn't mutually exclusive with oop. Look at guava for Java, or even better, look at scala.\n\nWhen you work with immutability traditional style OOP loses pretty much all of its benefits. You no longer have stateful objects all over the place, but instead you use data pipelines. If you look at Scala you'll see that it's written predominantly in functional style and most code looks nothing like Java style OO.\n\n&gt;That's good to hear, and I'm willing to bet that immutability is the reason for that.\n\nImmutability coupled with the ability to write code that's very close to the problem domain. With Clojure, there's very little boilerplate and incidental code, so majority of the the time you're reading code that's relevant to the problem being solved.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36495, "question": "Me too. That's why I'm giving scala a try after using clojure for a few years. I'm hoping it will bridge the gap for me. ", "aSentId": 36506, "answer": "It won't.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36507, "question": "It won't.", "aSentId": 36508, "answer": "What's your experience with it? I take it you didn't like it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36509, "question": "What's your experience with it? I take it you didn't like it.", "aSentId": 36510, "answer": "Slow compilation time, the language is all over the place, with it'S bad implementation mix with OOP and FP, don't like the type system. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36511, "question": "Slow compilation time, the language is all over the place, with it'S bad implementation mix with OOP and FP, don't like the type system. ", "aSentId": 36512, "answer": "The mix of oop and fp is exactly why I'm learning it, but I'll see about the rest. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36515, "question": "    Collections.sort(users, new Comparator&lt;User&gt;() {\n      public int compare(User a, User b) {\n        return a.getId() - b.getId();\n      } \n    });\n\nDear lord... how is it nobody spoke up when designing this and said:  \n\"Hey, are we sure we want to require the programmer to explicitly write all this stuff just for a comparator? Shouldn't the compiler be able to infer at least some of the instructions?\"", "aSentId": 36516, "answer": "Java refuses to learn any lessons from its closest cousin, C#.  This would become as trivial as you'd expect:\n\n    users.OrderBy(x =&gt; x.Id)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36517, "question": "Java refuses to learn any lessons from its closest cousin, C#.  This would become as trivial as you'd expect:\n\n    users.OrderBy(x =&gt; x.Id)", "aSentId": 36518, "answer": "&gt; ~~would become~~ has, for seven years, been", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36519, "question": "&gt; ~~would become~~ has, for seven years, been", "aSentId": 36520, "answer": "?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36519, "question": "&gt; ~~would become~~ has, for seven years, been", "aSentId": 36522, "answer": "\"This would become\" means \"If you rewrote the snippet in C#, it would become\", not that it will be possible sometime in the future.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36523, "question": "\"This would become\" means \"If you rewrote the snippet in C#, it would become\", not that it will be possible sometime in the future.", "aSentId": 36524, "answer": "And \"has been\" means \"because you've been using C# the whole time. Fuck Java. Fuck it right in the ear.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36515, "question": "    Collections.sort(users, new Comparator&lt;User&gt;() {\n      public int compare(User a, User b) {\n        return a.getId() - b.getId();\n      } \n    });\n\nDear lord... how is it nobody spoke up when designing this and said:  \n\"Hey, are we sure we want to require the programmer to explicitly write all this stuff just for a comparator? Shouldn't the compiler be able to infer at least some of the instructions?\"", "aSentId": 36526, "answer": "&gt; Dear lord... how is it nobody spoke up when designing this..\n\nBecause syntax is not the only design consideration. Especially with Java, they were way more interested in (1) the design of the JVM and (2) the standard library. \n\nAnd it's easy to add new syntax after the fact, which is exactly what they did. In Java 8, that looks something like:\n\n    Collections.sort(users, (User a, User b) -&gt; a.getId() - b.getId());\n\n\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36527, "question": "&gt; Dear lord... how is it nobody spoke up when designing this..\n\nBecause syntax is not the only design consideration. Especially with Java, they were way more interested in (1) the design of the JVM and (2) the standard library. \n\nAnd it's easy to add new syntax after the fact, which is exactly what they did. In Java 8, that looks something like:\n\n    Collections.sort(users, (User a, User b) -&gt; a.getId() - b.getId());\n\n\n\n", "aSentId": 36528, "answer": "You can shorten (User a, User b) to (a, b).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36515, "question": "    Collections.sort(users, new Comparator&lt;User&gt;() {\n      public int compare(User a, User b) {\n        return a.getId() - b.getId();\n      } \n    });\n\nDear lord... how is it nobody spoke up when designing this and said:  \n\"Hey, are we sure we want to require the programmer to explicitly write all this stuff just for a comparator? Shouldn't the compiler be able to infer at least some of the instructions?\"", "aSentId": 36530, "answer": "int - int is subtly broken due to overflow and underflow. (INT_MAX - INT_MIN) &lt; 0. You need to manually compare the two ints, so it's even more verbose.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36532, "question": "I want to get into more FP but have a bit of a dilemma, at work we use C# / ASP.NET and unfortunately a lot of classic ASP (my main job is migrating 10y.o+ pages to C#), these guys are open to any ideas that work well and help us out so it's the perfect ground for some experimentation- unfortunately I have no idea how to integrate F# into this kind of project and unfortunately there doesn't seem to be much literature on it.  \n\nHas anyone been in this situation or can anyone offer any advice? I'm aware of sites like [F# for fun and profit](http://fsharpforfunandprofit.com/) but their examples seem to be F#-only, or very small in scope.", "aSentId": 36533, "answer": "Just write a library project in F# and link it directly. Back-end/business logic is one of the things where F# excels...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36532, "question": "I want to get into more FP but have a bit of a dilemma, at work we use C# / ASP.NET and unfortunately a lot of classic ASP (my main job is migrating 10y.o+ pages to C#), these guys are open to any ideas that work well and help us out so it's the perfect ground for some experimentation- unfortunately I have no idea how to integrate F# into this kind of project and unfortunately there doesn't seem to be much literature on it.  \n\nHas anyone been in this situation or can anyone offer any advice? I'm aware of sites like [F# for fun and profit](http://fsharpforfunandprofit.com/) but their examples seem to be F#-only, or very small in scope.", "aSentId": 36535, "answer": "How about instead of using an ORM like Entity Framework, make an F# project that connects to your database with a type provider and start writing functions that pull up the objects you need.\n\nThat was the first thing I did with F# at work and it was a breeze. I'll never willingly use an ORM again. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36536, "question": "How about instead of using an ORM like Entity Framework, make an F# project that connects to your database with a type provider and start writing functions that pull up the objects you need.\n\nThat was the first thing I did with F# at work and it was a breeze. I'll never willingly use an ORM again. ", "aSentId": 36537, "answer": "Sounds interesting, do you have any pointers/articles/projects which go a little more in detail ?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36532, "question": "I want to get into more FP but have a bit of a dilemma, at work we use C# / ASP.NET and unfortunately a lot of classic ASP (my main job is migrating 10y.o+ pages to C#), these guys are open to any ideas that work well and help us out so it's the perfect ground for some experimentation- unfortunately I have no idea how to integrate F# into this kind of project and unfortunately there doesn't seem to be much literature on it.  \n\nHas anyone been in this situation or can anyone offer any advice? I'm aware of sites like [F# for fun and profit](http://fsharpforfunandprofit.com/) but their examples seem to be F#-only, or very small in scope.", "aSentId": 36539, "answer": "Carmack wrote a great [article](http://gamasutra.com/view/news/169296/Indepth_Functional_programming_in_C.php) on writing functional code in an OOP language. I have used many of the techniques he describes in that article in C# and have found them very useful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36542, "question": "&gt; at work we use C#\n\nC# supports some aspects of functional programming, like lambda-expressions, delegates, anonymous types and more. With C# 6 you'll get even more good stuff, with easier ways to define immutable types.\n\nThough it's not a functional language, it's one of the most practical languages \"supporting some kind of FP\".\n\nF# has some issue when compared to C#. Its IDE support is inferior, its compile time is slow, and its runtime performance isn't great. (All of those issues are generally true with all functional languages).", "aSentId": 36543, "answer": "&gt;It's IDE support is inferior, it's compile time is slow, and its runtime performance isn't great.\n\nI've used both C# and F# in production, and I've experienced none of those issues. Maybe F# is marginally inferior to C# in IDE support and performance (which I frankly question), but they're definitely in the same league, and F# is definitely nowhere near the second-class language your comment suggests.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36544, "question": "&gt;It's IDE support is inferior, it's compile time is slow, and its runtime performance isn't great.\n\nI've used both C# and F# in production, and I've experienced none of those issues. Maybe F# is marginally inferior to C# in IDE support and performance (which I frankly question), but they're definitely in the same league, and F# is definitely nowhere near the second-class language your comment suggests.", "aSentId": 36545, "answer": "Let's do a simple exercise:\n\n1. Open Roslyn's source code (written in C#) in VS 2013.\n2. Open F# compiler's source code (written in F#) in VS 2013.\n\nChange something in both of them. Work in a file at least 1000 lines long, and work in the IDE for at least 15 minutes.\n\nCompile.\n\nCome back and report your experience.\n\nBTW, I've done both. \nWorking with the F# repo was a painful experience from a performance perspective.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36546, "question": "Let's do a simple exercise:\n\n1. Open Roslyn's source code (written in C#) in VS 2013.\n2. Open F# compiler's source code (written in F#) in VS 2013.\n\nChange something in both of them. Work in a file at least 1000 lines long, and work in the IDE for at least 15 minutes.\n\nCompile.\n\nCome back and report your experience.\n\nBTW, I've done both. \nWorking with the F# repo was a painful experience from a performance perspective.", "aSentId": 36547, "answer": "That sounds like a good experience to try. However,\n\n1. The F# compiler is bootstrapped using F# 2.0, which is much slower; and\n\n2. There's a lot less engineering effort in the F# compiler than in Roslyn, so it could definitely be a pain to work with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36548, "question": "That sounds like a good experience to try. However,\n\n1. The F# compiler is bootstrapped using F# 2.0, which is much slower; and\n\n2. There's a lot less engineering effort in the F# compiler than in Roslyn, so it could definitely be a pain to work with.", "aSentId": 36549, "answer": "1. Well, F# 2.0 is much slower than C# 2.0. Do you agree?\nAnd similarly, F# 3.1 is slower than C# 3.0\n\n2. I don't think the reason it's slow is because lack of effort. I'll argue they can't get it much faster, because of the fundamentals the language relies on (partial application everywhere, immutable lists, high level of abstraction, etc.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36550, "question": "1. Well, F# 2.0 is much slower than C# 2.0. Do you agree?\nAnd similarly, F# 3.1 is slower than C# 3.0\n\n2. I don't think the reason it's slow is because lack of effort. I'll argue they can't get it much faster, because of the fundamentals the language relies on (partial application everywhere, immutable lists, high level of abstraction, etc.)", "aSentId": 36551, "answer": "The secret to a fast F# code base is to make your inner loops imperative when they come up in profiling :p but that's likely to remain true no matter the development methodology.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36552, "question": "The secret to a fast F# code base is to make your inner loops imperative when they come up in profiling :p but that's likely to remain true no matter the development methodology.", "aSentId": 36553, "answer": "That's only partially correct.\n\nIn C# you can write highly performant servers (or apps) while relying on lambda expressions to filter/transform collections.\n\nCompiled expressions (Func, not Expression) working on in-memory collections are only slightly slower than for loops.\n\nF# lists on the other hand are a different story. They yield bad performance, by default.\n\nSure, you can squeeze F# to yield acceptable performance, but idiomatic C# generally produces better performance than idiomatic F#.\n\n(To clarify, I'm not against F#. I thing though that relying on it for a critical app should be done with caution).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36546, "question": "Let's do a simple exercise:\n\n1. Open Roslyn's source code (written in C#) in VS 2013.\n2. Open F# compiler's source code (written in F#) in VS 2013.\n\nChange something in both of them. Work in a file at least 1000 lines long, and work in the IDE for at least 15 minutes.\n\nCompile.\n\nCome back and report your experience.\n\nBTW, I've done both. \nWorking with the F# repo was a painful experience from a performance perspective.", "aSentId": 36555, "answer": "Curious. Is this your blog post?: \n\nhttp://alxandr.me/2014/11/23/f-in-asp-net-5-the-good-the-bad-and-the-really-ugly/ ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36557, "question": "Nice article, clear and well written. \n\nBut...\n\nAll I can think of while reading is why can no one design an object these days. User is a terrible class. Say I also have a Group type. Am I going to duplicate all this code just to support an activeById for Groups?\n\nOf course the Java looks bad, the solution just won't compose. That the Scala equivalent looks nice just hides this flaw from the developer.", "aSentId": 36558, "answer": "I think you've just described the general problem with OO. Objects sound great on paper, but in practice it's very easy to make a mess with them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36563, "question": "Cool article, but I can't shake the impression that most people who fall in love with FP are Java exiles who never *really* used languages like Python, Ruby and Javascript in depth (and I personally know people who call any language that's not Java \"a toy\"). Their functional features are a given, and it's difficult to find a Ruby application that doesn't use `map`, `select` or `reject` - just like it's almost impossible to find a complex Python system that doesn't use list comprehensions. I won't even mention Javascript programs that don't pass functions around - that's almost impossible.\n\nScala is indeed very cool, but some people talk about it like it's the second coming of Christ. Apparently JVM addiction is a real thing. :-)", "aSentId": 36564, "answer": "I think this view really is about static vs dynamic typing. Traditionally Java is seen as inflexible compared to the languages you listed, but Scala gives you the flexibility of these languages *plus* type safety, which is huge. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36565, "question": "I think this view really is about static vs dynamic typing. Traditionally Java is seen as inflexible compared to the languages you listed, but Scala gives you the flexibility of these languages *plus* type safety, which is huge. ", "aSentId": 36566, "answer": "Yep, came here to say this. Except for the bit about static typing being a net gain, but I accept that on that matter there's strong opinions either way. (my honest view: we just don't have enough data)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36563, "question": "Cool article, but I can't shake the impression that most people who fall in love with FP are Java exiles who never *really* used languages like Python, Ruby and Javascript in depth (and I personally know people who call any language that's not Java \"a toy\"). Their functional features are a given, and it's difficult to find a Ruby application that doesn't use `map`, `select` or `reject` - just like it's almost impossible to find a complex Python system that doesn't use list comprehensions. I won't even mention Javascript programs that don't pass functions around - that's almost impossible.\n\nScala is indeed very cool, but some people talk about it like it's the second coming of Christ. Apparently JVM addiction is a real thing. :-)", "aSentId": 36568, "answer": "See my other comment; there's \"old functional programming\" that has first-class functions, and there's \"new functional programming\" that goes much farther down the road, where you start getting immutability, separation of side effects, etc.\n\nThe \"old functional programming\" is becoming a useless distinction because \"everything\" is a functional programming language by that standard. But, yes, there is also a \"new\" functional programming that is radically different than Python, Ruby, and Javascript, which, no offense, it doesn't sound like you know much about. (Seriously. No offense. There's nothing wrong with that. I don't even care if you want to correct it or not, because there are so many wonderful things to learn and do and so little lifetime to do them in, and this may not pique your interest, and that's great too. But you do not sound like you're in a position to judge where people who do use and like \"new\" FP are coming from.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36563, "question": "Cool article, but I can't shake the impression that most people who fall in love with FP are Java exiles who never *really* used languages like Python, Ruby and Javascript in depth (and I personally know people who call any language that's not Java \"a toy\"). Their functional features are a given, and it's difficult to find a Ruby application that doesn't use `map`, `select` or `reject` - just like it's almost impossible to find a complex Python system that doesn't use list comprehensions. I won't even mention Javascript programs that don't pass functions around - that's almost impossible.\n\nScala is indeed very cool, but some people talk about it like it's the second coming of Christ. Apparently JVM addiction is a real thing. :-)", "aSentId": 36570, "answer": "&gt; Their functional features are a given\n\nPython's lambda syntax is terribad. \n\n&gt; Apparently JVM addiction is a real thing. :-)\n\nPerformance *and* a large mature FOSS ecosystem, it's understandable.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36571, "question": "&gt; Their functional features are a given\n\nPython's lambda syntax is terribad. \n\n&gt; Apparently JVM addiction is a real thing. :-)\n\nPerformance *and* a large mature FOSS ecosystem, it's understandable.", "aSentId": 36572, "answer": "Python lambda is indeed horrible; but IMO, it somewhat makes up for that fact by one liner functions pretty easy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36571, "question": "&gt; Their functional features are a given\n\nPython's lambda syntax is terribad. \n\n&gt; Apparently JVM addiction is a real thing. :-)\n\nPerformance *and* a large mature FOSS ecosystem, it's understandable.", "aSentId": 36574, "answer": "&gt; Python's lambda syntax is terribad. \n\nThe lambda syntax is fine. Python isn't an FP language and wasn't ever intended to be one. Python's lambda restricts you to a simple oneliners and there's no risk people go overboard with huge anonymous functions in a language that wasn't designed for that.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36575, "question": "&gt; Python's lambda syntax is terribad. \n\nThe lambda syntax is fine. Python isn't an FP language and wasn't ever intended to be one. Python's lambda restricts you to a simple oneliners and there's no risk people go overboard with huge anonymous functions in a language that wasn't designed for that.\n", "aSentId": 36576, "answer": "&gt;  there's no risk people go overboard with huge anonymous functions in a language that wasn't designed for that.\n\nI never said Python was an 'FP' language, but it is a multi-paradigm language that can be used in a functional manner.\n\nAll the lambda restriction does is force you to do is to define a named locally scoped function. Python handles functional style very well, definitely as well as JS. Functions are a first-class object which can be passed around, inner functions close over their defining scopes (although writing to a parent scoped variable requires special keywords)\n\n    &gt;&gt;&gt; def fer():\n    ...     x = 10\n    ...     def y():\n    ...             print(x)\n    ...     return y\n    ... \n    &gt;&gt;&gt; fer()()\n    10", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36577, "question": "&gt;  there's no risk people go overboard with huge anonymous functions in a language that wasn't designed for that.\n\nI never said Python was an 'FP' language, but it is a multi-paradigm language that can be used in a functional manner.\n\nAll the lambda restriction does is force you to do is to define a named locally scoped function. Python handles functional style very well, definitely as well as JS. Functions are a first-class object which can be passed around, inner functions close over their defining scopes (although writing to a parent scoped variable requires special keywords)\n\n    &gt;&gt;&gt; def fer():\n    ...     x = 10\n    ...     def y():\n    ...             print(x)\n    ...     return y\n    ... \n    &gt;&gt;&gt; fer()()\n    10", "aSentId": 36578, "answer": "You could always just do this.\n\n    def fer():\n        x = 10\n        return lambda: print(x)\n    fer()()", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36583, "question": "How can someone bare Scala's slow compilation times?", "aSentId": 36584, "answer": "I thought the same thing when I started working with it, but then I realized that I was taking the wrong approach when using SBT. In IntelliJ, there's a \"Make Project\" action and it took several minutes to complete and slowed my entire computer to a crawl, so I couldn't comprehend how I would ever be productive. Once I realized I should just be using SBT and calling the compile command, it's actually really quick - usually a second or less.\n\nThe tooling itself (IDEs and build tools) could use quite a bit of polish, but the language and ecosystem is pretty great.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36585, "question": "I thought the same thing when I started working with it, but then I realized that I was taking the wrong approach when using SBT. In IntelliJ, there's a \"Make Project\" action and it took several minutes to complete and slowed my entire computer to a crawl, so I couldn't comprehend how I would ever be productive. Once I realized I should just be using SBT and calling the compile command, it's actually really quick - usually a second or less.\n\nThe tooling itself (IDEs and build tools) could use quite a bit of polish, but the language and ecosystem is pretty great.", "aSentId": 36586, "answer": "IDEA can use the fsc compiler daemon for faster compiles. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36583, "question": "How can someone bare Scala's slow compilation times?", "aSentId": 36588, "answer": "I have non trivial projects built and tested in around a minute. The incremental compiler means I can do comfortable TDD seamlessly. \n\nPerhaps you havent touched Scala in a while. Or maybe you have a very boring axe to grind. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36589, "question": "I have non trivial projects built and tested in around a minute. The incremental compiler means I can do comfortable TDD seamlessly. \n\nPerhaps you havent touched Scala in a while. Or maybe you have a very boring axe to grind. ", "aSentId": 36590, "answer": "Last time I gave it a try (few months ago), I still had trouble launching things in a debugger, in no small part because things were still getting compiled in the background.\n\nAs IDE-based work goes, it's just not the same as java in terms of truly immediate feedback (no exceptions) from the compiler. \n\nAnd that's just the compile times.\n\nDon't get me wrong, as a language, I think it's a good step. As and overall experience for daily work, I continue to be moderately impressed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36583, "question": "How can someone bare Scala's slow compilation times?", "aSentId": 36592, "answer": "I switched to C++ because Scala is so slow...\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36593, "question": "I switched to C++ because Scala is so slow...\n\n", "aSentId": 36594, "answer": "Same!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36596, "question": "It's true that the compile times for FP languages are generally longer, but that's because the type-checker is doing a lot more work. This is the sort of work that you'd otherwise be doing yourself writing unit tests, fixing bugs as a result of working around the deficiencies in Java's type system.\n\nOne of the things that compensates for slow compilation times is a REPL, which allows you to do exploratory/experimental programming without compiling your code. You might counter that OO languages have REPLs, too (eg. LINQPad for C#). I would say that FP, in general, is more natural in a REPL than OOP because functions can be tested in isolation whereas methods require the context of an object. When you make a change to a method in a REPL, it's usually necessary to reload the entire class and rebuild an object's state, which can be quite cumbersome.\n\nSo yeah, compilation times for FP languages are slower, but iteration times are shorter in a REPL, much shorter than recompiling/reexecuting an entire code base will ever be.", "aSentId": 36597, "answer": "Of course the type checker do more work because it compiling Scala's type and Java subtypes, which pretty much makes the whole experience tedious and not worthy, with clojure is the same thing, just slow startup, kill completely the use experience and I don't really care the relative and contextual, circumstantially, and subjective productivity of Clojure REPL, everyone has there preference. If I ware to choose a FP language I would probably go for Haskell which compilation time is faster, have a more powerful types system, and the REPL is decent (not as decent is Clojure I have to admit, but is enough)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36599, "question": "Everything I read here can be done in pure C without much trouble...\n\nfor example:\n\n&gt;Functions in Scala are first-class citizens. It means that they are not just class methods that can be declared and called. On top of that they can be used as any other data type. You can pass functions to other functions and make functions that return other functions. You can store them in a variable or a data structure. You can also work with them in literal form without naming them. For example:\n\nYeah, that's called function pointers... Most of us have been doing this since the 80's, if not before.\n", "aSentId": 36600, "answer": "Sure, but managing pointers makes it really easy to shoot yourself in the foot. Modern functional languages don't permit that particular problem.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36599, "question": "Everything I read here can be done in pure C without much trouble...\n\nfor example:\n\n&gt;Functions in Scala are first-class citizens. It means that they are not just class methods that can be declared and called. On top of that they can be used as any other data type. You can pass functions to other functions and make functions that return other functions. You can store them in a variable or a data structure. You can also work with them in literal form without naming them. For example:\n\nYeah, that's called function pointers... Most of us have been doing this since the 80's, if not before.\n", "aSentId": 36602, "answer": "Function pointers are different to closures.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36603, "question": "Function pointers are different to closures.", "aSentId": 36604, "answer": "There not different to what was described", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36606, "question": "Scala is an abomination, remotely related to functional programming. Try Haskell instead.", "aSentId": 36607, "answer": "Uh oh, we got a hipster!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36608, "question": "Uh oh, we got a hipster!", "aSentId": 36609, "answer": "His tone is pretty bad, but Scala does have major issues.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36610, "question": "His tone is pretty bad, but Scala does have major issues.", "aSentId": 36611, "answer": "What major issues?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36610, "question": "His tone is pretty bad, but Scala does have major issues.", "aSentId": 36613, "answer": "Compared to other languages, Scala's issues seem pretty minor.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36614, "question": "Compared to other languages, Scala's issues seem pretty minor.", "aSentId": 36615, "answer": "Elaborate?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36616, "question": "Elaborate?", "aSentId": 36617, "answer": "Why don't you go first? And thanks for the downvote by the way.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36618, "question": "Why don't you go first? And thanks for the downvote by the way.", "aSentId": 36619, "answer": "I mean, if your post doesn't make a meaningful contribution to the conversation, then I downvote on principle. Don't think I'm being petty, I just want a high standard of conversation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36620, "question": "I mean, if your post doesn't make a meaningful contribution to the conversation, then I downvote on principle. Don't think I'm being petty, I just want a high standard of conversation.", "aSentId": 36621, "answer": "Maybe you should take the \"high\" standard you use to measure other comments and shove it up your own ... comment.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36608, "question": "Uh oh, we got a hipster!", "aSentId": 36623, "answer": "How am I a hipster? Scala is no mainstream to be avoided by a hipster.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36624, "question": "How am I a hipster? Scala is no mainstream to be avoided by a hipster.", "aSentId": 36625, "answer": "Scala is a gateway drug to Haskell, for most programmers Scala is as functional as they can hope to get in their day job. You are peeing in their birthday cake (even if you are right).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36626, "question": "Scala is a gateway drug to Haskell, for most programmers Scala is as functional as they can hope to get in their day job. You are peeing in their birthday cake (even if you are right).", "aSentId": 36627, "answer": "I'm tempted not to reply at all, but:\n\nI've now been a professional Scala developer for &gt; 4 years, and we use scalaz, Shapeless, etc.\u2014in other words, all the hard-core FP stuff\u2014routinely. So I occasionally still try to add to the discussion, because there are occasionally still people asking genuine questions from a genuinely open-minded frame.\n\nBut more and more, I find myself not replying at all, because too often, my multi-decade professional experience and evolution is dismissed as \"anecdotal\" and somehow \"not real world.\"\n\nNevertheless, I will say it (at least) one more time: FP's benefits are, _unlike those of OO_, easily measurable, tangible, and real. Yes, there's still a lot of work to do to make the tools more approachable, better documented, with better tooling, etc. But all of that effort is worth it to support the advantages in correctness, maintainability, etc. that FP actually does provide.\n\n(I suppose I should add a footnote that by \"FP\" I really do mean \"referential transparency.\")", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36629, "question": "&gt;16 Months of Functional Programming \n\nI wouldn't wish that on my worst enemy.", "aSentId": 36630, "answer": "Of course not! Why would you bring joy to your enemies?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36632, "question": "FP is just a loose collection of best practices. When they become accepted they lose their aura.\n\n* Immutability by default\n\n* Function pipelining\n\n* task-based concurrency\n\n* Monadic DSLs\n\n* Rich type systems\n\nAnd the list goes on...", "aSentId": 36633, "answer": "* FP is not immutable by default, its immutable (always)\n* Function composition is NOT function pipelining\n* Concurrency is implicit as well as explicit because the order of operations matters less\n* Hindley Milner style type systems are predicated on many other FP language features being present (not loosely coupled)\n\nThey are not best practices, they are a tightly coupled series of concepts that facilitate mathematic emergence in code. The well of mathematics possible once you have purity is infinite, the aura never goes away, it just gets deeper and more profound. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36634, "question": "* FP is not immutable by default, its immutable (always)\n* Function composition is NOT function pipelining\n* Concurrency is implicit as well as explicit because the order of operations matters less\n* Hindley Milner style type systems are predicated on many other FP language features being present (not loosely coupled)\n\nThey are not best practices, they are a tightly coupled series of concepts that facilitate mathematic emergence in code. The well of mathematics possible once you have purity is infinite, the aura never goes away, it just gets deeper and more profound. ", "aSentId": 36635, "answer": "That's an incredibly restricted view of functional programming, and it excludes anything less pure than Haskell. No Ocaml, F# or Scala.\n\nAlso,\n\n&gt;* Hindley Milner style type systems are predicated on many other FP language features being present (not loosely coupled)\n\nWhat the hell?\n\n&gt;Concurrency is implicit as well as explicit because the order of operations matters less\n\nName a single functional language where concurrency is implicit.\n\nThis is literally the first time I've ever seen such a proselytizing, purist take on functional programming. Who the hell are you to make such judgments?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36638, "question": "Our SQL interview questions", "aSentId": 36639, "answer": "These are great because of their simplicity. I admit I would have to brush up a bit if I had to answer these questions, but someone who's pretending entirely is easily weeded out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36640, "question": "These are great because of their simplicity. I admit I would have to brush up a bit if I had to answer these questions, but someone who's pretending entirely is easily weeded out.", "aSentId": 36641, "answer": "&gt; their simplicity.\n\nFunny enough, if we start adding some real world  to the problems, they slowly turn from the simple queries to skyscraper of joins. Take \"List employees (names) who have a bigger salary than their boss\" as an example: \n\nWhat if employee can work two full time jobs with two different bosses? What if salary is not constant? What if boss of employee changed as well?\n\nI've managed to collect [5 tables(4 unique)](http://pastebin.com/H6hW8VDJ) so far. Can be 6 if boss information is stored in Department table and not in work position. \n\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36642, "question": "&gt; their simplicity.\n\nFunny enough, if we start adding some real world  to the problems, they slowly turn from the simple queries to skyscraper of joins. Take \"List employees (names) who have a bigger salary than their boss\" as an example: \n\nWhat if employee can work two full time jobs with two different bosses? What if salary is not constant? What if boss of employee changed as well?\n\nI've managed to collect [5 tables(4 unique)](http://pastebin.com/H6hW8VDJ) so far. Can be 6 if boss information is stored in Department table and not in work position. \n\n\n", "aSentId": 36643, "answer": "&gt;What if employee can work two full time jobs with two different bosses?\n\nThat's pretty trivial to compensate for.\n\n&gt;What if salary is not constant? What if boss of employee changed as well?\n\nReports are run as to be true the time they are run.  If it fluctuates before and after the report, that's not relevant to the report.\n\n&gt;'ve managed to collect 5 tables(4 unique)[1] so far. Can be 6 if boss information is stored in Department table and not in work position.\n\nThe art of effective design is simplicity.  This Data Structure would serve a lot of organizations well.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36644, "question": "&gt;What if employee can work two full time jobs with two different bosses?\n\nThat's pretty trivial to compensate for.\n\n&gt;What if salary is not constant? What if boss of employee changed as well?\n\nReports are run as to be true the time they are run.  If it fluctuates before and after the report, that's not relevant to the report.\n\n&gt;'ve managed to collect 5 tables(4 unique)[1] so far. Can be 6 if boss information is stored in Department table and not in work position.\n\nThe art of effective design is simplicity.  This Data Structure would serve a lot of organizations well.", "aSentId": 36645, "answer": "&gt; What if employee can work two full time jobs with two different bosses?\n&gt;&gt;That's pretty trivial to compensate for.\n\nGiven the schema, an employee has one boss. Therefore each job, would be an employee record.\n\n I would be impressed if a candidate points out the shortcoming, combined with a proposed solution. \n\nGiven that this task is not to find the rockstars, by their own admission, this would help tell the story of someone's thought process (do as told vs. do what needs done)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36638, "question": "Our SQL interview questions", "aSentId": 36647, "answer": "in mongodb,\n\n# List employees (names) who have a bigger salary than their boss\n\n- set up mongo connector so that boss subdoc is denormalized into each employee that the boss manages\n- set up elasticsearch for efficient search and faceting\n- set up mongo connector for elasticsearch as well\n- hrm, this won't scale. use mongos and different shards topology\n- same with elasticsearch. shard differently. reindex everything\n- write node.js RESTful api\n- angularjs bro\n- create trello ticket.\n- trello is bad. create github issues.\n- hire product managers.\n- hire one more product managers.\n- too many people. need a bigger office.\n- hrm angel fund is running out.\n- take 3 month vacation to Thailand.\n- this girl.... has penis. wtf.\n- sell the company to google.\n\nSee you next year.\n\n# 2016-ish List employees who have the biggest salary in their departments\n\n- new mongodb version. upgrade time!\n- data corruption.\n- take 2 weeks vacation.\n- get drunk.\n- this is fucked. find a way out.\n- start a kickstarter for this awesome idea about something related to listing employees grouped by salary.\n\nProbably burned out. Game over.\n\n# 2020-ish List departments that have less than 3 people in it\n\n- Oh crap.. I've been living slowfood slowcity slowlifestyle lifestyle\n- This problem again?\n- Blog about current state of databases.\n- Start a new startup about making brand new database cause you can't query this.\n- Think about name.\n- Think about logo.\n- Maybe blog a bit more.\n\nGive up. Going back to farming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36648, "question": "in mongodb,\n\n# List employees (names) who have a bigger salary than their boss\n\n- set up mongo connector so that boss subdoc is denormalized into each employee that the boss manages\n- set up elasticsearch for efficient search and faceting\n- set up mongo connector for elasticsearch as well\n- hrm, this won't scale. use mongos and different shards topology\n- same with elasticsearch. shard differently. reindex everything\n- write node.js RESTful api\n- angularjs bro\n- create trello ticket.\n- trello is bad. create github issues.\n- hire product managers.\n- hire one more product managers.\n- too many people. need a bigger office.\n- hrm angel fund is running out.\n- take 3 month vacation to Thailand.\n- this girl.... has penis. wtf.\n- sell the company to google.\n\nSee you next year.\n\n# 2016-ish List employees who have the biggest salary in their departments\n\n- new mongodb version. upgrade time!\n- data corruption.\n- take 2 weeks vacation.\n- get drunk.\n- this is fucked. find a way out.\n- start a kickstarter for this awesome idea about something related to listing employees grouped by salary.\n\nProbably burned out. Game over.\n\n# 2020-ish List departments that have less than 3 people in it\n\n- Oh crap.. I've been living slowfood slowcity slowlifestyle lifestyle\n- This problem again?\n- Blog about current state of databases.\n- Start a new startup about making brand new database cause you can't query this.\n- Think about name.\n- Think about logo.\n- Maybe blog a bit more.\n\nGive up. Going back to farming.", "aSentId": 36649, "answer": "&gt; --List employees who have the biggest salary in their departments\n&gt; \n\nThis is a trick question.  The biggest salary is 0 since everybody is all-options.  \n\nEDIT:  And there is never more than one employee.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36648, "question": "in mongodb,\n\n# List employees (names) who have a bigger salary than their boss\n\n- set up mongo connector so that boss subdoc is denormalized into each employee that the boss manages\n- set up elasticsearch for efficient search and faceting\n- set up mongo connector for elasticsearch as well\n- hrm, this won't scale. use mongos and different shards topology\n- same with elasticsearch. shard differently. reindex everything\n- write node.js RESTful api\n- angularjs bro\n- create trello ticket.\n- trello is bad. create github issues.\n- hire product managers.\n- hire one more product managers.\n- too many people. need a bigger office.\n- hrm angel fund is running out.\n- take 3 month vacation to Thailand.\n- this girl.... has penis. wtf.\n- sell the company to google.\n\nSee you next year.\n\n# 2016-ish List employees who have the biggest salary in their departments\n\n- new mongodb version. upgrade time!\n- data corruption.\n- take 2 weeks vacation.\n- get drunk.\n- this is fucked. find a way out.\n- start a kickstarter for this awesome idea about something related to listing employees grouped by salary.\n\nProbably burned out. Game over.\n\n# 2020-ish List departments that have less than 3 people in it\n\n- Oh crap.. I've been living slowfood slowcity slowlifestyle lifestyle\n- This problem again?\n- Blog about current state of databases.\n- Start a new startup about making brand new database cause you can't query this.\n- Think about name.\n- Think about logo.\n- Maybe blog a bit more.\n\nGive up. Going back to farming.", "aSentId": 36651, "answer": "This is much better than your usual webscale nonsense", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36652, "question": "This is much better than your usual webscale nonsense", "aSentId": 36653, "answer": "It's funny; someone recently criticized him for not mentioning webscale.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36648, "question": "in mongodb,\n\n# List employees (names) who have a bigger salary than their boss\n\n- set up mongo connector so that boss subdoc is denormalized into each employee that the boss manages\n- set up elasticsearch for efficient search and faceting\n- set up mongo connector for elasticsearch as well\n- hrm, this won't scale. use mongos and different shards topology\n- same with elasticsearch. shard differently. reindex everything\n- write node.js RESTful api\n- angularjs bro\n- create trello ticket.\n- trello is bad. create github issues.\n- hire product managers.\n- hire one more product managers.\n- too many people. need a bigger office.\n- hrm angel fund is running out.\n- take 3 month vacation to Thailand.\n- this girl.... has penis. wtf.\n- sell the company to google.\n\nSee you next year.\n\n# 2016-ish List employees who have the biggest salary in their departments\n\n- new mongodb version. upgrade time!\n- data corruption.\n- take 2 weeks vacation.\n- get drunk.\n- this is fucked. find a way out.\n- start a kickstarter for this awesome idea about something related to listing employees grouped by salary.\n\nProbably burned out. Game over.\n\n# 2020-ish List departments that have less than 3 people in it\n\n- Oh crap.. I've been living slowfood slowcity slowlifestyle lifestyle\n- This problem again?\n- Blog about current state of databases.\n- Start a new startup about making brand new database cause you can't query this.\n- Think about name.\n- Think about logo.\n- Maybe blog a bit more.\n\nGive up. Going back to farming.", "aSentId": 36655, "answer": "/r/deftruefalse", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36638, "question": "Our SQL interview questions", "aSentId": 36659, "answer": "i gave it a shot. please critique and let me know if there are better ways of doing it. \n\n--List employees (names) who have a bigger salary than their boss\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.salary &gt; b.salary\n\n--List employees who have the biggest salary in their departments\n\nselect name \nfrom employees a\njoin (\nselect departmentid, max(salary) as max_salary\nfrom employees\ngroup by departmentid\n) b \non a.departmentid = b.departmentid and a.salary = b.max_salary\n\n--List departments that have less than 3 people in it\n\nselect departmentid, count(*)\nfrom employees\ngroup by departmentid\nhaving count(*)&lt;3\n\n--List all departments along with the number of people there (tricky - people often do an \"inner join\" leaving out empty departments)\n\nselect departmentid, count(*)\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid\n\n--List employees that don't have a boss in the same department\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.departmentid &lt;&gt; b.departmentid\n\n--List all departments along with the total salary there\n\nselect departmentid, sum(b.salary) as total_salary\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36660, "question": "i gave it a shot. please critique and let me know if there are better ways of doing it. \n\n--List employees (names) who have a bigger salary than their boss\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.salary &gt; b.salary\n\n--List employees who have the biggest salary in their departments\n\nselect name \nfrom employees a\njoin (\nselect departmentid, max(salary) as max_salary\nfrom employees\ngroup by departmentid\n) b \non a.departmentid = b.departmentid and a.salary = b.max_salary\n\n--List departments that have less than 3 people in it\n\nselect departmentid, count(*)\nfrom employees\ngroup by departmentid\nhaving count(*)&lt;3\n\n--List all departments along with the number of people there (tricky - people often do an \"inner join\" leaving out empty departments)\n\nselect departmentid, count(*)\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid\n\n--List employees that don't have a boss in the same department\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.departmentid &lt;&gt; b.departmentid\n\n--List all departments along with the total salary there\n\nselect departmentid, sum(b.salary) as total_salary\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid", "aSentId": 36661, "answer": "&gt; select departmentid, count(*) from departments a left join employees b on a.departmentid = b.departmentid group by a.departmentid\n\nThis will give a false positive.  Empty departments will have a result of 1 (for the row in the departement table).  The better way to do this query is to have in inside query with the sum of ppl by departmentid (off the employee table), and then left join that to the department table using a case statement for null values in the temporary table.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36662, "question": "&gt; select departmentid, count(*) from departments a left join employees b on a.departmentid = b.departmentid group by a.departmentid\n\nThis will give a false positive.  Empty departments will have a result of 1 (for the row in the departement table).  The better way to do this query is to have in inside query with the sum of ppl by departmentid (off the employee table), and then left join that to the department table using a case statement for null values in the temporary table.", "aSentId": 36663, "answer": "Or just do `count(employees.id)`.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36662, "question": "&gt; select departmentid, count(*) from departments a left join employees b on a.departmentid = b.departmentid group by a.departmentid\n\nThis will give a false positive.  Empty departments will have a result of 1 (for the row in the departement table).  The better way to do this query is to have in inside query with the sum of ppl by departmentid (off the employee table), and then left join that to the department table using a case statement for null values in the temporary table.", "aSentId": 36665, "answer": "If Employee table is huge, this query will be faster\n\n    SELECT\n    \td.*, IFNULL(emp_agg.cnt, 0)\n    FROM\n    \tDepartments d\n    \tLEFT JOIN (\n    \t\tSELECT\n    \t\t\tDepartmentID,\n    \t\t\tCOUNT(EmployeeID) AS cnt\n    \t\tFROM\n    \t\t\tEmployees\n    \t\tGROUP BY\n    \t\t\tDepartmentID\n    \t) emp_agg\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36666, "question": "If Employee table is huge, this query will be faster\n\n    SELECT\n    \td.*, IFNULL(emp_agg.cnt, 0)\n    FROM\n    \tDepartments d\n    \tLEFT JOIN (\n    \t\tSELECT\n    \t\t\tDepartmentID,\n    \t\t\tCOUNT(EmployeeID) AS cnt\n    \t\tFROM\n    \t\t\tEmployees\n    \t\tGROUP BY\n    \t\t\tDepartmentID\n    \t) emp_agg\n", "aSentId": 36667, "answer": "I have always read cnt as cunt, not count. Don't know why.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36666, "question": "If Employee table is huge, this query will be faster\n\n    SELECT\n    \td.*, IFNULL(emp_agg.cnt, 0)\n    FROM\n    \tDepartments d\n    \tLEFT JOIN (\n    \t\tSELECT\n    \t\t\tDepartmentID,\n    \t\t\tCOUNT(EmployeeID) AS cnt\n    \t\tFROM\n    \t\t\tEmployees\n    \t\tGROUP BY\n    \t\t\tDepartmentID\n    \t) emp_agg\n", "aSentId": 36669, "answer": "I had a feeling it wouldn't make a difference, so just to test it I ran your query as well as this one (which I think is what the previous poster had in mind):\n\n    select\n        Departments.DepartmentId, ISNULL(NumberOfEmployees, 0)\n    from Departments\n    left join\n    (\n    \tselect Employees.DepartmentId, count(1) as NumberOfEmployees\n        from Employees\n        group by Employees.DepartmentId\n    ) as EmployeesByDepartment on Departments.DepartmentId = EmployeesByDepartment.DepartmentId\n\nTurns out my gut feeling was right: on SQL Server 2012 Express, both had the exact same execution plan.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36660, "question": "i gave it a shot. please critique and let me know if there are better ways of doing it. \n\n--List employees (names) who have a bigger salary than their boss\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.salary &gt; b.salary\n\n--List employees who have the biggest salary in their departments\n\nselect name \nfrom employees a\njoin (\nselect departmentid, max(salary) as max_salary\nfrom employees\ngroup by departmentid\n) b \non a.departmentid = b.departmentid and a.salary = b.max_salary\n\n--List departments that have less than 3 people in it\n\nselect departmentid, count(*)\nfrom employees\ngroup by departmentid\nhaving count(*)&lt;3\n\n--List all departments along with the number of people there (tricky - people often do an \"inner join\" leaving out empty departments)\n\nselect departmentid, count(*)\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid\n\n--List employees that don't have a boss in the same department\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.departmentid &lt;&gt; b.departmentid\n\n--List all departments along with the total salary there\n\nselect departmentid, sum(b.salary) as total_salary\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid", "aSentId": 36671, "answer": "&gt; --List departments that have less than 3 people in it\nselect departmentid, count() from employees group by departmentid having count()&lt;3\n\nThis would miss departments with 0 employees.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36672, "question": "&gt; --List departments that have less than 3 people in it\nselect departmentid, count() from employees group by departmentid having count()&lt;3\n\nThis would miss departments with 0 employees.", "aSentId": 36673, "answer": "Would this also be potentially inefficient because count() is being called twice for each row?\n\nIf you used a nested query, you could get around that, I think. In this case, it's not a huge deal since it's \"less than three\" anyway. Imagine if it were \"greater than 10,000,000\" or something.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36674, "question": "Would this also be potentially inefficient because count() is being called twice for each row?\n\nIf you used a nested query, you could get around that, I think. In this case, it's not a huge deal since it's \"less than three\" anyway. Imagine if it were \"greater than 10,000,000\" or something.", "aSentId": 36675, "answer": "Well, in my experience it won't matter much which way you do it; SQL server will generate a very similar execution plan anyways.\n\nSo for clarity, I think I would prefer something like this:\n\n    select DepartmentId from Departments\n    where (select count(1) from Employees where Employees.DepartmentId = Departments.DepartmentId) &lt; 3", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36660, "question": "i gave it a shot. please critique and let me know if there are better ways of doing it. \n\n--List employees (names) who have a bigger salary than their boss\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.salary &gt; b.salary\n\n--List employees who have the biggest salary in their departments\n\nselect name \nfrom employees a\njoin (\nselect departmentid, max(salary) as max_salary\nfrom employees\ngroup by departmentid\n) b \non a.departmentid = b.departmentid and a.salary = b.max_salary\n\n--List departments that have less than 3 people in it\n\nselect departmentid, count(*)\nfrom employees\ngroup by departmentid\nhaving count(*)&lt;3\n\n--List all departments along with the number of people there (tricky - people often do an \"inner join\" leaving out empty departments)\n\nselect departmentid, count(*)\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid\n\n--List employees that don't have a boss in the same department\n\nselect name from employees a\njoin employees b on a.bossid = b.employeeid\nwhere a.departmentid &lt;&gt; b.departmentid\n\n--List all departments along with the total salary there\n\nselect departmentid, sum(b.salary) as total_salary\nfrom departments a\nleft join employees b on a.departmentid = b.departmentid\ngroup by a.departmentid", "aSentId": 36677, "answer": "Since they mentioned it was SQL Server...\n\n&gt;List employees who have the biggest salary in their departments\n\n    SELECT TOP 1 WITH TIES Name\n    FROM employees\n    ORDER BY ROW_NUMBER() OVER(PARTITION BY DepartmentID ORDER BY Salary DESC);\n\nNote that this would cause a problem if two employees both share the top salary in a department. There are ways around that (DENSE_RANK() for one)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36679, "question": "&gt; --List all departments along with the number of people there (tricky - people often do an \"inner join\" leaving out empty departments)\n&gt; select departmentid, count(*) from departments a left join employees b on a.departmentid = b.departmentid group by a.departmentid\n\nSame mistake I did before I ran it to verify, you get 1 employee for empty departments.\n\n    select outer_depts.name, case when filled_depts.num_employees is null then 0 else filled_depts.num_employees end from departments outer_depts\n    left join (select departments.departmentid, count(*) num_employees from departments\n    \t\t\tinner join employees on employees.departmentid = departments.departmentid\n    \t\t\tgroup by departments.departmentid) filled_depts on outer_depts.departmentid = filled_depts.departmentid\n\nAlso, I got pedantic about nulls, if null is fine for 0 then the \"case\" can be dropped.", "aSentId": 36680, "answer": "How about this one? \n\n     select *, (select count(*) from Employees e where e.DepartmentId = d.DepartmentId) cnt\n      from Departments d\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36681, "question": "How about this one? \n\n     select *, (select count(*) from Employees e where e.DepartmentId = d.DepartmentId) cnt\n      from Departments d\n", "aSentId": 36682, "answer": "Yea, that's simpler. ;)\n\n*cough*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36679, "question": "&gt; --List all departments along with the number of people there (tricky - people often do an \"inner join\" leaving out empty departments)\n&gt; select departmentid, count(*) from departments a left join employees b on a.departmentid = b.departmentid group by a.departmentid\n\nSame mistake I did before I ran it to verify, you get 1 employee for empty departments.\n\n    select outer_depts.name, case when filled_depts.num_employees is null then 0 else filled_depts.num_employees end from departments outer_depts\n    left join (select departments.departmentid, count(*) num_employees from departments\n    \t\t\tinner join employees on employees.departmentid = departments.departmentid\n    \t\t\tgroup by departments.departmentid) filled_depts on outer_depts.departmentid = filled_depts.departmentid\n\nAlso, I got pedantic about nulls, if null is fine for 0 then the \"case\" can be dropped.", "aSentId": 36684, "answer": "Actually the first one is really close and only requires a small modification: instead of `count(*)`, use `count(EMPLOYEES.DepartmentId)`. If you give `count` a star or a literal, it counts every row in the group. If you give it a column (or expression), it counts every non null value. \n\nSee the difference in these two queries:\n\nhttp://sqlfiddle.com/#!6/a5a9b/6", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36686, "question": "    Select name from employees where salary &gt; (select b.salary from employees b where b.employeeid = bossid)", "aSentId": 36687, "answer": "What if you have more than one rows in the nested query? It should be either an existence check, or an inequality check against a scalar value.\n\n&gt; `Select name from employees where salary &gt; (select TOP 1 b.salary from employees b where b.employeeid = bossid)`", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36688, "question": "What if you have more than one rows in the nested query? It should be either an existence check, or an inequality check against a scalar value.\n\n&gt; `Select name from employees where salary &gt; (select TOP 1 b.salary from employees b where b.employeeid = bossid)`", "aSentId": 36689, "answer": "I'm assuming employeeid is a primary key.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36693, "question": "We spent some time refining our interview process and came up with a tiered test.\n\nThe questions were all very short and assigned a difficulty.  The goal was to have 3 to 5 questions in each difficulty, all questions pertaining to bread and butter skills we really wanted our candidate to have.  \n\nYou start with the middle-most difficulty.  It should be a question nearly everyone on the team could get right.\n\nIf they miss it, you reduce the difficulty, if they get it right, you increase the difficulty.\n\nIf you get the first 3 right, or you last 6 questions, you are good.\n\nIf you miss 3 straight away, or somehow get to a score of -3, you are eliminated.\n\nAn example would be:\n\nOpening Question (5 out of 10 difficulty) : \"Give a use case for a LEFT JOIN\"\n\nIf they get it right:\nNext Question (6 out of 10 difficulty) : \"What's the difference between DELETE TABLE and TRUNCATE table?\"\n\nIf they got it wrong:\nNext Question (4 out of 10 difficulty) : \"What is an index?\"\n\nSo on, and so on...\n\nA 3 out of 10 would be something you'd expect anyone who has ever used the technology to get, like : \"In a SELECT query, how do you return the data from all columns?\"  \n", "aSentId": 36694, "answer": "&gt; If they get it right: Next Question (6 out of 10 difficulty) : \"What's the difference between DELETE TABLE and TRUNCATE table?\"\n\nTIL I'm overqualified for SQL development.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36695, "question": "&gt; If they get it right: Next Question (6 out of 10 difficulty) : \"What's the difference between DELETE TABLE and TRUNCATE table?\"\n\nTIL I'm overqualified for SQL development.", "aSentId": 36696, "answer": "Because you know an average difficulty question? This question is the equivalent to \"What's the difference between an abstract class and an interface.\"\n\nI'm not saying you're not overqualified but we have no way of knowing it just because you know the difference between Delete and Truncate.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36693, "question": "We spent some time refining our interview process and came up with a tiered test.\n\nThe questions were all very short and assigned a difficulty.  The goal was to have 3 to 5 questions in each difficulty, all questions pertaining to bread and butter skills we really wanted our candidate to have.  \n\nYou start with the middle-most difficulty.  It should be a question nearly everyone on the team could get right.\n\nIf they miss it, you reduce the difficulty, if they get it right, you increase the difficulty.\n\nIf you get the first 3 right, or you last 6 questions, you are good.\n\nIf you miss 3 straight away, or somehow get to a score of -3, you are eliminated.\n\nAn example would be:\n\nOpening Question (5 out of 10 difficulty) : \"Give a use case for a LEFT JOIN\"\n\nIf they get it right:\nNext Question (6 out of 10 difficulty) : \"What's the difference between DELETE TABLE and TRUNCATE table?\"\n\nIf they got it wrong:\nNext Question (4 out of 10 difficulty) : \"What is an index?\"\n\nSo on, and so on...\n\nA 3 out of 10 would be something you'd expect anyone who has ever used the technology to get, like : \"In a SELECT query, how do you return the data from all columns?\"  \n", "aSentId": 36698, "answer": "What would the level 10 questions cover?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36699, "question": "What would the level 10 questions cover?", "aSentId": 36700, "answer": "You don't get there actually.  You can stop at 8.  But in any case, it's a guideline, adapt it to your purposes.  Focus on what's important to you and the team and create simple questions that can help you identify if someone has the skills you are looking for.  If you want to change the format to something different like \"always ask 10 questions, see where they end up and use it as a score for candidates\", then do it.  \n\nTo answer your question directly, if I was trying to create level 10 difficulty questions it would have to do with the underlying architecture of SQL, preferably the specific flavor we are using on the current project.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36699, "question": "What would the level 10 questions cover?", "aSentId": 36702, "answer": "How the db software interacts with NUMA architectures comes to mind as a level 10 question", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36699, "question": "What would the level 10 questions cover?", "aSentId": 36704, "answer": "Explain all configuration settings in detail.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36706, "question": "I would add: \"List all employees (names) along with the number of people `above` them\"\n\nSo CEOs would have '0' and everybody else would have a number higher than 0.\n\nThe trick here is to notice if a candidate thinks about recursion (bonus points for mentioning CTE's).", "aSentId": 36707, "answer": "I would never be able to do that in an interview. Recursive CTEs hurt my head. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36708, "question": "I would never be able to do that in an interview. Recursive CTEs hurt my head. ", "aSentId": 36709, "answer": "The point is to hear the candidate reason about the requirement and think it through rather than give a solution immediately. At least that's how I conduct interviews...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36710, "question": "The point is to hear the candidate reason about the requirement and think it through rather than give a solution immediately. At least that's how I conduct interviews...", "aSentId": 36711, "answer": "That sounds reasonable to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36710, "question": "The point is to hear the candidate reason about the requirement and think it through rather than give a solution immediately. At least that's how I conduct interviews...", "aSentId": 36713, "answer": "Yeah, that sounds as a way to go. I usually mess up the syntax for CTEs (I have to look it up every time), but discussion about possible solution is fair.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36706, "question": "I would add: \"List all employees (names) along with the number of people `above` them\"\n\nSo CEOs would have '0' and everybody else would have a number higher than 0.\n\nThe trick here is to notice if a candidate thinks about recursion (bonus points for mentioning CTE's).", "aSentId": 36715, "answer": "This. They said it was basic, but if you are hiring someone to live in your database, they had better know recursion and windowing functions in whatever RDBMS. Also, temporal logic for the DB's that support it. The difference between plain-jane SQL with a from and to date and a DB, like Teradata, that has Temporal logic built in is night and day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36716, "question": "This. They said it was basic, but if you are hiring someone to live in your database, they had better know recursion and windowing functions in whatever RDBMS. Also, temporal logic for the DB's that support it. The difference between plain-jane SQL with a from and to date and a DB, like Teradata, that has Temporal logic built in is night and day.", "aSentId": 36717, "answer": "The thing about simple tests is that they weed out an unbelievable number of applicants who list SQL as a skill on their CV.  (The same goes for any other programming language or system or whatever.) Lots of people claim proficiency with stuff for which they actually have absolutely no proficiency.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36706, "question": "I would add: \"List all employees (names) along with the number of people `above` them\"\n\nSo CEOs would have '0' and everybody else would have a number higher than 0.\n\nThe trick here is to notice if a candidate thinks about recursion (bonus points for mentioning CTE's).", "aSentId": 36719, "answer": "What would the answer to this be?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36722, "question": "For someone who doesn't often use graphical interfaces in SQL, what is the line on the left of the graphic. Is that a foreign key relationship between BossID and EmployeeID? If so, if there was a top boss(CEO), would their BossID be their own EmployeeID, since you couldn't leave it blank?", "aSentId": 36723, "answer": "Usually that column will be nullable for people with no boss. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36724, "question": "Usually that column will be nullable for people with no boss. ", "aSentId": 36725, "answer": "But doesn't the foregin key mean it has to exist in the EmployeeID primary key, which can't be null?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36726, "question": "But doesn't the foregin key mean it has to exist in the EmployeeID primary key, which can't be null?", "aSentId": 36727, "answer": "Not necessarily. A foreign key column in sql server and postgres can be nullable. Not certain about Oracle.\n\nThis is the point in the interview when I ask you what the options are with the column and what the benefits and draw backs are to each. :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36726, "question": "But doesn't the foregin key mean it has to exist in the EmployeeID primary key, which can't be null?", "aSentId": 36729, "answer": "&gt;Even though most of our work is based around Microsoft SQL Server and the test machine we provide is connected to an MS SQL database, the test would fit any database engine - Oracle, PostgreSQL, MySQL - anything, since it's very basic.\n\nGenerally, I think having the Foreign Key column be nullable to indicate the stopping point in a relationship hierarchy is the most common pattern for a self-referential table. \n\nFor the purpose of the exercise, the difference is trivial, as writing \"where t1.bossID is null\" is as easy as writing \"where t1.bossID = t1.EmployeeID\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36722, "question": "For someone who doesn't often use graphical interfaces in SQL, what is the line on the left of the graphic. Is that a foreign key relationship between BossID and EmployeeID? If so, if there was a top boss(CEO), would their BossID be their own EmployeeID, since you couldn't leave it blank?", "aSentId": 36731, "answer": "The line I believe is a self-referencing relationship for the Employees table. And looking at it, there is a 'many' relationship on the Boss ID which would be incorrect and perhaps an intended gotcha for the question? That's what I am getting out of the diagram at least.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36734, "question": "So if I was able to answer these questions relatively easily, could I be considered a junior SQL programmer?", "aSentId": 36735, "answer": "I would say so.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36737, "question": "Why is BossID connected to employeeID?\n\nI don't know what that means.", "aSentId": 36738, "answer": "It's called a self join. It means that data in a table is related to other rows in the same table. For example suppose you wanted a list of employees and their boss, you could do something like the following:\n\n    SELECT E.Name as Employee, B.Name as Boss\n    FROM Employee E, Employee B\n    WHERE E.BossID = B.EmployeeID\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36737, "question": "Why is BossID connected to employeeID?\n\nI don't know what that means.", "aSentId": 36740, "answer": "im guessing a boss is also an employee?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36741, "question": "im guessing a boss is also an employee?", "aSentId": 36742, "answer": "We all know the bosses aren't employees so much as a corporeal extension of the business masquerading as a human.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36741, "question": "im guessing a boss is also an employee?", "aSentId": 36744, "answer": "I thought bossID was for an employee who has someone as a boss.\n\nBut the link would imply that you can be your own boss..?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36745, "question": "I thought bossID was for an employee who has someone as a boss.\n\nBut the link would imply that you can be your own boss..?", "aSentId": 36746, "answer": "no the link implies that bossId is a key that exists in the employeeid column", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36749, "question": "I've been a SQL (Server) Developer for 3+ years and I found this very easy, but I guess it's a good test to rule out people who are completely fraudulent.", "aSentId": 36750, "answer": "It's a bit like the FizzBuzz test. Anyone that's programmed in any language (even Scratch) should be able to pass it. You could quickly rule someone out if they can't come up with a reasonable answer for any of these.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36749, "question": "I've been a SQL (Server) Developer for 3+ years and I found this very easy, but I guess it's a good test to rule out people who are completely fraudulent.", "aSentId": 36752, "answer": "I don't find these sort of tests patronizing, and would probably want to see them more. It's better than the last test I took: \"Create a basic calendar that can store text for any given date into the database, and the ability to retrieve it. The code must be object-oriented and presented in a clean, maintainable format. You are given two hours\". \n\nRemember the rule of picking two.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36757, "question": "You should clarify if salary greater than boss extends beyond the immediate supervisor.  Extending it to the whole org chart above an employee makes for a better question.  However best syntax on Oracle and other databases vary.  Iirc connect by prior is preferred on oracle, while other engines tend to use the with keyword.  ", "aSentId": 36758, "answer": "The issue is that none of these are standardized, and it's not worth getting into vendor-specific details in an interview.  Without those vendor extensions recursion is a significant challenge in SQL.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36759, "question": "The issue is that none of these are standardized, and it's not worth getting into vendor-specific details in an interview.  Without those vendor extensions recursion is a significant challenge in SQL.", "aSentId": 36760, "answer": "Common table extension(cte) are included in the SQL99 standard.  Syntax is supported in Oracle 11gR2, MSSQL, Postgress and SQL lite.  The most notable exception is MySQL which as any DBA worth hiring will tell you is not really a database, but is actually just cleverly designed malware.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36761, "question": "Common table extension(cte) are included in the SQL99 standard.  Syntax is supported in Oracle 11gR2, MSSQL, Postgress and SQL lite.  The most notable exception is MySQL which as any DBA worth hiring will tell you is not really a database, but is actually just cleverly designed malware.", "aSentId": 36762, "answer": "You're right, I cobbled together various fragments of information into an incorrect statement.  I looked back at my source for this information (SQL Antipatterns, 2010), which basically says it's supported everywhere but Oracle 10, MySQL, and SQLite.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36763, "question": "You're right, I cobbled together various fragments of information into an incorrect statement.  I looked back at my source for this information (SQL Antipatterns, 2010), which basically says it's supported everywhere but Oracle 10, MySQL, and SQLite.", "aSentId": 36764, "answer": "SQLLite 3.8.3 supports CTE. Unfortunately embedded sqllite instances in various browsers and mobile operating systems are unlikely to be at this version.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36759, "question": "The issue is that none of these are standardized, and it's not worth getting into vendor-specific details in an interview.  Without those vendor extensions recursion is a significant challenge in SQL.", "aSentId": 36766, "answer": "*Without those vendor extensions recursion is a significant challenge in MySQL.*  FTFY", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36768, "question": "The Answers:\n    \n    #List employees (names) who have a bigger salary than their boss\n    select \n     e.EmployeeId,\n     e.name\n    from Employees e\n    left join Employees b on\n     b.EmployeeId = e.BossId\n     and b.Salary &lt; e.Salary;\n     \n    #List employees who have the biggest salary in their departments\n    select\n     d.Name as DepartmentName,\n     e.EmployeeId,\n     e.name,\n     e.Salary\n    from Employees e\n    left joiin Employees r on\n     e.DepartmentId = r.DepartmentId\n     and e.salary &lt; r.salary\n    inner join Departments d on\n     d.DepartmentId = e.DepartmentId\n    where\n     r.EmployeeId is null;\n\n    #List departments that have less than 3 people in it\n    select\n     d.Name as DepartmentName,\n     count(e.EmployeeId) as employees\n    from Departments d\n    left join Employees e on\n     e.DepartmentId = d.DepartmentId\n    group by d.DepartmentId\n    having employees &lt; 3;\n\n    #List all departments along with the number of people there\n    select\n     d.Name as DepartmentName,\n     count(e.EmployeeId) as employees\n    from Departments d\n    left join Employees e on\n     e.DepartmentId = d.DepartmentId\n    group by d.DepartmentId;\n\n    #List employees that don't have a boss in the same department\n    select\n     ed.Name as EmployeeDepartmentName,\n     rd.Name as BossDepartmentName,\n     e.EmployeeId,\n     e.name,\n     e.Salary\n    from Employees e\n    left joiin Employees r on\n     e.DepartmentId != r.DepartmentId\n     and r.EmployeeId = e.BossId\n    left join Departments ed on\n     ed.DepartmentId = e.DepartmentId\n    left join Departments rd on\n     rd.DepartmentId = r.DepartmentId\n    where\n     r.EmployeeId is null;\n\n    #List all departments along with the total salary there\n    select\n     d.Name as DepartmentName,\n     sum(e.Salary) as employees\n    from Departments d\n    left join Employees e on\n     e.DepartmentId = d.DepartmentId\n    group by d.DepartmentId;\n\nI know some of these answers seem strange, but there are several data race conditions that have to be accounted for.", "aSentId": 36769, "answer": "Why do you group in the first answer ? I don't see an aggregate. Oracle DB would complain.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36770, "question": "Why do you group in the first answer ? I don't see an aggregate. Oracle DB would complain.", "aSentId": 36771, "answer": "Actually you are right, I think it works even in the case of the CEO, I'll take the group out.  BTW In other databases, you can group without aggregates.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36775, "question": "Whoa whoa whoa.  What is SQL doing in /r/programming?", "aSentId": 36776, "answer": "sql is a dsl\n\ndeclarative programming", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36777, "question": "sql is a dsl\n\ndeclarative programming", "aSentId": 36778, "answer": "We got some ornery DBAs up in here.  Alright, bring on the html posts.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36779, "question": "We got some ornery DBAs up in here.  Alright, bring on the html posts.", "aSentId": 36780, "answer": "SQL is Turing complete,  HTML is not. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36781, "question": "SQL is Turing complete,  HTML is not. ", "aSentId": 36782, "answer": "Magic The Gathering is Turing complete.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36783, "question": "Magic The Gathering is Turing complete.", "aSentId": 36784, "answer": "And I would be very interested in seeing a program implemented in MtG. Now can you stop being a dick?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36785, "question": "And I would be very interested in seeing a program implemented in MtG. Now can you stop being a dick?", "aSentId": 36786, "answer": "What programs are implemented in SQL?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36787, "question": "What programs are implemented in SQL?", "aSentId": 36788, "answer": "Who cares? It's literally \"Structured Query Language.\" It's programming. Stop riding your throbbing erection over this.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36789, "question": "Who cares? It's literally \"Structured Query Language.\" It's programming. Stop riding your throbbing erection over this.", "aSentId": 36790, "answer": "&gt; Who cares?\n\nApparently, you:\n\n&gt; I would be very interested in seeing a program implemented", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36779, "question": "We got some ornery DBAs up in here.  Alright, bring on the html posts.", "aSentId": 36792, "answer": "Shh... you know the DBAs can't take a joke!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36793, "question": "Shh... you know the DBAs can't take a joke!", "aSentId": 36794, "answer": "No shit, I expected a little academic banter but now they're eating into my strategic karma reserves like predicate calculus ate up all my fun in college.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36775, "question": "Whoa whoa whoa.  What is SQL doing in /r/programming?", "aSentId": 36796, "answer": "Had a professor once who said \"any application that doesn't use a database is a toy.\" Obviously over generalized, but it's a good point. \n\nAlmost every industry grade application you work on involves a database at somepoint. Maybe it's not a programming language and maybe you don't work with it daily, but it's an integral tool to software development. I think every interview I've had has questioned me on sql. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36797, "question": "Had a professor once who said \"any application that doesn't use a database is a toy.\" Obviously over generalized, but it's a good point. \n\nAlmost every industry grade application you work on involves a database at somepoint. Maybe it's not a programming language and maybe you don't work with it daily, but it's an integral tool to software development. I think every interview I've had has questioned me on sql. ", "aSentId": 36798, "answer": "Great point. I would venture to guess that every single corporate app developer needs to be very familiar with DBs. Big data is a cornerstone of business. I know my company expects every developer to be proficient in incorporating DBs into our Web tools.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36797, "question": "Had a professor once who said \"any application that doesn't use a database is a toy.\" Obviously over generalized, but it's a good point. \n\nAlmost every industry grade application you work on involves a database at somepoint. Maybe it's not a programming language and maybe you don't work with it daily, but it's an integral tool to software development. I think every interview I've had has questioned me on sql. ", "aSentId": 36800, "answer": "Absolutely.  Everything is db connected, I work with them on a daily basis.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36775, "question": "Whoa whoa whoa.  What is SQL doing in /r/programming?", "aSentId": 36802, "answer": "Question: what's the difference between 2 dicks and a joke?\n\nAnswer: /r/programming can't take a joke.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36804, "question": "Generating Insults", "aSentId": 36805, "answer": "I would like an api", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36806, "question": "I would like an api", "aSentId": 36807, "answer": "Just *cat* your system's */dev/swear*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36808, "question": "Just *cat* your system's */dev/swear*", "aSentId": 36809, "answer": "...I definitely didn't just type *ls /dev* to see if that was a real thing...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36810, "question": "...I definitely didn't just type *ls /dev* to see if that was a real thing...", "aSentId": 36811, "answer": "It's part of the Tourette kernel module", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36812, "question": "It's part of the Tourette kernel module", "aSentId": 36813, "answer": "Written by Linus Tor-ettes?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36814, "question": "Written by Linus Tor-ettes?", "aSentId": 36815, "answer": "\"My name is Linus Torvalds, and I pronounce Linux as *shit* *piss* *cunt*...\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36808, "question": "Just *cat* your system's */dev/swear*", "aSentId": 36817, "answer": "I want to write this as a kernel module now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36818, "question": "I want to write this as a kernel module now.", "aSentId": 36819, "answer": "be sure to add Linus' own swears and it might even be included in 3.19.1", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36818, "question": "I want to write this as a kernel module now.", "aSentId": 36821, "answer": "I want a hardware implementation for optimal efficiency.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36822, "question": "I want a hardware implementation for optimal efficiency.", "aSentId": 36823, "answer": "Only if you pay for the board spins.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36806, "question": "I would like an api", "aSentId": 36825, "answer": "Tadaaa, a minimal phrase generator: https://github.com/sauer2/various-scripts/tree/master/Phrasengenerator/PhrasenLib\n\nIt simply does the opposite of a parser.\n\nThe downside: It's so minimal that weighted OneOf and a custom concatination character in Chain seem to miss...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36804, "question": "Generating Insults", "aSentId": 36827, "answer": "In my first college programming course the professor offered to let anyone skip the second half of the course if you came up with a good independent study project.\n\nI used a similar method to this to build a poetry generator. Except that it used a wider selection of vocabulary and many more sentence pattern grammars. It was based on Chomsky's theories of language structure. The vocabulary was also clustered in 'theme' groups so you could pick, say, 'sad' or 'up' words.\n\nYou would let it rip and tell it to generate N number of lines. Most of it was gibberish but every once in a while you would get some decent passages.\n\nNowadays, of course, you would use natural language and deep semantics to try to do it right. But hey, it got me out of the second half of the course.\n\nAfter the code had been handed in I added an 'insult' word cluster and printed out a bunch of generated output. That weekend we had a big party and much fun was had by folks drunkenly reciting computer-generated shit talk. \n\nGood times.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36828, "question": "In my first college programming course the professor offered to let anyone skip the second half of the course if you came up with a good independent study project.\n\nI used a similar method to this to build a poetry generator. Except that it used a wider selection of vocabulary and many more sentence pattern grammars. It was based on Chomsky's theories of language structure. The vocabulary was also clustered in 'theme' groups so you could pick, say, 'sad' or 'up' words.\n\nYou would let it rip and tell it to generate N number of lines. Most of it was gibberish but every once in a while you would get some decent passages.\n\nNowadays, of course, you would use natural language and deep semantics to try to do it right. But hey, it got me out of the second half of the course.\n\nAfter the code had been handed in I added an 'insult' word cluster and printed out a bunch of generated output. That weekend we had a big party and much fun was had by folks drunkenly reciting computer-generated shit talk. \n\nGood times.", "aSentId": 36829, "answer": "/r/vogonpoetrycircle needs you ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36828, "question": "In my first college programming course the professor offered to let anyone skip the second half of the course if you came up with a good independent study project.\n\nI used a similar method to this to build a poetry generator. Except that it used a wider selection of vocabulary and many more sentence pattern grammars. It was based on Chomsky's theories of language structure. The vocabulary was also clustered in 'theme' groups so you could pick, say, 'sad' or 'up' words.\n\nYou would let it rip and tell it to generate N number of lines. Most of it was gibberish but every once in a while you would get some decent passages.\n\nNowadays, of course, you would use natural language and deep semantics to try to do it right. But hey, it got me out of the second half of the course.\n\nAfter the code had been handed in I added an 'insult' word cluster and printed out a bunch of generated output. That weekend we had a big party and much fun was had by folks drunkenly reciting computer-generated shit talk. \n\nGood times.", "aSentId": 36831, "answer": "sweet lord, that was your first programming course? I'm a total underachiever. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36804, "question": "Generating Insults", "aSentId": 36833, "answer": "My, that is a thorough analysis.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36843, "question": "I would love to see an spanish implementation!", "aSentId": 36844, "answer": "Nobody would expect that!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36845, "question": "Nobody would expect that!", "aSentId": 36846, "answer": "Nobody expects the Spanish Implementation!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36843, "question": "I would love to see an spanish implementation!", "aSentId": 36848, "answer": "If you want to be the Spanish translator I'll happily do the code, That goes for all languages..", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36849, "question": "If you want to be the Spanish translator I'll happily do the code, That goes for all languages..", "aSentId": 36850, "answer": "Even COBAL?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36843, "question": "I would love to see an spanish implementation!", "aSentId": 36852, "answer": "Join a dota game, they got you covered.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36858, "question": "\"Listen to your engineers,\" this guy says.", "aSentId": 36859, "answer": "Article author here. I've been programming for a long time, and I still haven't found an escape from the typical corporate crap. I actually hung up the \"to avoid injury, don't tell me how to do my job\" sign at my last job. Yes, I know the article sounds a little ranty, but that's the point. No amount of common sense seems to be able to influence the poor decision-making of the business world when it comes to engineering work; maybe it's a na\u00efve notion, but perhaps increasing awareness will be a step in the right direction.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36860, "question": "Article author here. I've been programming for a long time, and I still haven't found an escape from the typical corporate crap. I actually hung up the \"to avoid injury, don't tell me how to do my job\" sign at my last job. Yes, I know the article sounds a little ranty, but that's the point. No amount of common sense seems to be able to influence the poor decision-making of the business world when it comes to engineering work; maybe it's a na\u00efve notion, but perhaps increasing awareness will be a step in the right direction.", "aSentId": 36861, "answer": "It would be nice to think \"reality wins out, eventually\", but human history up to this point begs to differ.   Still, we could change at any moment, if we want to.\n\nIm in the same boat as you, and agree with your sentiment.  Management (and Ive been in it numerous times) is mostly divorced from reality, and does not care to even check up on it from time to time.\n\nI think this goes back to a great point Grace Hopper made which is that we have confused leadership and management, as she said, \"You lead people, you manage things.\"  \n\nThis failure to understand that trying to manage people is a failed and continuously failing endeavor is one of the core pillars of the crappy business world, and economy, we have today.\n\nWhen you have a warehouse full of product, you can keep track of that product by having counts of which make/models are in stock.  You can put serial numbers on them, to track individual units.  You can track your agreements to receive new product, and to ship new product.  You can have your employees go and re-check that the stock exists, and that it matches the records, and update it if the records are mismatching or the stock does not exist.\n\nThis is the management of things.\n\nTo try to manage people like that, and their work over time, especially for knowledge based work, simply fails to accomplish the requirements.  So changes are made, and we have the system we have today, which has faux-leadership like qualities (bullshit speeches, and policies about things, and meetings, etc), but these are not leadership and they are pretty much just a leadership-dress-up on managing stock in a warehouse.\n\nLeadership is when you act in a way that encourages people to do the things they want to do.  It involves finding out who wants to do things, what they can do, and letting them do it.  Communication happens more naturally as they report on what is done, and everyone will have different communication cycles, depending on the type of work and their style of working.\n\nIts a plus when a leader is also an experienced do-er of the type of tasks being done, but this can also be successfully split out into a Directional Lead and a Experience/Technical Lead, so that one leads direction of this group with the larger set of groups (at the top of this being the market at large as the set), and the Experience/Technical Lead providing the mentoring and leading in the subject matter.\n\nIn both cases, the methods work as a kind of \"senior peer\" scenario, where the people following the leader respect the leader because the leader actually takes them for the people that they are, works with them as such, and intrinsically respects their worth because they are part of the team and here to help out.\n\nThe team members get respect, are valued, and are working with people who do not see them as replaceable cogs, but as people they work with and better relationships develop.\n\nTo me, this is the failing and the method of overcoming it, but it takes recognizing what the current situation really is, and then making the conscious choices to change that viewpoint, and the corresponding behaviors around it.  \n\nNone of the things done from a Management method will be the same when done from a Leadership perspective, even if they have the same intended effects (say, finish some project), because all of them will be viewed and worked through the lens of Leadership instead of Management, and people working together is nothing like boxes sitting in a warehouse.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36862, "question": "It would be nice to think \"reality wins out, eventually\", but human history up to this point begs to differ.   Still, we could change at any moment, if we want to.\n\nIm in the same boat as you, and agree with your sentiment.  Management (and Ive been in it numerous times) is mostly divorced from reality, and does not care to even check up on it from time to time.\n\nI think this goes back to a great point Grace Hopper made which is that we have confused leadership and management, as she said, \"You lead people, you manage things.\"  \n\nThis failure to understand that trying to manage people is a failed and continuously failing endeavor is one of the core pillars of the crappy business world, and economy, we have today.\n\nWhen you have a warehouse full of product, you can keep track of that product by having counts of which make/models are in stock.  You can put serial numbers on them, to track individual units.  You can track your agreements to receive new product, and to ship new product.  You can have your employees go and re-check that the stock exists, and that it matches the records, and update it if the records are mismatching or the stock does not exist.\n\nThis is the management of things.\n\nTo try to manage people like that, and their work over time, especially for knowledge based work, simply fails to accomplish the requirements.  So changes are made, and we have the system we have today, which has faux-leadership like qualities (bullshit speeches, and policies about things, and meetings, etc), but these are not leadership and they are pretty much just a leadership-dress-up on managing stock in a warehouse.\n\nLeadership is when you act in a way that encourages people to do the things they want to do.  It involves finding out who wants to do things, what they can do, and letting them do it.  Communication happens more naturally as they report on what is done, and everyone will have different communication cycles, depending on the type of work and their style of working.\n\nIts a plus when a leader is also an experienced do-er of the type of tasks being done, but this can also be successfully split out into a Directional Lead and a Experience/Technical Lead, so that one leads direction of this group with the larger set of groups (at the top of this being the market at large as the set), and the Experience/Technical Lead providing the mentoring and leading in the subject matter.\n\nIn both cases, the methods work as a kind of \"senior peer\" scenario, where the people following the leader respect the leader because the leader actually takes them for the people that they are, works with them as such, and intrinsically respects their worth because they are part of the team and here to help out.\n\nThe team members get respect, are valued, and are working with people who do not see them as replaceable cogs, but as people they work with and better relationships develop.\n\nTo me, this is the failing and the method of overcoming it, but it takes recognizing what the current situation really is, and then making the conscious choices to change that viewpoint, and the corresponding behaviors around it.  \n\nNone of the things done from a Management method will be the same when done from a Leadership perspective, even if they have the same intended effects (say, finish some project), because all of them will be viewed and worked through the lens of Leadership instead of Management, and people working together is nothing like boxes sitting in a warehouse.", "aSentId": 36863, "answer": "This, very much so, and you said it extremely well.\n\nThe question is, \"what can we do to approach this point universally?\" The current atmosphere in corporate America promotes people management; how do we get away from that line of thinking?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36864, "question": "This, very much so, and you said it extremely well.\n\nThe question is, \"what can we do to approach this point universally?\" The current atmosphere in corporate America promotes people management; how do we get away from that line of thinking?", "aSentId": 36865, "answer": "It takes every person to change themselves individually.\n\nThe thing about mass change is it happens in either one of two ways:\n\n- \"Everyone\" is forced or manipulated to change\n- \"Everyone\" decides to change\n\nForcing or manipulating people into changing is a weak method, because they did not choose it for themselves with their own personal reasons, they will be subject to the next thing that comes along and forces or manipulates them into changing again, in a way that is not in their control and may not have any similarity to the previous change.\n\nDeciding to change, based on your own understanding and personal views on the situation is a lasting change.  It will indeed continue to change over time, but the direction of that change lasts in the sense that they are making this because of their values and experiences.\n\nOver time their values and experience will change, and so that change itself will change, but it should change for the better, as they continue to apply their updated values and experience, which only get richer over time if they are correctly perceived (not overcome by force/manipulation or internal blockages).\n\nSo getting a majority, or even a healthy minority, is all about getting yourself over it.  Once you have decided to make your changes, then others that come into contact with you will get a new point of reference: \"Oh, you can be like that...\"\n\nOver time more people will see that there are other options out there, that are not based on what people are telling them or encouraging them to do.  \n\nBasically, everyone has to take more personal responsibility, and to communicate that theyve done so (in various ways, as the naive way would be ridiculous) to people they come into contact with, who see it is a good way to go, and work on being able to do it themselves.\n\nWhat you've done by writing this is one way for someone to express the situation they've come in, in a way that lets others know.  This is one frequency in a spectrum of communication (the unrequested third-party prescription method), but all areas of activity have a similar potential for communication.\n\nFor example, in a business you can simply argue that you want things changed to a given way.  \n\nFor instance, if you have a pattern of communication you want to supersede, such as a weekly status meetings in which most people just sit there, and the moderator talks and a few other people talk, but it is a waste of the time of everyone else.\n\nYou could argue that you want to reduce this to an email that goes out with an agenda for collection/status, and everyone emails back their answers, the moderator re-summaries, and any follow up questions are asked.  Only if there are issues that remain to be resolved should an in-person meeting get scheduled, and then the active and interested parties can attend, and the results will be sent out.\n\nArguing this point, and getting others to agree with you to the point of action, where you know do it this way, is one way to change the environment.  Then when you work with this method successfully, you can point it out to others, who now have a reference to use for making the changes themselves.\n\nAll areas of communication and interaction can be changed like this, but it's going to be resisted, and it will take a long time.\n\nThe fast way to do it is to find people who think like you, and start your own businesses.  Work together outside of work on something that can generate you enough revenue to leave, and then go.\n\nRun your company as leader, and succeed.  Then others will follow, new companies will start up with the same ethics, and the positive feedback cycle will begin.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36860, "question": "Article author here. I've been programming for a long time, and I still haven't found an escape from the typical corporate crap. I actually hung up the \"to avoid injury, don't tell me how to do my job\" sign at my last job. Yes, I know the article sounds a little ranty, but that's the point. No amount of common sense seems to be able to influence the poor decision-making of the business world when it comes to engineering work; maybe it's a na\u00efve notion, but perhaps increasing awareness will be a step in the right direction.", "aSentId": 36867, "answer": "Hi,  \nI've read your article and I think you have some spot on points in it, especially about the vision of The Management regarding software engineering. \"yes it wasn't in the tasks of this sprint, but it's just one more screen\", \"it shouldn't take time to add only one more button that you can click to do x\", \"we just want some more data in that export format, look, we can do it in five mins by editing the file, can't be long to have the software include it\"... It's continuous frustration.  \nHowever, one thing on which I have to disagree with you is the generic portrait of the \"Contractor\" in the article.  \nI'm working in a company whose job is to make software projects for other companies, so, basically, I'm one of those contractors.  But thing is, those contracts usually involve penalties for being late, guarantee periods on each deliverable, and two-years maintenance. You just can't afford being late and do crap in those conditions. But unfortunately, estimates aren't always better.   \nAt the time being, our projects running the most late have mostly followed three kinds of typology:  \n-&gt; our client hiring a second 'creative' company to design apps' look and feel, letting them free, causing us being provided with unusable mock ups of crazy UI which implementation took too much time, with client's The Management going 'that shouldn't be that long, all the UI is done already'...  \n-&gt; our client having internal politics battles, with people having different visions for the project. We even had a project where some part of client's The Management would benefit if the project failed...  \n-&gt; our client, while being mostly business-oriented, having a few 'in-house engineers'. Best example so far is my last project: we had to extend client's current software with a big amount of functionality, while client's in-house team continued to continuously patch said software for short-term business needs. Problem: those guys weren't good developers. No source control, no tests, no CI, no build, no bug tracker, functions hundreds of lines long, often copy-pasted in several scripts, big security holes,  and chunks of code which could have made it to The Daily WTF... We had to teach them how to do their job before being able to do ours, we had to clean up a lot of mess, and that wasn't planned in any estimate.  \nYes, there are people without ethic among contractors, as in any industry, but contractors aren't the root of all evil. We're engineers too, and we want to be proud of what we do.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36868, "question": "Hi,  \nI've read your article and I think you have some spot on points in it, especially about the vision of The Management regarding software engineering. \"yes it wasn't in the tasks of this sprint, but it's just one more screen\", \"it shouldn't take time to add only one more button that you can click to do x\", \"we just want some more data in that export format, look, we can do it in five mins by editing the file, can't be long to have the software include it\"... It's continuous frustration.  \nHowever, one thing on which I have to disagree with you is the generic portrait of the \"Contractor\" in the article.  \nI'm working in a company whose job is to make software projects for other companies, so, basically, I'm one of those contractors.  But thing is, those contracts usually involve penalties for being late, guarantee periods on each deliverable, and two-years maintenance. You just can't afford being late and do crap in those conditions. But unfortunately, estimates aren't always better.   \nAt the time being, our projects running the most late have mostly followed three kinds of typology:  \n-&gt; our client hiring a second 'creative' company to design apps' look and feel, letting them free, causing us being provided with unusable mock ups of crazy UI which implementation took too much time, with client's The Management going 'that shouldn't be that long, all the UI is done already'...  \n-&gt; our client having internal politics battles, with people having different visions for the project. We even had a project where some part of client's The Management would benefit if the project failed...  \n-&gt; our client, while being mostly business-oriented, having a few 'in-house engineers'. Best example so far is my last project: we had to extend client's current software with a big amount of functionality, while client's in-house team continued to continuously patch said software for short-term business needs. Problem: those guys weren't good developers. No source control, no tests, no CI, no build, no bug tracker, functions hundreds of lines long, often copy-pasted in several scripts, big security holes,  and chunks of code which could have made it to The Daily WTF... We had to teach them how to do their job before being able to do ours, we had to clean up a lot of mess, and that wasn't planned in any estimate.  \nYes, there are people without ethic among contractors, as in any industry, but contractors aren't the root of all evil. We're engineers too, and we want to be proud of what we do.  ", "aSentId": 36869, "answer": "I'm glad that you've managed to have a better experience than I have. Like I mentioned in the article, I used to be on your side of the desk\u2014in fact, I've got more years contracting under my belt than I do working as an in-house developer.\n\nDon't get me wrong, I know that there are appropriate uses for contractors (companies that aren't the right size to have their own engineering team, companies that need extremely specialized work done, etc..) but, as a rule, I believe that farming a project out to contractors should never be considered the \"default option.\"\n\nThe problem is, in most of my experiences...\n\n&gt;those contracts usually involve penalties for being late, guarantee periods on each deliverable, and two-years maintenance. You just can't afford being late and do crap in those conditions\n\n...except the contractors manage to do so anyway. I've been on the giving end of crap work (because of constraints the client posed and my employer agreed to) and the receiving end of crap work (for similar reasons, just in reverse). I'll admit that this isn't anything more than anecdotal evidence, but I polled my contacts with regards to contractor experiences, and the ratio of bad to good sat somewhere around 10:1.\n\nI know there are good engineers working as contractors that end up in bad situations, and I have no doubt that you're one of them\u2014I was too. I just fear that people in that situation will start to become jaded or burn out, with or without trying to fight to better their situation. The corporate world puts engineers in bad positions all the time, and I don't want to see the trade (any further) become the poster child of cubicle driving, ties, and drinking problems.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36860, "question": "Article author here. I've been programming for a long time, and I still haven't found an escape from the typical corporate crap. I actually hung up the \"to avoid injury, don't tell me how to do my job\" sign at my last job. Yes, I know the article sounds a little ranty, but that's the point. No amount of common sense seems to be able to influence the poor decision-making of the business world when it comes to engineering work; maybe it's a na\u00efve notion, but perhaps increasing awareness will be a step in the right direction.", "aSentId": 36871, "answer": "There must be some tech companies that work like SpaceX, where the CEO does a lot of engineering himself and no complex chain of command between him and yourself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36872, "question": "There must be some tech companies that work like SpaceX, where the CEO does a lot of engineering himself and no complex chain of command between him and yourself.", "aSentId": 36873, "answer": "Valve?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36858, "question": "\"Listen to your engineers,\" this guy says.", "aSentId": 36875, "answer": "C'mon, I can't be the only one who has a good manager...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36876, "question": "C'mon, I can't be the only one who has a good manager...", "aSentId": 36877, "answer": "Can I ask where you work?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36878, "question": "Can I ask where you work?", "aSentId": 36879, "answer": "Sure. I work at Apple.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36880, "question": "Sure. I work at Apple.", "aSentId": 36881, "answer": "TAKE ME AWAY FROM HERE. I'LL DO WHATEVER.\n\nOn a more serious note, Apple is one of the few companies that seems to (facially, at least) provide the sort of environment that I think should be more commonplace amongst companies that leverage so many engineers. I'd drop everything and go work for Apple, but I feel like they probably don't need someone who's most versed in the .NET platform.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36882, "question": "TAKE ME AWAY FROM HERE. I'LL DO WHATEVER.\n\nOn a more serious note, Apple is one of the few companies that seems to (facially, at least) provide the sort of environment that I think should be more commonplace amongst companies that leverage so many engineers. I'd drop everything and go work for Apple, but I feel like they probably don't need someone who's most versed in the .NET platform.", "aSentId": 36883, "answer": "Hahaha, never hurts to try! I'd never owned a mac prior to being hired. Also, there are quite a few decent companies in the valley. I've heard good things from friends working at Google, Facebook, and Palantir. There are definitely options for you!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36858, "question": "\"Listen to your engineers,\" this guy says.", "aSentId": 36885, "answer": "What's an engineer? Can I just start calling myself an engineer? I think the guys that throw trash bags into the back of a truck are some kind of engineers now. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36886, "question": "What's an engineer? Can I just start calling myself an engineer? I think the guys that throw trash bags into the back of a truck are some kind of engineers now. ", "aSentId": 36887, "answer": "Well, over here (EDIT: Uruguay) \"Engineering\" is a career with a degree. If you have the degree you are an engineer.\n\nOver here we distinguish between Software Engineer and Computing Engineer. The first one needs to know about the processes on how to create software, what qualities it needs to have (reliability, correctness, easy to change, etc), and be able to lead projects that do so.\nThe second one needs to do all of that, but as well understand all of the IT stack and be able to investigate or create products/solutions/technologies in whatever area he might need (network, databases, programming languages, web, numerical methods, and much more).\n\nI dunno if there is an international standard about it. So far, from what I've heard, this distinction happens here in Latin America, and I think it hasn't really been \"approved\" or anything by other countries.\n\nEDIT: We don't have a \"Computer Science\" degree or career for instance, like your guys are used to. I don't know much about said careers in other places in the world to be able to compare it with our own though", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36888, "question": "Well, over here (EDIT: Uruguay) \"Engineering\" is a career with a degree. If you have the degree you are an engineer.\n\nOver here we distinguish between Software Engineer and Computing Engineer. The first one needs to know about the processes on how to create software, what qualities it needs to have (reliability, correctness, easy to change, etc), and be able to lead projects that do so.\nThe second one needs to do all of that, but as well understand all of the IT stack and be able to investigate or create products/solutions/technologies in whatever area he might need (network, databases, programming languages, web, numerical methods, and much more).\n\nI dunno if there is an international standard about it. So far, from what I've heard, this distinction happens here in Latin America, and I think it hasn't really been \"approved\" or anything by other countries.\n\nEDIT: We don't have a \"Computer Science\" degree or career for instance, like your guys are used to. I don't know much about said careers in other places in the world to be able to compare it with our own though", "aSentId": 36889, "answer": "You should start your post by mentioning where 'over here' is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36886, "question": "What's an engineer? Can I just start calling myself an engineer? I think the guys that throw trash bags into the back of a truck are some kind of engineers now. ", "aSentId": 36891, "answer": "We drive trains.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36886, "question": "What's an engineer? Can I just start calling myself an engineer? I think the guys that throw trash bags into the back of a truck are some kind of engineers now. ", "aSentId": 36893, "answer": "Yeah I find it quite rude that average computer science graduates seem to think that they're 'engineers' now because they write software for a living.\n\nProgramming, coding, software development. These things are not engineering. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36894, "question": "Yeah I find it quite rude that average computer science graduates seem to think that they're 'engineers' now because they write software for a living.\n\nProgramming, coding, software development. These things are not engineering. ", "aSentId": 36895, "answer": "\"Engineering... is the application of scientific, economic, social, and practical knowledge in order to invent, design, build, maintain, research, and improve structures, machines, devices, *systems*, materials and *processes*.\" Not completely off base, I'd say. Is quibbling over who's a \"real engineering\" productive anyway? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36896, "question": "\"Engineering... is the application of scientific, economic, social, and practical knowledge in order to invent, design, build, maintain, research, and improve structures, machines, devices, *systems*, materials and *processes*.\" Not completely off base, I'd say. Is quibbling over who's a \"real engineering\" productive anyway? ", "aSentId": 36897, "answer": "This is why people laugh at you when you call yourself an engineer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36896, "question": "\"Engineering... is the application of scientific, economic, social, and practical knowledge in order to invent, design, build, maintain, research, and improve structures, machines, devices, *systems*, materials and *processes*.\" Not completely off base, I'd say. Is quibbling over who's a \"real engineering\" productive anyway? ", "aSentId": 36899, "answer": "Engineering is what Engineers do. Engineers have engineering qualifications and are accredited, certified engineers.\n\nWhen you get certified as a software engineer, feel free to call yourself an engineer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36900, "question": "Engineering is what Engineers do. Engineers have engineering qualifications and are accredited, certified engineers.\n\nWhen you get certified as a software engineer, feel free to call yourself an engineer.", "aSentId": 36901, "answer": "[The first rule of the tautology club is the first rule of the tautology club.](http://xkcd.com/703/)\n\nDoes my computer engineering degree count as accreditation, even if I use it to write software all day and not do the hardware and systems design that was the focus of the major? Engineering is much more about a mindset than a piece of paper, in my limited experience. My university education was _extremely_ informative, and I wouldn't trade it for anything. But I know a few brilliant people who write great software without the backing degree.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36902, "question": "[The first rule of the tautology club is the first rule of the tautology club.](http://xkcd.com/703/)\n\nDoes my computer engineering degree count as accreditation, even if I use it to write software all day and not do the hardware and systems design that was the focus of the major? Engineering is much more about a mindset than a piece of paper, in my limited experience. My university education was _extremely_ informative, and I wouldn't trade it for anything. But I know a few brilliant people who write great software without the backing degree.", "aSentId": 36903, "answer": "I never said you couldn't write great software without an engineering degree, I said you couldn't be an engineer without an engineering degree. Being an engineer and writing good software are completely orthogonal. The mindset of engineering is in fact the point, not the particulars of the degree. A chemical engineer writing software is still an engineer. A computer science major writing software is not, even if the computer science major's a much more qualified software developer.\n\nEngineers do more than just 'practical compsci'. They learn engineering fundamentals, practical design, technical writing skills (they sure don't teach those in the computer science program!) and engineering ethics. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36904, "question": "I never said you couldn't write great software without an engineering degree, I said you couldn't be an engineer without an engineering degree. Being an engineer and writing good software are completely orthogonal. The mindset of engineering is in fact the point, not the particulars of the degree. A chemical engineer writing software is still an engineer. A computer science major writing software is not, even if the computer science major's a much more qualified software developer.\n\nEngineers do more than just 'practical compsci'. They learn engineering fundamentals, practical design, technical writing skills (they sure don't teach those in the computer science program!) and engineering ethics. ", "aSentId": 36905, "answer": "Hypothetical question: two people are working in a position called electrical engineer. One of them graduated college with an electrical engineer degree, and has worked in the position for 20 years alongside a team of people who follow engineering practices. The other person is an Math major who decided to do more practical things, with on-the-job experience for 20 years, has learned engineering fundamentals, practical design, technical writing skills, and engineering ethics by working with people who are engineers. If you give work to either person, they both would apply the same amount of engineering rigor to the work. Would it not be fair to say that they are both engineers?\n\nFrankly, as someone who does software engineering but my degree doesn't say engineering on it, it's insulting that you would think that I'm not an engineer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36900, "question": "Engineering is what Engineers do. Engineers have engineering qualifications and are accredited, certified engineers.\n\nWhen you get certified as a software engineer, feel free to call yourself an engineer.", "aSentId": 36907, "answer": "Are you in middle school? \n\n&gt;Engineering is what Engineers do. \n\nI seriously hope you are not an engineer. You have it all backwards. Engineering is what Engineers do? If they take a dump that's engineering?\n\nAn engineer is a person who does engineering. Not engineering is what engineers do. \n\nEverything else you say is about certified engineers, which is highly dependend on your country.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36908, "question": "Are you in middle school? \n\n&gt;Engineering is what Engineers do. \n\nI seriously hope you are not an engineer. You have it all backwards. Engineering is what Engineers do? If they take a dump that's engineering?\n\nAn engineer is a person who does engineering. Not engineering is what engineers do. \n\nEverything else you say is about certified engineers, which is highly dependend on your country.", "aSentId": 36909, "answer": "'Engineer' and 'certified engineer' mean precisely the same thing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36894, "question": "Yeah I find it quite rude that average computer science graduates seem to think that they're 'engineers' now because they write software for a living.\n\nProgramming, coding, software development. These things are not engineering. ", "aSentId": 36911, "answer": "Where do software engineers land on your map?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36912, "question": "Where do software engineers land on your map?", "aSentId": 36913, "answer": "Depends if you mean \"people that do software development and think that calling it 'software engineering' makes them sound better\" or \"people with actual engineering degrees specialising in software engineering with a full engineering certification\". ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36914, "question": "Depends if you mean \"people that do software development and think that calling it 'software engineering' makes them sound better\" or \"people with actual engineering degrees specialising in software engineering with a full engineering certification\". ", "aSentId": 36915, "answer": "I know plenty of electrical engineers without a ProE certification and no intention of getting one. I see little harm in people who design electrical circuits electrical engineers, even if the industrial exemption makes it uneconomical to pursue the actual certification.\n\nAnd thus, I see no reason to hold programmers to a higher standard in this regard.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36916, "question": "I know plenty of electrical engineers without a ProE certification and no intention of getting one. I see little harm in people who design electrical circuits electrical engineers, even if the industrial exemption makes it uneconomical to pursue the actual certification.\n\nAnd thus, I see no reason to hold programmers to a higher standard in this regard.", "aSentId": 36917, "answer": "No you don't. You know electrical circuit designers without professional engineering certification. \n\nThere's no higher standard here. 'Engineer' is a term with a specific meaning. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36918, "question": "No you don't. You know electrical circuit designers without professional engineering certification. \n\nThere's no higher standard here. 'Engineer' is a term with a specific meaning. ", "aSentId": 36919, "answer": "What is your feeling about the UK?\n\nEngineer isn't a protected term, chartered engineer is. Most people in electrical engineering aren't chartered, are they not engineers?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36920, "question": "What is your feeling about the UK?\n\nEngineer isn't a protected term, chartered engineer is. Most people in electrical engineering aren't chartered, are they not engineers?", "aSentId": 36921, "answer": "I'm not talking specifically about any country.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36918, "question": "No you don't. You know electrical circuit designers without professional engineering certification. \n\nThere's no higher standard here. 'Engineer' is a term with a specific meaning. ", "aSentId": 36923, "answer": "Omg. Are you retarded? \"An engineer is a professional practitioner of engineering\". You don't necessarily need any certification or education to do that. What you mean is a certificated engineer. Completely different and highly dependend on your country. But i'm not saying software development is engineering.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36924, "question": "Omg. Are you retarded? \"An engineer is a professional practitioner of engineering\". You don't necessarily need any certification or education to do that. What you mean is a certificated engineer. Completely different and highly dependend on your country. But i'm not saying software development is engineering.", "aSentId": 36925, "answer": "Certified engineer = engineer. If you aren't certified, you aren't an engineer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36926, "question": "Certified engineer = engineer. If you aren't certified, you aren't an engineer.", "aSentId": 36927, "answer": "Nope. This depends on the country. For example:\n\n\"In France, the engineer title can be used pretty liberally, and is often attributed based on professional position rather than initial qualification\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36914, "question": "Depends if you mean \"people that do software development and think that calling it 'software engineering' makes them sound better\" or \"people with actual engineering degrees specialising in software engineering with a full engineering certification\". ", "aSentId": 36929, "answer": "The people who have degrees, who do \"programming, coding, software development\" on a daily basis. Are they belittling themselves?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36930, "question": "The people who have degrees, who do \"programming, coding, software development\" on a daily basis. Are they belittling themselves?", "aSentId": 36931, "answer": "I never said that programming, coding and software development are bad, but you aren't an engineer just because you call yourself one. You're an engineer if you're a professional member of an engineering institute with an engineering degree. That has nothing to do with whether you're a good programmer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36894, "question": "Yeah I find it quite rude that average computer science graduates seem to think that they're 'engineers' now because they write software for a living.\n\nProgramming, coding, software development. These things are not engineering. ", "aSentId": 36933, "answer": "This is why I go by Software Rockstar. Code Ninja is acceptable too. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36935, "question": "Can we call ourselves scientists, then?", "aSentId": 36936, "answer": "Are you doing science? Unlikely. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36940, "question": "Especially the ones that run the site... It's down.", "aSentId": 36941, "answer": "Hm? Loads fine even on a full refresh.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36942, "question": "Hm? Loads fine even on a full refresh.", "aSentId": 36943, "answer": "Up now.  :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36945, "question": "While claiming to be written for management, it's really written for engineers. Nobody in management reads that much text, unless *Harvard Business Review* recommended it.", "aSentId": 36946, "answer": "That's why I chose to address management readers above the fold... while you're absolutely right, I can only hope that a few of them see that they're being directly addressed and at least try to read the article.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36947, "question": "That's why I chose to address management readers above the fold... while you're absolutely right, I can only hope that a few of them see that they're being directly addressed and at least try to read the article.", "aSentId": 36948, "answer": "(Also, do you know how I can get in touch with *Harvard Business Review*?)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36949, "question": "(Also, do you know how I can get in touch with *Harvard Business Review*?)", "aSentId": 36950, "answer": "They constantly have book authors and professors on their podcast, so I imagine they'll accept random contributions if they meet whatever their criteria is. Try DM'ing their twitter account? https://twitter.com/HarvardBiz", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36951, "question": "They constantly have book authors and professors on their podcast, so I imagine they'll accept random contributions if they meet whatever their criteria is. Try DM'ing their twitter account? https://twitter.com/HarvardBiz", "aSentId": 36952, "answer": "I guess I forgot to type /s, but now that you mention it, that doesn't really sound like the worst idea.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36954, "question": "such a garbage article. I hate when people throw around the term engineer like it means something. There are mechanical engineers, electrical engineers, chemical engineers, computer engineers, design engineers, industrial engineers, materials engineers, polymer engineers, oil engineers, mining engineers, metallurgical engineers, quality engineers, manufacturing engineers, systems engineers, signals engineers etc etc. Each of these disciplines does wildly different things and this article doesn't resonate with any of them.  If you are developing applications, chances are you are not an engineer, btw.", "aSentId": 36955, "answer": "&gt; this article doesn't resonate with any of them\n\nYou can speak to all of these disciplines?\n\nTo be fair, it doesn't resonate with security engineering (says me), but that's partly because of current events helping us much more easily win mindshare.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36954, "question": "such a garbage article. I hate when people throw around the term engineer like it means something. There are mechanical engineers, electrical engineers, chemical engineers, computer engineers, design engineers, industrial engineers, materials engineers, polymer engineers, oil engineers, mining engineers, metallurgical engineers, quality engineers, manufacturing engineers, systems engineers, signals engineers etc etc. Each of these disciplines does wildly different things and this article doesn't resonate with any of them.  If you are developing applications, chances are you are not an engineer, btw.", "aSentId": 36957, "answer": "*[engineer](http://google.com/search?q=define engineer) [n]: a person who designs, builds, or maintains engines, machines, or public works.* \n\nI guess you get upset when people use terms like gaming engines, or state machines too, right?\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36959, "question": "SnapchatBot: Python library for building bots that live on Snapchat", "aSentId": 36960, "answer": "I'm quite new to python, I'm trying to install this library but I can't quite manage it. How would I go about installing this in a virtualenv? Can I use pip or easy_install?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36961, "question": "I'm quite new to python, I'm trying to install this library but I can't quite manage it. How would I go about installing this in a virtualenv? Can I use pip or easy_install?", "aSentId": 36962, "answer": "Inside your virtualenv run `python setup.py install`\n\nThe setup.py uses the setuptools module, which is the source of the easy_install tool.  This command will run the same installation without the overhead of downloading.\n\nIf the installation succeeds for you, the problem I ran into seems to be that PIL is a dependency but not listed as one.  Try installing that separately (and any other packages that are still missing).  I'd like to give you some more help, but I'm posting from work and don't really have the time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36963, "question": "Inside your virtualenv run `python setup.py install`\n\nThe setup.py uses the setuptools module, which is the source of the easy_install tool.  This command will run the same installation without the overhead of downloading.\n\nIf the installation succeeds for you, the problem I ran into seems to be that PIL is a dependency but not listed as one.  Try installing that separately (and any other packages that are still missing).  I'd like to give you some more help, but I'm posting from work and don't really have the time.", "aSentId": 36964, "answer": "Thanks for the help, I didn't install pyside inside the folder.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36963, "question": "Inside your virtualenv run `python setup.py install`\n\nThe setup.py uses the setuptools module, which is the source of the easy_install tool.  This command will run the same installation without the overhead of downloading.\n\nIf the installation succeeds for you, the problem I ran into seems to be that PIL is a dependency but not listed as one.  Try installing that separately (and any other packages that are still missing).  I'd like to give you some more help, but I'm posting from work and don't really have the time.", "aSentId": 36966, "answer": "Is this supposed to be run on a virtual environment on your computer? How could I run it on my Macbook Pro? Installing what virtual environment? Thanks for the help!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36959, "question": "SnapchatBot: Python library for building bots that live on Snapchat", "aSentId": 36968, "answer": "The college I go to, MST, has a bot that is called \"rollasnaps\" that simply posts everything it receives to its story. It's pretty cool. \n\nOf course, rollasnaps is NSFW and view it at your own discretion. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36959, "question": "SnapchatBot: Python library for building bots that live on Snapchat", "aSentId": 36970, "answer": "This was posted yesterday....", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36973, "question": "Doesn't SnapChat block the accounts that use its undocumented API? I think Snapchat started cracking down on this after the leak of a bunch of users photos that were using a 3rd party app to save their Snaps.", "aSentId": 36974, "answer": "I'm pretty sure they can't change their API cause not everyone has updated. It might just be based on the user agent, so of that is \"snap chat android 3.22whatever\" then they can't tell", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36975, "question": "I'm pretty sure they can't change their API cause not everyone has updated. It might just be based on the user agent, so of that is \"snap chat android 3.22whatever\" then they can't tell", "aSentId": 36976, "answer": "I would agree with you, except that I know that Windows Phone apps that use the Android API get blocked for using the undocumented API.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36977, "question": "I would agree with you, except that I know that Windows Phone apps that use the Android API get blocked for using the undocumented API.", "aSentId": 36978, "answer": "i'm pretty sure that 6snap got caught because they said in their user agent that they were 6snap and not \"snapchat\". The api is the same for all the official snap chat clients", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36973, "question": "Doesn't SnapChat block the accounts that use its undocumented API? I think Snapchat started cracking down on this after the leak of a bunch of users photos that were using a 3rd party app to save their Snaps.", "aSentId": 36980, "answer": "Yeah, Snapchat is pretty arbitrary w/r/t what they allow and what they don't -- not everything that uses the unofficial API is shut down. They *did* block my IP address for a few days though, presumably due to the number of requests I was making.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36982, "question": "this is freaking sweet. Lately i've noticed a lot of companies are getting on snapchat, and i could see this api being useful for snapchat marketing.\n", "aSentId": 36983, "answer": "&gt;marketing\n\nThis is what usually devolves what would typically be an alright piece of software into shit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36982, "question": "this is freaking sweet. Lately i've noticed a lot of companies are getting on snapchat, and i could see this api being useful for snapchat marketing.\n", "aSentId": 36985, "answer": "&gt; marketing\n\nspamming\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36986, "question": "&gt; marketing\n\nspamming\n", "aSentId": 36987, "answer": "&gt; spamming\n\nspontaneously solicited important consumer information", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36989, "question": "Does Anyone Actually Want Good Software?", "aSentId": 36990, "answer": "This very much resonates with me\u2014I've been wondering this very thing for a while now. I've spent my entire career as a software developer trying to (with some success) hone my skills to the point where I can write software *correctly* that works *correctly*.\n\nUnfortunately, I've not yet found an employer that fully appreciates that level of detail, and I'm starting to wonder if I ever will. Fighting the battle for quality code is tiring\u2026 and without finding a way to start my own product or consultancy that can both pay my bills and allow me to practice my trade correctly, I can't imagine the situation changing in any meaningful way.\n\nEven the biggest software infrastructure providers are starting to care less about stable code and more about exclamation points in news posts and press releases. It's scary out there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36991, "question": "This very much resonates with me\u2014I've been wondering this very thing for a while now. I've spent my entire career as a software developer trying to (with some success) hone my skills to the point where I can write software *correctly* that works *correctly*.\n\nUnfortunately, I've not yet found an employer that fully appreciates that level of detail, and I'm starting to wonder if I ever will. Fighting the battle for quality code is tiring\u2026 and without finding a way to start my own product or consultancy that can both pay my bills and allow me to practice my trade correctly, I can't imagine the situation changing in any meaningful way.\n\nEven the biggest software infrastructure providers are starting to care less about stable code and more about exclamation points in news posts and press releases. It's scary out there.", "aSentId": 36992, "answer": "business code is about making sandcastles. quick to build and pretty for a while, then the tide comes in, changes the beach, and you start over\n\nits no different in other parts of business infrastructure...no one hires Zaha Hadid to design a strip mall....its not worth it. \n\nin twenty years of web development, my observation is that very little business code lasts longer than five years....and if it does, it is hated more than loved\n\nrequirements and desires change, its often easier just to toss most business code when the tide changes than to lovingly evolve it, if that is even possible given that your coworkers probably don't or can't care...and would it make sense from a business perspective anyway? often not\n\nif you want to build pyramids instead of sandcastles, get involved in open source, its free from profit motives", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36993, "question": "business code is about making sandcastles. quick to build and pretty for a while, then the tide comes in, changes the beach, and you start over\n\nits no different in other parts of business infrastructure...no one hires Zaha Hadid to design a strip mall....its not worth it. \n\nin twenty years of web development, my observation is that very little business code lasts longer than five years....and if it does, it is hated more than loved\n\nrequirements and desires change, its often easier just to toss most business code when the tide changes than to lovingly evolve it, if that is even possible given that your coworkers probably don't or can't care...and would it make sense from a business perspective anyway? often not\n\nif you want to build pyramids instead of sandcastles, get involved in open source, its free from profit motives", "aSentId": 36994, "answer": "Pyramids are 'forever'. \n\nSand castles aren't. \n\nIf no one is going to support your targetted platform in 5 years forever is irrelevant. Biz logic tends to expire but so do OS's, frameworks, and underlying cpu architecture. The tools aren't stable enough and it is by market-force of the industry. \n\nIt's the first lesson I had to learn post-college. Perfection of product is impossible. Software models process. Process is made/ran by people. The moment you go past 'person' to plural you've lost concensus and it can't be 'correct' for everyone. This shows up in everything from screw ups in microprocessor design to apache bugs.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36993, "question": "business code is about making sandcastles. quick to build and pretty for a while, then the tide comes in, changes the beach, and you start over\n\nits no different in other parts of business infrastructure...no one hires Zaha Hadid to design a strip mall....its not worth it. \n\nin twenty years of web development, my observation is that very little business code lasts longer than five years....and if it does, it is hated more than loved\n\nrequirements and desires change, its often easier just to toss most business code when the tide changes than to lovingly evolve it, if that is even possible given that your coworkers probably don't or can't care...and would it make sense from a business perspective anyway? often not\n\nif you want to build pyramids instead of sandcastles, get involved in open source, its free from profit motives", "aSentId": 36996, "answer": "&gt;business code is about making sandcastles. quick to build and pretty for a while, then the tide comes in, changes the beach, and you start over\n\nExcept that's never the case. The brittle piece of shit that you're hired to maintain was written over the last decade. Quick to build and lasts forever with patches and hacks.\n\n&gt;if you want to build pyramids instead of sandcastles, get involved in open source, its free from profit motives\n\nYep, and it lets you plan and tackle problems properly. Or hell if there's a kludge or FIXME section, chances are someone will use that as an opportunity to fix it and get introduced to the codebase.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36997, "question": "&gt;business code is about making sandcastles. quick to build and pretty for a while, then the tide comes in, changes the beach, and you start over\n\nExcept that's never the case. The brittle piece of shit that you're hired to maintain was written over the last decade. Quick to build and lasts forever with patches and hacks.\n\n&gt;if you want to build pyramids instead of sandcastles, get involved in open source, its free from profit motives\n\nYep, and it lets you plan and tackle problems properly. Or hell if there's a kludge or FIXME section, chances are someone will use that as an opportunity to fix it and get introduced to the codebase.", "aSentId": 36998, "answer": "we're in agreement...I equate the eventual patches and hacks with other forms of ruin that will beset any codebase within five years", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36993, "question": "business code is about making sandcastles. quick to build and pretty for a while, then the tide comes in, changes the beach, and you start over\n\nits no different in other parts of business infrastructure...no one hires Zaha Hadid to design a strip mall....its not worth it. \n\nin twenty years of web development, my observation is that very little business code lasts longer than five years....and if it does, it is hated more than loved\n\nrequirements and desires change, its often easier just to toss most business code when the tide changes than to lovingly evolve it, if that is even possible given that your coworkers probably don't or can't care...and would it make sense from a business perspective anyway? often not\n\nif you want to build pyramids instead of sandcastles, get involved in open source, its free from profit motives", "aSentId": 37000, "answer": "&gt;its often easier just to toss most business code when the tide changes than to lovingly evolve it\n\nWhile you may be right when it comes to cubicle drivers gluing together infrastructure components to represent business logic, this argument doesn't hold water when it comes to writing infrastructure components or distributable software or SaaS applications, or when it comes to small businesses writing custom software that maps to\u2014or enables\u2014their core business model.\n\nEven the big companies with scores of development teams would find benefit from having infrastructure developers that build pyramids instead of sandcastles, because then the sandcastles that do end up getting washed away will take less time to rebuild.\n\nBuilding pyramids should be the default choice, not a special circumstance.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37001, "question": "&gt;its often easier just to toss most business code when the tide changes than to lovingly evolve it\n\nWhile you may be right when it comes to cubicle drivers gluing together infrastructure components to represent business logic, this argument doesn't hold water when it comes to writing infrastructure components or distributable software or SaaS applications, or when it comes to small businesses writing custom software that maps to\u2014or enables\u2014their core business model.\n\nEven the big companies with scores of development teams would find benefit from having infrastructure developers that build pyramids instead of sandcastles, because then the sandcastles that do end up getting washed away will take less time to rebuild.\n\nBuilding pyramids should be the default choice, not a special circumstance.", "aSentId": 37002, "answer": "I doubt the situation is much better for people working on things like oracle rdbms or the windows kernel. being held hostage by decisions made by people who left the org a decade earlier is probably as awful as dealing with disposable middle ware\n\nI once listened to oracle rdbms devs tell me about the antiquated hardware they were required to support. not fun. \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36991, "question": "This very much resonates with me\u2014I've been wondering this very thing for a while now. I've spent my entire career as a software developer trying to (with some success) hone my skills to the point where I can write software *correctly* that works *correctly*.\n\nUnfortunately, I've not yet found an employer that fully appreciates that level of detail, and I'm starting to wonder if I ever will. Fighting the battle for quality code is tiring\u2026 and without finding a way to start my own product or consultancy that can both pay my bills and allow me to practice my trade correctly, I can't imagine the situation changing in any meaningful way.\n\nEven the biggest software infrastructure providers are starting to care less about stable code and more about exclamation points in news posts and press releases. It's scary out there.", "aSentId": 37004, "answer": "Come write GPU drivers. Complexity increases 2x every year or so, while quality/reliability/optimisation requirements become tighter and tighter. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37005, "question": "Come write GPU drivers. Complexity increases 2x every year or so, while quality/reliability/optimisation requirements become tighter and tighter. \n", "aSentId": 37006, "answer": "That legitimately sounds like fun to me. Seriously.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37007, "question": "That legitimately sounds like fun to me. Seriously.", "aSentId": 37008, "answer": "It is. And you might get to shape the next-generation silicon and functionality across all gpu hw vendors. Additionally, sometimes with new cores some paradigms shift, which introduces fun challenges. It's not all roses, as sometimes rushed suboptimal solutions are required, to keep correctness. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36991, "question": "This very much resonates with me\u2014I've been wondering this very thing for a while now. I've spent my entire career as a software developer trying to (with some success) hone my skills to the point where I can write software *correctly* that works *correctly*.\n\nUnfortunately, I've not yet found an employer that fully appreciates that level of detail, and I'm starting to wonder if I ever will. Fighting the battle for quality code is tiring\u2026 and without finding a way to start my own product or consultancy that can both pay my bills and allow me to practice my trade correctly, I can't imagine the situation changing in any meaningful way.\n\nEven the biggest software infrastructure providers are starting to care less about stable code and more about exclamation points in news posts and press releases. It's scary out there.", "aSentId": 37010, "answer": "&gt;  I'm starting to wonder if I ever will\n\nGo work for NASA", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37011, "question": "&gt;  I'm starting to wonder if I ever will\n\nGo work for NASA", "aSentId": 37012, "answer": "I have a feeling thats a pretty hard job to get", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37013, "question": "I have a feeling thats a pretty hard job to get", "aSentId": 37014, "answer": "You just need to shoot for the stars.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37011, "question": "&gt;  I'm starting to wonder if I ever will\n\nGo work for NASA", "aSentId": 37016, "answer": "Don't need to, you just need to get the infrastructure in place for goodness to happen.\n\nI spent an hour fiddling with Doxygen to generate api docs for our python/django project. Every time I hack at the code, I add a line or two of comments (I try and avoid newb comments like \"returns a return value\") and add links to any external stuff that I need more info on.\n\nThe unit test infrastructure is in place, all you need to do is write some unit tests, we have factories for creating random/default objects and a base test case that mocks some external apis for you.\n\nThere's a tool called CloneDigger (for python and Java) which will detect duplicate copy/paste code. Just run it and see how much of your code base needs refactoring and if the bug you're fixing touches that part, refactor it quickly.\n\nThese are just a few tools and they are *basic* and took very little time to setup.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36989, "question": "Does Anyone Actually Want Good Software?", "aSentId": 37018, "answer": "Everybody wants to use Good software.\n\nFew want to PAY for Good software to be written.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37019, "question": "Everybody wants to use Good software.\n\nFew want to PAY for Good software to be written.", "aSentId": 37020, "answer": "Bad software is more expensive, it's ironic, like maintaining a project that has very little functionality but took 9+ months to build.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37021, "question": "Bad software is more expensive, it's ironic, like maintaining a project that has very little functionality but took 9+ months to build.", "aSentId": 37022, "answer": "too close to home! :p", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 36989, "question": "Does Anyone Actually Want Good Software?", "aSentId": 37024, "answer": "[I think suckless is worth mentioning.](http://suckless.org)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37025, "question": "[I think suckless is worth mentioning.](http://suckless.org)", "aSentId": 37026, "answer": "I use many pieces of suckless code...they are good for producing simple solutions to simple problems (dwm, slock etc), but their methods will never produce a web browser (no, surf doesn't count, its just another wrapper around WebKit) or a useful text editor. the mailing list is full of blanket dismissals of things you probably think are important, like Unicode and multimedia. its just a bunch of cranky guys saying no to everything. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37028, "question": "You're absolutely right, and that's just business. Its all about budget, when it boils down to either feeding your family or being an idealist, not many of us can afford to be revolutionaries.\n\nIt's not out of my mind to go on some spiritual journey to find an employer/team who share my values, but until then that's what side projects are for.", "aSentId": 37029, "answer": "....or vacation. this guy's rant is just screaming for a week in cozumel. dude's been staring at code too long", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37035, "question": "You are narcissistic, not delusional, if that helps at all.", "aSentId": 37036, "answer": "A narcissistic brony at that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37037, "question": "A narcissistic brony at that.", "aSentId": 37038, "answer": "Out of morbid curiosity, is being a brony or a furry more objectionable?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37039, "question": "Out of morbid curiosity, is being a brony or a furry more objectionable?", "aSentId": 37040, "answer": "Yes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37042, "question": "People do want good software, but since the demand for software is much larger than what the industry can deliver while maintaining good quality, and the supply of the kind of good programmers it would take is painfully finite, actually finding good software for the problem at hand is hard, often impossible, so people have learned to count their losses and settle for what they can get. At least that's my interpretation of the situation.", "aSentId": 37043, "answer": "&gt;than what the industry can deliver while maintaining good quality\n\nThe issue isn't the good quality; the issue is that a majority of projects are maintenance. There's very little new functionality, it's all buggy shit that you're patching.\n\nThe problem is that there's a demand for software and corners are cut which means bad software is delivered; then the demand for maintenance increases. Small companies that have been in business for 4+ years are moving as slow as large enterprise dev teams because there's so much technical debt.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37045, "question": "I actually don't know what \"flat design\" is. Is he talking about the minimal UI designs?", "aSentId": 37046, "answer": "Look at how [Windows 10](http://i1-news.softpedia-static.com/images/news2/Windows-10-Build-9926-Screenshots-471077-23.jpg), Metro apps, OS X Yosemite, iOS 8, etc look. Also several new updates in apps like Skype and even Sumatra PDF. \n\nOr you can also search Flat Design in Google images.\n\nIt is basically what Athena toolkit would look if it had color :-P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37047, "question": "Look at how [Windows 10](http://i1-news.softpedia-static.com/images/news2/Windows-10-Build-9926-Screenshots-471077-23.jpg), Metro apps, OS X Yosemite, iOS 8, etc look. Also several new updates in apps like Skype and even Sumatra PDF. \n\nOr you can also search Flat Design in Google images.\n\nIt is basically what Athena toolkit would look if it had color :-P", "aSentId": 37048, "answer": "This Athena toolkit looks more usable than Flat Design, and I'm not joking. The buttons and elements are clearly outlined, instead of borderless text scattered around the screen, with some instances being buttons, others - labels, others - textboxes.... And you can know only if you try clicking on each... ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37052, "question": "Does anyone actually write anything worth reading?  This is \"wah wah I wanna masturbate to beautiful, perfect code but all these kids want to do is masturbate to useless features in new technology that I don't care about.\" In 759 words.\n\n- What is \"Good Software\"?  \n- Does it actually matter to \"anyone\" if software that does what is needed, reasonably bug free, has what OP thinks makes software \"Good\"?\n- Why is something hacked up in a weekend in Node.JS \"bad\"?\n\nThis post does not answer any of these questions.  I want these kids with their node.js and MongoDB off my fucking lawn too, but at least explain why **you** care so much before implying \"anyone\" should give a shit.\n\n", "aSentId": 37053, "answer": "You could try, y'know, actually reading the article.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37052, "question": "Does anyone actually write anything worth reading?  This is \"wah wah I wanna masturbate to beautiful, perfect code but all these kids want to do is masturbate to useless features in new technology that I don't care about.\" In 759 words.\n\n- What is \"Good Software\"?  \n- Does it actually matter to \"anyone\" if software that does what is needed, reasonably bug free, has what OP thinks makes software \"Good\"?\n- Why is something hacked up in a weekend in Node.JS \"bad\"?\n\nThis post does not answer any of these questions.  I want these kids with their node.js and MongoDB off my fucking lawn too, but at least explain why **you** care so much before implying \"anyone\" should give a shit.\n\n", "aSentId": 37055, "answer": "Let me help you with that.\n\n&gt;What is \"Good Software\"?\n\nGood software is written using best practices and available standards, is built in a manner that promotes maintainability and evolution, handles errors and exceptional cases as gracefully as possible, meets or exceeds the requirements, and is well-documented and readable. Bonus points if it's written on the most recent stable version of its language or framework, and more bonus points if it's structured in a manner that allows for things like continuous integration.\n\n&gt;Does it actually matter to \"anyone\" if software that does what is needed, reasonably bug free, has what OP thinks makes software \"Good\"?\n\nYes, it matters to the developers that have to build and maintain it. Dealing with crappy code (yours or someone else's, modern or legacy) long-term is stressful to those of us that took the time to learn best practices. It should also matter to the companies that have to pay for prolonged maintenance and constant rewrites, but hell will freeze over before that becomes the norm.\n\n&gt;Why is something hacked up in a weekend in Node.JS \"bad\"?\n\nIt's not, if it fits the above criteria. But something built correctly in a weekend isn't likely to have too much more complexity than a glorified to-do list. If you hack together an entire application or platform in a weekend, it probably doesn't qualify as good software as outlined above.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37056, "question": "Let me help you with that.\n\n&gt;What is \"Good Software\"?\n\nGood software is written using best practices and available standards, is built in a manner that promotes maintainability and evolution, handles errors and exceptional cases as gracefully as possible, meets or exceeds the requirements, and is well-documented and readable. Bonus points if it's written on the most recent stable version of its language or framework, and more bonus points if it's structured in a manner that allows for things like continuous integration.\n\n&gt;Does it actually matter to \"anyone\" if software that does what is needed, reasonably bug free, has what OP thinks makes software \"Good\"?\n\nYes, it matters to the developers that have to build and maintain it. Dealing with crappy code (yours or someone else's, modern or legacy) long-term is stressful to those of us that took the time to learn best practices. It should also matter to the companies that have to pay for prolonged maintenance and constant rewrites, but hell will freeze over before that becomes the norm.\n\n&gt;Why is something hacked up in a weekend in Node.JS \"bad\"?\n\nIt's not, if it fits the above criteria. But something built correctly in a weekend isn't likely to have too much more complexity than a glorified to-do list. If you hack together an entire application or platform in a weekend, it probably doesn't qualify as good software as outlined above.", "aSentId": 37057, "answer": "&gt; Good software is written using best practices and available standards...\n\nNot necessarily. Too often, \"best practices\" is really \"average practices,\" and \"available standards\" is really \"appeals to the herd instinct.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37056, "question": "Let me help you with that.\n\n&gt;What is \"Good Software\"?\n\nGood software is written using best practices and available standards, is built in a manner that promotes maintainability and evolution, handles errors and exceptional cases as gracefully as possible, meets or exceeds the requirements, and is well-documented and readable. Bonus points if it's written on the most recent stable version of its language or framework, and more bonus points if it's structured in a manner that allows for things like continuous integration.\n\n&gt;Does it actually matter to \"anyone\" if software that does what is needed, reasonably bug free, has what OP thinks makes software \"Good\"?\n\nYes, it matters to the developers that have to build and maintain it. Dealing with crappy code (yours or someone else's, modern or legacy) long-term is stressful to those of us that took the time to learn best practices. It should also matter to the companies that have to pay for prolonged maintenance and constant rewrites, but hell will freeze over before that becomes the norm.\n\n&gt;Why is something hacked up in a weekend in Node.JS \"bad\"?\n\nIt's not, if it fits the above criteria. But something built correctly in a weekend isn't likely to have too much more complexity than a glorified to-do list. If you hack together an entire application or platform in a weekend, it probably doesn't qualify as good software as outlined above.", "aSentId": 37059, "answer": "you need to accept that software is where automotive tech was in, say,1919. we are only just beginning to figure it out....we are far from reliable and simple methods, and hucksterism is common. I expect the situation to be improved by about 2035 at the earliest....but it will involve massive automation of some nature so none of us will be needed", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37062, "question": "SQL Teaching - Codecademy for SQL", "aSentId": 37063, "answer": "I love this and I want it to include more practice problems", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37062, "question": "SQL Teaching - Codecademy for SQL", "aSentId": 37065, "answer": "cool, wish it pushed it even further", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37062, "question": "SQL Teaching - Codecademy for SQL", "aSentId": 37067, "answer": "I want to +1 the request of putting more exercises. This is a great teaching tool", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37073, "question": "Context-aware programming languages | Microsoft Research", "aSentId": 37074, "answer": "I can't help but think of Clippy popping up and going \"I noticed that you..\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37073, "question": "Context-aware programming languages | Microsoft Research", "aSentId": 37076, "answer": "Lolwut", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37078, "question": "Where Is Smalltalk Weak? | smalltalkrenaissance", "aSentId": 37079, "answer": "&gt; Due to the nature of the Smalltalk environment, it is not practical to use the conventional file-based toolchains that many developers know and love. Thankfully, the Smalltalk community has built up an impressive set of tools over the years ...\n\nWhen I did Smalltalk, over 20 years ago now, I would have said that this was easily the biggest technical problem. Having everything sitting in one homogeneous persistent image sounds like a cool idea until you find yourself (a) trying to keep control over what's changed in there and (b) trying to collaborate with other programmers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37080, "question": "&gt; Due to the nature of the Smalltalk environment, it is not practical to use the conventional file-based toolchains that many developers know and love. Thankfully, the Smalltalk community has built up an impressive set of tools over the years ...\n\nWhen I did Smalltalk, over 20 years ago now, I would have said that this was easily the biggest technical problem. Having everything sitting in one homogeneous persistent image sounds like a cool idea until you find yourself (a) trying to keep control over what's changed in there and (b) trying to collaborate with other programmers.", "aSentId": 37081, "answer": "&gt;  Having everything sitting in one homogeneous persistent image sounds like a cool idea until you find yourself (a) trying to keep control over what's changed in there and (b) trying to collaborate with other programmers.\n\nWhich is why developers still fear working directly with databases.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37080, "question": "&gt; Due to the nature of the Smalltalk environment, it is not practical to use the conventional file-based toolchains that many developers know and love. Thankfully, the Smalltalk community has built up an impressive set of tools over the years ...\n\nWhen I did Smalltalk, over 20 years ago now, I would have said that this was easily the biggest technical problem. Having everything sitting in one homogeneous persistent image sounds like a cool idea until you find yourself (a) trying to keep control over what's changed in there and (b) trying to collaborate with other programmers.", "aSentId": 37083, "answer": "When I used Smalltalk we used ENVY for our version control (it looks like this predates Monticello).  ENVY benefited from Smalltalk's image based system.  When you modified a method ENVY would capture that modification in its database as an edit.  SVN/Git/etc only capture the 'final' commit, but ENVY was capturing each iteration the developer performed during development, without any extra intervention/action required by the developer.  But yeah, the image based system is probably the biggest hurdle for Smalltalk's acceptance these days, in my opinion.  It's too different from the normal methods and processes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37084, "question": "When I used Smalltalk we used ENVY for our version control (it looks like this predates Monticello).  ENVY benefited from Smalltalk's image based system.  When you modified a method ENVY would capture that modification in its database as an edit.  SVN/Git/etc only capture the 'final' commit, but ENVY was capturing each iteration the developer performed during development, without any extra intervention/action required by the developer.  But yeah, the image based system is probably the biggest hurdle for Smalltalk's acceptance these days, in my opinion.  It's too different from the normal methods and processes.", "aSentId": 37085, "answer": "&gt; SVN/Git/etc only capture the 'final' commit, but ENVY was capturing each iteration the developer performed during development, without any extra intervention/action required by the developer.\n\nI'm not sure that matters to me. On the other hand, branching, merging, storing revisions of external data (eg, config files, data, etc), and such are what I need from a VCS.\n\nI have no idea how you'd merge the state of the image, including live data, in a sane way.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37086, "question": "&gt; SVN/Git/etc only capture the 'final' commit, but ENVY was capturing each iteration the developer performed during development, without any extra intervention/action required by the developer.\n\nI'm not sure that matters to me. On the other hand, branching, merging, storing revisions of external data (eg, config files, data, etc), and such are what I need from a VCS.\n\nI have no idea how you'd merge the state of the image, including live data, in a sane way.\n", "aSentId": 37087, "answer": "ENVY (and probably Monticello) has branching/merging capabilities. Why would you think it doesn't?  If your configuration is done within the app, in code somewhere, then you could version it using ENVY.  If it is file based, then you would need to find some other way.\n\nWe never had to 'merge data'.  The app I worked on used a client/server architecture.  The server was essentially a headless Smalltalk VM (GemStone/S Object Database) running on several Unix servers.  While the client and server VM's hold state, you don't have to merge that state. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37088, "question": "ENVY (and probably Monticello) has branching/merging capabilities. Why would you think it doesn't?  If your configuration is done within the app, in code somewhere, then you could version it using ENVY.  If it is file based, then you would need to find some other way.\n\nWe never had to 'merge data'.  The app I worked on used a client/server architecture.  The server was essentially a headless Smalltalk VM (GemStone/S Object Database) running on several Unix servers.  While the client and server VM's hold state, you don't have to merge that state. ", "aSentId": 37089, "answer": "&gt; Why would you think it doesn't?\n\nI'd assume it does. My point is that those are the features that would sell me, and not having a huge number of message-free commits.\n\n&gt;  If it is file based, then you would need to find some other way.\n\nThat's annoying.\n\n&gt; While the client and server VM's hold state, you don't have to merge that state.\n\nIf that's the case, what is the advantage over just storing the program in plain text files outside of the image?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37090, "question": "&gt; Why would you think it doesn't?\n\nI'd assume it does. My point is that those are the features that would sell me, and not having a huge number of message-free commits.\n\n&gt;  If it is file based, then you would need to find some other way.\n\nThat's annoying.\n\n&gt; While the client and server VM's hold state, you don't have to merge that state.\n\nIf that's the case, what is the advantage over just storing the program in plain text files outside of the image?", "aSentId": 37091, "answer": "Well its not as annoying as you would think.  You have to remember that Smalltalk code is interpreted as it is executing. So it is trivial to change the application as it is executing (much like modifying a config file in more mainstream languages), indeed the act of developing in Smalltalk is modifying the application as it is running.  When you are ready to deploy, you essentially strip out the development tools (code browsers, etc...) and are left with the production image which is then deployed.  Patches (or configuration changes) are regularly applied while the system is live and don't require any down time.  \n\nFrom a development standpoint I liked the image based paradigm, because when I was done developing/debugging at the end of the day, I could just save the image mid-execution if I wanted to and come back to it the next day in the exact same state (client side anyway). You could also potentially configure the image to save its state on an exception, and a developer could pull it up in the exact state the user had it, but my team never went that far.\n\nI'm not saying that image  based development is the way of the future (in fact I think in another comment I said it would be a pretty big hurdle), but it's definitely different than more traditional file based development.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37078, "question": "Where Is Smalltalk Weak? | smalltalkrenaissance", "aSentId": 37093, "answer": "So basically Smalltalk's weaknesses are the strengths of Java &amp; C# and why they own the enterprise space. \n\nThe really problem with Smalltalk is that is amazing *because* it integrates so much together it requires you to abandon your entire toolset. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37078, "question": "Where Is Smalltalk Weak? | smalltalkrenaissance", "aSentId": 37095, "answer": "For a long time I have a impression that Smalltalk is a dead language. Not bad, not hopeless, dead. Kind of like Ada - good design, reliability. AFAIK place where refactoring and design patterns were born, and OOP matured. If I'm no mistaken most Gang of Four members seasoned as a programmers when they were developing with Smalltalk and they still miss those times i think.\n\nBut similarly to Ada while great language it never gathered big community. I think Java took its place - GC, IDE refactoring support, a lot of tools which can automate analysis and testing for you. I'm afraid Smalltalk will never gather more people that it historically had and will always stay one of those languages you speak out loud you'd like to use before you'll get back to coding your typical enterprise C++/Java project...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37096, "question": "For a long time I have a impression that Smalltalk is a dead language. Not bad, not hopeless, dead. Kind of like Ada - good design, reliability. AFAIK place where refactoring and design patterns were born, and OOP matured. If I'm no mistaken most Gang of Four members seasoned as a programmers when they were developing with Smalltalk and they still miss those times i think.\n\nBut similarly to Ada while great language it never gathered big community. I think Java took its place - GC, IDE refactoring support, a lot of tools which can automate analysis and testing for you. I'm afraid Smalltalk will never gather more people that it historically had and will always stay one of those languages you speak out loud you'd like to use before you'll get back to coding your typical enterprise C++/Java project...", "aSentId": 37097, "answer": "To be fair, you can put really any extremely opinionated language environment in place of Smalltalk: Lisp, Forth, APL, Modula-2, Oberon, Standard ML, OCaml, Haskell...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37098, "question": "To be fair, you can put really any extremely opinionated language environment in place of Smalltalk: Lisp, Forth, APL, Modula-2, Oberon, Standard ML, OCaml, Haskell...", "aSentId": 37099, "answer": "Yup. You can. From what I see that's how /r/programming roll. ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37096, "question": "For a long time I have a impression that Smalltalk is a dead language. Not bad, not hopeless, dead. Kind of like Ada - good design, reliability. AFAIK place where refactoring and design patterns were born, and OOP matured. If I'm no mistaken most Gang of Four members seasoned as a programmers when they were developing with Smalltalk and they still miss those times i think.\n\nBut similarly to Ada while great language it never gathered big community. I think Java took its place - GC, IDE refactoring support, a lot of tools which can automate analysis and testing for you. I'm afraid Smalltalk will never gather more people that it historically had and will always stay one of those languages you speak out loud you'd like to use before you'll get back to coding your typical enterprise C++/Java project...", "aSentId": 37101, "answer": "I used Smalltalk professionally for the first 4 years of my career, and while I agree it will never be mainstream, I think Java beat it due to business reasons rather than technological.  In the 90's there was some major conflict in the Smalltalk world when a couple of the major vendors got into a tussle. By the time it recovered Java had taken over.\n\nSmalltalk has garbage collection and a very robust IDE.  In fact you can browse both and alter them at will.  Additionally the xUnit testing framework originated in Smalltalk (sUnit), and was later ported to Java/.NET/etc...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37102, "question": "I used Smalltalk professionally for the first 4 years of my career, and while I agree it will never be mainstream, I think Java beat it due to business reasons rather than technological.  In the 90's there was some major conflict in the Smalltalk world when a couple of the major vendors got into a tussle. By the time it recovered Java had taken over.\n\nSmalltalk has garbage collection and a very robust IDE.  In fact you can browse both and alter them at will.  Additionally the xUnit testing framework originated in Smalltalk (sUnit), and was later ported to Java/.NET/etc...", "aSentId": 37103, "answer": "&gt;I think Java beat it due to business reasons rather than technological\n\nI might have used words poorly. I don't think that Java has any advantage above Smalltalk as a language: BOTH works great as languages where refactoring is crucial and IDE should easily support that. It's difficult to compare them for me since I only looked at the snippets of Smalltalk, but I can easily imagine Smalltalk wiping out floor with Java.\n\nThere days however JVM (not Java) has (speed) advantage. I'd attribute it to the amount of effort put by many VM specialists over the years, all of them hired/sponsored by Sun/Oracle. I agree that main reason Java succeeded was corporate's financial support and marketing.\n\nCurrently, to fill gap between them one would have to optimize Smalltalk VM (least important), introduce modern great set of Maven/Gradle-like building tools (more important) and (above all) invest huge amount of money into marketing to convince everyone that Smalltalk is what cool kids use.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37104, "question": "&gt;I think Java beat it due to business reasons rather than technological\n\nI might have used words poorly. I don't think that Java has any advantage above Smalltalk as a language: BOTH works great as languages where refactoring is crucial and IDE should easily support that. It's difficult to compare them for me since I only looked at the snippets of Smalltalk, but I can easily imagine Smalltalk wiping out floor with Java.\n\nThere days however JVM (not Java) has (speed) advantage. I'd attribute it to the amount of effort put by many VM specialists over the years, all of them hired/sponsored by Sun/Oracle. I agree that main reason Java succeeded was corporate's financial support and marketing.\n\nCurrently, to fill gap between them one would have to optimize Smalltalk VM (least important), introduce modern great set of Maven/Gradle-like building tools (more important) and (above all) invest huge amount of money into marketing to convince everyone that Smalltalk is what cool kids use.", "aSentId": 37105, "answer": "&gt;  I agree that main reason Java succeeded was corporate's financial support and marketing.\n\nI've never used Smalltalk extensively, but we evaluated what was available in the late 90s (not sure if it was IBM or Parcplace or both). I can tell you another reason why I think Java won out based on that experience: Smalltalk was expensive! Smalltalk vendors wanted to charge thousands per seat while Java was a free download, then the first Java IDEs cropped up and they only cost in the hundreds of dollars.\n\nSo while Sun's marketing and hype were brilliant and that was a factor, there was simply no way to argue for the financials of Smalltalk when starting from scratch at the time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37106, "question": "&gt;  I agree that main reason Java succeeded was corporate's financial support and marketing.\n\nI've never used Smalltalk extensively, but we evaluated what was available in the late 90s (not sure if it was IBM or Parcplace or both). I can tell you another reason why I think Java won out based on that experience: Smalltalk was expensive! Smalltalk vendors wanted to charge thousands per seat while Java was a free download, then the first Java IDEs cropped up and they only cost in the hundreds of dollars.\n\nSo while Sun's marketing and hype were brilliant and that was a factor, there was simply no way to argue for the financials of Smalltalk when starting from scratch at the time.", "aSentId": 37107, "answer": "Oh, so there is another thing common to Ada! AFAIK for a long time many Ada compilers were expensive and that prevent it from spreading. Funny how history repeats itself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37104, "question": "&gt;I think Java beat it due to business reasons rather than technological\n\nI might have used words poorly. I don't think that Java has any advantage above Smalltalk as a language: BOTH works great as languages where refactoring is crucial and IDE should easily support that. It's difficult to compare them for me since I only looked at the snippets of Smalltalk, but I can easily imagine Smalltalk wiping out floor with Java.\n\nThere days however JVM (not Java) has (speed) advantage. I'd attribute it to the amount of effort put by many VM specialists over the years, all of them hired/sponsored by Sun/Oracle. I agree that main reason Java succeeded was corporate's financial support and marketing.\n\nCurrently, to fill gap between them one would have to optimize Smalltalk VM (least important), introduce modern great set of Maven/Gradle-like building tools (more important) and (above all) invest huge amount of money into marketing to convince everyone that Smalltalk is what cool kids use.", "aSentId": 37109, "answer": "&gt; I don't think that Java has any advantage above Smalltalk as a language\n\nMaybe one thing: it can be deployed as normal files (Jar, War, etc.) on the system, that run on a predictable platform (JRE), and that don't embark unwanted state.\n\nAs far as I know (which is not much, but I've worked recently at a company that still had a very significant Smalltalk prod running), Smalltalk needs to be deployed as whole images, that are more or less snapshots of whatever the devs had in front of them. Which is an issue when deploying to prod (reliability, repeatability, etc.).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37104, "question": "&gt;I think Java beat it due to business reasons rather than technological\n\nI might have used words poorly. I don't think that Java has any advantage above Smalltalk as a language: BOTH works great as languages where refactoring is crucial and IDE should easily support that. It's difficult to compare them for me since I only looked at the snippets of Smalltalk, but I can easily imagine Smalltalk wiping out floor with Java.\n\nThere days however JVM (not Java) has (speed) advantage. I'd attribute it to the amount of effort put by many VM specialists over the years, all of them hired/sponsored by Sun/Oracle. I agree that main reason Java succeeded was corporate's financial support and marketing.\n\nCurrently, to fill gap between them one would have to optimize Smalltalk VM (least important), introduce modern great set of Maven/Gradle-like building tools (more important) and (above all) invest huge amount of money into marketing to convince everyone that Smalltalk is what cool kids use.", "aSentId": 37111, "answer": "&gt; but I can easily imagine Smalltalk wiping out floor with Java.\n\nYou'll have to illustrate what you mean by \"wipe the floor\", but as I said in my comment above, because Smalltalk is dynamically typed, even the simplest refactorings such as renaming a method must be supervised by a human because the IDE simply cannot know if the changes it makes are safe.\n\nEclipse, IDEA and Visual Studio are light years ahead of any Smalltalk IDE's in that respect, and they always will be. The only thing that might change that is if Smalltalk ever gains some mandatory typing.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37112, "question": "&gt; but I can easily imagine Smalltalk wiping out floor with Java.\n\nYou'll have to illustrate what you mean by \"wipe the floor\", but as I said in my comment above, because Smalltalk is dynamically typed, even the simplest refactorings such as renaming a method must be supervised by a human because the IDE simply cannot know if the changes it makes are safe.\n\nEclipse, IDEA and Visual Studio are light years ahead of any Smalltalk IDE's in that respect, and they always will be. The only thing that might change that is if Smalltalk ever gains some mandatory typing.\n", "aSentId": 37113, "answer": "As I said: I never used it and I cannot compare it to Java. But books written by e.g. Gang of Four, Fowler gave me impression that they were really fond of the language, IDE, VM and how all of that nicely cooperated. I kind of thought that they preferred Smalltalk to Java, so perhaps there would be a reason for it, but that's just my impression.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37102, "question": "I used Smalltalk professionally for the first 4 years of my career, and while I agree it will never be mainstream, I think Java beat it due to business reasons rather than technological.  In the 90's there was some major conflict in the Smalltalk world when a couple of the major vendors got into a tussle. By the time it recovered Java had taken over.\n\nSmalltalk has garbage collection and a very robust IDE.  In fact you can browse both and alter them at will.  Additionally the xUnit testing framework originated in Smalltalk (sUnit), and was later ported to Java/.NET/etc...", "aSentId": 37115, "answer": "&gt; Smalltalk has garbage collection and a very robust IDE.\n\nRobust, maybe, but crippled by the fact that the language is dynamically typed, which severely limits the automated refactorings it can offer (most of which must be supervised by a human in order not to break code, so they're actually hardly automated).\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37116, "question": "&gt; Smalltalk has garbage collection and a very robust IDE.\n\nRobust, maybe, but crippled by the fact that the language is dynamically typed, which severely limits the automated refactorings it can offer (most of which must be supervised by a human in order not to break code, so they're actually hardly automated).\n", "aSentId": 37117, "answer": "Have you ever tried it? Or you're just keep repeating your false preconception about dynamically typed languages and IDEs?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37118, "question": "Have you ever tried it? Or you're just keep repeating your false preconception about dynamically typed languages and IDEs?", "aSentId": 37119, "answer": "His argument here isn't that far of the mark. Renaming commonly named methods etc. can be painful. Not the end of the world, but not without some measure of truth either.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37118, "question": "Have you ever tried it? Or you're just keep repeating your false preconception about dynamically typed languages and IDEs?", "aSentId": 37121, "answer": "I've used Smalltalk for years and I agree with him.\n\nDynamic typing is great, but I've also had times when I curse at it when some other framework I had installed decided to use the same method name as me, making refactoring anything somewhat tedious. You pop up a \"Implementers of...\" dialog and get hundreds of implementers of which 3 are yours.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37122, "question": "I've used Smalltalk for years and I agree with him.\n\nDynamic typing is great, but I've also had times when I curse at it when some other framework I had installed decided to use the same method name as me, making refactoring anything somewhat tedious. You pop up a \"Implementers of...\" dialog and get hundreds of implementers of which 3 are yours.", "aSentId": 37123, "answer": "Yeah, there are *some* refactorings which are saf*er* in *some* statically typed languages (although in half of my Java projects I couldn't do completely safe renames either). But people forget that dynamic typing also makes certain IDE features easier to implement and use (live modification of the program for example).\nSo, from a different perspective, using the same logic, I could say, IntelliJ is crippled because Java is statically typed.\nNowadays I use Java with IntelliJ and I still think that a Smalltalk IDE is more powerful regarding my needs and more fun to use.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37122, "question": "I've used Smalltalk for years and I agree with him.\n\nDynamic typing is great, but I've also had times when I curse at it when some other framework I had installed decided to use the same method name as me, making refactoring anything somewhat tedious. You pop up a \"Implementers of...\" dialog and get hundreds of implementers of which 3 are yours.", "aSentId": 37125, "answer": "&gt; other framework I had installed decided to use the same method name as me, making refactoring anything somewhat tedious\n\nAnyways, you can restrict the scope of refactoring in this case.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37127, "question": "Is the date on the post accurate? It reads like it was written in 1999. \n\nAnd, yes, in 1999 I was a fulltime Smalltalk dev.", "aSentId": 37128, "answer": "That's the thing with advocacy posts: denial of the weaknesses of their technology of choice and rehash of the same old tired arguments over and over again.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37129, "question": "That's the thing with advocacy posts: denial of the weaknesses of their technology of choice and rehash of the same old tired arguments over and over again.\n", "aSentId": 37130, "answer": "This post is not a denial. It specifically points out the weaknesses. That does not mean, however, that no mitigation is possible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37129, "question": "That's the thing with advocacy posts: denial of the weaknesses of their technology of choice and rehash of the same old tired arguments over and over again.\n", "aSentId": 37132, "answer": "I don't know what you read, but what I saw was a surprising honest assessment. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37133, "question": "I don't know what you read, but what I saw was a surprising honest assessment. ", "aSentId": 37134, "answer": "You're operating on the assumption that they read anything more than the title.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37136, "question": "The image-based view of things is kind-of unacceptable for me. Suppose I develop a program in Smalltalk, and send it to someone else. They make changes, I make changes. Merging the resulting images is not going to be an easy thing to do (especially if we've both changed particularly core or important objects). I much prefer a program to be a program that can start itself up from scratch.\n\nSmalltalk's general way of doing things also makes it hard to interact with things outside Smalltalk. Imagine trying to create and manipulate a native window in your desktop environment, for example; it won't have all the Smalltalky goodness you can normally rely on. Culture clashes can be confusing to humans, and even more so for computers.", "aSentId": 37137, "answer": "This was solved by the Envy version control system.  It made team development practical and it logged every single edit transparently.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37138, "question": "This was solved by the Envy version control system.  It made team development practical and it logged every single edit transparently.", "aSentId": 37139, "answer": "&gt; This was solved by the Envy version control system.\n\nA fair point. But chances are ais523 wont get to use Envy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37141, "question": "See how much better the result is when you actually say something! This is the best response so far, by more than an order of magnitude :)", "aSentId": 37142, "answer": "ALL my articles and post say something, just not necessarily anything *you* personally care about. ;-)\n\nIf I have nothing to say, no point(s) to make, then I don't bother writing it. I am not one to churn out fluff. Whether you think my point(s) is(are) worth making is purely a matter of opinion or taste.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37143, "question": "ALL my articles and post say something, just not necessarily anything *you* personally care about. ;-)\n\nIf I have nothing to say, no point(s) to make, then I don't bother writing it. I am not one to churn out fluff. Whether you think my point(s) is(are) worth making is purely a matter of opinion or taste.", "aSentId": 37144, "answer": "It really doesn't matter what I think about it: look at the rating of this article compared to your previous puff pieces. Now don't slip back!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37147, "question": "&gt; There aren\u2019t many third-party Smalltalk class libraries available. This is largely due to the lack of a language standard.\n\nNo, this is largely due to the fact that hardly anyone uses Smalltalk. There are countless languages that don't have a language standard and yet possess a very healthy ecosystem of third party libraries.\n\n&gt; Is there really a need for dozens of different frameworks like you find in Java and PHP?\n\nYes. Competition is good and the best libraries rise to the top. If you only have two contenders, chances are high you'll be stuck with a sub par de facto standard that everyone uses because there's nothing else.\n\n&gt;  Today, a new programming language really needs a boost from corporate sponsorship in order to compete.\n\nIt helps, but there are plenty of counter examples to this claim (Ruby and Python for example).\n\nOverall, this is just another bland piece of Smalltalk advocacy that ignores the main reasons why hardly anyone uses Smalltalk today, one of them being that it's dynamically typed, a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\n", "aSentId": 37148, "answer": "As I explicitly stated, in the past, growing a language from grassroots was a hit-and-miss affair. Python and Ruby were hits, but there were, and are, a lot more misses. The programming language landscape is littered with the corpses of failed attempts.\n\nHardly anyone uses Smalltalk?? As this and other posts have indicated, there is a thriving user base. It's nowhere near as large as the user base for Java and other mainstream languages, but if that's your definition of success, it's pretty myopic and parochial.\n\nThe industry has NOT decided against dynamic languages. Type systems are coming back into vogue, yes, but dynamic languages are still widely used. If your contention is that dynamic languages are not suitable for large-scale applications, I may agree with you, but they're hardly going away.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37147, "question": "&gt; There aren\u2019t many third-party Smalltalk class libraries available. This is largely due to the lack of a language standard.\n\nNo, this is largely due to the fact that hardly anyone uses Smalltalk. There are countless languages that don't have a language standard and yet possess a very healthy ecosystem of third party libraries.\n\n&gt; Is there really a need for dozens of different frameworks like you find in Java and PHP?\n\nYes. Competition is good and the best libraries rise to the top. If you only have two contenders, chances are high you'll be stuck with a sub par de facto standard that everyone uses because there's nothing else.\n\n&gt;  Today, a new programming language really needs a boost from corporate sponsorship in order to compete.\n\nIt helps, but there are plenty of counter examples to this claim (Ruby and Python for example).\n\nOverall, this is just another bland piece of Smalltalk advocacy that ignores the main reasons why hardly anyone uses Smalltalk today, one of them being that it's dynamically typed, a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\n", "aSentId": 37150, "answer": "&gt;Python\n\nGoogle\n\n&gt;a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\nGolang is practically dynamically typed w/ interface{}", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37151, "question": "&gt;Python\n\nGoogle\n\n&gt;a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\nGolang is practically dynamically typed w/ interface{}", "aSentId": 37152, "answer": "&gt; Google\n\nAre you serious?\n\nPython is twenty years old, Guido was at Google for three years when the language was already fifteen years old. Google has nothing to do with Python's success.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37153, "question": "&gt; Google\n\nAre you serious?\n\nPython is twenty years old, Guido was at Google for three years when the language was already fifteen years old. Google has nothing to do with Python's success.", "aSentId": 37154, "answer": "Coincidentally, I entered the Python world around the time Guido was at Google, although not because of it. I know my experience isn't universal, but aren't we talking about \"raise to popularity\" instead of \"when the language was started\"?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37155, "question": "Coincidentally, I entered the Python world around the time Guido was at Google, although not because of it. I know my experience isn't universal, but aren't we talking about \"raise to popularity\" instead of \"when the language was started\"?", "aSentId": 37156, "answer": "I remember Python being quite popular back in the late 90s... that's when I learned it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37155, "question": "Coincidentally, I entered the Python world around the time Guido was at Google, although not because of it. I know my experience isn't universal, but aren't we talking about \"raise to popularity\" instead of \"when the language was started\"?", "aSentId": 37158, "answer": "No, the guy above claimed that Google helped Python become more popular, but Python was well popular before Google decided to \"help\". And we all know how google will \"help\" - they will work on their own stuff at the same time; see dart, see chrome, see go.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37151, "question": "&gt;Python\n\nGoogle\n\n&gt;a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\nGolang is practically dynamically typed w/ interface{}", "aSentId": 37160, "answer": "Nope - python became wide-spread well before Google went to assist them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37151, "question": "&gt;Python\n\nGoogle\n\n&gt;a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\nGolang is practically dynamically typed w/ interface{}", "aSentId": 37162, "answer": "&gt; Golang is practically dynamically typed w/ interface{}\n\nSo you can call any method on an object of type interface (dynamic typing) or do you have to cast it first (static typing) ?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37163, "question": "&gt; Golang is practically dynamically typed w/ interface{}\n\nSo you can call any method on an object of type interface (dynamic typing) or do you have to cast it first (static typing) ?", "aSentId": 37164, "answer": "You have to cast it, Go is absolutely not dynamically typed, it's structurally typed, like OCaml's object system: an abstract type is defined not as a name but as a set of methods (where a method is a {name, argtypes} pair).\n\nStructural typing is essentially the statically typed version of \"duck typing\", and tends to have less ceremony than nominative typing, but that's about it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37147, "question": "&gt; There aren\u2019t many third-party Smalltalk class libraries available. This is largely due to the lack of a language standard.\n\nNo, this is largely due to the fact that hardly anyone uses Smalltalk. There are countless languages that don't have a language standard and yet possess a very healthy ecosystem of third party libraries.\n\n&gt; Is there really a need for dozens of different frameworks like you find in Java and PHP?\n\nYes. Competition is good and the best libraries rise to the top. If you only have two contenders, chances are high you'll be stuck with a sub par de facto standard that everyone uses because there's nothing else.\n\n&gt;  Today, a new programming language really needs a boost from corporate sponsorship in order to compete.\n\nIt helps, but there are plenty of counter examples to this claim (Ruby and Python for example).\n\nOverall, this is just another bland piece of Smalltalk advocacy that ignores the main reasons why hardly anyone uses Smalltalk today, one of them being that it's dynamically typed, a characteristic that the industry has recognized as no longer acceptable for large scale software in the 21st century.\n\n", "aSentId": 37166, "answer": "&gt;  the main reasons\n\nHardly anyone uses Smalltalk today *because* hardly anyone uses Smalltalk today.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37167, "question": "&gt;  the main reasons\n\nHardly anyone uses Smalltalk today *because* hardly anyone uses Smalltalk today.\n", "aSentId": 37168, "answer": "Which they don't do, or shouldn't do, because Smalltalk has a lot of problems.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37170, "question": "&gt; this is just another bland piece of Smalltalk advocacy that ignores the main reasons why hardly anyone uses Smalltalk\n\nThis one is a lot better than the last several articles coming out of this project; I largely agree, but it's a big step up compared to the last one.", "aSentId": 37171, "answer": "?????\n\nThis post ignores the \"main reasons?\" And pray tell, what are these main reasons? I thought the 6 reasons I wrote about *were* the main reasons.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37172, "question": "?????\n\nThis post ignores the \"main reasons?\" And pray tell, what are these main reasons? I thought the 6 reasons I wrote about *were* the main reasons.", "aSentId": 37173, "answer": "Did you respond to the wrong person? I didn't say anything about the main reasons for anything. If anything I was defending your latest piece as being a big improvement over your earlier ones.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37174, "question": "Did you respond to the wrong person? I didn't say anything about the main reasons for anything. If anything I was defending your latest piece as being a big improvement over your earlier ones.", "aSentId": 37175, "answer": "Yes, I replied to the wrong person.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37178, "question": "&gt; If you only have two contenders, chances are high you'll be stuck with a sub par de facto standard that everyone uses because there's nothing else.\n\nGood try, but Seaside is the preeminent server-side web framework, and has been for quite a few years, for very good reasons. If it has suffered for lack of competition, I certainly cannot see how. IMO, it's better than Rails or Django. (Perhaps not as good as [web2py](https://medium.com/@richardeng/the-zen-of-web2py-ede59769d084), though. ;-)", "aSentId": 37179, "answer": "&gt; Good try, but Seaside is the preeminent server-side web framework, and has been for quite a few years, for very good reasons.\n\nI was going to reply and then I decided that having this kind of conversation with someone who has a financial interest in Smalltalk's popularity is probably not the best use of my time. I can't imagine you'll ever be able to see things rationally until you leave the Smalltalk industry.\n\nI don't have a dog in this fight, I'm just a technologist who enjoys commenting on programming trends, that's my only motivation for participating in these discussions. Your motivation is to sell.\n\nBest of luck to you.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37180, "question": "&gt; Good try, but Seaside is the preeminent server-side web framework, and has been for quite a few years, for very good reasons.\n\nI was going to reply and then I decided that having this kind of conversation with someone who has a financial interest in Smalltalk's popularity is probably not the best use of my time. I can't imagine you'll ever be able to see things rationally until you leave the Smalltalk industry.\n\nI don't have a dog in this fight, I'm just a technologist who enjoys commenting on programming trends, that's my only motivation for participating in these discussions. Your motivation is to sell.\n\nBest of luck to you.\n", "aSentId": 37181, "answer": "I have ZERO financial interest in Smalltalk's popularity. My campaign is strictly done *pro bono*, done out of love for the language and for no other reason. It's altruism, pure and simple.\n\nI'm a technologist who loves programming technology. It's more of a hobby than anything else.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37182, "question": "I have ZERO financial interest in Smalltalk's popularity. My campaign is strictly done *pro bono*, done out of love for the language and for no other reason. It's altruism, pure and simple.\n\nI'm a technologist who loves programming technology. It's more of a hobby than anything else.", "aSentId": 37183, "answer": "&gt; I have ZERO financial interest in Smalltalk's popularity.\n\nMaybe not. Or maybe not, right now. But if Smalltalk were to take over the world you stand to benefit in may ways. And if someone approached you and offered you a good position using Smalltalk I doubt you'd turn it down. There's nothing wrong with that but don't lie to yourself.\n\nBy the way, if that ever happens, don't do it. Not if you want to continue your love affair with Smalltalk.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37184, "question": "&gt; I have ZERO financial interest in Smalltalk's popularity.\n\nMaybe not. Or maybe not, right now. But if Smalltalk were to take over the world you stand to benefit in may ways. And if someone approached you and offered you a good position using Smalltalk I doubt you'd turn it down. There's nothing wrong with that but don't lie to yourself.\n\nBy the way, if that ever happens, don't do it. Not if you want to continue your love affair with Smalltalk.", "aSentId": 37185, "answer": "Trust me, NOBODY is going to hire me. For starters, I haven't done any Smalltalk programming in over 7 years; I'm too rusty. For another, I'm retired. Ageism works against me; in this economy (esp. in Canada), finding a job is quite difficult.\n\nBut the most important reason is that I've lost my intellectual mojo. My memory has deteriorated; I'm not as sharp as I used to be; and I tire easily (I'm old!). My coding days are over.\n\nSo what kind of job can I get?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37186, "question": "Trust me, NOBODY is going to hire me. For starters, I haven't done any Smalltalk programming in over 7 years; I'm too rusty. For another, I'm retired. Ageism works against me; in this economy (esp. in Canada), finding a job is quite difficult.\n\nBut the most important reason is that I've lost my intellectual mojo. My memory has deteriorated; I'm not as sharp as I used to be; and I tire easily (I'm old!). My coding days are over.\n\nSo what kind of job can I get?", "aSentId": 37187, "answer": "That was incredibly honest. And you killed my argument. Hear hear! \n\nWhy do you care about Smalltalk then?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37188, "question": "That was incredibly honest. And you killed my argument. Hear hear! \n\nWhy do you care about Smalltalk then?", "aSentId": 37189, "answer": "Because I admire the many qualities of the language: the simplicity, elegance, and purity; the power and expressiveness; the associated IDE. It's a *philosophical* obsession. [I greatly favour simple languages](https://medium.com/@richardeng/how-to-choose-a-programming-language-1cf2014f5aec), a philosophy that goes back to the days of Wirth and Brinch Hansen.\n\nAnd because I firmly believe that overlooking such an incredibly productive tool is a profound mistake for our industry, one that I hope to correct. Philosophy. Beliefs. Isn't that what drives all humans?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37188, "question": "That was incredibly honest. And you killed my argument. Hear hear! \n\nWhy do you care about Smalltalk then?", "aSentId": 37191, "answer": "BTW, I admire Lisp, too. But I've never been personally able to get into Lisp/Scheme. I guess I'm too old and [set in my ways](https://medium.com/@richardeng/fp-is-for-nerds-6ed1ca43bb34). ;-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37193, "question": "What the hell is this trend of web frameworks asking you to install them by wget or curl-ing a random script and executing? Packages anyone?!", "aSentId": 37194, "answer": "Web frameworks rise and fall so quickly that none live long enough to actually get promoted to a repository somewhere.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37193, "question": "What the hell is this trend of web frameworks asking you to install them by wget or curl-ing a random script and executing? Packages anyone?!", "aSentId": 37196, "answer": "I wouldn't have thought \"download and build from source\" was exactly a \"trend\". Mighty long lived one.\n\nPackages require a whole lot more time and effort from the developer without actually increasing core functionality of the thing they're writing. It's certainly easier for the end user, but not necessarily the best use of dev resources.\n\nBut hey, the joy of FOSS - are you volunteering to maintain the Debian package?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37193, "question": "What the hell is this trend of web frameworks asking you to install them by wget or curl-ing a random script and executing? Packages anyone?!", "aSentId": 37198, "answer": "Observe closely. Before I clicked on the link, I expected to read \"tested on OS X and something else\". Guess what I found?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37200, "question": "Rant, a procedural text generation language", "aSentId": 37201, "answer": "Looks like fun! I'll pin it and try it out later. Would be great for playing with poetry", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37202, "question": "Looks like fun! I'll pin it and try it out later. Would be great for playing with poetry", "aSentId": 37203, "answer": "I am glad someone noticed the rhyming features; we had a lot of fun implementing and testing them!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37200, "question": "Rant, a procedural text generation language", "aSentId": 37205, "answer": "Spammers of the world, rejoice!  Your programming language has arrived...  Never again will people be able to spot your copy pasta.\n\nThis could also be good for writing up quests for games.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37200, "question": "Rant, a procedural text generation language", "aSentId": 37207, "answer": "That is one sexy / relevant project name. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37209, "question": "Technical Debt Is Inevitable", "aSentId": 37210, "answer": "I do this same dance usually once a week.\n\n90% if the time it is missing unit test coverage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37213, "question": "Microsoft announces asm.js optimizations", "aSentId": 37214, "answer": "ELI5: What is asm.js and why should I care about this?\n\nMy cursory search came up with, basically, you can compile c to javascript with the help of asm. Am I missing something big here?\n\nSorry for the dumb question, but web dev is not my area, and I've always tried my damnedest to avoid js.\n\nEdit: Well, I got way more responses than I expected. Thanks for clearing that up for me, everyone! Sounds interesting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37215, "question": "ELI5: What is asm.js and why should I care about this?\n\nMy cursory search came up with, basically, you can compile c to javascript with the help of asm. Am I missing something big here?\n\nSorry for the dumb question, but web dev is not my area, and I've always tried my damnedest to avoid js.\n\nEdit: Well, I got way more responses than I expected. Thanks for clearing that up for me, everyone! Sounds interesting.", "aSentId": 37216, "answer": "You can take any LLVM compatible language and make it compile to asm.js JS bytecode.\nasm.js is also very fast-even Unreal runs on it. So you should care about it, because with asm.js you might start writing apps for the browser in any other language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37217, "question": "You can take any LLVM compatible language and make it compile to asm.js JS bytecode.\nasm.js is also very fast-even Unreal runs on it. So you should care about it, because with asm.js you might start writing apps for the browser in any other language.", "aSentId": 37218, "answer": "&gt; LLVM compatible language\n\nAll the demos have been C or C++, haven't they?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37219, "question": "&gt; LLVM compatible language\n\nAll the demos have been C or C++, haven't they?", "aSentId": 37220, "answer": "They're the big heavyweight nasty ones. If you can compile C and C++ to roughly native speed, you can compile just about anything to roughly native speed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37221, "question": "They're the big heavyweight nasty ones. If you can compile C and C++ to roughly native speed, you can compile just about anything to roughly native speed.", "aSentId": 37222, "answer": "I think someone even got Quake III running through asm.js, and it actually plays pretty well. I'm not one for browser games and stuff, but for school or just showing people games, browser games like this are pretty amazing. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37223, "question": "I think someone even got Quake III running through asm.js, and it actually plays pretty well. I'm not one for browser games and stuff, but for school or just showing people games, browser games like this are pretty amazing. ", "aSentId": 37224, "answer": "At some point it stops being a \"browser game\" and just starts being a game that runs in the browser.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37225, "question": "At some point it stops being a \"browser game\" and just starts being a game that runs in the browser.", "aSentId": 37226, "answer": "Well, browsers have become an execution environment, these days.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37227, "question": "Well, browsers have become an execution environment, these days.", "aSentId": 37228, "answer": "So running an app in a browser, on an OS, in a hypervisor has become the 'turtles all the way down' of modern computing?  ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37229, "question": "So running an app in a browser, on an OS, in a hypervisor has become the 'turtles all the way down' of modern computing?  ;)", "aSentId": 37230, "answer": "React implements the DOM and event handling in JS, because it's faster than using the DOM directly... Then React Canvas implemements rendering and part of CSS in JS because it's faster...\n\nWe are building a complete browser in JS, running inside a browser. And it is faster.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37231, "question": "React implements the DOM and event handling in JS, because it's faster than using the DOM directly... Then React Canvas implemements rendering and part of CSS in JS because it's faster...\n\nWe are building a complete browser in JS, running inside a browser. And it is faster.", "aSentId": 37232, "answer": "It's faster because the scope is so much smaller. If they were to actually support all the crud that a modern browser needs to support, it would be a lot slower.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37231, "question": "React implements the DOM and event handling in JS, because it's faster than using the DOM directly... Then React Canvas implemements rendering and part of CSS in JS because it's faster...\n\nWe are building a complete browser in JS, running inside a browser. And it is faster.", "aSentId": 37234, "answer": "From what I get, it's also easier to make compliant because one organization (Facebook in case of React) can just handle all the edge cases, rather than everyone programming their CSS. I for one welcome our new overlords.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37229, "question": "So running an app in a browser, on an OS, in a hypervisor has become the 'turtles all the way down' of modern computing?  ;)", "aSentId": 37236, "answer": "Pretty much.\n\nOne thing I find interesting about browsers is that, unlike the abstraction/security layers below it, it's expected at a functional level to be sandboxed. This is great because it means that, once browsers take over the rest of computing, we can start dropping the lower layers or replacing them with stubs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37223, "question": "I think someone even got Quake III running through asm.js, and it actually plays pretty well. I'm not one for browser games and stuff, but for school or just showing people games, browser games like this are pretty amazing. ", "aSentId": 37238, "answer": "*Yay, the native speed if I had the same machine as of 15 years ago :-)*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37239, "question": "*Yay, the native speed if I had the same machine as of 15 years ago :-)*", "aSentId": 37240, "answer": "This is exactly what I have been saying about JavaScript for years. Somehow people are impressed by doing something today in browsers that people where doing decades ago on much much worse hardware. I think it's interesting to take a look at the WebGL port of Quake 2; it has a framerate of about 10fps __with hardware acceleration__, that's worse than how my Pentium 2 233 MHz CPU did when it had to plot _every single pixel on the screen itself_. Worst part of it is that it doesn't have to be like this. This is not some sort of natural restriction that happens because the program is run inside another program that we just have to accept. It's _javascript's fault_. Simple. JavaScript is not created for performance, it was made to just make it simple to make an animated sequence of text scroll by in the status bar of the browser. It was a gimmick. However, today people _insist_ that it's a good language (which it isn't, and yes I do use JavaScript a lot, and if you think it's a good language it's probably because it's the only language you know - which seems to be the case for more people than I'd like) and that rather than dropping it, we should keep throwing money and time on it and just cross our fingers and hope that it will somehow magically overcome the laws of physics. Hrmf.\n\nASM.JS is pretty neat though. It's what I want, but not how I want it. VM = Good, basing it on JS = bad. It's basically sidestepping the core issue. Just lose the dead weight already!\n\nOn a related note : have there been enough improvements and additions to HTML/CSS/JavaScript to defend the _enormous_ use of resources that browsers employ? Is _100 MB_ of RAM displaying this document that takes 500Kb in transfer defensible? And why is hardware acceleration suddenly a necessity for browsers? Somehow it seems that hardware is getting better and better, but it doesn't matter because software is getting shittier and shittier. C++ compilers are better than ever, but it doesn't matter because the software people write with it negates everything the optimizers and other various basement dwellers have been working on for decades.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37241, "question": "This is exactly what I have been saying about JavaScript for years. Somehow people are impressed by doing something today in browsers that people where doing decades ago on much much worse hardware. I think it's interesting to take a look at the WebGL port of Quake 2; it has a framerate of about 10fps __with hardware acceleration__, that's worse than how my Pentium 2 233 MHz CPU did when it had to plot _every single pixel on the screen itself_. Worst part of it is that it doesn't have to be like this. This is not some sort of natural restriction that happens because the program is run inside another program that we just have to accept. It's _javascript's fault_. Simple. JavaScript is not created for performance, it was made to just make it simple to make an animated sequence of text scroll by in the status bar of the browser. It was a gimmick. However, today people _insist_ that it's a good language (which it isn't, and yes I do use JavaScript a lot, and if you think it's a good language it's probably because it's the only language you know - which seems to be the case for more people than I'd like) and that rather than dropping it, we should keep throwing money and time on it and just cross our fingers and hope that it will somehow magically overcome the laws of physics. Hrmf.\n\nASM.JS is pretty neat though. It's what I want, but not how I want it. VM = Good, basing it on JS = bad. It's basically sidestepping the core issue. Just lose the dead weight already!\n\nOn a related note : have there been enough improvements and additions to HTML/CSS/JavaScript to defend the _enormous_ use of resources that browsers employ? Is _100 MB_ of RAM displaying this document that takes 500Kb in transfer defensible? And why is hardware acceleration suddenly a necessity for browsers? Somehow it seems that hardware is getting better and better, but it doesn't matter because software is getting shittier and shittier. C++ compilers are better than ever, but it doesn't matter because the software people write with it negates everything the optimizers and other various basement dwellers have been working on for decades.", "aSentId": 37242, "answer": "10 FPS? Your PC is broken.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37241, "question": "This is exactly what I have been saying about JavaScript for years. Somehow people are impressed by doing something today in browsers that people where doing decades ago on much much worse hardware. I think it's interesting to take a look at the WebGL port of Quake 2; it has a framerate of about 10fps __with hardware acceleration__, that's worse than how my Pentium 2 233 MHz CPU did when it had to plot _every single pixel on the screen itself_. Worst part of it is that it doesn't have to be like this. This is not some sort of natural restriction that happens because the program is run inside another program that we just have to accept. It's _javascript's fault_. Simple. JavaScript is not created for performance, it was made to just make it simple to make an animated sequence of text scroll by in the status bar of the browser. It was a gimmick. However, today people _insist_ that it's a good language (which it isn't, and yes I do use JavaScript a lot, and if you think it's a good language it's probably because it's the only language you know - which seems to be the case for more people than I'd like) and that rather than dropping it, we should keep throwing money and time on it and just cross our fingers and hope that it will somehow magically overcome the laws of physics. Hrmf.\n\nASM.JS is pretty neat though. It's what I want, but not how I want it. VM = Good, basing it on JS = bad. It's basically sidestepping the core issue. Just lose the dead weight already!\n\nOn a related note : have there been enough improvements and additions to HTML/CSS/JavaScript to defend the _enormous_ use of resources that browsers employ? Is _100 MB_ of RAM displaying this document that takes 500Kb in transfer defensible? And why is hardware acceleration suddenly a necessity for browsers? Somehow it seems that hardware is getting better and better, but it doesn't matter because software is getting shittier and shittier. C++ compilers are better than ever, but it doesn't matter because the software people write with it negates everything the optimizers and other various basement dwellers have been working on for decades.", "aSentId": 37244, "answer": "You're missing the point entirely. This has nothing to do with JavaScript. Why would some week-old, Code Academy-trained JavaScript developer care about anything involving C code? They can't even spell LLVM. I don't think anyone on the asm.js team has any illusions about how good JavaScript isn't. That's kind of the point, they've discarded most of it and shoehorned on top some woefully missing features.\n\nThis is because game developers have almost universally failed to write and distribute platform independent code. This is because, even though most game programmers are now glorified Lua programmers, C++ programmers in name only, Java is \"too slow\" and \"virtual machines are bad\". Never mind that, between the OS and the CRT, you're nowhere near the actual machine, \"virtual machines are bad\". Never mind that some code dynamically compiled with Hotspot can be faster than statically compiled code, \"virtual machines are bad\".\n\nAnd this is about mobile systems being walled gardens of locked-down operating systems, with their own set of development tools that completely break the workflow for even those few people who ever bothered to figure out a cross-platform workflow. Somehow, they *forgot* to turn of JavaScript in the browser. Somehow, they let Google Chrome get released on their systems, opening up a chance to do a complete end-run-around on their ludicrous app stores.\n\nThis is because everyone knows there is no way in hell they're going to convince Apple to include a new language in the browser. Hell, even Internet Explorer has had the ability to run languages other than JavaScript for TWENTY YEARS.\n\nThis is because asshat MBAs the world over refuse to hire adults to work on projects. Don't blame the child-like JS developer for the sins his boss is committing.\n\nYes, it's a hack. It's a hack to force a new reality into place where those in entrenched positions have fought, kicking and screaming, against progress.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37245, "question": "You're missing the point entirely. This has nothing to do with JavaScript. Why would some week-old, Code Academy-trained JavaScript developer care about anything involving C code? They can't even spell LLVM. I don't think anyone on the asm.js team has any illusions about how good JavaScript isn't. That's kind of the point, they've discarded most of it and shoehorned on top some woefully missing features.\n\nThis is because game developers have almost universally failed to write and distribute platform independent code. This is because, even though most game programmers are now glorified Lua programmers, C++ programmers in name only, Java is \"too slow\" and \"virtual machines are bad\". Never mind that, between the OS and the CRT, you're nowhere near the actual machine, \"virtual machines are bad\". Never mind that some code dynamically compiled with Hotspot can be faster than statically compiled code, \"virtual machines are bad\".\n\nAnd this is about mobile systems being walled gardens of locked-down operating systems, with their own set of development tools that completely break the workflow for even those few people who ever bothered to figure out a cross-platform workflow. Somehow, they *forgot* to turn of JavaScript in the browser. Somehow, they let Google Chrome get released on their systems, opening up a chance to do a complete end-run-around on their ludicrous app stores.\n\nThis is because everyone knows there is no way in hell they're going to convince Apple to include a new language in the browser. Hell, even Internet Explorer has had the ability to run languages other than JavaScript for TWENTY YEARS.\n\nThis is because asshat MBAs the world over refuse to hire adults to work on projects. Don't blame the child-like JS developer for the sins his boss is committing.\n\nYes, it's a hack. It's a hack to force a new reality into place where those in entrenched positions have fought, kicking and screaming, against progress.", "aSentId": 37246, "answer": "&gt; This is because game developers have almost universally failed to write and distribute platform independent code.\n\nGame developers for at least two decades write a lot of platform independent code. But they only target platforms that they know they will make back the time investment for supporting that platform.\n\n&gt; This is because, even though most game programmers are now glorified Lua programmers, C++ programmers in name only\n\nWtf are you talking about?\n\n&gt; Java is \"too slow\" and \"virtual machines are bad\". \n\nJava doesn't provide enough low level access for high performance games. Even the few modern games written in Java have to rely on native layers like LWJGL. LWJGL tries a bit to expose some low level control via native buffers, but at that point it would be easier to write in C or C++.\n\n&gt; Never mind that, between the OS and the CRT, you're nowhere near the actual machine\n\nOf course you are, you might be running in an unprivileged process but beyond the timeslices where the OS takes over (which are *far* from even being measurable), you are using the real CPU and memory. And with the new GPU APIs (or nvidia's command buffers for OpenGL) you get low level access to the hardware.\n\n&gt; \"virtual machines are bad\"\n\nVirtual machines (in the sense of JavaVM and similar) aren't bad, they are used in games at least since the days of Sierra's AGI in the 80s and in fast paced action games at least since Quake 1 in 1996. But when you need high performance, they are not where you'll find it.\n\n&gt; Never mind that some code dynamically compiled with Hotspot can be faster than statically compiled code\n\nOnly in microbenchmarks for very specific and narrow cases that happen very rarely in real code, maybe. In practice all evidence has shown against that.\n\nAlso modern day high performance is all about cache control and that requires manual memory management (of course high algorithms are also important, but that applies to any language). An environment (i'd say language but most languages can be statically compiled too) needs not only to allow for such low level access but also not interfere with that (so even if you can, say, allow for memory managment in a VM, you must make sure that the VM's GC for managed parts isn't going to fragment your heap while you're not looking).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37247, "question": "&gt; This is because game developers have almost universally failed to write and distribute platform independent code.\n\nGame developers for at least two decades write a lot of platform independent code. But they only target platforms that they know they will make back the time investment for supporting that platform.\n\n&gt; This is because, even though most game programmers are now glorified Lua programmers, C++ programmers in name only\n\nWtf are you talking about?\n\n&gt; Java is \"too slow\" and \"virtual machines are bad\". \n\nJava doesn't provide enough low level access for high performance games. Even the few modern games written in Java have to rely on native layers like LWJGL. LWJGL tries a bit to expose some low level control via native buffers, but at that point it would be easier to write in C or C++.\n\n&gt; Never mind that, between the OS and the CRT, you're nowhere near the actual machine\n\nOf course you are, you might be running in an unprivileged process but beyond the timeslices where the OS takes over (which are *far* from even being measurable), you are using the real CPU and memory. And with the new GPU APIs (or nvidia's command buffers for OpenGL) you get low level access to the hardware.\n\n&gt; \"virtual machines are bad\"\n\nVirtual machines (in the sense of JavaVM and similar) aren't bad, they are used in games at least since the days of Sierra's AGI in the 80s and in fast paced action games at least since Quake 1 in 1996. But when you need high performance, they are not where you'll find it.\n\n&gt; Never mind that some code dynamically compiled with Hotspot can be faster than statically compiled code\n\nOnly in microbenchmarks for very specific and narrow cases that happen very rarely in real code, maybe. In practice all evidence has shown against that.\n\nAlso modern day high performance is all about cache control and that requires manual memory management (of course high algorithms are also important, but that applies to any language). An environment (i'd say language but most languages can be statically compiled too) needs not only to allow for such low level access but also not interfere with that (so even if you can, say, allow for memory managment in a VM, you must make sure that the VM's GC for managed parts isn't going to fragment your heap while you're not looking).", "aSentId": 37248, "answer": "&gt; Java doesn't provide enough low level access for high performance games. Even the few modern games written in Java have to rely on native layers like LWJGL. LWJGL tries a bit to expose some low level control via native buffers, but at that point it would be easier to write in C or C++.\n\nI'd also add that garbage collection is a massive obstacle in building any kind of high-performance game engine. That's one of the reasons why there aren't many Java games at all (besides Minecraft, which runs like shit).\n\n&gt; Virtual machines (in the sense of JavaVM and similar) aren't bad, they are used in games at least since the days of Sierra's AGI in the 80s and in fast paced action games at least since Quake 1 in 1996. But when you need high performance, they are not where you'll find it.\n\nCheck out the Quake 3 engine and its own 'virtual machine' - the whole review of engine is pretty [interesting.](http://fabiensanglard.net/quake3/qvm.php)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37249, "question": "&gt; Java doesn't provide enough low level access for high performance games. Even the few modern games written in Java have to rely on native layers like LWJGL. LWJGL tries a bit to expose some low level control via native buffers, but at that point it would be easier to write in C or C++.\n\nI'd also add that garbage collection is a massive obstacle in building any kind of high-performance game engine. That's one of the reasons why there aren't many Java games at all (besides Minecraft, which runs like shit).\n\n&gt; Virtual machines (in the sense of JavaVM and similar) aren't bad, they are used in games at least since the days of Sierra's AGI in the 80s and in fast paced action games at least since Quake 1 in 1996. But when you need high performance, they are not where you'll find it.\n\nCheck out the Quake 3 engine and its own 'virtual machine' - the whole review of engine is pretty [interesting.](http://fabiensanglard.net/quake3/qvm.php)", "aSentId": 37250, "answer": "Garbage collection, by itself, isn't an obstacle. Several (C++) games have a garbage collector to assist with resource management, the difference is that the engine has full control over the collector, what is considered \"garbage\", when collection happens and how it happens. If a language can provide such control over its GC (f.e. D looks like it can, but i haven't investigated that in detail) then the collector by itself is fine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37249, "question": "&gt; Java doesn't provide enough low level access for high performance games. Even the few modern games written in Java have to rely on native layers like LWJGL. LWJGL tries a bit to expose some low level control via native buffers, but at that point it would be easier to write in C or C++.\n\nI'd also add that garbage collection is a massive obstacle in building any kind of high-performance game engine. That's one of the reasons why there aren't many Java games at all (besides Minecraft, which runs like shit).\n\n&gt; Virtual machines (in the sense of JavaVM and similar) aren't bad, they are used in games at least since the days of Sierra's AGI in the 80s and in fast paced action games at least since Quake 1 in 1996. But when you need high performance, they are not where you'll find it.\n\nCheck out the Quake 3 engine and its own 'virtual machine' - the whole review of engine is pretty [interesting.](http://fabiensanglard.net/quake3/qvm.php)", "aSentId": 37252, "answer": "&gt; garbage collection is a massive obstacle\n\nIt's not. You just *never* allocate anything during the game loop. People are writing 60fps pause-free mobile games every day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37239, "question": "*Yay, the native speed if I had the same machine as of 15 years ago :-)*", "aSentId": 37254, "answer": "Eh, you've got access to a faster GPU. Besides, most JS code on a modern PC likely runs faster than compiled C on a 15 year old machine, you'd have to cherry pick specific cases for it to be slow.\n\nIt's plenty fast enough for most cases and doesn't come with the many, many drawbacks of native development.\n\nComments like yours remind me of the people clinging to DOS development in the Win95 era.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37223, "question": "I think someone even got Quake III running through asm.js, and it actually plays pretty well. I'm not one for browser games and stuff, but for school or just showing people games, browser games like this are pretty amazing. ", "aSentId": 37256, "answer": "&gt; I think someone even got Quake III running through asm.js, and it actually plays pretty well.\n\nKeep in mind that Quake 3 ran on a P3/K7 with 500 MHz @ 60+ FPS.\n\nAlso note that today's CPUs get a lot more done per MHz. A single 3 GHz core gets easily 12 times as much done.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37257, "question": "&gt; I think someone even got Quake III running through asm.js, and it actually plays pretty well.\n\nKeep in mind that Quake 3 ran on a P3/K7 with 500 MHz @ 60+ FPS.\n\nAlso note that today's CPUs get a lot more done per MHz. A single 3 GHz core gets easily 12 times as much done.", "aSentId": 37258, "answer": "Well of course, but I was mostly surprised at the efficiency of C -&gt; JavaScript itself. It just amazes me that we have gotten to the point where we can compile what used to be languages which only compile to straight asm into other obscure languages like JavaScript and whatnot.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37221, "question": "They're the big heavyweight nasty ones. If you can compile C and C++ to roughly native speed, you can compile just about anything to roughly native speed.", "aSentId": 37260, "answer": "I should point out at this point though that compiling something with emscripten doesn't give you anything near native speed right now, even when using firefox with OdinMonkey and full optimizations enabled.\n\nI've observed something like 4-12x slowdowns, with a 9x slowdown  being common for my personal applications (mostly image processing, recursive spline subdivision, FEM...)\n\nBut of course that's still plenty fast for many applications (many games, physics-engines etc are fine with a 9x slowdown) and could provide a nice speedboost over plain javascript.\n\n(Now if only just about everything else game-related wasn't broken in many browsers, like low-latency input, vsync, low-latency framebuffer output... looking at you specifically, firefox)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37261, "question": "I should point out at this point though that compiling something with emscripten doesn't give you anything near native speed right now, even when using firefox with OdinMonkey and full optimizations enabled.\n\nI've observed something like 4-12x slowdowns, with a 9x slowdown  being common for my personal applications (mostly image processing, recursive spline subdivision, FEM...)\n\nBut of course that's still plenty fast for many applications (many games, physics-engines etc are fine with a 9x slowdown) and could provide a nice speedboost over plain javascript.\n\n(Now if only just about everything else game-related wasn't broken in many browsers, like low-latency input, vsync, low-latency framebuffer output... looking at you specifically, firefox)", "aSentId": 37262, "answer": "&gt; I should point out at this point though that compiling something with emscripten doesn't give you anything near native speed right now\n\nIt depends on the codebase, obviously. Things like Unity and Unreal Engine do run at near-native speed. But it's possible your particular codebase uses things that are harder to optimize.\n\nPlease file bugs with testcases of things that run slower than you'd expect!\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37221, "question": "They're the big heavyweight nasty ones. If you can compile C and C++ to roughly native speed, you can compile just about anything to roughly native speed.", "aSentId": 37264, "answer": "Not true, although you can compile C/C++ code to be very fast in the browser. At best, it's about half of native speed. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37265, "question": "Not true, although you can compile C/C++ code to be very fast in the browser. At best, it's about half of native speed. ", "aSentId": 37266, "answer": "But it runs Quake 3, that means we're speaking a Pentium III native speed! Ten years from now we'll be able to run a whole browser inside asm.js and in turn run Quake 1 on it at native speed.\n\nI mean it's cool, but regarding speed is \"cool\" as in toy-cool, a nice hobby project. I don't get the argument people make  to hamper your processing speed just for the sake of running something inside a browser. If you only have a hammer I guess it makes sense...\n\nOn the other hand it will allow people to give up on JavaScript and use better languages which is nice in of itself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37267, "question": "But it runs Quake 3, that means we're speaking a Pentium III native speed! Ten years from now we'll be able to run a whole browser inside asm.js and in turn run Quake 1 on it at native speed.\n\nI mean it's cool, but regarding speed is \"cool\" as in toy-cool, a nice hobby project. I don't get the argument people make  to hamper your processing speed just for the sake of running something inside a browser. If you only have a hammer I guess it makes sense...\n\nOn the other hand it will allow people to give up on JavaScript and use better languages which is nice in of itself.", "aSentId": 37268, "answer": "As a user, I like things that run in browsers because 1) I don't need to install the app and 2) I feel safer running unknown programs inside the browser sandbox. (Mobile platforms are starting to address the later, but most apps seem to ask for way too  many permissions) For me, these two alone are compelling reasons to build in browser apps, even with current limitations.\n\nAs someone building browser apps, there are lots of things I love about the browser and probably more things I hate about it (speed being one, although usually it is DOM speed not js).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37269, "question": "As a user, I like things that run in browsers because 1) I don't need to install the app and 2) I feel safer running unknown programs inside the browser sandbox. (Mobile platforms are starting to address the later, but most apps seem to ask for way too  many permissions) For me, these two alone are compelling reasons to build in browser apps, even with current limitations.\n\nAs someone building browser apps, there are lots of things I love about the browser and probably more things I hate about it (speed being one, although usually it is DOM speed not js).", "aSentId": 37270, "answer": "Android apps are ridiculous. The permissions system on some older version of the OS is incompatible with newer ones, so most apps just end up asking for carte blanche.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37267, "question": "But it runs Quake 3, that means we're speaking a Pentium III native speed! Ten years from now we'll be able to run a whole browser inside asm.js and in turn run Quake 1 on it at native speed.\n\nI mean it's cool, but regarding speed is \"cool\" as in toy-cool, a nice hobby project. I don't get the argument people make  to hamper your processing speed just for the sake of running something inside a browser. If you only have a hammer I guess it makes sense...\n\nOn the other hand it will allow people to give up on JavaScript and use better languages which is nice in of itself.", "aSentId": 37272, "answer": "I think you've got the wrong outlook here. Firstly, every time you download and install an executable, there's an inherent trust issue because that program could be malicious. This is much *less* of a threat in the modern browser world.\n\nSecondly, while most people are perfectly fine with the initial **time**/trust investment of downloading &amp; installing a game that they're going to play for at least an hour, casual internet users aren't going to install any native application that they'll run for, say, a minute, and that's where this type of thing shines. Consider any sort of interactive data visualization. It could be done with Flash, or Java, but it will be much better integrated with the webpage and more widely supported if implemented as a true web technology. More efficient web programming means more sophisticated visualizations and forms of interaction.\n\nFurthermore, writing for the web gives you an inherently large amount of portability. Javascript in a browser runs similarly in Windows, Linux, and Mac, x86 x86_64 and arm. This is often worth the decrease in performance.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37273, "question": "I think you've got the wrong outlook here. Firstly, every time you download and install an executable, there's an inherent trust issue because that program could be malicious. This is much *less* of a threat in the modern browser world.\n\nSecondly, while most people are perfectly fine with the initial **time**/trust investment of downloading &amp; installing a game that they're going to play for at least an hour, casual internet users aren't going to install any native application that they'll run for, say, a minute, and that's where this type of thing shines. Consider any sort of interactive data visualization. It could be done with Flash, or Java, but it will be much better integrated with the webpage and more widely supported if implemented as a true web technology. More efficient web programming means more sophisticated visualizations and forms of interaction.\n\nFurthermore, writing for the web gives you an inherently large amount of portability. Javascript in a browser runs similarly in Windows, Linux, and Mac, x86 x86_64 and arm. This is often worth the decrease in performance.", "aSentId": 37274, "answer": "Although you don't need to install most browser apps, they require you to download just as much data as the native versions.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37275, "question": "Although you don't need to install most browser apps, they require you to download just as much data as the native versions.", "aSentId": 37276, "answer": "It's easy for any user, experienced or otherwise, to go to a website, watch a loading bar for a bit, and then start playing. It's a lot more work and harder for the novice user to go to a website, find a download link (selecting the correct OS and CPU architecture), wait for it to download, execute the downloaded installer, press \"next\" and \"I agree\" a whole bunch of times, and then finally finding the executable the installer installed and execute it. Not to mention that now you have all the security issues associated with installing and running native software, and the software will still be on the computer taking up space even if you only ended up using it once.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37277, "question": "It's easy for any user, experienced or otherwise, to go to a website, watch a loading bar for a bit, and then start playing. It's a lot more work and harder for the novice user to go to a website, find a download link (selecting the correct OS and CPU architecture), wait for it to download, execute the downloaded installer, press \"next\" and \"I agree\" a whole bunch of times, and then finally finding the executable the installer installed and execute it. Not to mention that now you have all the security issues associated with installing and running native software, and the software will still be on the computer taking up space even if you only ended up using it once.", "aSentId": 37278, "answer": "That's a very biased comparison for the following reasons:\n\n * There's no need to click a link to download an executable any more than there is a need to click a specific button to start a web app. It's the same action.\n * It's trivial for a webpage to detect the client OS and give the user the correct executable right away, without the user ever having to make a choice.\n * If there are EULA's the user needs to agree to, they'll need to agree to them in the webapp version as well. Putting something on a webpage does not affect the need for legal mumbojumbo.\n * The user doesn't need to find the executable, since all browsers today allows them to open them as part of the download action.\n\nThe only UI difference between running a native application and a webpage is the need to confirm that you do indeed want to run the executable after downloading, which your OS will explicitly ask you. If the user is competent enough to click on the browser icon, they should be competent enough to do that.\n\nThe security issue is more serious. That's why nobody is suggesting to replace web apps with plain executables.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37279, "question": "That's a very biased comparison for the following reasons:\n\n * There's no need to click a link to download an executable any more than there is a need to click a specific button to start a web app. It's the same action.\n * It's trivial for a webpage to detect the client OS and give the user the correct executable right away, without the user ever having to make a choice.\n * If there are EULA's the user needs to agree to, they'll need to agree to them in the webapp version as well. Putting something on a webpage does not affect the need for legal mumbojumbo.\n * The user doesn't need to find the executable, since all browsers today allows them to open them as part of the download action.\n\nThe only UI difference between running a native application and a webpage is the need to confirm that you do indeed want to run the executable after downloading, which your OS will explicitly ask you. If the user is competent enough to click on the browser icon, they should be competent enough to do that.\n\nThe security issue is more serious. That's why nobody is suggesting to replace web apps with plain executables.", "aSentId": 37280, "answer": "&gt; The user doesn't need to find the executable, since all browsers today allows them to open them as part of the download action.\n\nYeah okay. I don't run into this problem weekly,nope.\n\nIt works the way you mentioned only if:\n- User has particular browser or browser's.\n- User has a particular security configuration disabled\n- Server sets the proper MIME type on the download.\n\nOne customer has 3 machines. Same OS, same browser, same webapp. Yet 1 of the 3 refuses to allow you to \"open\" an exe, only save is the option. Then the user gets totally lost trying to find their executable", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37279, "question": "That's a very biased comparison for the following reasons:\n\n * There's no need to click a link to download an executable any more than there is a need to click a specific button to start a web app. It's the same action.\n * It's trivial for a webpage to detect the client OS and give the user the correct executable right away, without the user ever having to make a choice.\n * If there are EULA's the user needs to agree to, they'll need to agree to them in the webapp version as well. Putting something on a webpage does not affect the need for legal mumbojumbo.\n * The user doesn't need to find the executable, since all browsers today allows them to open them as part of the download action.\n\nThe only UI difference between running a native application and a webpage is the need to confirm that you do indeed want to run the executable after downloading, which your OS will explicitly ask you. If the user is competent enough to click on the browser icon, they should be competent enough to do that.\n\nThe security issue is more serious. That's why nobody is suggesting to replace web apps with plain executables.", "aSentId": 37282, "answer": "Nonsense. First you've got to install the Origin client, then give away a bunch of personal info and make up yet another account password. Then the Origin client has to update itself for a while. Maybe those things will work, then you can start installing the \"latest\" VC redistributable, the \"latest\" DirectX, possibly a whole .NET upgrade, and whatever else the game thinks it needs. Finally, at some point in the distant future you may be able to install the game you wanted to play.\n\nOh, unless you're on a Mac, or Linux or some other OS. Then you're probably out of luck.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37267, "question": "But it runs Quake 3, that means we're speaking a Pentium III native speed! Ten years from now we'll be able to run a whole browser inside asm.js and in turn run Quake 1 on it at native speed.\n\nI mean it's cool, but regarding speed is \"cool\" as in toy-cool, a nice hobby project. I don't get the argument people make  to hamper your processing speed just for the sake of running something inside a browser. If you only have a hammer I guess it makes sense...\n\nOn the other hand it will allow people to give up on JavaScript and use better languages which is nice in of itself.", "aSentId": 37284, "answer": "The point is that these games have very simple engines that are easy to build for a single thread.  More modern game engines have schedulers that use multiple threads and share memory, which we have to add to JS first, which itself has broader implications.\n\nGetting a project building is most of the work for an emscripten port.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37286, "question": "A few months ago there are you was the example of a guy running a JavaScript browser in the browser", "aSentId": 37287, "answer": "We must go deeper...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37288, "question": "We must go deeper...", "aSentId": 37289, "answer": "[Deep enough?](http://osjsv2.0o.no/)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37290, "question": "[Deep enough?](http://osjsv2.0o.no/)", "aSentId": 37291, "answer": "Damn you I just played tetris on a OS implemented in JS on a web browser for 15 minutes. I hate myself and what I've done with my life.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37290, "question": "[Deep enough?](http://osjsv2.0o.no/)", "aSentId": 37293, "answer": "fuck me", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37217, "question": "You can take any LLVM compatible language and make it compile to asm.js JS bytecode.\nasm.js is also very fast-even Unreal runs on it. So you should care about it, because with asm.js you might start writing apps for the browser in any other language.", "aSentId": 37295, "answer": "Isn't it a little more opaque for my browser to being running bytecode? Not that I'm realistically going to inspect much JS beyond blocking it with NoScript.\n\nHow would the current dev tools in browsers handle such a thing?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37296, "question": "Isn't it a little more opaque for my browser to being running bytecode? Not that I'm realistically going to inspect much JS beyond blocking it with NoScript.\n\nHow would the current dev tools in browsers handle such a thing?", "aSentId": 37297, "answer": "Your browser already runs bytecode. Chrome, Firefox, and IE all already translate JS to an intermediate or machine-code format before executing it. Absent this phase of compilation, JavaScript would be mind-numbingly slow.\n\nAll asm.js is, is a subset of JS for which a broad class of optimizations become possible.  It's a hint for the extant JS compiler in your browser that it can, for example, do complete AOT compilation. Lots of bounds-checking can also be elided in asm.js code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37298, "question": "Your browser already runs bytecode. Chrome, Firefox, and IE all already translate JS to an intermediate or machine-code format before executing it. Absent this phase of compilation, JavaScript would be mind-numbingly slow.\n\nAll asm.js is, is a subset of JS for which a broad class of optimizations become possible.  It's a hint for the extant JS compiler in your browser that it can, for example, do complete AOT compilation. Lots of bounds-checking can also be elided in asm.js code.", "aSentId": 37299, "answer": "Sorry,  I assumed what your browser got was bytecode if it supported  AOT.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37300, "question": "Sorry,  I assumed what your browser got was bytecode if it supported  AOT.  ", "aSentId": 37301, "answer": "No, it's actually JS...  the idea of a project like Emscripten is to emit JS **as** the bytecode of the web.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37296, "question": "Isn't it a little more opaque for my browser to being running bytecode? Not that I'm realistically going to inspect much JS beyond blocking it with NoScript.\n\nHow would the current dev tools in browsers handle such a thing?", "aSentId": 37303, "answer": "Why do you care if your policy is \"block everything with noscript\"? \n\nBut asm.js generates valid Javascript. It's just a specific subset which can be directly translated by an AOT compiler into machine code. So you'd be able to read it like any other Javascript (It'd just look a bit weird maybe) ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37296, "question": "Isn't it a little more opaque for my browser to being running bytecode? Not that I'm realistically going to inspect much JS beyond blocking it with NoScript.\n\nHow would the current dev tools in browsers handle such a thing?", "aSentId": 37305, "answer": "helped cancel out your downvotes, your's a good question with good replies.\n\nand your replies to the replies also showed me a different perspective.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37307, "question": "Yes, it is absolutely opaque.  Which is the only real reason ever given for not moving to a bytecode standard integrated into browsers that people could write other languages to compile into.  So we're going to get it anyway.  Except since it's built on top of js there's a whole nother level of abstraction to leak and fight with.", "aSentId": 37308, "answer": "Unless you work on a browser it is a level of abstraction that you will not fight with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37309, "question": "Unless you work on a browser it is a level of abstraction that you will not fight with.", "aSentId": 37310, "answer": "I'm not sure what you mean.  If I want to create a video compression application, I am immediately prevented from doing so because the layer of abstraction doesn't include access to the filesystem nor does it provide useful multithreading.  Tweaking the inner loop to avoid branch misprediction and exploit the cache is right out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37215, "question": "ELI5: What is asm.js and why should I care about this?\n\nMy cursory search came up with, basically, you can compile c to javascript with the help of asm. Am I missing something big here?\n\nSorry for the dumb question, but web dev is not my area, and I've always tried my damnedest to avoid js.\n\nEdit: Well, I got way more responses than I expected. Thanks for clearing that up for me, everyone! Sounds interesting.", "aSentId": 37312, "answer": "It's basically a hack to create a VM bytecode which happens to also be valid javascript. So a normal javascript interpreter/JIT will still run it, but a javascript JIT which knows about the extras (e.g. type information) can generate much faster code (by basically turning into a proper VM instead of a javascript interpreter).\n\nIn some ways it's nice, because it's a potentially feasible way to get away from javascript in the browser, but on the other hand javascript is really not designed to be a bytecode and if you use it you wind up depending on the browser implementing asm.js to get decent performance anyway.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37313, "question": "It's basically a hack to create a VM bytecode which happens to also be valid javascript. So a normal javascript interpreter/JIT will still run it, but a javascript JIT which knows about the extras (e.g. type information) can generate much faster code (by basically turning into a proper VM instead of a javascript interpreter).\n\nIn some ways it's nice, because it's a potentially feasible way to get away from javascript in the browser, but on the other hand javascript is really not designed to be a bytecode and if you use it you wind up depending on the browser implementing asm.js to get decent performance anyway.", "aSentId": 37314, "answer": "It's true that asm-specific optimizations can help, but they aren't necessary to get fairly good performance. Even without such optimizations, chrome and safari do ok, they are not too far behind,\n\nhttp://arewefastyet.com/#machine=29&amp;view=breakdown&amp;suite=asmjs-apps\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37315, "question": "It's true that asm-specific optimizations can help, but they aren't necessary to get fairly good performance. Even without such optimizations, chrome and safari do ok, they are not too far behind,\n\nhttp://arewefastyet.com/#machine=29&amp;view=breakdown&amp;suite=asmjs-apps\n", "aSentId": 37316, "answer": "They are, nonetheless, the entire point of speccing out asm.js as a specific *subset* of JS instead of just having compilers target whatever part of JS they want.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37313, "question": "It's basically a hack to create a VM bytecode which happens to also be valid javascript. So a normal javascript interpreter/JIT will still run it, but a javascript JIT which knows about the extras (e.g. type information) can generate much faster code (by basically turning into a proper VM instead of a javascript interpreter).\n\nIn some ways it's nice, because it's a potentially feasible way to get away from javascript in the browser, but on the other hand javascript is really not designed to be a bytecode and if you use it you wind up depending on the browser implementing asm.js to get decent performance anyway.", "aSentId": 37318, "answer": "It is not really bytecode, it is valid JS that will run slow but fine on a regular JS engine. It is just a specific subset that maps well to advanced JIT.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37319, "question": "It is not really bytecode, it is valid JS that will run slow but fine on a regular JS engine. It is just a specific subset that maps well to advanced JIT.", "aSentId": 37320, "answer": "It is not that at all. It is compiled by an AOT compiler, not by a JIT, and the instructions are low level enough that it is basically a verbose bytecode.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37321, "question": "It is not that at all. It is compiled by an AOT compiler, not by a JIT, and the instructions are low level enough that it is basically a verbose bytecode.", "aSentId": 37322, "answer": "But it is not bytecode, it is runnable javascript.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37215, "question": "ELI5: What is asm.js and why should I care about this?\n\nMy cursory search came up with, basically, you can compile c to javascript with the help of asm. Am I missing something big here?\n\nSorry for the dumb question, but web dev is not my area, and I've always tried my damnedest to avoid js.\n\nEdit: Well, I got way more responses than I expected. Thanks for clearing that up for me, everyone! Sounds interesting.", "aSentId": 37324, "answer": "Like you're five? Well, okay...\n\nYou know how you like games? Other people like games, too. You know how you play games on that big box daddy has on his desk? Everyone has their own box for playing games, and there are lots of different types of boxes. Some are small and squishy. Some wear red-colored caps. Some are made of fruit!\n\nSometimes, when people want to play new games, they use those boxes to find them. You know how we sometimes watch cartoons on daddy's box? Or you know how we can send a letter to grandma, with pictures, and it gets to her right away? Or when daddy gets angry because of something someone said? That's all because everyone's boxes can all talk to each other!\n\nSo out in the world, there are people who make the games we play, and they make them on their boxes. And we can ask them--with *our* boxes--to play their games. Aren't these boxes amazing? It's like you can do anything with them. But you can't. No. They are actually awful, and they make daddy cry, because they can't do most things they should be able to do. Like when I tell you to go to bed, but you still play with your toys, and then daddy has to come get you and make you go to bed. Sometimes the boxes misbehave, too. Sometimes, those games don't work on everyone's boxes. Sometimes, the games only work on the small, squishy boxes, or the mini versions of the fruit boxes. The people with robot and penguin boxes don't have any games to play!\n\nPut that down. No. Put it down. I said NO!\n\nOk. Boxes. Games. Some people had an idea that, if they could make it easy for other people to make games for every box at the same time, then everyone would have games for their boxes. Now, lots of people have tried this before, but some people are scared of learning new ways of doing things. You know when we went to the lake and you wouldn't jump off the end of the dock, even though daddy was right there to catch you and you had the life jacket on and it was going to be really fun and you still wouldn't jump in? Some people are like that about making games. They want to make games that everyone can play on whatever type of boxes they might have, but they don't want to jump in to a new way of making games.\n\nSo, some other people had an idea that, if they could make it easy for THOSE people to make games for every box at the same time, then everyone would *surely* have games for their boxes. You push the buttons on the keyboard, and the letters show up. And then you use this really boring game called Emscripten on the box to scrub the letters. Brusha brusha brusha. And they now look completely different, don't they! Now they are called asm.js. Well, daddy and a lot of other people have done a lot of this button pushing, so daddy and those other people all have a lot of letters. So many letters they don't all fit on the screen. So many letters we couldn't even fit them in your toybox! I know! And we can use this boring game to scrub all those letters we wrote a long time ago, and maybe they will start working on other people's boxes.\n\nA potato? Okay, you're a potato.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37327, "question": "asm.js compiles C code into a subset of JS that can be compiled back into native code (with limitations to make it secure) by the browser's javascript interpreter.  Basically it strips out all the language features of JS that make it slow and turns into into something a lot more like assembly.\n\n[edit: as pointed out below, asm.js is specifically the subset of JS, there are several asm.js compilers the most well known being emscripten]", "aSentId": 37328, "answer": "You are confusing asm.js with emscripten (the compiler). asm.js has nothing to do with C.\n\nasm.js a subset of javascript which can be encoded as assembly, without relying on dynamic features in the JS interpreter, like object references or dynamic allocation. \n\nemscripten is the compiler (one of a few competing actually) which converts C to asm-compatible JS.\n\nThese projects are independent from each other and otherwise unrelated.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37329, "question": "You are confusing asm.js with emscripten (the compiler). asm.js has nothing to do with C.\n\nasm.js a subset of javascript which can be encoded as assembly, without relying on dynamic features in the JS interpreter, like object references or dynamic allocation. \n\nemscripten is the compiler (one of a few competing actually) which converts C to asm-compatible JS.\n\nThese projects are independent from each other and otherwise unrelated.", "aSentId": 37330, "answer": "I'm not sure it's a useful distinction for an ELI5, but yes, this is correct: asm.js is the target and emscripten is the compiler.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37331, "question": "I'm not sure it's a useful distinction for an ELI5, but yes, this is correct: asm.js is the target and emscripten is the compiler.", "aSentId": 37332, "answer": "It is a useful distinction because emscripten is a compiler and asm.js is a subset of javascript.\n\nConfusing asm with emscripten is a bad idea because emscripten is a completely separate project. asm.js is just browser rendering stuff.\n\nif people start calling emscripten stuff asm then you might run into a flash/shockwave or java/javascript situation where no one knows what you're talking about because there's some kind of overlap that someone paid way too much attention to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37329, "question": "You are confusing asm.js with emscripten (the compiler). asm.js has nothing to do with C.\n\nasm.js a subset of javascript which can be encoded as assembly, without relying on dynamic features in the JS interpreter, like object references or dynamic allocation. \n\nemscripten is the compiler (one of a few competing actually) which converts C to asm-compatible JS.\n\nThese projects are independent from each other and otherwise unrelated.", "aSentId": 37334, "answer": "what other 2asm.js compilers are there?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37335, "question": "what other 2asm.js compilers are there?", "aSentId": 37336, "answer": "The asm.js process goes compiler -&gt; llvm -&gt; asmjs.  The thought is that any llvm targeting language could eventually target asmjs. Now, of course that is the theory, in practice it takes work on the compiler's side to output llvm bytecode supported by the asmjs translator.\n\nRight now there is LLJS and emscripten.  I think there are a few scattered LLVM langauges that will also target asmjs, but not many right now. (interestingly, rust doesn't even target it right now)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37337, "question": "The asm.js process goes compiler -&gt; llvm -&gt; asmjs.  The thought is that any llvm targeting language could eventually target asmjs. Now, of course that is the theory, in practice it takes work on the compiler's side to output llvm bytecode supported by the asmjs translator.\n\nRight now there is LLJS and emscripten.  I think there are a few scattered LLVM langauges that will also target asmjs, but not many right now. (interestingly, rust doesn't even target it right now)", "aSentId": 37338, "answer": "Does ghcjs use asm.js or emscripten?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37339, "question": "Does ghcjs use asm.js or emscripten?", "aSentId": 37340, "answer": "I've never used it, but looking at it my initial hunch is no. (The package requirements don't indicate that it is translating anything to asmjs via the llvm)\n\nThat being said, it could still emit asmjs output without the llvm. It is just a little unlikely. Asmjs isn't gced, so it would be unlikely for a gced language to target it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37329, "question": "You are confusing asm.js with emscripten (the compiler). asm.js has nothing to do with C.\n\nasm.js a subset of javascript which can be encoded as assembly, without relying on dynamic features in the JS interpreter, like object references or dynamic allocation. \n\nemscripten is the compiler (one of a few competing actually) which converts C to asm-compatible JS.\n\nThese projects are independent from each other and otherwise unrelated.", "aSentId": 37342, "answer": "its is worth noting that asm.js does nothing for DOM operations that work on strings (99% of everyday js)....its for stuff that can exploit features like typed arrays (graphical apps)\n\nengines like v8 and odinmonkey already optimize common js on sites like reddit to the point of diminishing returns", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37327, "question": "asm.js compiles C code into a subset of JS that can be compiled back into native code (with limitations to make it secure) by the browser's javascript interpreter.  Basically it strips out all the language features of JS that make it slow and turns into into something a lot more like assembly.\n\n[edit: as pointed out below, asm.js is specifically the subset of JS, there are several asm.js compilers the most well known being emscripten]", "aSentId": 37344, "answer": "So, a cross-compiling cross-assembler? (I.e. compiling across languages, then compiling the result to assembly that gets assembled across architectures?)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37345, "question": "So, a cross-compiling cross-assembler? (I.e. compiling across languages, then compiling the result to assembly that gets assembled across architectures?)", "aSentId": 37346, "answer": "No, it's a very low-level subset of JavaScript selected to facilitate compiler optimizations. It can run on any JS engine, but browsers can optimize code following asm.js protocols to a near-native speed, making it a good *target* for compilation from C/C++/Java/etc. It is called 'asm' because the protocol resembles assembly code of native machines or Java/.NET bytecode, but because JavaScript has no standardized bytecode representation, a compiler targeting JavaScript engines must use pure JavaScript.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37347, "question": "No, it's a very low-level subset of JavaScript selected to facilitate compiler optimizations. It can run on any JS engine, but browsers can optimize code following asm.js protocols to a near-native speed, making it a good *target* for compilation from C/C++/Java/etc. It is called 'asm' because the protocol resembles assembly code of native machines or Java/.NET bytecode, but because JavaScript has no standardized bytecode representation, a compiler targeting JavaScript engines must use pure JavaScript.", "aSentId": 37348, "answer": "Ah, the comment I replied to made it sound like there was some JITing going on rather than highly optimized JavaScript that's still just JavaScript.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37349, "question": "Ah, the comment I replied to made it sound like there was some JITing going on rather than highly optimized JavaScript that's still just JavaScript.", "aSentId": 37350, "answer": "All major browsers perform JIT compilation and optimization of JavaScript code. Asmjs provides a standard subset of Javascript which JS engines can optimize to a much greater extent than normal JavaScript. It is up to the browser developer to target compilation for asmjs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37349, "question": "Ah, the comment I replied to made it sound like there was some JITing going on rather than highly optimized JavaScript that's still just JavaScript.", "aSentId": 37352, "answer": "It's still JIT, but it works *better* because asm.js is a limited subset of JS that the JIT can handle much more efficiently. It will run the same on a regular JS engine, just not as quickly.\n\nCalling it \"near-native\" performance is a bit misleading.  It's still a significant performance hit compared to native code, but still much faster than the usual compile-to-JS methods.  Considering how many layers of abstraction are involved, it's pretty damn impressive.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37353, "question": "It's still JIT, but it works *better* because asm.js is a limited subset of JS that the JIT can handle much more efficiently. It will run the same on a regular JS engine, just not as quickly.\n\nCalling it \"near-native\" performance is a bit misleading.  It's still a significant performance hit compared to native code, but still much faster than the usual compile-to-JS methods.  Considering how many layers of abstraction are involved, it's pretty damn impressive.", "aSentId": 37354, "answer": "&gt; It's still JIT, but it works better because asm.js is a limited subset of JS that the JIT can handle much more efficiently. It will run the same on a regular JS engine, just not as quickly.\n\nFirefox actually does AOT compilation on asm.js code, IIRC.  (Using much of the same machinery as the JIT engine, though.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37357, "question": "asm.js is a bunch of people who have become so mentally ill after suffering through the insane proscription handed down by lazy web browser authors that everyone must use javascript that they are now actually compiling things into a restricted subset of javascript.  Since it is abundantly clear that the web, built as a presentation system for static documents, is going to continue to be abused as an application platform (even though MANY decisions in the design of the web were specifically made to avoid creating an application platform), and that browser makers are not going to do the sensible thing and support a bytecode representation of functional code running in a sensibly-designed VM, people are going to work around it in the most kludgey ways possible.\n\nSo you write a program in a sensible language (anything but javascript), and then you compile it and out comes javascript!  Javascript which violates every single reason we are stuck with javascript (you should be able to read the code that runs on your machine, know what it's doing, etc, all the arguments given against a sensible bytecode standard being integrated into browsers), but javascript nonetheless.  Yet another leaky abstraction piled on top of the menagerie of fuckup the web has become!", "aSentId": 37358, "answer": "To be fair, with ecmascript 6, javascript will become very python-like. They added:\n\n* block scoping (let keyword to replace var)\n* arrow functions (function shorthand that behaves slightly different)\n* generators (from python)\n* hash and map support\n* tail call optimization (allowing better functional programming)\n* string templates\n* optional function arguments\n* lots and lots of syntactic sugar, such as class keyword, improved object syntax, etc\n\nIf you ignore all the legacy crap, it is now actually pretty decent language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37359, "question": "To be fair, with ecmascript 6, javascript will become very python-like. They added:\n\n* block scoping (let keyword to replace var)\n* arrow functions (function shorthand that behaves slightly different)\n* generators (from python)\n* hash and map support\n* tail call optimization (allowing better functional programming)\n* string templates\n* optional function arguments\n* lots and lots of syntactic sugar, such as class keyword, improved object syntax, etc\n\nIf you ignore all the legacy crap, it is now actually pretty decent language.", "aSentId": 37360, "answer": "Will ECMAScript 6 have native integers?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37359, "question": "To be fair, with ecmascript 6, javascript will become very python-like. They added:\n\n* block scoping (let keyword to replace var)\n* arrow functions (function shorthand that behaves slightly different)\n* generators (from python)\n* hash and map support\n* tail call optimization (allowing better functional programming)\n* string templates\n* optional function arguments\n* lots and lots of syntactic sugar, such as class keyword, improved object syntax, etc\n\nIf you ignore all the legacy crap, it is now actually pretty decent language.", "aSentId": 37362, "answer": "Will I be able to add numbers and get a predictable result?\n\nEdit: word", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37363, "question": "Will I be able to add numbers and get a predictable result?\n\nEdit: word", "aSentId": 37364, "answer": "You mean to compare numbers?\n\nObject.is replaces ===, and appears to be more predictable.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37365, "question": "You mean to compare numbers?\n\nObject.is replaces ===, and appears to be more predictable.", "aSentId": 37366, "answer": "Sorry. Missed the most important word in that sentence.\n\nWill I be able to **add** numbers and get a predictable result?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37367, "question": "Sorry. Missed the most important word in that sentence.\n\nWill I be able to **add** numbers and get a predictable result?", "aSentId": 37368, "answer": "I don't think that the way it adds numbers have changed (for keeping backwards compatability). There are, however, libraries for working with big numbers (that take numbers as strings). Not the ideal solution.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37363, "question": "Will I be able to add numbers and get a predictable result?\n\nEdit: word", "aSentId": 37370, "answer": "Will I be able to add a number and an object and get a type error?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37357, "question": "asm.js is a bunch of people who have become so mentally ill after suffering through the insane proscription handed down by lazy web browser authors that everyone must use javascript that they are now actually compiling things into a restricted subset of javascript.  Since it is abundantly clear that the web, built as a presentation system for static documents, is going to continue to be abused as an application platform (even though MANY decisions in the design of the web were specifically made to avoid creating an application platform), and that browser makers are not going to do the sensible thing and support a bytecode representation of functional code running in a sensibly-designed VM, people are going to work around it in the most kludgey ways possible.\n\nSo you write a program in a sensible language (anything but javascript), and then you compile it and out comes javascript!  Javascript which violates every single reason we are stuck with javascript (you should be able to read the code that runs on your machine, know what it's doing, etc, all the arguments given against a sensible bytecode standard being integrated into browsers), but javascript nonetheless.  Yet another leaky abstraction piled on top of the menagerie of fuckup the web has become!", "aSentId": 37372, "answer": "This is the only right comment among the rest.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37357, "question": "asm.js is a bunch of people who have become so mentally ill after suffering through the insane proscription handed down by lazy web browser authors that everyone must use javascript that they are now actually compiling things into a restricted subset of javascript.  Since it is abundantly clear that the web, built as a presentation system for static documents, is going to continue to be abused as an application platform (even though MANY decisions in the design of the web were specifically made to avoid creating an application platform), and that browser makers are not going to do the sensible thing and support a bytecode representation of functional code running in a sensibly-designed VM, people are going to work around it in the most kludgey ways possible.\n\nSo you write a program in a sensible language (anything but javascript), and then you compile it and out comes javascript!  Javascript which violates every single reason we are stuck with javascript (you should be able to read the code that runs on your machine, know what it's doing, etc, all the arguments given against a sensible bytecode standard being integrated into browsers), but javascript nonetheless.  Yet another leaky abstraction piled on top of the menagerie of fuckup the web has become!", "aSentId": 37374, "answer": "Tell me how you really feel?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37379, "question": "As an addendum to /u/Capaj, check out Google's PNaCl. It also uses (a stable subset of) LLVM, so again, you can use any LLVM compatible language. It's faster than asm.js (though most of those gains are likely because LLVM is much better at things like reg alloc etc) and permits things like shared address space threading.", "aSentId": 37380, "answer": "while I agree that PNaCl is better than asm.js, I think it is clear now that asm.js will win in the standartization race now thas M$ supports it too. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37382, "question": "The idea is that with asm.js you should be able to compile to javascript.  It is that simple.\n\nIt is pretty impressively powerful though as Unreal Engine 3 was compiled to it and you can test their Citadel demo running in browser.", "aSentId": 37383, "answer": "As far as I can tell, they've pulled the Citadel demo down. They have some kind of flappy bird clone in place of it now, i guess maybe to demonstrate more that the html5 export is suitable for mobile browsers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37384, "question": "As far as I can tell, they've pulled the Citadel demo down. They have some kind of flappy bird clone in place of it now, i guess maybe to demonstrate more that the html5 export is suitable for mobile browsers.", "aSentId": 37385, "answer": "Hmm that's a shame.  I guess it does make some sense because the Tappy Chicken is UE4.  It would be kinda nice if they posted something a bit more demanding though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37382, "question": "The idea is that with asm.js you should be able to compile to javascript.  It is that simple.\n\nIt is pretty impressively powerful though as Unreal Engine 3 was compiled to it and you can test their Citadel demo running in browser.", "aSentId": 37387, "answer": "Dead Trigger 2 is still up, and it is pretty impressive. http://beta.unity3d.com/jonas/DT2/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37213, "question": "Microsoft announces asm.js optimizations", "aSentId": 37392, "answer": "Nice!\n\nProject Spartan is really sounding to be a great release.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37393, "question": "Nice!\n\nProject Spartan is really sounding to be a great release.", "aSentId": 37394, "answer": "Knowing MS it will be slightly more bearable than IE.\nAnd I bet, a lot of the code-base probably comes straight from IE. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37393, "question": "Nice!\n\nProject Spartan is really sounding to be a great release.", "aSentId": 37396, "answer": "You're not being anti-Microsoft, do you want to get downvoted to oblivion and banned from all of Reddit? Remember Microsoft is the worst of worst, even if they figured out how to cure every cancer known to man. /s", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37213, "question": "Microsoft announces asm.js optimizations", "aSentId": 37398, "answer": "I wonder if money changes hands when companies \"partner up\" like this...\n\nMozilla, despite all its flaws, has been doing a lot of good for the web and the developer community. They deserve financial support from big players like Microsoft.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37399, "question": "I wonder if money changes hands when companies \"partner up\" like this...\n\nMozilla, despite all its flaws, has been doing a lot of good for the web and the developer community. They deserve financial support from big players like Microsoft.", "aSentId": 37400, "answer": "This isn't any sort of official \"partnership\" in any sense. Just collaboration between some engineers, and agreement at a higher level that the technology is useful for the web.\n\nThis sort of stuff happens all the time; money isn't involved (if it were, it would take a lot more time!).\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37399, "question": "I wonder if money changes hands when companies \"partner up\" like this...\n\nMozilla, despite all its flaws, has been doing a lot of good for the web and the developer community. They deserve financial support from big players like Microsoft.", "aSentId": 37402, "answer": "Well, with the Google and Yahoo deals they aren't really starved for money.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37403, "question": "Well, with the Google and Yahoo deals they aren't really starved for money.", "aSentId": 37404, "answer": "When compared to other browser producers (Google, Microsoft, Apple) though that's a drop in the ocean.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37406, "question": "The way I think about asm.js is like a seed. It's hard to know how that seed will develop in the future. At the moment there are restrictions to how that seed can work. But those restrictions could change in the future.\n\nAlso, asm.js does not seem to have garbage collection. Languages targeting it may try to bring their own garbage collection to it. Not sure how that would work out.\n\nRight now some companies will just try to make JavaScript by default \"saner\". See for example the recent discussions around \"SoundScript\". But even a \"SoundScript\" may still carry a lot of burden around. And we may still hope for something like asm.js that didn't have all of those burdens. The question remains just what will people be able to do with asm.js in a few years when it's deployed with a lot of optimizations. Mostly companies still have to deal with the \"Flash deprecation\" issue. And that will surely affect many more companies than just Adobe. :-)", "aSentId": 37407, "answer": "The good news is that Mozilla seem to be thinking about Flash deprecation too, and are making an HTML5 Flash player named Shumway. Between that and MSE+EME, maybe we'll have a solution where we don't have to rely on Adobe's begrudging stewardship of Flash at all anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37408, "question": "The good news is that Mozilla seem to be thinking about Flash deprecation too, and are making an HTML5 Flash player named Shumway. Between that and MSE+EME, maybe we'll have a solution where we don't have to rely on Adobe's begrudging stewardship of Flash at all anymore.", "aSentId": 37409, "answer": "That would be a god send!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37408, "question": "The good news is that Mozilla seem to be thinking about Flash deprecation too, and are making an HTML5 Flash player named Shumway. Between that and MSE+EME, maybe we'll have a solution where we don't have to rely on Adobe's begrudging stewardship of Flash at all anymore.", "aSentId": 37411, "answer": "*Adobe itself* is deprecating Flash. Technology-wise it's very, very similar to HTML5/Javascript (ActionStript is, like JavaScript, an ECMAScript dialect) in the first place, all their authoring tools can export to HTML5 already, and flash player development is being winded down.\n\nAdobe didn't stall npapi flash development because they hate Firefox on Linux, but because the whole thing is slated for the bin and Firefox/Linux is the smallest install base, so it starts there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37412, "question": "*Adobe itself* is deprecating Flash. Technology-wise it's very, very similar to HTML5/Javascript (ActionStript is, like JavaScript, an ECMAScript dialect) in the first place, all their authoring tools can export to HTML5 already, and flash player development is being winded down.\n\nAdobe didn't stall npapi flash development because they hate Firefox on Linux, but because the whole thing is slated for the bin and Firefox/Linux is the smallest install base, so it starts there.", "aSentId": 37413, "answer": "Oh I didn't say they hated it (though they haven't exactly shown much love to Linux). I also realize that Adobe is deprecating Flash.\n\nI just don't think Adobe is going about this process as well as they could be. There is a lot of Flash content out there that isn't exported to HTML5, and never will be. There are lots of Flash video players out there that companies are unwilling to upgrade. Why not make an HTML5 SWF player like Shumway for those? Then again an argument could be made that nobody WANTS that old SWF content anymore, even the arguably useful stuff.\n\nWhat I don't understand is why they willingly made a PPAPI version and focus so much of their effort on that, at the cost of their slowly-deteriorating other versions? Why not an HTML5 version that browsers could gradually support in their own sandboxes, like Shumway, while otherwise freezing Flash? Maybe it was just a matter of timing, but I still don't understand the rationale.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37408, "question": "The good news is that Mozilla seem to be thinking about Flash deprecation too, and are making an HTML5 Flash player named Shumway. Between that and MSE+EME, maybe we'll have a solution where we don't have to rely on Adobe's begrudging stewardship of Flash at all anymore.", "aSentId": 37415, "answer": "Yeah, instead, we get closed-source DRM built right into the browser! That's real progress.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37416, "question": "Yeah, instead, we get closed-source DRM built right into the browser! That's real progress.", "aSentId": 37417, "answer": "While I dislike DRM as much as the next gal, EME is just another plugin interface like the one that gives us Flash, just less open-ended. In a world where Adobe doesn't seem to care much about cross-browser compatibility anymore in Flash, I think having non-Flash alternatives for these things is beneficial, even if I'll be among the first people to turn EME off in my browser. At least this way I can limit the thing I turn off to the plugins that handle DRM, I guess.\n\nEdit: I'm afraid I'll need more than downvotes to understand, guys. Are you upset that instead of running NPAPI/PPAPI plugins to get DRM, we'll have to... run EME plugins/modules to get DRM? Or that you'll have to say no to EME modules instead of saying no to Flash? Or maybe you're thinking that browsers are showing more support for DRM by implementing this instead of supporting Flash? Really, toss me a bone here.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37418, "question": "While I dislike DRM as much as the next gal, EME is just another plugin interface like the one that gives us Flash, just less open-ended. In a world where Adobe doesn't seem to care much about cross-browser compatibility anymore in Flash, I think having non-Flash alternatives for these things is beneficial, even if I'll be among the first people to turn EME off in my browser. At least this way I can limit the thing I turn off to the plugins that handle DRM, I guess.\n\nEdit: I'm afraid I'll need more than downvotes to understand, guys. Are you upset that instead of running NPAPI/PPAPI plugins to get DRM, we'll have to... run EME plugins/modules to get DRM? Or that you'll have to say no to EME modules instead of saying no to Flash? Or maybe you're thinking that browsers are showing more support for DRM by implementing this instead of supporting Flash? Really, toss me a bone here.", "aSentId": 37419, "answer": "I'm inclined to agree, I hate the idea of EME but the bottom line is if Mozilla want to have any kind of market share at all then users are going to want to watch netflix and youtube @ 60fps etc. There's just no getting around it :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37416, "question": "Yeah, instead, we get closed-source DRM built right into the browser! That's real progress.", "aSentId": 37421, "answer": "There are two possibilities here.\n\nEither: \"Content providers will just keep using Flash if EME is not supported\" - in which case EME support is a win for free software.\n\nOr: \"Content providers will stop using DRM if EME is not supported\" - in which case EME support is a loss for free software.\n\nBut I don't think anyone can accurately guess which of these scenarios is correct.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37416, "question": "Yeah, instead, we get closed-source DRM built right into the browser! That's real progress.", "aSentId": 37423, "answer": "Nope. CDMs are optional plugins.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37425, "question": "Oh please, EME is *not* \"DRM\".", "aSentId": 37426, "answer": "Sure, you just go ahead and doublethink that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37427, "question": "Sure, you just go ahead and doublethink that.", "aSentId": 37428, "answer": "Not sure what part of my comment is \"doublethink\". The EME standard itself does not define any kind of DRM.\n\nEdit: Thanks for the downvotes guys, at least you didn't say that I would be raped by Satan for not thinking EME is a terrible thing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37431, "question": "I can't say I happy to hear that. asm.js is a dirty hack and so is js. Apparently Mozillas objection to NaCL was this: \"These native apps are just little black boxes in a webpage. [...] We really believe in HTML, and this is where we want to focus.\" \nBut really, at this point there is no difference between compiled js and bytecode.", "aSentId": 37432, "answer": "I think Mozilla's objection to NaCl, like pretty much everyone's, was that it's architecture-dependent \u2014 it runs native code, not bytecode. Probably what you meant to refer to is PNaCl, but that project looked more or less dead in the water when Mozilla came out with asm.js, and it wasn't compatible with anything but special versions of Chrome. And incidentally, IIRC PNaCl also involves some dirty hacks around LLVM limitations.\n\nasm.js, on the other hand, is compatible with everything, even browsers that don't know about asm.js. That's what Mozilla likes about it \u2014 it's practical. They don't have to try and shove a new technology down everyone's throats. They can build up asm.js without locking anyone out of anything. I understand the aesthetic objections to asm.js, but compatibility is not nothing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37431, "question": "I can't say I happy to hear that. asm.js is a dirty hack and so is js. Apparently Mozillas objection to NaCL was this: \"These native apps are just little black boxes in a webpage. [...] We really believe in HTML, and this is where we want to focus.\" \nBut really, at this point there is no difference between compiled js and bytecode.", "aSentId": 37434, "answer": "&gt; at this point there is no difference between compiled js and bytecode\n\nOf course there is. Asm.js **already works** in all browsers. (OK, maybe not Lynx.) NaCl bytecode doesn't.\n\nA disruptive tech has a much better chance of success if nobody can stop it. Non-Google browsers stopped NaCl by not supporting it; I think the window for that has closed now. Nobody can \"not support\" asm.js without turning off support for Javascript. The most they can do is not optimize it, but even then it'll be competitive with normal JS and meanwhile the competition will kick sand in their faces.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37431, "question": "I can't say I happy to hear that. asm.js is a dirty hack and so is js. Apparently Mozillas objection to NaCL was this: \"These native apps are just little black boxes in a webpage. [...] We really believe in HTML, and this is where we want to focus.\" \nBut really, at this point there is no difference between compiled js and bytecode.", "aSentId": 37436, "answer": "&gt;asm.js is a dirty hack and so is js.\n\n\nYes. But I believe pragmatism is important in this case; I don't see a well defined language proposal, which can replace js in the next years. asm.js has potential.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37438, "question": "Hopefully this is the beginning of the end for traditional operating systems and the beginning of running everything in a browser and leveraging web technologies.", "aSentId": 37439, "answer": "Not at all, it is still too slow, laggy, clumsy, costly and annoying to replace desktop experience. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37438, "question": "Hopefully this is the beginning of the end for traditional operating systems and the beginning of running everything in a browser and leveraging web technologies.", "aSentId": 37441, "answer": "I also look forward to the day.  As long as I have my browser and a terminal window, I can do my work.  With this [0], I don't even need the separate terminal.  Portability of the web is the key.\n\n[0] https://github.com/paradoxxxzero/butterfly", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37444, "question": "I hope this is a joke\n ", "aSentId": 37445, "answer": "The internet has been a joke for a long time now.  The idea of JavaScript being useful to anyone but very large corporations is hilarious. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37450, "question": "Extracting the Superfish certificate", "aSentId": 37451, "answer": "Now that all these Lenovo machines have broken root certs in their trust store, they should simply be recalled. This is no different from any other consumer product that is found to be dangerous after it's sold.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37453, "question": "Loci Programming Language - A replacement for C++?", "aSentId": 37454, "answer": "&gt; Algebraic Datatypes are a really simple and powerful concept, and the basis of functional programming.\n\nHere I was thinking lambda calculus was the basis of functional programming. Silly me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37453, "question": "Loci Programming Language - A replacement for C++?", "aSentId": 37456, "answer": "The same was said about D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37457, "question": "The same was said about D", "aSentId": 37458, "answer": "D still might do it one day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37459, "question": "D still might do it one day.", "aSentId": 37460, "answer": "D's ship has long sailed.  Mostly a result of very poor management, language bloat resulting in too many bugs and quality issues, and constantly breaking backward's compatibility which resulted in library rot.\n\nIt's a shame because there is such a massive desire for an alternative to C++ and D could have been the leader.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37461, "question": "D's ship has long sailed.  Mostly a result of very poor management, language bloat resulting in too many bugs and quality issues, and constantly breaking backward's compatibility which resulted in library rot.\n\nIt's a shame because there is such a massive desire for an alternative to C++ and D could have been the leader.", "aSentId": 37462, "answer": "Rust?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37463, "question": "Rust?", "aSentId": 37464, "answer": "Oh yeah, Rust, Nim, Loci, heck a well known indie game developer is working one as well called Jai that also looks promising.\n\nI'm happy to see a common sentiment among people who have used C++ for a decade or longer deciding enough is enough.  It's exciting to see what people are coming up with as alternatives.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37461, "question": "D's ship has long sailed.  Mostly a result of very poor management, language bloat resulting in too many bugs and quality issues, and constantly breaking backward's compatibility which resulted in library rot.\n\nIt's a shame because there is such a massive desire for an alternative to C++ and D could have been the leader.", "aSentId": 37466, "answer": "Go.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37453, "question": "Loci Programming Language - A replacement for C++?", "aSentId": 37468, "answer": "I'm pretty sure the only thing that can replace C++ is C++ (in this case, C++17) because it's established itself so well (despite its flaws/pitfalls).\n\nI, for one, don't really mind the complexity of the language. It's like the logic puzzle you can never completely solve and that's what I love about it. Mastery of the language is difficult if not impossible which makes it all the more worth it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37470, "question": "I've never heard of this language before until now. \n\n*Edit*: You got me interested, /u/knife_sharpener.", "aSentId": 37471, "answer": "Which is very bad for something which would like to compete with the ubiquity (i.e. most prominent feature) of C++", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37472, "question": "Which is very bad for something which would like to compete with the ubiquity (i.e. most prominent feature) of C++", "aSentId": 37473, "answer": "\"Big things have small beginnings\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37474, "question": "\"Big things have small beginnings\"", "aSentId": 37475, "answer": "C and C++ certainly did not have small beginnings by any stretch of the imagination. Few of the enduring and most used programming languages have, in fact. Either they had relation to existing popular languages, were invented within the halls of huge ivy league colleges, or were invented by huge already existing corporations. I'm really struggling to think of a single commonly used language that got popular by word of mouth.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37476, "question": "C and C++ certainly did not have small beginnings by any stretch of the imagination. Few of the enduring and most used programming languages have, in fact. Either they had relation to existing popular languages, were invented within the halls of huge ivy league colleges, or were invented by huge already existing corporations. I'm really struggling to think of a single commonly used language that got popular by word of mouth.", "aSentId": 37477, "answer": "I'm no historian but off the top of my head... what about Python or Ruby?\n\nThe \"old\" languages like C were developed in colleges because that was the way it was done back then. Another way to jump start a language is by taking an existing language and adding to it, leveraging the knowledge of existing developers (read C++). Having a big company behind it also doesn't hurt.\n\nI'm not saying that Loci will be the next C++ but it is possible. All it takes is for enough people to start developing libraries for it before other look at it as a viable option for the next project. What the future holds is anyone's guess.\n\nI value people trying to develop new languages and exploring the design space. This is such a young science that we need to test the boundaries before we settle on what's good and what's bad.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37478, "question": "I'm no historian but off the top of my head... what about Python or Ruby?\n\nThe \"old\" languages like C were developed in colleges because that was the way it was done back then. Another way to jump start a language is by taking an existing language and adding to it, leveraging the knowledge of existing developers (read C++). Having a big company behind it also doesn't hurt.\n\nI'm not saying that Loci will be the next C++ but it is possible. All it takes is for enough people to start developing libraries for it before other look at it as a viable option for the next project. What the future holds is anyone's guess.\n\nI value people trying to develop new languages and exploring the design space. This is such a young science that we need to test the boundaries before we settle on what's good and what's bad.", "aSentId": 37479, "answer": "Ruby I'll give you but Python was invented as part of a national research institute.\n\nI disagree with your statement that it's possible for Loci to be the next C++. Libraries may be part of the reason that hobbyist devs use certain languages but in the professional world, languages are used primarily because all their stuff already uses that language and it would cost billions of dollars to migrate (yes, billions). At this point I don't think anything has a chance of replacing C or C++. Too many man hours and dollars have already been devoted to them and for the majority of large businesses like Microsoft, IBM, certain game studios, switching is simply not a feasible option. Hell, a lot of the infrastructure you and I rely on on a daily basis runs ancient languages like FORTRAN and COBOL.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37480, "question": "Ruby I'll give you but Python was invented as part of a national research institute.\n\nI disagree with your statement that it's possible for Loci to be the next C++. Libraries may be part of the reason that hobbyist devs use certain languages but in the professional world, languages are used primarily because all their stuff already uses that language and it would cost billions of dollars to migrate (yes, billions). At this point I don't think anything has a chance of replacing C or C++. Too many man hours and dollars have already been devoted to them and for the majority of large businesses like Microsoft, IBM, certain game studios, switching is simply not a feasible option. Hell, a lot of the infrastructure you and I rely on on a daily basis runs ancient languages like FORTRAN and COBOL.", "aSentId": 37481, "answer": "Today's startup is tomorrow's big corp. There are many situations in which new languages have a chance to get a foot-hold in a professional environment.\n\nTrue, it is dumb to try to switch languages when everything is already in C++ and all of your developers are comfortable in the language. There is no reason to switch unless the new language introduces *significant* benefits.\n\nBut without these entry pathways, no new languages would ever be introduced into professional developments. We would all still be coding in FORTRAN, COBOL, APL and C.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37484, "question": "only Go can replace C++", "aSentId": 37485, "answer": "Go isn't webscale.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37486, "question": "Go isn't webscale.", "aSentId": 37487, "answer": "umm what?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37493, "question": "Introducing gist-compile: Organizing your code snippets using Github Gists!", "aSentId": 37494, "answer": "Stop deleting and reposting this. You're spamming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37496, "question": "/r/ConTalks - a new subreddit to share presentations about programming and technology, come join us!", "aSentId": 37497, "answer": "This is my kind of sub! Thanks for sharing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37496, "question": "/r/ConTalks - a new subreddit to share presentations about programming and technology, come join us!", "aSentId": 37499, "answer": "needs more prose and cons", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37496, "question": "/r/ConTalks - a new subreddit to share presentations about programming and technology, come join us!", "aSentId": 37501, "answer": "The new subreddit for conmen? Count me in", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37502, "question": "The new subreddit for conmen? Count me in", "aSentId": 37503, "answer": "Programming is just our cover story. ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 37505, "question": "Subscribed!\n\nLove that idea, but I'd like a bi-weekly/monthly pinned \"best of /r/ConTalks\" containing the most interesting talks, as there aren't that many hours in my day to watch them all.", "aSentId": 37506, "answer": "Definitely a good idea there.  ", "corpus": "reddit"}]