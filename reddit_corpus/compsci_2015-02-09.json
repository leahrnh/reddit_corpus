[{"docID": "t5_2qhmr","qSentId": 46003,"question": "Silver: A free implementation of Swift for .NET, Java, Android, and Cocoa","aSentId": 46004,"answer": "Oh free as in free drugs; only the first are free, after that is 799$ per user.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46005,"question": "Oh free as in free drugs; only the first are free, after that is 799$ per user.","aSentId": 46006,"answer": "I'm stealing this for whenever someone says \"but it's free for the first two months!\". Thank you so much","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46003,"question": "Silver: A free implementation of Swift for .NET, Java, Android, and Cocoa","aSentId": 46008,"answer": "Disappointing it's not OSS.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46003,"question": "Silver: A free implementation of Swift for .NET, Java, Android, and Cocoa","aSentId": 46010,"answer": "Is this the xamarin counterpart for swift?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46014,"question": "Can you write iPhone apps with this if I'm on a windows?","aSentId": 46015,"answer": "nope","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46016,"question": "nope","aSentId": 46017,"answer": "Well, you can *write* apps on Windows (there are several platforms that facilitate this), but you can't test them on Windows, at least not without access to a remote Mac.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46019,"question": "Very cool!  I like swift, but why .NET?","aSentId": 46020,"answer": "Probably because Microsoft open sourced it. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46019,"question": "Very cool!  I like swift, but why .NET?","aSentId": 46022,"answer": "More importantly; why not just C#? There are very few features in swift that I would miss in C#.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46023,"question": "More importantly; why not just C#? There are very few features in swift that I would miss in C#.","aSentId": 46024,"answer": "I agree, C# is really nice.  Although some people like the message bus based languages where events get piped to a global message bus and anyone can subscribe to listen for those events.  I think that was one of the big things about swift anyways, I am not sure our ios codebase is native.\n\n\nIt's less confusing than most delegate-like paradigms of function callbacks and etc. for some people.  Plus people familiar with apple apis etc (if they chose to wrap them some how, I would hope that they did at least some core libs) will enjoy the familiarity.\n\n\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46025,"question": "I agree, C# is really nice.  Although some people like the message bus based languages where events get piped to a global message bus and anyone can subscribe to listen for those events.  I think that was one of the big things about swift anyways, I am not sure our ios codebase is native.\n\n\nIt's less confusing than most delegate-like paradigms of function callbacks and etc. for some people.  Plus people familiar with apple apis etc (if they chose to wrap them some how, I would hope that they did at least some core libs) will enjoy the familiarity.\n\n\n","aSentId": 46026,"answer": "You seem to be describing functional reactive programming, but I hadn't heard that swift natively supported that. Could you provide a link that elaborates please?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46019,"question": "Very cool!  I like swift, but why .NET?","aSentId": 46028,"answer": "Because it's (sorta) cross-platform and has a large userbase of both developers and consumers...","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46030,"question": "(Co-Turing) Recognizability of infinite, but not finite, version of Post's Correspondence Problem","aSentId": 46031,"answer": "You probably have to be careful to define what you mean by an \"infinite\" solution.  I interpret it to mean \"is there no bound to the length of a sequence of tiles that you can place such that the numerator and denominator strings will never mismatch\".\n\nIf there is no infinite solution, then there must be a maximum number of tiles that can be placed before hitting a non-match.  By checking increasing sizes, if you ever reach a size where you can never place that many tiles, you have found that there is no solution (finite or infinite).  Otherwise, if you can keep placing tiles, and eventually find a finite solution, you will also be able to recognize when that happens.\n\nThese would be the only 2 ways that the \"infinite but not finite\" version can fail, and you can recognize both of them.  The problem is that, if there is an infinite solution, you won't be sure of that:  for all you know, you are about to hit that last maximum number of tiles.  So, this problem would be co-recognizable, but not decidable.\n\nHope I understood you correctly.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46032,"question": "You probably have to be careful to define what you mean by an \"infinite\" solution.  I interpret it to mean \"is there no bound to the length of a sequence of tiles that you can place such that the numerator and denominator strings will never mismatch\".\n\nIf there is no infinite solution, then there must be a maximum number of tiles that can be placed before hitting a non-match.  By checking increasing sizes, if you ever reach a size where you can never place that many tiles, you have found that there is no solution (finite or infinite).  Otherwise, if you can keep placing tiles, and eventually find a finite solution, you will also be able to recognize when that happens.\n\nThese would be the only 2 ways that the \"infinite but not finite\" version can fail, and you can recognize both of them.  The problem is that, if there is an infinite solution, you won't be sure of that:  for all you know, you are about to hit that last maximum number of tiles.  So, this problem would be co-recognizable, but not decidable.\n\nHope I understood you correctly.","aSentId": 46033,"answer": "Thanks, yes that is what I mean. I'm trying to reason about that maximum number. I assume it is some variant of k! If there are k tiles? (All the ways to arrange them) or maybe possibly 2^k-1 is the number of subsets that I can choose of the k tiles. \n\nI also thought of a \"pseudo code recursive function\" that calls itself if the current set of matched tiles can be matched with a new tile, and then repeats. \n\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46035,"question": "Decomposing the Human Palate with Matrix Factorization","aSentId": 46036,"answer": "Mmmm, cheeseburgers. And eigenvalues.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46035,"question": "Decomposing the Human Palate with Matrix Factorization","aSentId": 46038,"answer": "This is fucking awesome. These are the kind of posts I absolutely love. Interesting stuff.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46040,"question": "Great Book for Computer Science Student","aSentId": 46041,"answer": "My recommendation is far afield. But not mainstream compsci. It is what I do with my compsci degree. \n\nThe Cuckoo's Egg by Clifford Stoll. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46040,"question": "Great Book for Computer Science Student","aSentId": 46043,"answer": "IMHO the best read for a nice soft introduction to CS is the first chapter of SICP, available online for free. Sipser was recommended - it's an excellent textbook, but it's tough.\n\nAlso, GEB:EGB is trite bullshit, avoid at all cost.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46040,"question": "Great Book for Computer Science Student","aSentId": 46045,"answer": "I don't think this really exists. CS is either going to be programming or algorithms or similar. I would probably look more into books on logic or something like that.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46047,"question": "What part of CS are you interested in?  \n\nSome would disagree, but GEB (Godel Escher Bach) is a readable introduction to complexity theory, as long as you can tolerate puns.","aSentId": 46048,"answer": "&gt;complexity theory\n\nSurely you jest","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46051,"question": "Is there a selection algorithm that runs in \u0398(n) time?","aSentId": 46052,"answer": "For an unsorted list, you cannot select in less than linear time, as any algorithm would have to at least look at each element.  So, a linear upper bound trivially has a matching linear lower bound for this problem.\n\nThis is not a trick question.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46051,"question": "Is there a selection algorithm that runs in \u0398(n) time?","aSentId": 46054,"answer": "I found something by simply googling 'Linear selection'","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46055,"question": "I found something by simply googling 'Linear selection'","aSentId": 46056,"answer": "I'm only seeing O(n)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46057,"question": "I'm only seeing O(n)","aSentId": 46058,"answer": "\u0398(n) is very similar to O(n) only \u0398(n) is a lower and upper bound while O(n) is only an upper bound. Someone may correct me if I'm wrong, but in my experience, O(n) is often colloquially the same as \u0398(n) so the results you've found are most likely fine.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46059,"question": "\u0398(n) is very similar to O(n) only \u0398(n) is a lower and upper bound while O(n) is only an upper bound. Someone may correct me if I'm wrong, but in my experience, O(n) is often colloquially the same as \u0398(n) so the results you've found are most likely fine.","aSentId": 46060,"answer": "Yes, algorithms are generally referred to only as O(n) rather than \u0398(n), because when you give an algorithm, you only really care about the upper bound.  Basically, an O(n) algorithm is a proof that the problem can be solved in O(n) time.  Also, researchers obviously want to give the lowest possible complexity for their algorithm; it would be silly for someone to find a O(log n) algorithm and say \"hey everybody, look at this O(n) algorithm that I found!\".\n\nAlso, O(n) is easier to type (and say) than \u0398(n). ;)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46061,"question": "Yes, algorithms are generally referred to only as O(n) rather than \u0398(n), because when you give an algorithm, you only really care about the upper bound.  Basically, an O(n) algorithm is a proof that the problem can be solved in O(n) time.  Also, researchers obviously want to give the lowest possible complexity for their algorithm; it would be silly for someone to find a O(log n) algorithm and say \"hey everybody, look at this O(n) algorithm that I found!\".\n\nAlso, O(n) is easier to type (and say) than \u0398(n). ;)","aSentId": 46062,"answer": "&gt; Also, researchers obviously want to give the lowest possible complexity for their algorithm; it would be silly for someone to find a O(log n) algorithm and say \"hey everybody, look at this O(n) algorithm that I found!\".\n\nQuick sort is a good counterexample to this claim.\n\nGenerally we very much care about the lower bound. For example, we know that sorting has a lower bound of n lg n.\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46063,"question": "&gt; Also, researchers obviously want to give the lowest possible complexity for their algorithm; it would be silly for someone to find a O(log n) algorithm and say \"hey everybody, look at this O(n) algorithm that I found!\".\n\nQuick sort is a good counterexample to this claim.\n\nGenerally we very much care about the lower bound. For example, we know that sorting has a lower bound of n lg n.\n","aSentId": 46064,"answer": "&gt; Quick sort is a good counterexample to this claim.\n\nWhat I meant is that if someone finds an O(log n) algorithm, they won't then write a paper saying that it's an O(n) algorithm; their paper would say that it's an O(log n) algorithm.\n\n&gt; Generally we very much care about the lower bound. For example, we know that sorting has a lower bound of n lg n.\n\nWe care about the lower bound for a *problem*, yes.  We generally don't care about the lower bound for an *algorithm*.\n\nI'll admit to certain exceptions, though.  E.g. bubble sort is linear on certain inputs, so if you know your input is almost-sorted, then you'll want to use bubble sort.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46057,"question": "I'm only seeing O(n)","aSentId": 46066,"answer": "I could be wrong, but if the upper bound is already n, does that not satisfy the criteria? ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46051,"question": "Is there a selection algorithm that runs in \u0398(n) time?","aSentId": 46068,"answer": "quickselect, the variation of quicksort, runs in expected O(n). From Hoare, like quicksort.\nSimilarly, introselect is the same variation from introsort. O(n) also. From Musser, like introsort :)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46069,"question": "quickselect, the variation of quicksort, runs in expected O(n). From Hoare, like quicksort.\nSimilarly, introselect is the same variation from introsort. O(n) also. From Musser, like introsort :)","aSentId": 46070,"answer": "Oops, missed the theta! IDK of any then. C++ standard lib uses introselect, so if they exists I guess they are mostly interesting for academic purposes...","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46072,"question": "A quine relay through 100 languages","aSentId": 46073,"answer": "&gt; PPT (Punched Tape)\n\nAnybody know what the code for this looks like?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46072,"question": "A quine relay through 100 languages","aSentId": 46075,"answer": "Proof that time travel is possible.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46076,"question": "Proof that time travel is possible.","aSentId": 46077,"answer": "I'm confused","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46078,"question": "I'm confused","aSentId": 46079,"answer": "I meant that this is so complicated that it appears to be magic from the future. I guess it wasn't obvious though..","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46080,"question": "I meant that this is so complicated that it appears to be magic from the future. I guess it wasn't obvious though..","aSentId": 46081,"answer": "I assumed you meant that this was a repost.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46083,"question": "Zero Knowledge Proofs: An illustrated primer","aSentId": 46084,"answer": "A very good read. One with a good example, and that too with hats!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46083,"question": "Zero Knowledge Proofs: An illustrated primer","aSentId": 46086,"answer": "This is very well written, but I have one nitpick. I don't think the zero-knowledgeness proof idea is made any clearer by transitioning from time-machine land to Turing-machine-simulation land. It sounds to me like the idea could be stated as:\n\n&gt; \"If we had a trick for learning information from any interaction, then this would include interactions where a lying prover got lucky.\"\n\nIf my summary is correct (it probably isn't), then couldn't we have a system where we learned information in some but not all interactions? Where the information we learned was limited by the amount the prover had in that specific instance?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46088,"question": "Is there a name for a program that can interpret it's own source?","aSentId": 46089,"answer": "Such a program or compiler is called metacircular. There are plenty of relevant ones: Haskell is written in Haskell. Gcc/g++ is written in C/c++. \n\nAlso, many languages, such as javascript and Python, have an eval function that takes program code as input and runs it. \n\nAny Turing Complete language is powerful enough to understand its own code. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46088,"question": "Is there a name for a program that can interpret it's own source?","aSentId": 46091,"answer": "Reflection.  Java has lots of reflection for it to reason about itself.  \n\nIn my omscs degree I am taking a course where we are creating data structures for computer programs to reason about themselves solving problems.  \n\nSemantic networks, chunking, production rule sets, etc.  Essentially you take English text, convert it to a series of hashmap frames with pointers to each other, then you create a list of rules that might govern an agent to cause the story, then you query the environment to see which rule set most fits the real reality.\n\nIts a computer program that can generate theories as to how itself is working, test those theories and refine them.  A rudimentary other minds theory module in software.  \n\nIt is software trying to figure out how itself functions given available data.  When trying to predict why something is behaving the way it is, we do little simulations of other minds, inside our minds.  So a big portion of human brains is dedicated to simulation of other brains.\n\nWe are pretty bad at it though, because there are so many kinds.  There are only a few things we can know for sure.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46093,"question": "Staying Relevant In A Rapid Innovation Era","aSentId": 46094,"answer": "I guess the old saying is right in that the more you practice the better you get at doing something. I have seldom heard the ABC principle: Always Be Coding.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46097,"question": "[Thought experiment] If I wanted to create a realistic U.S. freeway simulator, how would I be able to do it?","aSentId": 46098,"answer": "Wow that's ambitious.\n\nSo let's start with the obvious: how far are you in your CS degree? 3D graphics tends to be a junior or senior level class, and typically not an elective. While learning how to create a game on (let's say) the quake engine or something is possible, I'm just trying to gauge how much more you must learn before reaching that.\n\nFor the physics engine and designing the freeway itself, you're probably best off taking an existing game engine and building off of it.\n\n&gt; -I may also want traffic simulation, which I think require network flows and differential equations.\n\nIf you manage to create perfect traffic simulation, tell someone and they will shower you in cash. More realistically, you'll probably want to fake this. Spawn a number of cars before and after the player, with variances in speed around the speed limit. Throw in a few special types (like cops and drunk drivers who swerve everywhere). The variances and the number of cars could be influenced by a traffic density assigned to the stretches of road and time of day.\n\n&gt; If I wanted realistic interchanges with streets, state highways and U.S. highways, ...\n\nFrom my dabbling in civil engineering (long story) I know the standards are quite extensive. Gonna be a lot of reading.\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46097,"question": "[Thought experiment] If I wanted to create a realistic U.S. freeway simulator, how would I be able to do it?","aSentId": 46100,"answer": "Very ambitious! This is less of a CS thought experiment, and more of a very large project which would involve several CS concepts, from procedural generation, to physics engines, to complex AI. \n\nThere's really too much stuff here to give any useful input on the \"thought experiment\" as a whole.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46097,"question": "[Thought experiment] If I wanted to create a realistic U.S. freeway simulator, how would I be able to do it?","aSentId": 46102,"answer": "Start two 2D, write agents in two types, streets and cars. The street agents pave the way for cars which have a set of start and destination. For example one city to another. From there you can go deeper :)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46107,"question": "Homework help !! Cryptography","aSentId": 46108,"answer": "We're not here to do your homework for you.\n\nIf you needed help on your homework, you should have pointed out what part you were having trouble with.  Without that, this looks like \"please do this for me,\" which we cannot do.\n\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46110,"question": "I'm having trouble grasping Big-O Notation (as well as other asymptotic notations) and it's causing me to struggle with my homework assignments. I could use some help getting pointed in the right direction.","aSentId": 46111,"answer": "Your intuition is pretty much spot on.  As you say 2^500 is first because it is a constant, and log(n) grows slow - in fact log(n) grows slower than *any* polynomial, so log(n) is slower than n^0.000001 (but, note, still faster than a constant).\nLikewise 2^n grows faster than *any* polynomial.\n\nThe best way to tackle this question is to identify the important parts of the expression and try and get them into a simple log, polynomial or exponential expression.  For example 2^log(n) simplifies to n; and nlog(n) is \"between\" n and n^2 [bigger than n, but smaller than n^1.0000001 - see previous remark about log(n)], so nlog(n) is more significant than n^5/6 .  The nice thing about big-O is that you can \"ignore\" constants (once you have identified the relevant constant), for example log_7(n) is O(log_2(n)) and 2.2^n is 2^O(n) [note this is *not* O(2^n )]\n\nInitially don't worry too much about the constants - you can work them out pretty easily once you have gained an intuition.\n\nHave a stab at ordering them now so you can get more tailored suggestions...","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46110,"question": "I'm having trouble grasping Big-O Notation (as well as other asymptotic notations) and it's causing me to struggle with my homework assignments. I could use some help getting pointed in the right direction.","aSentId": 46113,"answer": "For your more exotic examples, use logarithm and/or power rules to simplify. In the particular case of \u221an log (n!), see if Stirling's approximation can help you.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46110,"question": "I'm having trouble grasping Big-O Notation (as well as other asymptotic notations) and it's causing me to struggle with my homework assignments. I could use some help getting pointed in the right direction.","aSentId": 46115,"answer": "For the continuous functions you can take the limit of the quotient; i.e. if you want to compare the growth of f(n) and g(n) and you find\nlim n-&gt;infinity f(n)/g(n), if g(n) grows faster than f(n) the the limit will go to 0, if they grow at the same rate (theta(n)) then the limit will go to 1 and otherwise if f(x) grows faster then it will go to infinity.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46117,"question": "The A-star algorithm explained concisely","aSentId": 46118,"answer": "I would call this \"A-star algorithm *defined*\"; there's not really any explaining going on.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46119,"question": "I would call this \"A-star algorithm *defined*\"; there's not really any explaining going on.","aSentId": 46120,"answer": "I admit it doesn't explain much... however, if I had been more verbose, I would have possibly rewritten the text on the links... The idea was to build abstract algorithms and leave concrete details on the specific implementations, so as to not violate the DRY principle (I'm wondering if I'm too concerned with this). Noted! Thx!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46117,"question": "The A-star algorithm explained concisely","aSentId": 46122,"answer": "Hey author here!\n\nThanks for the upvotes! What else would you like to read here? I'm willing to put in a lot of time to implement the whole AIMA book (in a while :-) I most appreciate your feedback!\n\nI'm also wondering if a code migration from Octave to Lua would be interesting. This was approached some time ago in another project (aima-lua) but it soon lost interest. The languages are very similar, and the focus with Lua seems to be more close to a viable product (it is embeddable), reportedly faster... just some ideas!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46123,"question": "Hey author here!\n\nThanks for the upvotes! What else would you like to read here? I'm willing to put in a lot of time to implement the whole AIMA book (in a while :-) I most appreciate your feedback!\n\nI'm also wondering if a code migration from Octave to Lua would be interesting. This was approached some time ago in another project (aima-lua) but it soon lost interest. The languages are very similar, and the focus with Lua seems to be more close to a viable product (it is embeddable), reportedly faster... just some ideas!","aSentId": 46124,"answer": "I'd stick with images that illustrate the point and include your source (even if it is pseudo) as an appendix.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46125,"question": "I'd stick with images that illustrate the point and include your source (even if it is pseudo) as an appendix.","aSentId": 46126,"answer": "I agree! I didn't do it because I had already done it a few times with the former search techniques appearing in the book, and I felt it was king of repetitive... Note taken! Thx!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46123,"question": "Hey author here!\n\nThanks for the upvotes! What else would you like to read here? I'm willing to put in a lot of time to implement the whole AIMA book (in a while :-) I most appreciate your feedback!\n\nI'm also wondering if a code migration from Octave to Lua would be interesting. This was approached some time ago in another project (aima-lua) but it soon lost interest. The languages are very similar, and the focus with Lua seems to be more close to a viable product (it is embeddable), reportedly faster... just some ideas!","aSentId": 46128,"answer": "I miss a statement of the problem here, actually.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46129,"question": "I miss a statement of the problem here, actually.","aSentId": 46130,"answer": "Yes... I guess I thought the links were enough to state it. I feared sounding like a broken record. Noted. Thx!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46132,"question": "In user mode can a software switch from user to kernel mode?","aSentId": 46133,"answer": "The only way to 'switch' (notice the quotes) is to do a system call or cause an error condition that needs to be handled, which should mean any code executed thereafter is controlled by the operating system. Technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf. If everything is done properly no vulnerability exists. Issues emerge when the implementations of those system calls contain defects, like buffer overflows that overwrite kernel memory with usermode-controlled data.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46134,"question": "The only way to 'switch' (notice the quotes) is to do a system call or cause an error condition that needs to be handled, which should mean any code executed thereafter is controlled by the operating system. Technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf. If everything is done properly no vulnerability exists. Issues emerge when the implementations of those system calls contain defects, like buffer overflows that overwrite kernel memory with usermode-controlled data.","aSentId": 46135,"answer": "&gt;The only way to 'switch' (notice the quotes) is to do a system call, which should mean any code executed thereafter is controlled by the operating system.\n\nPedantic correction: only an **interrupt** raises privileges, which a system call qualifies as. [So, for example, a page fault also results in an interrupt that raises privileges and transfers control to the interrupt handler.]","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46136,"question": "&gt;The only way to 'switch' (notice the quotes) is to do a system call, which should mean any code executed thereafter is controlled by the operating system.\n\nPedantic correction: only an **interrupt** raises privileges, which a system call qualifies as. [So, for example, a page fault also results in an interrupt that raises privileges and transfers control to the interrupt handler.]","aSentId": 46137,"answer": "You're right, I'll amend my comment.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46134,"question": "The only way to 'switch' (notice the quotes) is to do a system call or cause an error condition that needs to be handled, which should mean any code executed thereafter is controlled by the operating system. Technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf. If everything is done properly no vulnerability exists. Issues emerge when the implementations of those system calls contain defects, like buffer overflows that overwrite kernel memory with usermode-controlled data.","aSentId": 46139,"answer": "thanks,\n\n&gt; technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf\n\ni agree! but the book says \n\n&gt; there can be a switch from user to kernel mode IN user mode\n\nso the book is incorrect, right?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46140,"question": "thanks,\n\n&gt; technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf\n\ni agree! but the book says \n\n&gt; there can be a switch from user to kernel mode IN user mode\n\nso the book is incorrect, right?","aSentId": 46141,"answer": "I don't know the context of the sentence, but as I mentioned, disregarding implementation bugs, no code from the user-mode program will ever get to run in kernel-mode. Technically a mode-switch does happen, but never without the associated system-call machinery, and therefore, it doesn't make sense to evaluate it security-wise (or in any other lens, really) in separation.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46142,"question": "I don't know the context of the sentence, but as I mentioned, disregarding implementation bugs, no code from the user-mode program will ever get to run in kernel-mode. Technically a mode-switch does happen, but never without the associated system-call machinery, and therefore, it doesn't make sense to evaluate it security-wise (or in any other lens, really) in separation.","aSentId": 46143,"answer": "Right. The system overall can switch from user mode to kernel mode, and based on something that user mode code does, but the code that is run is different.  \n  \nUser mode code can order a drink, but they can't pour themselves a drink.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46144,"question": "Right. The system overall can switch from user mode to kernel mode, and based on something that user mode code does, but the code that is run is different.  \n  \nUser mode code can order a drink, but they can't pour themselves a drink.","aSentId": 46145,"answer": "&gt; User mode code can order a drink, but they can't pour themselves a drink.\n\nThat's a great analogy, sums up the situation perfectly. Technically user mode can go from an empty to full glass, but only because the kernel fills it. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46140,"question": "thanks,\n\n&gt; technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf\n\ni agree! but the book says \n\n&gt; there can be a switch from user to kernel mode IN user mode\n\nso the book is incorrect, right?","aSentId": 46147,"answer": "It would help if you mentioned what book, and gave a larger amount of context. We don't know what we're responding to here!","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46140,"question": "thanks,\n\n&gt; technically the original software never 'enters' kernel mode, it merely asks for the kernel to intercept execution on it's behalf\n\ni agree! but the book says \n\n&gt; there can be a switch from user to kernel mode IN user mode\n\nso the book is incorrect, right?","aSentId": 46149,"answer": "I'm in agreement with /u/danielkza but wanted to add this.\n\n &gt;   there can be a switch from user to kernel mode IN user mode\n\nAny number of things can interrupt user mode execution and transfer control to the kernel.\n\nThe state of the user mode code is saved and subsequent code is executed in kernel mode. It can be part of the kernel but it can also be a user provided procedure which will be called with the user's context but with kernel access. When that procedure exits, it returns via the kernel to normal mode. Such a call is usually only permitted to processes with special rights and typically used for programs that extend the kernel but run mostly in user mode to reduce risk.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46132,"question": "In user mode can a software switch from user to kernel mode?","aSentId": 46152,"answer": "In Linux, yes, you can. Use the `iopl` system call to elevate the security level of your process. This comes with all the security problems you can possibly imagine. Needless to say, you need to be root to call `iopl` successfully.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46132,"question": "In user mode can a software switch from user to kernel mode?","aSentId": 46154,"answer": "Are you by any chance taking an OS course, and working with the second project building a simple kernel? Or are you just self learning?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46155,"question": "Are you by any chance taking an OS course, and working with the second project building a simple kernel? Or are you just self learning?","aSentId": 46156,"answer": "the first one ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46157,"question": "the first one ","aSentId": 46158,"answer": "Ok, wrote a boot loader and an image creator in the first project. Working on the kernel right now.\n\nEdit: by \"first one\" I thought you meant first project, and not the first alternative.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46163,"question": "Pursuing a computer science degree in college worth it?","aSentId": 46164,"answer": "Please read the sidebar.  It tells you not to ask this question and where you -should- ask this question. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46163,"question": "Pursuing a computer science degree in college worth it?","aSentId": 46166,"answer": "I am in the same situation as you! My math is really bad, and don't know  what to do! I was told it can be done but you have put it in a lot of work, because it won't be an easy ride if you pursue a CS degree .","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46168,"question": "Is there a difference between 80x86 and x86?","aSentId": 46169,"answer": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46170,"question": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","aSentId": 46171,"answer": "&gt; Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86.\n\nThere technically was no 80486, it was launched as simply \"i486.\" Intel also dropped the \"80\" from 80386 in their documentation around the same time. Then they discovered that they couldn't actually trademark numbers and started naming their processors.\n\nThe difference between 80x86 and x86 is that people writing 80x86 have probably been around longer or that that particular document is older.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46172,"question": "&gt; Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86.\n\nThere technically was no 80486, it was launched as simply \"i486.\" Intel also dropped the \"80\" from 80386 in their documentation around the same time. Then they discovered that they couldn't actually trademark numbers and started naming their processors.\n\nThe difference between 80x86 and x86 is that people writing 80x86 have probably been around longer or that that particular document is older.","aSentId": 46173,"answer": "&gt; There technically was no 80486, it was launched as simply \"i486.\" \n\nI think that's incorrect. There *was* an 80486 - it was the official moniker for the chip, but wasn't used in branding or labeling. Likewise, 80586 was the official moniker for the Pentium and 80686 was the Pentium Pro. Hardware specs and things like the CPUID instruction use the 80x86 forms - up to the Pentium Pro/II/III-class processors, which were the last to use it (and they are all 80686-class chips.)\n\nIntel just didn't use it in marketing and labels.\n\nAnd, actually, the AMD 486 clone was labeled with the model code A80486 as well.\n\nSo, yes, there technically was an 80486.\n\nEdit: actually, if anyone's wondering what the 80 means, it goes back to how integrated circuit chips are labeled: Generally speaking, every IC manufacturer chooses an alphanumeric prefix code, and that code is applied to all of their chip monikers. So, for example, the 7400-series TTL logic chip was called SN7400N by Texas Instruments and National Semiconductor would have called it NTE7400 (which was actually DM8000, but whatever). This was so that if a manufacturer wanted to offer a chip that was pin-compatible with an existing chip, they'd use a matching model number with their own prefix.\n\nFor Intel, that prefix was 80, after their release of the 8080, which was in turn the successor to the 4004, a 4-bit CPU. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46174,"question": "&gt; There technically was no 80486, it was launched as simply \"i486.\" \n\nI think that's incorrect. There *was* an 80486 - it was the official moniker for the chip, but wasn't used in branding or labeling. Likewise, 80586 was the official moniker for the Pentium and 80686 was the Pentium Pro. Hardware specs and things like the CPUID instruction use the 80x86 forms - up to the Pentium Pro/II/III-class processors, which were the last to use it (and they are all 80686-class chips.)\n\nIntel just didn't use it in marketing and labels.\n\nAnd, actually, the AMD 486 clone was labeled with the model code A80486 as well.\n\nSo, yes, there technically was an 80486.\n\nEdit: actually, if anyone's wondering what the 80 means, it goes back to how integrated circuit chips are labeled: Generally speaking, every IC manufacturer chooses an alphanumeric prefix code, and that code is applied to all of their chip monikers. So, for example, the 7400-series TTL logic chip was called SN7400N by Texas Instruments and National Semiconductor would have called it NTE7400 (which was actually DM8000, but whatever). This was so that if a manufacturer wanted to offer a chip that was pin-compatible with an existing chip, they'd use a matching model number with their own prefix.\n\nFor Intel, that prefix was 80, after their release of the 8080, which was in turn the successor to the 4004, a 4-bit CPU. ","aSentId": 46175,"answer": "&gt; There was an 80486 - it was the official moniker for the chip, but wasn't used in branding or labeling.\n\nIt's possible that it was an internal part number (and good point about clones), but I've got datasheets (ie, not marketing material) from 1990 and 1992, which name the chip throughout as only i486\u2122 and Intel486\u2122. 80486 was absolutely not the official name.\n\n&gt; Hardware specs and things like the CPUID instruction use the 80x86 forms\n\nOther people called it 80486, sure. CPUID, on the later 486s that had it, would only tell you it was family 4.\n\n**edit**: 80486 was indeed in the official part number. Touch\u00e9.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46170,"question": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","aSentId": 46177,"answer": "They were sued?  Are they obligated to maintain compatibility?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46178,"question": "They were sued?  Are they obligated to maintain compatibility?","aSentId": 46179,"answer": "They weren't sued over x86. They were sued by HP over the Itanium processor (their non-x86 64-bit processor), which failed in the market and HP blamed Intel for not doing enough to save the chip.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46180,"question": "They weren't sued over x86. They were sued by HP over the Itanium processor (their non-x86 64-bit processor), which failed in the market and HP blamed Intel for not doing enough to save the chip.","aSentId": 46181,"answer": "That thing was awesome. You could do some amazing optimizations on it. There was a large community that was upset when they stopped making itaniums. I think someone even tried to pick it up after hp dropped it. Iirc they were the first big chip to use memory rotators.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46182,"question": "That thing was awesome. You could do some amazing optimizations on it. There was a large community that was upset when they stopped making itaniums. I think someone even tried to pick it up after hp dropped it. Iirc they were the first big chip to use memory rotators.","aSentId": 46183,"answer": "The trouble, I think, is that the market for the chip was too small early on, and so no one saw the benefits of the architecture.\n\nIt didn't help that the x86 emulation was abysmally slow, which made upgrade paths for legacy systems untenable.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46184,"question": "The trouble, I think, is that the market for the chip was too small early on, and so no one saw the benefits of the architecture.\n\nIt didn't help that the x86 emulation was abysmally slow, which made upgrade paths for legacy systems untenable.","aSentId": 46185,"answer": "That an all that VLIW, the compiler will be smart enough to do everything idea. Didn't pan out in practice.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46184,"question": "The trouble, I think, is that the market for the chip was too small early on, and so no one saw the benefits of the architecture.\n\nIt didn't help that the x86 emulation was abysmally slow, which made upgrade paths for legacy systems untenable.","aSentId": 46187,"answer": "True, I had a friend that was doing serious server work and he loved them. But I also remember asking co-workers about them and getting blank stares.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46170,"question": "The intel 8086 was a processor by intel in 1978. Subsequent processors were named 80186,80286,80386 and 80486, hence the term 80x86 or x86. \n\nMore importantly, however, these subsequent processors maintained backwards compatibility with the instruction set architecture (ISA) of the 8086.  So, the term x86 also refers to all intel processors that maintain backwards compatibility (including the one in your pc right now) with the 8086 which is good but also bad. The 8086 has a CISC type architecture and not a RISC one. Intel has over the years twice tried to move away from the x86 and failed(and gotten sued)","aSentId": 46189,"answer": "&gt; twice\n\nItanium and..?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46190,"question": "&gt; twice\n\nItanium and..?","aSentId": 46191,"answer": "Maybe the i960? I can't think of anything else other than the Itanium, either.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46193,"question": "Interesting thing is that the 8086 was not used in the IBM PC.   They instead used the 8088 and then the 80286.   \n\nThe 8086 was used in some CPM systems like the Dec Rainbow.   The 8086 was actually superior to the 8088 as it had a 16 bit external bus versus the 8 bit external bus that the 8088 utilized.","aSentId": 46194,"answer": "Are you sure? Pretty sure I had an IBM xt with an 8086.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46195,"question": "Are you sure? Pretty sure I had an IBM xt with an 8086.","aSentId": 46196,"answer": "Naw it was definitely an 8088.  There were certainly some XT clones that had 8086s and even 80186 CPUs.\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46195,"question": "Are you sure? Pretty sure I had an IBM xt with an 8086.","aSentId": 46198,"answer": "Nope, I had a PC XT back in the day.  IBM used 8088 chips in them.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46195,"question": "Are you sure? Pretty sure I had an IBM xt with an 8086.","aSentId": 46200,"answer": "My bad.   There was a PC sold by IBM called the PS/2 where a base model came with a 8086.   My Uncle worked for IBM and remember their family had one.\n\nIt was also really expensive.   ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46193,"question": "Interesting thing is that the 8086 was not used in the IBM PC.   They instead used the 8088 and then the 80286.   \n\nThe 8086 was used in some CPM systems like the Dec Rainbow.   The 8086 was actually superior to the 8088 as it had a 16 bit external bus versus the 8 bit external bus that the 8088 utilized.","aSentId": 46202,"answer": "More precisely, the 8088 was basically the budget version of the 8086. Some IBM PS/2 models used the 8086.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46203,"question": "More precisely, the 8088 was basically the budget version of the 8086. Some IBM PS/2 models used the 8086.","aSentId": 46204,"answer": "My bad.   \n\nI can picture it perfectly.   It was really nice aesthetically.   It had a really nice keyboard.   It was also really expensive.   I also recall there was a base model that had a 8086.\n\nI don't remember it being particularly fast or worth the cost but I was cheap :). \n\n  \n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46168,"question": "Is there a difference between 80x86 and x86?","aSentId": 46207,"answer": "These days, x86 generally refers to 80386DX and later.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46208,"question": "These days, x86 generally refers to 80386DX and later.","aSentId": 46209,"answer": "Which, ta da, means 32bit, that we're still working with 20 years later.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46210,"question": "Which, ta da, means 32bit, that we're still working with 20 years later.","aSentId": 46211,"answer": "30 years. 386 came out in 1985, ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46212,"question": "30 years. 386 came out in 1985, ","aSentId": 46213,"answer": "Gah! You're right, I misremembered my 486.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46210,"question": "Which, ta da, means 32bit, that we're still working with 20 years later.","aSentId": 46215,"answer": "To be fair, it isn't always sensible to do all integer operations in 64-bit width. The AMD64 instruction set was a huge improvement (including 64-bit memory addressing), but choosing 64-bit for everything else too is sometimes going to cause a slowdown and/or waste of memory.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46216,"question": "To be fair, it isn't always sensible to do all integer operations in 64-bit width. The AMD64 instruction set was a huge improvement (including 64-bit memory addressing), but choosing 64-bit for everything else too is sometimes going to cause a slowdown and/or waste of memory.","aSentId": 46217,"answer": "&gt; To be fair, it isn't always sensible to do all integer operations in 64-bit width. \n\nMany 64-bit platforms do not have separate opcodes for 32-bit arithmetic instructions, it's all 64 bit. After all, it makes a difference only for loads and stores.  The amd64 architecture is a bit of an outlier because it requires a different opcode for 64-bit arithmetic.  These instructions are longer, so it's generally better to avoid them to reduce the code size, avoid icache misses etc.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46168,"question": "Is there a difference between 80x86 and x86?","aSentId": 46219,"answer": "If there's an 'x' then it means it's applicable to a wide range of processors, so I'd say there's no difference.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46222,"question": "Grace Hopper, The Queen Of Code","aSentId": 46223,"answer": "Grace Hopper, The Queen Of ~~Code~~ Cobol.\n\n:D","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46222,"question": "Grace Hopper, The Queen Of Code","aSentId": 46225,"answer": "I was interested to find out that the first project they worked was calculating how to compress a sphere. They were building the ignition of a nuclear bomb","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46226,"question": "I was interested to find out that the first project they worked was calculating how to compress a sphere. They were building the ignition of a nuclear bomb","aSentId": 46227,"answer": "I would love to know how they reacted when they found out.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46222,"question": "Grace Hopper, The Queen Of Code","aSentId": 46229,"answer": "Man, she was so cool. A shame that the field is still so male-dominated.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46230,"question": "Man, she was so cool. A shame that the field is still so male-dominated.","aSentId": 46231,"answer": "Why is it a shame?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46232,"question": "Why is it a shame?","aSentId": 46233,"answer": "What's the endgame here? If you have to ask this question, you are pretty far gone and beyond redemption.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46234,"question": "What's the endgame here? If you have to ask this question, you are pretty far gone and beyond redemption.","aSentId": 46235,"answer": "Because so many people seem to imply that there is some intrinsic value in having an industry be 50/50 in gender balance. Tech is for some reason much more vocal about this, compared to something like the mining industry. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46236,"question": "Because so many people seem to imply that there is some intrinsic value in having an industry be 50/50 in gender balance. Tech is for some reason much more vocal about this, compared to something like the mining industry. ","aSentId": 46237,"answer": "Your entire premise is wrong, so I'm not sure where to begin. Do you think that the objective is 50/50 full stop the end?","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46238,"question": "Your entire premise is wrong, so I'm not sure where to begin. Do you think that the objective is 50/50 full stop the end?","aSentId": 46239,"answer": "50/50 was perhaps an oversimplification but I still fail to see why anything other than the ratio that has organically evolved is more desirable. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46240,"question": "50/50 was perhaps an oversimplification but I still fail to see why anything other than the ratio that has organically evolved is more desirable. ","aSentId": 46241,"answer": "It's not organic, that's the point. The entire idea is to make it organic. If it's organically 60/40 or 70/30 in the end, so be it, but right now it's very small because of many factors that have nothing to do with ability or objective appeal. \n\nThe idea is giving women a fair shot, which is almost the entire point of the video, sorry you missed it.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46242,"question": "It's not organic, that's the point. The entire idea is to make it organic. If it's organically 60/40 or 70/30 in the end, so be it, but right now it's very small because of many factors that have nothing to do with ability or objective appeal. \n\nThe idea is giving women a fair shot, which is almost the entire point of the video, sorry you missed it.","aSentId": 46243,"answer": "&gt;right now it's very small because of many factors that have nothing to do with ability or objective appeal \n\nwomen have every opportunity to enroll in cs that men do, and a higher percentage are earning degrees with a gap increasing every year. that seems pretty organic to me","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46244,"question": "&gt;right now it's very small because of many factors that have nothing to do with ability or objective appeal \n\nwomen have every opportunity to enroll in cs that men do, and a higher percentage are earning degrees with a gap increasing every year. that seems pretty organic to me","aSentId": 46245,"answer": "You've got some reading to do:\n\nhttp://techcrunch.com/2014/08/23/just-another-white-dude-writing-about-diversity/\n\nhttp://girlswhocode.com/about-us/\n\nActually there's a hell of a lot more than that out there, but you definitely need to read up on some basics if you think accessibility is the only concern.\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46246,"question": "You've got some reading to do:\n\nhttp://techcrunch.com/2014/08/23/just-another-white-dude-writing-about-diversity/\n\nhttp://girlswhocode.com/about-us/\n\nActually there's a hell of a lot more than that out there, but you definitely need to read up on some basics if you think accessibility is the only concern.\n","aSentId": 46247,"answer": "Second link is obviously biased, and the first one offers nothing besides a few anecdotal pieces and 1(!) study that mentions 1 piece of data without any context. How many men dropped out, moved into management or another aspect of the business? Everything you've written is full of condescension without really saying much of anything. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46248,"question": "Second link is obviously biased, and the first one offers nothing besides a few anecdotal pieces and 1(!) study that mentions 1 piece of data without any context. How many men dropped out, moved into management or another aspect of the business? Everything you've written is full of condescension without really saying much of anything. ","aSentId": 46249,"answer": "Yeah, this is what I expected this to turn into. I'm not here to educate you on high-school level social studies, I was just hoping to plant a seed of curiosity. Go look up this incredibly baseline reading yourself-- this is not my responsibility as an incredulous bystander.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46240,"question": "50/50 was perhaps an oversimplification but I still fail to see why anything other than the ratio that has organically evolved is more desirable. ","aSentId": 46251,"answer": "If you're going to use ideas like \"organically evolved\", then you should hopefully realize that evolution doesn't stop.  It's not like we reached the place we're at now and any further change is incorrect or artificial.  Currently there are societal pressures toward increasing the number of women in CS and that can be considered a result of the organic evolution of our society (which is a faulty way of describing our society anyway).","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46254,"question": "Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)","aSentId": 46255,"answer": "Incredible\u2026 our advancement in artificial intelligence was probably set back by many decades due to the jealousy of one man's wife.\n\nI really wonder where we'd be today had Pitts not destroyed all his research and died an early death of alcoholism.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46256,"question": "Incredible\u2026 our advancement in artificial intelligence was probably set back by many decades due to the jealousy of one man's wife.\n\nI really wonder where we'd be today had Pitts not destroyed all his research and died an early death of alcoholism.","aSentId": 46257,"answer": "But could this wife possibly envision the consequences? Or couldn't Pitts have found help other than destroy himself in alcoholism either way? It's terrible how it happened, but she shouldn't be the sole responsible. Pitts burning his dissertation made me gasp more than anythin. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46258,"question": "But could this wife possibly envision the consequences? Or couldn't Pitts have found help other than destroy himself in alcoholism either way? It's terrible how it happened, but she shouldn't be the sole responsible. Pitts burning his dissertation made me gasp more than anythin. ","aSentId": 46259,"answer": "Sure, you're absolutely right. There's no way to know what could have happened, but what she did was still pretty evil.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46254,"question": "Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)","aSentId": 46261,"answer": "I usually don't have high hopes for these kinds of popsci biographical articles and so I went in with very low expectations, only choosing to read it because I've done everything else possible to put off finishing grading this week's quiz. But I am so happy I read it, what a wonderfully written article! Good post OP. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46262,"question": "I usually don't have high hopes for these kinds of popsci biographical articles and so I went in with very low expectations, only choosing to read it because I've done everything else possible to put off finishing grading this week's quiz. But I am so happy I read it, what a wonderfully written article! Good post OP. ","aSentId": 46263,"answer": "The Nautilus has high quality articles. I think of it like The New Yorker for nerds.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46264,"question": "The Nautilus has high quality articles. I think of it like The New Yorker for nerds.","aSentId": 46265,"answer": "How old is this website ? it became a regular submission on HN all of a sudden.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46262,"question": "I usually don't have high hopes for these kinds of popsci biographical articles and so I went in with very low expectations, only choosing to read it because I've done everything else possible to put off finishing grading this week's quiz. But I am so happy I read it, what a wonderfully written article! Good post OP. ","aSentId": 46267,"answer": "Indeed a good read and a powerful story, and without knowing all the details, it shows how destructive prejudice og intolerance (and sexual \"morals\" ) can be.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46268,"question": "Indeed a good read and a powerful story, and without knowing all the details, it shows how destructive prejudice og intolerance (and sexual \"morals\" ) can be.","aSentId": 46269,"answer": "Not just that, but how much can be undone by a single lie. Pretty powerful. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46270,"question": "Not just that, but how much can be undone by a single lie. Pretty powerful. ","aSentId": 46271,"answer": "That \"his boys\" seduced the daughter?  Because that doesn't sound too far fetched. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46272,"question": "That \"his boys\" seduced the daughter?  Because that doesn't sound too far fetched. ","aSentId": 46273,"answer": "But it was apparently a lie. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46274,"question": "But it was apparently a lie. ","aSentId": 46275,"answer": "Ok, I apparently missed that part. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46254,"question": "Meet Walter Pitts, the Homeless Genius Who Revolutionized Artificial Intelligence (x-post /r/MachineLearning)","aSentId": 46277,"answer": "all that work destroyed, all those ideas lost and all those people alienated because of one crazy wife. god fucking damn it!\n\nbeautiful article regardless, but i can't stop feeling sad and angry at the same time because of that woman's misguided actions","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46281,"question": "Great article. Minor nitpicking: Am I mistaken, or is the description of Wiener's definition of information (\"The higher the probability, the higher the entropy and the lower the information content\") backwards? Isn't it the higher the probability, the **lower** the entropy, and the lower the information?","aSentId": 46282,"answer": "50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nAlso I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claud Shannon.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46283,"question": "50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nAlso I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claud Shannon.","aSentId": 46284,"answer": "\n&gt; Also I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claude Shannon.\n\nI said the same thing on /r/MachineLearning. Weiner *did* have some related work and Shannon was clearly inspired by him. Shannon's 1948 paper references Weiner a handful of times, but \"mutual information\" as we think of it today is definitely due to Shannon.\n\nhttp://cm.bell-labs.com/cm/ms/what/shannonday/shannon1948.pdf\n\n\n\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46283,"question": "50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nAlso I've never heard this attributed to Weiner, though I know he is well known for founding the field of cybernetics, I'm pretty sure information entropy was Claud Shannon.","aSentId": 46286,"answer": "&gt;50% probability is the highest entropy (1.0), i.e. it's the most 'uncertain'.\n\nis a nonsensical statement.\n\na uniform distribution has the highest entropy (which is equal to 1). such a distribution on 2 states/outcomes/events has each event happening with probability .5.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46290,"question": "Does a program load into memory?","aSentId": 46291,"answer": "I think you have a terminology problem.  A process is a program that is currently executing.  When you execute a program, the operating system creates a process and initializes it by memory-mapping certain portions of the on-disk executable image (e.g. code and data segments) into memory, and then jumps to the defined entry point to begin executing the code.  There are a lot more details (e.g. initializing the stack and heap) and things are significantly more complicated for dynamically linked executables, but that's the basic idea.\n","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46290,"question": "Does a program load into memory?","aSentId": 46293,"answer": "A program is a text file or binary file on disk.\n\nA process is a program being executed. The big difference is the implication that you can have 50 processes running the same program - a process is just an instance of your program being executed.\n\nThat said, when executing a program (or you could say when creating a process) the program is copied into memory.\n\nThere's a lot more that goes on of course, operating systems are pretty smartly designed, but that's the main concept of it all","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46295,"question": "Getting a Mac","aSentId": 46296,"answer": "/r/learnprogramming ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46295,"question": "Getting a Mac","aSentId": 46298,"answer": "/r/programming","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46300,"question": "San Fransisco State University?","aSentId": 46301,"answer": "UC Davis I have heard has a really nice CS system but I'm unsure if they offer any or more than a few Masters for CS. Also its not quite the Bay Area but its not far and generally more affordable than the bay area. ","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46300,"question": "San Fransisco State University?","aSentId": 46303,"answer": "Have you been accepted and are asking whether it's a good choice? If you're applying to graduate programs, you should apply to at least a few.","corpus": "reddit"},{"docID": "t5_2qhmr","qSentId": 46304,"question": "Have you been accepted and are asking whether it's a good choice? If you're applying to graduate programs, you should apply to at least a few.","aSentId": 46305,"answer": "Sorry to not make that clear. I'm applying to several places for next year.","corpus": "reddit"}]