[{"docID": "t5_2fwo", "qSentId": 31817, "question": "Dolphin Progress Report: February 2015", "aSentId": 31818, "answer": "I'm so happy the  map works again in Twilight Princess. I played through the entire game with the minimap messed up. Not only is it fixed, but it scales to high resolutions too. The dolphin development community never ceases to surprise me.\n\nDoes anyone know the commits that fixed it? I'd love to see the code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31819, "question": "I'm so happy the  map works again in Twilight Princess. I played through the entire game with the minimap messed up. Not only is it fixed, but it scales to high resolutions too. The dolphin development community never ceases to surprise me.\n\nDoes anyone know the commits that fixed it? I'd love to see the code.", "aSentId": 31820, "answer": "The article gives a link to the commit for each change. In this case it would be [this one](https://github.com/dolphin-emu/dolphin/commit/8b095a0178b408cd3acab952958c85381180293a).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31819, "question": "I'm so happy the  map works again in Twilight Princess. I played through the entire game with the minimap messed up. Not only is it fixed, but it scales to high resolutions too. The dolphin development community never ceases to surprise me.\n\nDoes anyone know the commits that fixed it? I'd love to see the code.", "aSentId": 31822, "answer": "I just got dolphin and realized the map on the GameCube is a mirror image of wii version. Game looks amazing although the water seems a bit bugged.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31823, "question": "I just got dolphin and realized the map on the GameCube is a mirror image of wii version. Game looks amazing although the water seems a bit bugged.", "aSentId": 31824, "answer": "I heard that Link was left-handed on the GameCube version.  But when they re-did it for the Wii, they wanted Link's handed-ness to be right so he'd match up with the majority of people using the Wii-mote, so they just left-right flipped the entire game.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31823, "question": "I just got dolphin and realized the map on the GameCube is a mirror image of wii version. Game looks amazing although the water seems a bit bugged.", "aSentId": 31826, "answer": "How does the water seemed bugged?  I can't reproduce any issues with the water here.  Their actual implementation of reflections on the GameCube/Wii is weird though.  distortion can bleed through from stuff not in the water.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31827, "question": "How does the water seemed bugged?  I can't reproduce any issues with the water here.  Their actual implementation of reflections on the GameCube/Wii is weird though.  distortion can bleed through from stuff not in the water.", "aSentId": 31828, "answer": "the water is fine in the portion where 4:3 would take up in the center. Outside of that the water appears as horizontal lines on either side. Probably just a bug with forcing 16:9 at high res with AA. The second bug is at the edges of the water the reflections are a bit weird and kinda mirrors what its supposed to be reflecting. I will play more tonight and see if I can get some screenshots of the bugs. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31829, "question": "the water is fine in the portion where 4:3 would take up in the center. Outside of that the water appears as horizontal lines on either side. Probably just a bug with forcing 16:9 at high res with AA. The second bug is at the edges of the water the reflections are a bit weird and kinda mirrors what its supposed to be reflecting. I will play more tonight and see if I can get some screenshots of the bugs. ", "aSentId": 31830, "answer": "The widescreen hack is known to do that; you'll need to use a customized widescreen code for anything beyond 4:3 on reflections and EFB Effects.  There are some on the wiki.  And, the second bug you mentioned is just how the game does water; check it out on console.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31817, "question": "Dolphin Progress Report: February 2015", "aSentId": 31832, "answer": "Holy shit Metroid Prime looks amazing in HD. Is this how the Wii U version looks too? :O", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31833, "question": "Holy shit Metroid Prime looks amazing in HD. Is this how the Wii U version looks too? :O", "aSentId": 31834, "answer": "Nope, still upscaled 480p max :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31817, "question": "Dolphin Progress Report: February 2015", "aSentId": 31836, "answer": "I love these blog posts; They are all written with humor, and make a point to mention individual contributors!  Keep it up!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31838, "question": "I don't get it. Is this better than a Wii? Because Wii's are pretty cheap right now.", "aSentId": 31839, "answer": "A Wii can't do 1080p 60FPS with AA. Dolphin can.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31842, "question": "GpuLinq: Linq queries on the GPU using OpenCL under the hood", "aSentId": 31843, "answer": "I like the idea. But is there any more documentation and/or examples?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31842, "question": "GpuLinq: Linq queries on the GPU using OpenCL under the hood", "aSentId": 31845, "answer": "a) Is this stable and ready for use?\n\nb) Has there been any development in the last 9 months?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31842, "question": "GpuLinq: Linq queries on the GPU using OpenCL under the hood", "aSentId": 31847, "answer": "Would be nice if it supported PLINQ.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31848, "question": "Would be nice if it supported PLINQ.", "aSentId": 31849, "answer": "I think that is the point of this, no? PLINQ splits the load across CPU cores, but running on the gpu would presumably split it across however many cores the gpu has. I think the intent is to be PLINQ on the gpu, essentially.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31852, "question": "I can't even tell when projects are jokes or real anymore. Democratize GPU programming? What?", "aSentId": 31853, "answer": "Indeed", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31855, "question": "Most Down-Voted Stack Overflow Questions", "aSentId": 31856, "answer": "What a gem in [the comments](http://stackoverflow.com/a/22544510/27423):\n\n&gt; can you delete the code on the answer cause I need to use I for a project that will be check for plagiarism", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31857, "question": "What a gem in [the comments](http://stackoverflow.com/a/22544510/27423):\n\n&gt; can you delete the code on the answer cause I need to use I for a project that will be check for plagiarism", "aSentId": 31858, "answer": "wrong link? i can't see the comment you're referring to", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31855, "question": "Most Down-Voted Stack Overflow Questions", "aSentId": 31860, "answer": "Interestingly enough, a lot of these are well-formed questions with obvious effort put into editing them, albeit with questionable content. There's a lot of half-assed question-fragments without any thought or formatting on SO that would deserve more down-votes than these.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31861, "question": "Interestingly enough, a lot of these are well-formed questions with obvious effort put into editing them, albeit with questionable content. There's a lot of half-assed question-fragments without any thought or formatting on SO that would deserve more down-votes than these.", "aSentId": 31862, "answer": "Usually the half-assed questions are closed after a certain time. These questions only have so many downvotes because they *were* okay-ish questions that didn't deserve to be closed outright. Thus they stick around. \n\nA lot of the downvotes are also due to the meta-effect, i.e. someone brought attention to them through a post on meta. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31863, "question": "Usually the half-assed questions are closed after a certain time. These questions only have so many downvotes because they *were* okay-ish questions that didn't deserve to be closed outright. Thus they stick around. \n\nA lot of the downvotes are also due to the meta-effect, i.e. someone brought attention to them through a post on meta. ", "aSentId": 31864, "answer": "Then you have the questions that are marked as duplicates and linked to another duplicate which was previously linked to another duplicate which was linked to the original question 4 years ago that is not even related to others in the chain of duplicates. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31861, "question": "Interestingly enough, a lot of these are well-formed questions with obvious effort put into editing them, albeit with questionable content. There's a lot of half-assed question-fragments without any thought or formatting on SO that would deserve more down-votes than these.", "aSentId": 31866, "answer": "Keep in mind questions in Stack Overflow can be edited by people other than the ones who posted it. It's common for popular badly redacted questions to get formatting. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31861, "question": "Interestingly enough, a lot of these are well-formed questions with obvious effort put into editing them, albeit with questionable content. There's a lot of half-assed question-fragments without any thought or formatting on SO that would deserve more down-votes than these.", "aSentId": 31868, "answer": "Sounds like stack-overflow to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31855, "question": "Most Down-Voted Stack Overflow Questions", "aSentId": 31870, "answer": "It's misleading since a lot of these posts are just actually popular posts that have a lot of votes, mostly upvotes, but a fraction of downvotes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31871, "question": "It's misleading since a lot of these posts are just actually popular posts that have a lot of votes, mostly upvotes, but a fraction of downvotes.", "aSentId": 31872, "answer": "exactly. i see worse posts than this every day on SO", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31874, "question": "&gt;How to send 100,000 emails weekly?\n\nTo ask a question more unpopular than that it would have to be about making an accounting system for a concentration camp.", "aSentId": 31875, "answer": "I'm actually very impressed by the nonjudgemental throughness of the top answer, given the terribleness of the question.  And by it's use of the phrase \"most draconian antispam laws.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31874, "question": "&gt;How to send 100,000 emails weekly?\n\nTo ask a question more unpopular than that it would have to be about making an accounting system for a concentration camp.", "aSentId": 31877, "answer": "While unwanted spam may be the first thing that comes to mind, I had a customer that is an extras casting company, which hires people to appear in advertisements, TV shows, movies, etc. They do casting notices all the time and need to send large amounts of email frequently to people (or \"talent\" as they say in the industry) who have opted in because they dream of being a star. There definitely can be legitimate needs for this sort of thing. Another similar possibility could be a weekly newsletter that people have specifically requested.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31874, "question": "&gt;How to send 100,000 emails weekly?\n\nTo ask a question more unpopular than that it would have to be about making an accounting system for a concentration camp.", "aSentId": 31879, "answer": "What if the emails are neo nazi recruitment propaganda?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31882, "question": "Ah, yes, [the --&gt; operator](http://stackoverflow.com/questions/1642028).", "aSentId": 31883, "answer": "Reminds me of a talk that Bill Joy gave in the 80's at Sun Users Group, about a then-hypothetical language (which James Gosling later designed and implemented and called LiveOak then Java), called \"C+++=--\", which was a subset of a superset of C++. (Start with C++, += some some features, then -- some other features).\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31884, "question": "Reminds me of a talk that Bill Joy gave in the 80's at Sun Users Group, about a then-hypothetical language (which James Gosling later designed and implemented and called LiveOak then Java), called \"C+++=--\", which was a subset of a superset of C++. (Start with C++, += some some features, then -- some other features).\n", "aSentId": 31885, "answer": "Isn't any language a subset of a superset of any other language? If you have a set A and a set B, the set A U B is a superset of A, and B is a subset of it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31886, "question": "Isn't any language a subset of a superset of any other language? If you have a set A and a set B, the set A U B is a superset of A, and B is a subset of it. ", "aSentId": 31887, "answer": "Yes, I think that's the joke. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31886, "question": "Isn't any language a subset of a superset of any other language? If you have a set A and a set B, the set A U B is a superset of A, and B is a subset of it. ", "aSentId": 31889, "answer": "The point was that there was a specific set of (mis)features he wanted to remove from C++, and a specific set of features he wanted to add, and the result he was describing turned out to be Java, years later. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31890, "question": "The point was that there was a specific set of (mis)features he wanted to remove from C++, and a specific set of features he wanted to add, and the result he was describing turned out to be Java, years later. ", "aSentId": 31891, "answer": "- Remove all the features of C++\n- Add all the features of whatever language you want\n- ???\n- Profit", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31892, "question": "- Remove all the features of C++\n- Add all the features of whatever language you want\n- ???\n- Profit", "aSentId": 31893, "answer": "* Sell to Oracle ;(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31894, "question": "* Sell to Oracle ;(", "aSentId": 31895, "answer": "That's the profit part", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31896, "question": "That's the profit part", "aSentId": 31897, "answer": "I suppose the ??? part is \"make it enterprise\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31884, "question": "Reminds me of a talk that Bill Joy gave in the 80's at Sun Users Group, about a then-hypothetical language (which James Gosling later designed and implemented and called LiveOak then Java), called \"C+++=--\", which was a subset of a superset of C++. (Start with C++, += some some features, then -- some other features).\n", "aSentId": 31899, "answer": "Why did he `--` some other features, instead of `-=`-ing them? Why the inconsistency between `+=` and `--`?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31900, "question": "Why did he `--` some other features, instead of `-=`-ing them? Why the inconsistency between `+=` and `--`?", "aSentId": 31901, "answer": "probably because c++++-- is hard to parse. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31884, "question": "Reminds me of a talk that Bill Joy gave in the 80's at Sun Users Group, about a then-hypothetical language (which James Gosling later designed and implemented and called LiveOak then Java), called \"C+++=--\", which was a subset of a superset of C++. (Start with C++, += some some features, then -- some other features).\n", "aSentId": 31903, "answer": "That's hilarious. Do you have a source on it, I tried googling around for it and couldn't find anything (Google kept ditching the \"+++=--\")", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31882, "question": "Ah, yes, [the --&gt; operator](http://stackoverflow.com/questions/1642028).", "aSentId": 31907, "answer": "Whats the name of this `--&gt;` operator?\n\n    while( x --&gt; 0 ) {...} // x goes to 0\n\nThe next time someone asks me to do their homework for them, I'll use that on purpose.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31908, "question": "Whats the name of this `--&gt;` operator?\n\n    while( x --&gt; 0 ) {...} // x goes to 0\n\nThe next time someone asks me to do their homework for them, I'll use that on purpose.", "aSentId": 31909, "answer": "A great comment below that post:\n\n&gt; And also there is a \"runs to\" operator ( 0 &lt;---- x )", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31908, "question": "Whats the name of this `--&gt;` operator?\n\n    while( x --&gt; 0 ) {...} // x goes to 0\n\nThe next time someone asks me to do their homework for them, I'll use that on purpose.", "aSentId": 31911, "answer": "It's typically called the \"goes to\" operator.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31912, "question": "It's typically called the \"goes to\" operator.", "aSentId": 31913, "answer": "Sorry but no. Its really bad spacing. It should be (x-- &gt; 0) or possibly with more brackets ((x--) &gt;0). Nice example of the importance of a coding standard. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31914, "question": "Sorry but no. Its really bad spacing. It should be (x-- &gt; 0) or possibly with more brackets ((x--) &gt;0). Nice example of the importance of a coding standard. ", "aSentId": 31915, "answer": "Being a unladen swallow I presume the sound \"whooosh\" isnt new to you!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31914, "question": "Sorry but no. Its really bad spacing. It should be (x-- &gt; 0) or possibly with more brackets ((x--) &gt;0). Nice example of the importance of a coding standard. ", "aSentId": 31917, "answer": "I think he was joking....", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31882, "question": "Ah, yes, [the --&gt; operator](http://stackoverflow.com/questions/1642028).", "aSentId": 31919, "answer": "Is OP's query jacked? Or is that thread one of the most downvoted while still have a crap ton of upvotes?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31920, "question": "Is OP's query jacked? Or is that thread one of the most downvoted while still have a crap ton of upvotes?", "aSentId": 31921, "answer": "I don't think the query accounts for upvotes; it appears to just be the highest ranked with the most downvotes regardless of upvotes", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31920, "question": "Is OP's query jacked? Or is that thread one of the most downvoted while still have a crap ton of upvotes?", "aSentId": 31923, "answer": "It says \"The top 20 questions with the most down-votes (ignores up-votes) \" in the description. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31920, "question": "Is OP's query jacked? Or is that thread one of the most downvoted while still have a crap ton of upvotes?", "aSentId": 31925, "answer": "I think the latter.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31927, "question": "I myself came across the =! operator when mentoring some students a couple of weeks ago. I love seeing some of the weird little bugs new programmers approach me with (not trying to make fun, we all started somewhere).", "aSentId": 31928, "answer": "In early C, compound assignment operators like `+=` and `-=` were spelled the other way around: `=+` and `=-`. The ambiguity with unary operators is what eventually led to their redesign in K&amp;R.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31929, "question": "In early C, compound assignment operators like `+=` and `-=` were spelled the other way around: `=+` and `=-`. The ambiguity with unary operators is what eventually led to their redesign in K&amp;R.", "aSentId": 31930, "answer": "Interesting, but they were referring to an assignment of a logically negated value.\n\n    if (a =! 3) { // assign !3 to a and compare to 'true'", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31932, "question": "I see that -- means take away 1 and &gt; 0 is greater than 0, But Is --&gt; Not a valid way of pointing a Pointer to something?\n\nI know Its not a pointer in the code but maybe thats what confused him?\n\nI haven't been doing C for very long and I've never tryed C++ so if what I said here was stupid then everyone chill..", "aSentId": 31933, "answer": "You're thinking of -&gt; which is used to access the members of structs to which you have a pointer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31934, "question": "You're thinking of -&gt; which is used to access the members of structs to which you have a pointer.", "aSentId": 31935, "answer": "Is this valid? Now with an odd number of -'s!\n\n    struct s {int something;};\n\n    struct s array_of_s[2] = {{0}, {1}, {2}, {3}};\n    struct s *p = &amp;array_of_s[3];\n\n    while(p---&gt;something)\n    {\n        printf(\"%d\", p-&gt;something);\n    }\n\nExpected output is `210`.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31936, "question": "Is this valid? Now with an odd number of -'s!\n\n    struct s {int something;};\n\n    struct s array_of_s[2] = {{0}, {1}, {2}, {3}};\n    struct s *p = &amp;array_of_s[3];\n\n    while(p---&gt;something)\n    {\n        printf(\"%d\", p-&gt;something);\n    }\n\nExpected output is `210`.", "aSentId": 31937, "answer": "I just compiled and ran your code. The only error was declaring the size of your array to be 2 and then putting too many elements in it. So I changed\n\n    struct s array_of_s[2] = {{0}, {1}, {2}, {3}};\n\nto \n\n    struct s array_of_s[] = {{0}, {1}, {2}, {3}};\n\nand the output was `210`", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31934, "question": "You're thinking of -&gt; which is used to access the members of structs to which you have a pointer.", "aSentId": 31939, "answer": "Oh yea! thanks", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31942, "question": "He's just using the wrong language. It's a legit operator in Clojure.", "aSentId": 31943, "answer": "I believe you're thinking of -&gt;&gt;", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31944, "question": "I believe you're thinking of -&gt;&gt;", "aSentId": 31945, "answer": "Well there are enough other \"arrow\" operators in Clojure to keep him occupied for a while. I think there are some libraries that even add more to the default set.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31944, "question": "I believe you're thinking of -&gt;&gt;", "aSentId": 31947, "answer": "Would that evaluate in C or C++ ? \n\nEDIT: I missread it it wouldn't...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31948, "question": "Would that evaluate in C or C++ ? \n\nEDIT: I missread it it wouldn't...", "aSentId": 31949, "answer": "`i--&gt;&gt; 2` would", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31951, "question": "Some of these questions require an opinionated, not technical answer, which is not allowed on Stack Overflow. But they never say where else people should ask these questions. Can you recommend any sites?", "aSentId": 31952, "answer": "Reddit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31951, "question": "Some of these questions require an opinionated, not technical answer, which is not allowed on Stack Overflow. But they never say where else people should ask these questions. Can you recommend any sites?", "aSentId": 31954, "answer": "Depends on the question. On StackExchange there is programmers, code review, computer science, theoretical computer science etc.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31951, "question": "Some of these questions require an opinionated, not technical answer, which is not allowed on Stack Overflow. But they never say where else people should ask these questions. Can you recommend any sites?", "aSentId": 31956, "answer": "Check the rest of the stack exchange. I believe there's one called poweruser for technical questionsnot specifically about programming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31957, "question": "Check the rest of the stack exchange. I believe there's one called poweruser for technical questionsnot specifically about programming.", "aSentId": 31958, "answer": "Superuser. I think all the sites have the same stance against opinions though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31957, "question": "Check the rest of the stack exchange. I believe there's one called poweruser for technical questionsnot specifically about programming.", "aSentId": 31960, "answer": "Superuser.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31963, "question": "/r/programming", "aSentId": 31964, "answer": "/r/programming doesn't allow self posts, so it's hard to ask questions here.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31965, "question": "/r/programming doesn't allow self posts, so it's hard to ask questions here.", "aSentId": 31966, "answer": "/r/learnprogramming", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31965, "question": "/r/programming doesn't allow self posts, so it's hard to ask questions here.", "aSentId": 31968, "answer": "/r/programmingdiscussion", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31970, "question": "Interesting that three of them are integer overflow in java . . .", "aSentId": 31971, "answer": "Integer overflow? More like i is 0, eg. \n\n&gt; i += i++", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31972, "question": "Integer overflow? More like i is 0, eg. \n\n&gt; i += i++", "aSentId": 31973, "answer": "Does modern java still do that thing where it matters what side of `i` the `++` is?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31974, "question": "Does modern java still do that thing where it matters what side of `i` the `++` is?", "aSentId": 31975, "answer": "Yes,it affects when the value is changed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31976, "question": "Yes,it affects when the value is changed.", "aSentId": 31977, "answer": "Doesn't C also do this?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31978, "question": "Doesn't C also do this?", "aSentId": 31979, "answer": "Yes. In fact pretty much every language with ++ has post and pre increment. It's a nice feature and any language which didn't do it the same way Java does would be broken. Why 5larm bought it up is beyond me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31978, "question": "Doesn't C also do this?", "aSentId": 31981, "answer": "Yes, but `i += i++` in C has undefined behavior anyways.  It could reach into your BIOS and disable your CPU fan in an attempt to set your house on fire for all the compiler developers care.  You're not allowed to modify the same value more than once between two sequence points.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31974, "question": "Does modern java still do that thing where it matters what side of `i` the `++` is?", "aSentId": 31983, "answer": "Yes. Because it matters. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31974, "question": "Does modern java still do that thing where it matters what side of `i` the `++` is?", "aSentId": 31985, "answer": "... What. Yes! And in C. And perl. And C#. They change when the increment happens. We can hate on Java for a lot of things but that isn't one.\n\nNow, ++ being stateful... That's a different matter. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31987, "question": "I'm surprised that so many of the \"downvoted to hell\" questions have some high quality answers. You'd think that people would be inclined not to spend time on such questions.\n\nI guess people probably realized that the questions would get so much attention *because* they were so heavily downvoted, and thus answers would receive attention, too.", "aSentId": 31988, "answer": "IME people spend time on writing answers when 1) they know they can get a lot of publicity for it (on SO, that means karma), and 2) if they think many people will have the same type of question (even if it's a stupid or badly written one) -- so I think it makes sense that people would then answer to questions like these.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31989, "question": "IME people spend time on writing answers when 1) they know they can get a lot of publicity for it (on SO, that means karma), and 2) if they think many people will have the same type of question (even if it's a stupid or badly written one) -- so I think it makes sense that people would then answer to questions like these.", "aSentId": 31990, "answer": "My sole motivation for answering SO questions is boredom. Well, that and paying back the help I have received.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31987, "question": "I'm surprised that so many of the \"downvoted to hell\" questions have some high quality answers. You'd think that people would be inclined not to spend time on such questions.\n\nI guess people probably realized that the questions would get so much attention *because* they were so heavily downvoted, and thus answers would receive attention, too.", "aSentId": 31992, "answer": "Those are only the downvotes, not the total vote score.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31987, "question": "I'm surprised that so many of the \"downvoted to hell\" questions have some high quality answers. You'd think that people would be inclined not to spend time on such questions.\n\nI guess people probably realized that the questions would get so much attention *because* they were so heavily downvoted, and thus answers would receive attention, too.", "aSentId": 31994, "answer": "There's A Badge For That - get a certain amount of positive votes on your answer to a sufficiently unpopular question and you get some kind of badge.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31997, "question": "Wow, that place is [warped](http://stackoverflow.com/questions/3455660/single-layer-neural-network).  Question asked on Aug 11, 2010, gets a detailed and very helpful answer that same day.  Questioner responds like a kicked dog, thankful for not being kicked this time: \"+1 for being waaay nicer than necessary.\"\n\nNow fast forward a few years: Question \"closed as too localized by bmargulies, bla, slashingweapon, RivieraKid, cmbuckley Jan 8 '13 at 23:06,\" then \"protected by DaveRandom Jan 28 '13 at 13:16,\" then \"locked by Bill the Lizard\u2666 Nov 25 '14 at 14:03.\"  Of course, there's no reason given by the mods or link to any discussion.  This doesn't seem like a particularly fun or useful game.  If I want to have fun and earn valueless \"internet points,\" I'll play Warcraft or something.", "aSentId": 31998, "answer": "&gt; Wow, that place is warped.\n\nThis is why I didn't respond to the idiot recruiter who asked me to provide my Stack Overflow ID to them as part of an interview process.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31999, "question": "&gt; Wow, that place is warped.\n\nThis is why I didn't respond to the idiot recruiter who asked me to provide my Stack Overflow ID to them as part of an interview process.", "aSentId": 32000, "answer": "Wat. Looking for a job is gonna be great when I graduate...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32001, "question": "Wat. Looking for a job is gonna be great when I graduate...", "aSentId": 32002, "answer": "Dude recruiters are retarded. You'll learn to hate them really quickly. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32003, "question": "Dude recruiters are retarded. You'll learn to hate them really quickly. ", "aSentId": 32004, "answer": "I married one. It's actually how we met.\n\n(but only because she was the only recruiter at her company who actually understood technology. I refused to work with anyone else in her company at the beginning, which is how we started talking. For the most part, yes, recruiters are retarded. Every now and then there *might* be one who isnt. Unless I found the only one.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32005, "question": "I married one. It's actually how we met.\n\n(but only because she was the only recruiter at her company who actually understood technology. I refused to work with anyone else in her company at the beginning, which is how we started talking. For the most part, yes, recruiters are retarded. Every now and then there *might* be one who isnt. Unless I found the only one.)", "aSentId": 32006, "answer": "The husband of one my friends from college is a recruiter.\n\nHands down the nicest guy I know but also rank him as one of the stupidest guys I know.\n\nBeen in the technical recruiting fit almost a decade now", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32007, "question": "The husband of one my friends from college is a recruiter.\n\nHands down the nicest guy I know but also rank him as one of the stupidest guys I know.\n\nBeen in the technical recruiting fit almost a decade now", "aSentId": 32008, "answer": "My wife bailed on recruiting after a few years- it was her first job out of college, and even though she was raking in the cash, it attracted some of the most dishonest, vile, detestable people as co-workers, so she quit to be an IT project manager. After a few years of that she quit to open a book store. So she's at least no longer a recruiter. All the people at her company that had been there like 5+ years? Terrible. Just terrible.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32009, "question": "My wife bailed on recruiting after a few years- it was her first job out of college, and even though she was raking in the cash, it attracted some of the most dishonest, vile, detestable people as co-workers, so she quit to be an IT project manager. After a few years of that she quit to open a book store. So she's at least no longer a recruiter. All the people at her company that had been there like 5+ years? Terrible. Just terrible.", "aSentId": 32010, "answer": "Do you have stories/examples? \n\n*sits down*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32011, "question": "Do you have stories/examples? \n\n*sits down*", "aSentId": 32012, "answer": "Back in 2008, her manager called a branch meeting and spent an hour ranting about how everyone better vote for McCain because Obama would ruin the country. When my wife asked if they could leave and just get back to work, he came within an inch of physically assaulting her, and then spent 10 minutes berating her about how she was just a stupid kid who didnt know how the world worked.\n\nOne time the receptionist was stuffing some company christmas cards, and this manager walked in, didnt like how she had her process set up for folding/stuffing/stamping, and literally flipped the table over. Berates the receptionist for being a stupid bitch.\n\nHe uses company funds to pay for board meetings for several un-related boards he sits on. For example: Caters a meeting for 20 people, and gives leftover food to the recruiters so he can write it off as a company expense. He forced them to have a company XMas party for less than $200, and my wife later found out each branch was given TWO FUCKING THOUSAND DOLLARS as their budget.\n\nHe also constantly sexually harrassed everyone (He was one of only two men who worked at that branch).\n\nMy wife and a bunch of the other women went to corporate hq with a list of everything he did and filed a formal complaint. HQ was mad, because theyre a woman-owned company and pride themselves on it.\n\nHe goes in, gets one of the account managers to flip to be on his side (and is coincidentally promoted to Sr Account Manager and given all the best accounts a week later), convinces HQ that all the women are just being over-sensitive and dramatic and its all a misunderstanding.\n\nHe keeps his job with absolutely no punishment whatsoever. My wife and two co-workers get put on a \"performance plan\" which is the first step in officially firing someone. My wife quit two weeks later.\n\nHe is literally the only person I will punch in the face if i ever see in person.\n\n(and thats just stories around one dude that worked there. There are at least 3 or 4 other people who have equally disgusting histories there)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32013, "question": "Back in 2008, her manager called a branch meeting and spent an hour ranting about how everyone better vote for McCain because Obama would ruin the country. When my wife asked if they could leave and just get back to work, he came within an inch of physically assaulting her, and then spent 10 minutes berating her about how she was just a stupid kid who didnt know how the world worked.\n\nOne time the receptionist was stuffing some company christmas cards, and this manager walked in, didnt like how she had her process set up for folding/stuffing/stamping, and literally flipped the table over. Berates the receptionist for being a stupid bitch.\n\nHe uses company funds to pay for board meetings for several un-related boards he sits on. For example: Caters a meeting for 20 people, and gives leftover food to the recruiters so he can write it off as a company expense. He forced them to have a company XMas party for less than $200, and my wife later found out each branch was given TWO FUCKING THOUSAND DOLLARS as their budget.\n\nHe also constantly sexually harrassed everyone (He was one of only two men who worked at that branch).\n\nMy wife and a bunch of the other women went to corporate hq with a list of everything he did and filed a formal complaint. HQ was mad, because theyre a woman-owned company and pride themselves on it.\n\nHe goes in, gets one of the account managers to flip to be on his side (and is coincidentally promoted to Sr Account Manager and given all the best accounts a week later), convinces HQ that all the women are just being over-sensitive and dramatic and its all a misunderstanding.\n\nHe keeps his job with absolutely no punishment whatsoever. My wife and two co-workers get put on a \"performance plan\" which is the first step in officially firing someone. My wife quit two weeks later.\n\nHe is literally the only person I will punch in the face if i ever see in person.\n\n(and thats just stories around one dude that worked there. There are at least 3 or 4 other people who have equally disgusting histories there)", "aSentId": 32014, "answer": "...damn, some people are just ridiculous with things like that. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31997, "question": "Wow, that place is [warped](http://stackoverflow.com/questions/3455660/single-layer-neural-network).  Question asked on Aug 11, 2010, gets a detailed and very helpful answer that same day.  Questioner responds like a kicked dog, thankful for not being kicked this time: \"+1 for being waaay nicer than necessary.\"\n\nNow fast forward a few years: Question \"closed as too localized by bmargulies, bla, slashingweapon, RivieraKid, cmbuckley Jan 8 '13 at 23:06,\" then \"protected by DaveRandom Jan 28 '13 at 13:16,\" then \"locked by Bill the Lizard\u2666 Nov 25 '14 at 14:03.\"  Of course, there's no reason given by the mods or link to any discussion.  This doesn't seem like a particularly fun or useful game.  If I want to have fun and earn valueless \"internet points,\" I'll play Warcraft or something.", "aSentId": 32016, "answer": "&gt; Of course, there's no reason given by the mods.\n\nWhat are you talking about? There are reasons below the closed/locked messages. If you look at the [revision history][1] you can also easily see that it got locked after multiple delete/undelete iterations, to put an end to that.\n\n&gt; Questioner responds like a kicked dog, thankful for not being kicked this time: \"+1 for being waaay nicer than necessary.\"\n\nNo, not at all, someone else said that. The questioner responded with:\n\n&gt; thanks a lot...but I am done with this question now....when I needed the soln, no one appeared here. But I must thank you for being so generous  \n&gt; No..really...my submission was due today by 9am...I submitted my hw in the night after not getting any +ve response...Though I have not completed the hw..\n\nYou can also see there were additional comments on the question, since deleted, by the highly upvoted \"I gave you quite a few positive responses pointing out the errors in your code and giving you numerous links to the documentation.\" response to that.\n\n[1]: http://stackoverflow.com/posts/3455660/revisions", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32017, "question": "&gt; Of course, there's no reason given by the mods.\n\nWhat are you talking about? There are reasons below the closed/locked messages. If you look at the [revision history][1] you can also easily see that it got locked after multiple delete/undelete iterations, to put an end to that.\n\n&gt; Questioner responds like a kicked dog, thankful for not being kicked this time: \"+1 for being waaay nicer than necessary.\"\n\nNo, not at all, someone else said that. The questioner responded with:\n\n&gt; thanks a lot...but I am done with this question now....when I needed the soln, no one appeared here. But I must thank you for being so generous  \n&gt; No..really...my submission was due today by 9am...I submitted my hw in the night after not getting any +ve response...Though I have not completed the hw..\n\nYou can also see there were additional comments on the question, since deleted, by the highly upvoted \"I gave you quite a few positive responses pointing out the errors in your code and giving you numerous links to the documentation.\" response to that.\n\n[1]: http://stackoverflow.com/posts/3455660/revisions", "aSentId": 32018, "answer": "&gt; No, not at all, someone else said that.\n\nSorry -- brain fart.  The original questioner seems like a bit of a demanding jerk, but the best and easiest way to deal with people like that is simply to stop responding.  Instead...\n\n&gt;  it got locked after multiple delete/undelete iterations, to put an end to that.\n\nThis question was asked and answered in August 2010, but for whatever reason (maybe they earn points for doing it?) people decided to have delete wars in 2013 and 2014, eventually leading to the locking.  Weirdly, \"Bill the Lizard\" started the delete wars with himself back in 2012, giving absolutely no reason for his moderation.\n\nSO combines the random nastiness of old-school Usenet with the byzantine rules and politics of Wikipedia.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32019, "question": "&gt; No, not at all, someone else said that.\n\nSorry -- brain fart.  The original questioner seems like a bit of a demanding jerk, but the best and easiest way to deal with people like that is simply to stop responding.  Instead...\n\n&gt;  it got locked after multiple delete/undelete iterations, to put an end to that.\n\nThis question was asked and answered in August 2010, but for whatever reason (maybe they earn points for doing it?) people decided to have delete wars in 2013 and 2014, eventually leading to the locking.  Weirdly, \"Bill the Lizard\" started the delete wars with himself back in 2012, giving absolutely no reason for his moderation.\n\nSO combines the random nastiness of old-school Usenet with the byzantine rules and politics of Wikipedia.", "aSentId": 32020, "answer": "&gt; Weirdly, \"Bill the Lizard\" started the delete wars with himself back in 2012, giving absolutely no reason for his moderation.\n\nYou mean the self-reverted delete that lasted a full minute? Why not take off the skeptics hat and consider that there might be a benign, finger-fudging reason for that?\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32019, "question": "&gt; No, not at all, someone else said that.\n\nSorry -- brain fart.  The original questioner seems like a bit of a demanding jerk, but the best and easiest way to deal with people like that is simply to stop responding.  Instead...\n\n&gt;  it got locked after multiple delete/undelete iterations, to put an end to that.\n\nThis question was asked and answered in August 2010, but for whatever reason (maybe they earn points for doing it?) people decided to have delete wars in 2013 and 2014, eventually leading to the locking.  Weirdly, \"Bill the Lizard\" started the delete wars with himself back in 2012, giving absolutely no reason for his moderation.\n\nSO combines the random nastiness of old-school Usenet with the byzantine rules and politics of Wikipedia.", "aSentId": 32022, "answer": "I don't spend much time on SO specifically, but I like SE overall. Like reddit, it's better in a tight-knit, small community. \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 31997, "question": "Wow, that place is [warped](http://stackoverflow.com/questions/3455660/single-layer-neural-network).  Question asked on Aug 11, 2010, gets a detailed and very helpful answer that same day.  Questioner responds like a kicked dog, thankful for not being kicked this time: \"+1 for being waaay nicer than necessary.\"\n\nNow fast forward a few years: Question \"closed as too localized by bmargulies, bla, slashingweapon, RivieraKid, cmbuckley Jan 8 '13 at 23:06,\" then \"protected by DaveRandom Jan 28 '13 at 13:16,\" then \"locked by Bill the Lizard\u2666 Nov 25 '14 at 14:03.\"  Of course, there's no reason given by the mods or link to any discussion.  This doesn't seem like a particularly fun or useful game.  If I want to have fun and earn valueless \"internet points,\" I'll play Warcraft or something.", "aSentId": 32024, "answer": "The questioner doesn't respond like that; that's someone else. The questioner responds like a kid wanting someone else to do his homework for him, I think that's why the negative response.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32027, "question": "In my experience, asking any kind of programming/tech question is usually met with negativity no matter what the question is. Because of that, Google has become my best friend.", "aSentId": 32028, "answer": "`This sentiment was closed as a duplicate`", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32027, "question": "In my experience, asking any kind of programming/tech question is usually met with negativity no matter what the question is. Because of that, Google has become my best friend.", "aSentId": 32030, "answer": "If you can find your answer on Google that means that someone already asked your question. And if that's the case then you shouldn't really be asking that question to begin with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32034, "question": "How was [this question](http://stackoverflow.com/questions/391644/checking-array-duplication-in-linear-time) downvoted that much? And even closed! It was such a great question. I want to know the answer if it is known.", "aSentId": 32035, "answer": "Because the OP was trying to crowd-source his homework, which most people dislike.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32038, "question": "    static void Main(string[] args)\n    {\n        int i = 0;\n        i += i++;\n        Console.WriteLine(i);\n        Console.ReadLine();\n    }\n    The result of i is 0\n\nWell that's weird.", "aSentId": 32039, "answer": "Why is that weird?  It's exactly what you would expect.  The i++ is a postfix increment, so it adds 1 to i, but returns the previous value (0), that is added to the original value (0) then assigned to i.  \n\nIt's totally goofy looking because you have two assignments to the same variable in the same clause, and one of them gets masked by the other.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32040, "question": "Why is that weird?  It's exactly what you would expect.  The i++ is a postfix increment, so it adds 1 to i, but returns the previous value (0), that is added to the original value (0) then assigned to i.  \n\nIt's totally goofy looking because you have two assignments to the same variable in the same clause, and one of them gets masked by the other.", "aSentId": 32041, "answer": "* it adds 1 to i (i = 1)\n* returns the previous value (0)\n* that is added to the original value (0 + 0 = 0)\n* then assigned to i (i = 0)\n\nThe part I did not expect was the third step here. I would have expected it to add not to the *original* value, but the *current* value *after* evaluating the RHS of the expression. (1 + 0 = 1). I have never thought of `+=` and friends as snapshotting the current value of a variable before evaluating the RHS. This is extremely unintuitive to me.\n\nWhat if it's written this way?\n\n    int i = 0;\n\n    void foo() {\n      return i++;\n    }\n\n    void main() {\n        i += external();\n    }\n\nWill it have the same end result (i = 0)? Or will it have the end result of (i = 1)?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32042, "question": "* it adds 1 to i (i = 1)\n* returns the previous value (0)\n* that is added to the original value (0 + 0 = 0)\n* then assigned to i (i = 0)\n\nThe part I did not expect was the third step here. I would have expected it to add not to the *original* value, but the *current* value *after* evaluating the RHS of the expression. (1 + 0 = 1). I have never thought of `+=` and friends as snapshotting the current value of a variable before evaluating the RHS. This is extremely unintuitive to me.\n\nWhat if it's written this way?\n\n    int i = 0;\n\n    void foo() {\n      return i++;\n    }\n\n    void main() {\n        i += external();\n    }\n\nWill it have the same end result (i = 0)? Or will it have the end result of (i = 1)?", "aSentId": 32043, "answer": "Interesting indeed. What about \n\n    int i = 0;\n    i += ++i;\n\n?\n\nNote that in C++ this expression was relatively recently legalized (C++11), during the switch from \"sequence points\" to a more general concept of sequencing based on \"sequenced before\"/\"sequenced after\" relationships.\n\nHowever, C++ does not make a snapshot of the variable, meaning that in C++ `i` becomes `2`. What about Java? `i` ends up being `1`?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32040, "question": "Why is that weird?  It's exactly what you would expect.  The i++ is a postfix increment, so it adds 1 to i, but returns the previous value (0), that is added to the original value (0) then assigned to i.  \n\nIt's totally goofy looking because you have two assignments to the same variable in the same clause, and one of them gets masked by the other.", "aSentId": 32045, "answer": "It is weird because a modifiable operand implies an lvalue - a value stored in memory. In order to ensure that `+=` sees `i` as `0` after `++` is done (and `i` is already `1`), the code has to memorize the old value of `i` somewhere and supply it to `+=`, instead of allowing `+=` to access `i` directly. I.e. the code has to store a snapshot of involved variables before the evaluation. This is what feels weird.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32046, "question": "It is weird because a modifiable operand implies an lvalue - a value stored in memory. In order to ensure that `+=` sees `i` as `0` after `++` is done (and `i` is already `1`), the code has to memorize the old value of `i` somewhere and supply it to `+=`, instead of allowing `+=` to access `i` directly. I.e. the code has to store a snapshot of involved variables before the evaluation. This is what feels weird.", "aSentId": 32047, "answer": "The \"snapshot\" is in a register.  Then the final value gets written back out to memory.  \n\nThis may not strictly be true, but the compiler has to make it seem that way to avoid breaking existing code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32038, "question": "    static void Main(string[] args)\n    {\n        int i = 0;\n        i += i++;\n        Console.WriteLine(i);\n        Console.ReadLine();\n    }\n    The result of i is 0\n\nWell that's weird.", "aSentId": 32049, "answer": "At least in C++, this is undefined behavior. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32050, "question": "At least in C++, this is undefined behavior. ", "aSentId": 32051, "answer": "As in C. I want to believe that in Java it is undefined too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32050, "question": "At least in C++, this is undefined behavior. ", "aSentId": 32053, "answer": "I'm assuming this is because of compiler optimisation?\n\nAlso, is there anything in C# that actually does produce undefined behaviour, apart from obvious things like multiple threads/race conditions?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32054, "question": "I'm assuming this is because of compiler optimisation?\n\nAlso, is there anything in C# that actually does produce undefined behaviour, apart from obvious things like multiple threads/race conditions?", "aSentId": 32055, "answer": "&gt; I'm assuming this is because of compiler optimisation?\n\nNope. It's undefined because you are modifying a variable twice in one statement. That's just not valid.\n\nSame goes if you do something like my_function(++x, ++x) or any other thing of this kind.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32056, "question": "&gt; I'm assuming this is because of compiler optimisation?\n\nNope. It's undefined because you are modifying a variable twice in one statement. That's just not valid.\n\nSame goes if you do something like my_function(++x, ++x) or any other thing of this kind.", "aSentId": 32057, "answer": "Well, it is not formally correct to say that it is because of \"modifying a variable twice in one statement\". It has nothing to do with statements at all.\n\nIn this expression `i++ &amp;&amp; i++` I'm also modifying the variable twice, but there's no undefined behavior. In classic C++ it was about modifying the same variable twice *without an intervening sequence point*.\n\nIn modern C++ sequence points are gone, replaced by different approach to sequencing. In modern C++, for example, `i = ++i` is no longer undefined behavior. `i = i++` still is.\n\n    ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32058, "question": "Well, it is not formally correct to say that it is because of \"modifying a variable twice in one statement\". It has nothing to do with statements at all.\n\nIn this expression `i++ &amp;&amp; i++` I'm also modifying the variable twice, but there's no undefined behavior. In classic C++ it was about modifying the same variable twice *without an intervening sequence point*.\n\nIn modern C++ sequence points are gone, replaced by different approach to sequencing. In modern C++, for example, `i = ++i` is no longer undefined behavior. `i = i++` still is.\n\n    ", "aSentId": 32059, "answer": "Hi. Thanks for the reply.\n\nWhat about i += ++i ?\n\nor things like\n\na[i] = ++i ?\n\nI expanded a bit my answer in another post and tried to be more precise. I used to be comfortable with C, but never used C++, so I talked a bit from ignorance.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32056, "question": "&gt; I'm assuming this is because of compiler optimisation?\n\nNope. It's undefined because you are modifying a variable twice in one statement. That's just not valid.\n\nSame goes if you do something like my_function(++x, ++x) or any other thing of this kind.", "aSentId": 32061, "answer": "&gt; Nope. It's undefined because you are modifying a variable twice in one statement. That's just not valid.\n\nBut that's not a valid reason as to *why* is this invalid. It's perfectly valid in a language like C# and Java, this behaviour (although quirky) can be consistently relied upon in these languages. Saying that you are modifying a variable twice in one statement isn't a valid reason in itself for something to qualify as undefined behaviour. There is nothing stopping the C++ language designers from requiring that the C++ compiler implementation handle this statement in a consistent and defined manner. There almost definitely reasons that they don't, but they *could*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32062, "question": "&gt; Nope. It's undefined because you are modifying a variable twice in one statement. That's just not valid.\n\nBut that's not a valid reason as to *why* is this invalid. It's perfectly valid in a language like C# and Java, this behaviour (although quirky) can be consistently relied upon in these languages. Saying that you are modifying a variable twice in one statement isn't a valid reason in itself for something to qualify as undefined behaviour. There is nothing stopping the C++ language designers from requiring that the C++ compiler implementation handle this statement in a consistent and defined manner. There almost definitely reasons that they don't, but they *could*.", "aSentId": 32063, "answer": "I don't know much about C++, but I know a bit more about C. A variable with a side effect can't appear twice in an expression. I think the reason is that it allows the compiler to be free of doing whatever it wants. In general, that's the way most decisions of this kind are taken that I know. But for the programmer it keeps the language simple. C is tries to be a simple language and doth a good job.\n\nThough, depending on the standard use it can be considered unspecified or undefined.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32054, "question": "I'm assuming this is because of compiler optimisation?\n\nAlso, is there anything in C# that actually does produce undefined behaviour, apart from obvious things like multiple threads/race conditions?", "aSentId": 32065, "answer": "What's happening in C#, I suspect, is that i++ evaluates to 0 and i is incremented by 1, but is then overwritten by the assignment operator, which has already evaluated i to be zero. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32066, "question": "What's happening in C#, I suspect, is that i++ evaluates to 0 and i is incremented by 1, but is then overwritten by the assignment operator, which has already evaluated i to be zero. ", "aSentId": 32067, "answer": "Yes but it is always 0, because it's still defined behavior.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32068, "question": "Yes but it is always 0, because it's still defined behavior.", "aSentId": 32069, "answer": "I did not say it was undefined in C#... ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32070, "question": "I did not say it was undefined in C#... ", "aSentId": 32071, "answer": "Yeah that's true sorry. I guess my original question was more concerned with what situations/statements in C# are actually undefined. For example, even crazy shit like [this](http://stackoverflow.com/questions/5294885/is-i-i-an-undefined-behavior) is well defined in C#, while in C and C++ it is not.\n\nI did some more research myself and found that basically everything outside the [unsafe] block is well defined. Apparently (int.MinValue/-1) might be undefined behaviour but I can't find a reliable source. Pretty much anything that conceivably could create an undefined situation throws an exception, hence making it well defined.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32068, "question": "Yes but it is always 0, because it's still defined behavior.", "aSentId": 32073, "answer": "I don't think that's what undefined behavior means. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32074, "question": "I don't think that's what undefined behavior means. ", "aSentId": 32075, "answer": "Undefined means that the language specification doesn't state how the case should be handled, therefore compilers can conceivably handle the case in any way they like (do weird optimisations, etc), and therefore the outcome of compiling that code cannot be known without knowing information about the implementation of the compiler, and perhaps even the hardware in strange enough cases.\n\nIn C#, the case shown above *is* defined, because that code will always produce the 0 result, regardless of the implementation, because the language specification mandates it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32038, "question": "    static void Main(string[] args)\n    {\n        int i = 0;\n        i += i++;\n        Console.WriteLine(i);\n        Console.ReadLine();\n    }\n    The result of i is 0\n\nWell that's weird.", "aSentId": 32077, "answer": "I would have thought it's related to [The variable is modified while being used twice between sequence points](http://www.viva64.com/en/d/0162/).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32078, "question": "I would have thought it's related to [The variable is modified while being used twice between sequence points](http://www.viva64.com/en/d/0162/).", "aSentId": 32079, "answer": "Java doesn't have that issue. Order of evaluation is well defined. The result is 0 because of the well defined order of evaluation rather than 0 because of undefined behaviour.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32080, "question": "Java doesn't have that issue. Order of evaluation is well defined. The result is 0 because of the well defined order of evaluation rather than 0 because of undefined behaviour.", "aSentId": 32081, "answer": "Ah ok, my head is stuck in C++'s world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32083, "question": "8cc: A Small C Compiler", "aSentId": 32084, "answer": "An interresting compiler. What seems to be very interresting though, is compilation using the C11 standard, without actually requiring it. C99 works just fine for compiling and running the compiler.\n\nIt even compiles just fine in 0.340s using tcc on my netbook, which is C99 only. Very interresting project though, especially for understanding compilers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32085, "question": "An interresting compiler. What seems to be very interresting though, is compilation using the C11 standard, without actually requiring it. C99 works just fine for compiling and running the compiler.\n\nIt even compiles just fine in 0.340s using tcc on my netbook, which is C99 only. Very interresting project though, especially for understanding compilers.", "aSentId": 32086, "answer": "There's only one `r` in `interesting`. Tip for remembering: It comes from Latin *inter-* (between) and *esse* (to be); \"to be between\", i.e. to have some importance. By comparison, `interrogate` comes from *inter-* (between) + *rogare* (to ask/straighten out). That's why it has two `r`s. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32087, "question": "There's only one `r` in `interesting`. Tip for remembering: It comes from Latin *inter-* (between) and *esse* (to be); \"to be between\", i.e. to have some importance. By comparison, `interrogate` comes from *inter-* (between) + *rogare* (to ask/straighten out). That's why it has two `r`s. ", "aSentId": 32088, "answer": "Hmm...interresting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32089, "question": "Hmm...interresting.", "aSentId": 32090, "answer": "There's only one `r` in `interesting`. Tip for remembering: ...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32091, "question": "There's only one `r` in `interesting`. Tip for remembering: ...", "aSentId": 32092, "answer": "From the \"Computer Contradictionary\", 1995.\n\n&gt; Recursion: see recursion.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32087, "question": "There's only one `r` in `interesting`. Tip for remembering: It comes from Latin *inter-* (between) and *esse* (to be); \"to be between\", i.e. to have some importance. By comparison, `interrogate` comes from *inter-* (between) + *rogare* (to ask/straighten out). That's why it has two `r`s. ", "aSentId": 32094, "answer": "Malcolm Inter Esse", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32083, "question": "8cc: A Small C Compiler", "aSentId": 32096, "answer": "Is there a list of small C compilers like this somewhere? I know of just a few (like TCC)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32097, "question": "Is there a list of small C compilers like this somewhere? I know of just a few (like TCC)", "aSentId": 32098, "answer": "There's probably a ton of non-functional ones, but mostly the ones that matter are TCC and PCC. Then there's 8cc which seems pretty cool, but might not work in all cases and only supports x86-64. I'm not sure about others though.\n\nSmall C compilers come in different shapes and forms, and not all are great, so I simple listed the ones I know to work.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32099, "question": "There's probably a ton of non-functional ones, but mostly the ones that matter are TCC and PCC. Then there's 8cc which seems pretty cool, but might not work in all cases and only supports x86-64. I'm not sure about others though.\n\nSmall C compilers come in different shapes and forms, and not all are great, so I simple listed the ones I know to work.", "aSentId": 32100, "answer": "There's also the Plan 9 family of C compilers, described [here](http://plan9.bell-labs.com/magic/man2html/1/8c).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32099, "question": "There's probably a ton of non-functional ones, but mostly the ones that matter are TCC and PCC. Then there's 8cc which seems pretty cool, but might not work in all cases and only supports x86-64. I'm not sure about others though.\n\nSmall C compilers come in different shapes and forms, and not all are great, so I simple listed the ones I know to work.", "aSentId": 32102, "answer": "Can pcc/tcc compile \"larger\" applications (Gnome/Gtk, etc) successfully or do most use gcc extensions incompatible with pcc/tcc?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32097, "question": "Is there a list of small C compilers like this somewhere? I know of just a few (like TCC)", "aSentId": 32104, "answer": "9c is pretty fast.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32105, "question": "9c is pretty fast.", "aSentId": 32106, "answer": "all of the plan9 compilers are small and fast. A quick benchmark (`cat * | wc -l`) for 8c says its only 12k lines. 6c is only 10k lines. 9c is just a script that calls the appropriate compiler.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32097, "question": "Is there a list of small C compilers like this somewhere? I know of just a few (like TCC)", "aSentId": 32108, "answer": "[c4](https://github.com/rswier/c4) is one of my favorites.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32083, "question": "8cc: A Small C Compiler", "aSentId": 32110, "answer": "OP, are you the creator of this compiler? If so, I would advise against an optimization step.\n\nAs I understand it, the point of this compiler is to be as simple as possible so it's easy to understand how a compiler is built. Unless it's goal is to compete against gcc and clang, there's no point to optimizations - they will only make the code more complex and harder to read.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32111, "question": "OP, are you the creator of this compiler? If so, I would advise against an optimization step.\n\nAs I understand it, the point of this compiler is to be as simple as possible so it's easy to understand how a compiler is built. Unless it's goal is to compete against gcc and clang, there's no point to optimizations - they will only make the code more complex and harder to read.", "aSentId": 32112, "answer": "That really depends -- some of the more esoteric optimizations I could agree with you on, but in general, it would be nice to see a teaching compiler (which is what 8cc looks to position itself as) that has some common optimizations built in. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32111, "question": "OP, are you the creator of this compiler? If so, I would advise against an optimization step.\n\nAs I understand it, the point of this compiler is to be as simple as possible so it's easy to understand how a compiler is built. Unless it's goal is to compete against gcc and clang, there's no point to optimizations - they will only make the code more complex and harder to read.", "aSentId": 32114, "answer": "If you did the optimisation stage in a modular way, you could avoid adding very much complexity to the rest of the compiler, and show what optimisations are possible. You maybe wouldn't be able to make all of the esoteric optimisations, but some would be interesting regardless.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32115, "question": "If you did the optimisation stage in a modular way, you could avoid adding very much complexity to the rest of the compiler, and show what optimisations are possible. You maybe wouldn't be able to make all of the esoteric optimisations, but some would be interesting regardless.", "aSentId": 32116, "answer": "I'm the creator of the compiler, and I agree with you. I'm planning to make optimization passes optional so that the compiler works with or without them. Then need to understanding the passes will become optional too. Most compilers are written that way, and you can enable each pass or all at once (like -O2) from command line.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32117, "question": "I'm the creator of the compiler, and I agree with you. I'm planning to make optimization passes optional so that the compiler works with or without them. Then need to understanding the passes will become optional too. Most compilers are written that way, and you can enable each pass or all at once (like -O2) from command line.", "aSentId": 32118, "answer": "Random question: How does one get from being good at programming to learning how to write a compiler? It seems like such a huge leap for me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32119, "question": "Random question: How does one get from being good at programming to learning how to write a compiler? It seems like such a huge leap for me.", "aSentId": 32120, "answer": "You need to know a lot about details of a language and a target architecture/ABI. But if you are already able to write a parser, all you have to learn for a non-optimizing compiler is how to convert abstract syntax trees to assembly. This requires some practice. I don't say it's easy, but in my opinion it's not really that hard. One important thing is patience -- especially when you are fixing miscompilation bugs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32121, "question": "You need to know a lot about details of a language and a target architecture/ABI. But if you are already able to write a parser, all you have to learn for a non-optimizing compiler is how to convert abstract syntax trees to assembly. This requires some practice. I don't say it's easy, but in my opinion it's not really that hard. One important thing is patience -- especially when you are fixing miscompilation bugs.", "aSentId": 32122, "answer": "Beyond K&amp;R and something like Sedgewick's *Algorithms in C*, what other books would you suggest one work through? Or would the books you suggested at the bottom of the OP be a sufficient addition? \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32119, "question": "Random question: How does one get from being good at programming to learning how to write a compiler? It seems like such a huge leap for me.", "aSentId": 32124, "answer": "people seem to view compiler writing as some sort of black magic.\n\na compiler is quite simply a program that converts from one language to another. if you want to get started with making compilers and the like I suggest you try and write a compiler for some simple stack language to C. that should teach you all the basics, after which you can see if you want to go all the way and compile to machine code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32125, "question": "people seem to view compiler writing as some sort of black magic.\n\na compiler is quite simply a program that converts from one language to another. if you want to get started with making compilers and the like I suggest you try and write a compiler for some simple stack language to C. that should teach you all the basics, after which you can see if you want to go all the way and compile to machine code.", "aSentId": 32126, "answer": "Programming itself is black magic to normal people, but to get to the point where you demystify it to make a *useful* program takes a while...\n\nThere's an MIT opencoursweare coarse on making a compiler, perhaps I'll go look into that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32127, "question": "Programming itself is black magic to normal people, but to get to the point where you demystify it to make a *useful* program takes a while...\n\nThere's an MIT opencoursweare coarse on making a compiler, perhaps I'll go look into that.", "aSentId": 32128, "answer": "&gt; Programming itself is black magic to normal people\n\nah, yes, I was assuming a beginner level of programming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32119, "question": "Random question: How does one get from being good at programming to learning how to write a compiler? It seems like such a huge leap for me.", "aSentId": 32130, "answer": "Going to university helps, but if you think about it on a simple level it's not too complicated - there are plenty of guides online (albeit a bit dense), and iirc coursera has a course on it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32135, "question": "It doesn't, to me. I mean, a basic compiler is no different from a file converter. You're converting from one format (C-code) to another (x86 bytecode assembly).", "aSentId": 32136, "answer": "That statement is no different than saying \"Programming is easy! Just type a few words and out poops a *useful* program!\" :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32137, "question": "That statement is no different than saying \"Programming is easy! Just type a few words and out poops a *useful* program!\" :(", "aSentId": 32138, "answer": "Well, that's not wrong...if you know what words to use.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32115, "question": "If you did the optimisation stage in a modular way, you could avoid adding very much complexity to the rest of the compiler, and show what optimisations are possible. You maybe wouldn't be able to make all of the esoteric optimisations, but some would be interesting regardless.", "aSentId": 32140, "answer": "If optimization was a modular system, you could also (I know I'm stating the obvious, but I have a point I promise) write modules to customize compiler output to assembly, which would be super useful for research projects.\n\nSpecifically, you could optimize specific functions or tinker with morphing, something I've been looking into lately", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32115, "question": "If you did the optimisation stage in a modular way, you could avoid adding very much complexity to the rest of the compiler, and show what optimisations are possible. You maybe wouldn't be able to make all of the esoteric optimisations, but some would be interesting regardless.", "aSentId": 32142, "answer": "&gt; If you did the optimisation stage in a modular way\n\nThe problem is that modularity isn't free; modularity alone almost always introduces a lot of unwanted complexity. I happen to be of the unpopular opinion that modularity is a bad idea [0]. \n\nIt might make things \"look\" or \"feel\" simpler when you put them behind a hopefully mostly adequate interface, but I would hope it's fairly obvious that you can't make something simpler by *doing* more. If you're lucky you can make the structure easier to understand (at least until things change enough that the tower starts to crumble, and then you're in a enviable position of having built a tower that is threatening to fall on you heads) but there's a big cost to doing that too. I cost I find too high.\n\nI'll end with one of my favourite quotes.\n\n\"Do not put code in your program that might be used. Do not leave hooks on which you can hang extensions. The things you might want to do are infinite; that means that each one has 0 probability of realization. If you need an extension later, you can code it later - and probably do a better job than if you did it now. And if someone else adds the extension, will they notice the hooks you left? Will you document that aspect of your program?\" - Chuck Moore\n\n[0] I'm also against generality and reuse, at least the term is commonly understood in our industry. How can you make something more specific and make it more general? [code] \"reuse\" is probably the single biggest cause of problems in software today; moreover it's arguably that never really been achieved by making things more general. Things that are reusable are, as a rule, more specific. They solve one problem and they solve it very well.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32143, "question": "&gt; If you did the optimisation stage in a modular way\n\nThe problem is that modularity isn't free; modularity alone almost always introduces a lot of unwanted complexity. I happen to be of the unpopular opinion that modularity is a bad idea [0]. \n\nIt might make things \"look\" or \"feel\" simpler when you put them behind a hopefully mostly adequate interface, but I would hope it's fairly obvious that you can't make something simpler by *doing* more. If you're lucky you can make the structure easier to understand (at least until things change enough that the tower starts to crumble, and then you're in a enviable position of having built a tower that is threatening to fall on you heads) but there's a big cost to doing that too. I cost I find too high.\n\nI'll end with one of my favourite quotes.\n\n\"Do not put code in your program that might be used. Do not leave hooks on which you can hang extensions. The things you might want to do are infinite; that means that each one has 0 probability of realization. If you need an extension later, you can code it later - and probably do a better job than if you did it now. And if someone else adds the extension, will they notice the hooks you left? Will you document that aspect of your program?\" - Chuck Moore\n\n[0] I'm also against generality and reuse, at least the term is commonly understood in our industry. How can you make something more specific and make it more general? [code] \"reuse\" is probably the single biggest cause of problems in software today; moreover it's arguably that never really been achieved by making things more general. Things that are reusable are, as a rule, more specific. They solve one problem and they solve it very well.", "aSentId": 32144, "answer": "I think that viewpoint is crazy, but fair enough. I won't argue with it, though, because I think for something designed to be easy to understand any complexity increases brought on by the modularity are more than offset by the ability to ignore hugely complex pieces of code and still understand how the rest works, and indeed be able to cut out the complex bit entirely. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32143, "question": "&gt; If you did the optimisation stage in a modular way\n\nThe problem is that modularity isn't free; modularity alone almost always introduces a lot of unwanted complexity. I happen to be of the unpopular opinion that modularity is a bad idea [0]. \n\nIt might make things \"look\" or \"feel\" simpler when you put them behind a hopefully mostly adequate interface, but I would hope it's fairly obvious that you can't make something simpler by *doing* more. If you're lucky you can make the structure easier to understand (at least until things change enough that the tower starts to crumble, and then you're in a enviable position of having built a tower that is threatening to fall on you heads) but there's a big cost to doing that too. I cost I find too high.\n\nI'll end with one of my favourite quotes.\n\n\"Do not put code in your program that might be used. Do not leave hooks on which you can hang extensions. The things you might want to do are infinite; that means that each one has 0 probability of realization. If you need an extension later, you can code it later - and probably do a better job than if you did it now. And if someone else adds the extension, will they notice the hooks you left? Will you document that aspect of your program?\" - Chuck Moore\n\n[0] I'm also against generality and reuse, at least the term is commonly understood in our industry. How can you make something more specific and make it more general? [code] \"reuse\" is probably the single biggest cause of problems in software today; moreover it's arguably that never really been achieved by making things more general. Things that are reusable are, as a rule, more specific. They solve one problem and they solve it very well.", "aSentId": 32146, "answer": "&gt; The problem is that modularity isn't free; modularity alone almost always introduces a lot of unwanted complexity.\n\nLooks like complete and utter bullshit. I hope you didn't mean what I think you meant.\n\nIt is not possible to understand more than a few dozen lines of code at once 7 \u00b1 2 items in short term memory and all that. At some point, you have to be able to reason about parts of a program while mostly ignoring everything else. *That* is modularity. Without it, we couldn't write programs of more than a few hundred lines at most.\n\nPlus, the simplest way to make a compiler generally implies a couple different phases:\n\n- Lexer and parser (possibly fused into one step, depending on your method). Input: source code. Output: abstract syntax tree.\n- Intermediate representation generation. Input: the AST. Output: *something* that will help code generation: single assignment, or abstract stack machine are often used.\n- Code generation: input: the intermediate representation. Output: the damn code.\n\nWhile you may be able to simplify the compiler by fusing all those steps into one, I doubt the natural modularity introduced by those different steps is at all unwanted.\n\n---\n\nSeriously, what the *heck* did you mean by \"modularity\"?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32147, "question": "&gt; The problem is that modularity isn't free; modularity alone almost always introduces a lot of unwanted complexity.\n\nLooks like complete and utter bullshit. I hope you didn't mean what I think you meant.\n\nIt is not possible to understand more than a few dozen lines of code at once 7 \u00b1 2 items in short term memory and all that. At some point, you have to be able to reason about parts of a program while mostly ignoring everything else. *That* is modularity. Without it, we couldn't write programs of more than a few hundred lines at most.\n\nPlus, the simplest way to make a compiler generally implies a couple different phases:\n\n- Lexer and parser (possibly fused into one step, depending on your method). Input: source code. Output: abstract syntax tree.\n- Intermediate representation generation. Input: the AST. Output: *something* that will help code generation: single assignment, or abstract stack machine are often used.\n- Code generation: input: the intermediate representation. Output: the damn code.\n\nWhile you may be able to simplify the compiler by fusing all those steps into one, I doubt the natural modularity introduced by those different steps is at all unwanted.\n\n---\n\nSeriously, what the *heck* did you mean by \"modularity\"?", "aSentId": 32148, "answer": "&gt; What the heck did you mean by \"modularity\"?\n\nAs I wrote I'm using these terms as they're commonly understood in our industry. In particular I meant the process of factoring programs into separate \"modules\", with *hopefully* well defined interfaces (not to be confused with Java interfaces). A process which naturally entails hiding the details behind layers of abstraction... ignoring the fact that those details are all the program is and what give it value. To the extent that doing any of this requires \"more code\" to be written to solve the problem at hand (not necessarily SLOCs!) this will always make the system measurably more complex than it would have been if we'd written the code to solve the problem.\n\n&gt; It is not possible to understand more than a few dozen lines of code at once 7 \u00b1 2 items in short term memory and all that\n\nNo but you *can* hold the meaning of far more than 7 lines of code in your head.\n\nReading isn't remembering every dot or dash.\n\nI'm not against factoring code in general. I am against factoring code for any other reason than it making the problem at hand easier to solve, and only then when it doesn't introduce \"too much\" overhead, whatever that means in the context of the problem. I am not at all interested in solving problem I don't have, and I don't think that going out of your way to reuse code in a project is useful. There are many cases where duplication and irregularity are very beneficial. I don't think putting up walls to make the world seem less complex [than it is] is really healthy.\n\nIs my position clear?\n\n&gt;  the simplest way to make a compiler generally implies a couple different phases:\n\nI disagree here. This is how compiler are commonly made. It's familiar and it has a lot of nice properties but the simplest?\n\nThe simplest way to make a compiler would be to have to compile; or, not need those phases at all, for example, if you don't do any syntax you don't need a lexer or parser and you probably don't need an abstract syntax tree. If you design the initial representation so that it's suitably helpful to code generation you wont need to transform it from one form to another. Beyond that if you design it for specific targets you don't have to worry about painting over broader differences QED. Likewise if you design the language so that it's easily optimized you don't need to put a lot of work into optimizations. Better yet make the compiler available in itself and you can write program/problem specific compiler optimizations is the language (or other compiler extensions.)\n\nFollowing the path will only take you so far.\n\nNote that this isn't a hypothetical solution. You can write compilers like this and you can write them with very little code. ~20 SLOCs is my best attempt so far.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32149, "question": "&gt; What the heck did you mean by \"modularity\"?\n\nAs I wrote I'm using these terms as they're commonly understood in our industry. In particular I meant the process of factoring programs into separate \"modules\", with *hopefully* well defined interfaces (not to be confused with Java interfaces). A process which naturally entails hiding the details behind layers of abstraction... ignoring the fact that those details are all the program is and what give it value. To the extent that doing any of this requires \"more code\" to be written to solve the problem at hand (not necessarily SLOCs!) this will always make the system measurably more complex than it would have been if we'd written the code to solve the problem.\n\n&gt; It is not possible to understand more than a few dozen lines of code at once 7 \u00b1 2 items in short term memory and all that\n\nNo but you *can* hold the meaning of far more than 7 lines of code in your head.\n\nReading isn't remembering every dot or dash.\n\nI'm not against factoring code in general. I am against factoring code for any other reason than it making the problem at hand easier to solve, and only then when it doesn't introduce \"too much\" overhead, whatever that means in the context of the problem. I am not at all interested in solving problem I don't have, and I don't think that going out of your way to reuse code in a project is useful. There are many cases where duplication and irregularity are very beneficial. I don't think putting up walls to make the world seem less complex [than it is] is really healthy.\n\nIs my position clear?\n\n&gt;  the simplest way to make a compiler generally implies a couple different phases:\n\nI disagree here. This is how compiler are commonly made. It's familiar and it has a lot of nice properties but the simplest?\n\nThe simplest way to make a compiler would be to have to compile; or, not need those phases at all, for example, if you don't do any syntax you don't need a lexer or parser and you probably don't need an abstract syntax tree. If you design the initial representation so that it's suitably helpful to code generation you wont need to transform it from one form to another. Beyond that if you design it for specific targets you don't have to worry about painting over broader differences QED. Likewise if you design the language so that it's easily optimized you don't need to put a lot of work into optimizations. Better yet make the compiler available in itself and you can write program/problem specific compiler optimizations is the language (or other compiler extensions.)\n\nFollowing the path will only take you so far.\n\nNote that this isn't a hypothetical solution. You can write compilers like this and you can write them with very little code. ~20 SLOCs is my best attempt so far.", "aSentId": 32150, "answer": "&gt; As I wrote I'm using these terms as they're commonly understood in our industry. In particular I meant the process of factoring programs into separate \"modules\", with hopefully well defined interfaces.\n\nModularity is a *process*?!? Not, like, a property of an existing program?\n\n&gt; A process which naturally entails hiding the details behind layers of abstraction... ignoring the fact that those details are all the program is and what give it value.\n\nBullshit, because most abstractions don't leak, or so rarely that we might as well not bother for 99% of the projects that use them. The complicated ones do (IO, network\u2026), but the most commonly used (stack, queue, data structures in general) don't. What gives a program value is the fucking interface (user interface, API\u2026). All other things being equal, the simpler the better. The implementation is just a necessary cost.\n\n&gt; No but you can hold the meaning of far more than 7 lines of code in your head.\n\nI said a few *dozen lines*. I dare you to remember 50 separate assignment statements, and deduce the meaning of the resulting program from memory.\n\n&gt; if you don't do any syntax you don't need a lexer or parser\n\nOkay, you're cheating.  I know the Forth philosophy of only solving what *needs* to be solved, but it is a given here that the problem is compiling an *existing* applicative language. Merely dodging the challenge won't do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32151, "question": "&gt; As I wrote I'm using these terms as they're commonly understood in our industry. In particular I meant the process of factoring programs into separate \"modules\", with hopefully well defined interfaces.\n\nModularity is a *process*?!? Not, like, a property of an existing program?\n\n&gt; A process which naturally entails hiding the details behind layers of abstraction... ignoring the fact that those details are all the program is and what give it value.\n\nBullshit, because most abstractions don't leak, or so rarely that we might as well not bother for 99% of the projects that use them. The complicated ones do (IO, network\u2026), but the most commonly used (stack, queue, data structures in general) don't. What gives a program value is the fucking interface (user interface, API\u2026). All other things being equal, the simpler the better. The implementation is just a necessary cost.\n\n&gt; No but you can hold the meaning of far more than 7 lines of code in your head.\n\nI said a few *dozen lines*. I dare you to remember 50 separate assignment statements, and deduce the meaning of the resulting program from memory.\n\n&gt; if you don't do any syntax you don't need a lexer or parser\n\nOkay, you're cheating.  I know the Forth philosophy of only solving what *needs* to be solved, but it is a given here that the problem is compiling an *existing* applicative language. Merely dodging the challenge won't do.", "aSentId": 32152, "answer": "&gt; Modularity is a process?!? Not, like, a property of an existing program?\n\nDo you want to have a semantic argument? Sorry I should have been clearer: the process of *introducing modularity* by factoring programs into separate \"modules\". If it's a property of an existing program it's because of this process, whether explicit or not.\n\n&gt; Bullshit, because most abstractions don't leak, or so rarely that we might as well not bother for 99% of the projects that use them. The complicated ones do (IO, network\u2026), but the most commonly used (stack, queue, data structures in general) don't. What gives a program value is the fucking interface (user interface, API\u2026). All other things being equal, the simpler the better. The implementation is just a necessary cost.\n\nWe disagree. From my perspective all abstractions leak a little, at the very least the performance characteristics of their implementation are hard to hide, but that's neither here nor there because you're argument isn't grounded in any sort of reality. How often have you had to implement your own stacks and queues in the real world, and how often has that been the purpose of your program? (Never!) Nobody is paying you for the pretty fucking interface you put over that basic data structure! And I can tell you that if anyone does give a fuck about your queue implementation it's not because of the interface, or how well the code is formatted (hint: it's all in the details!)\n\nBut that's not my problem with abstraction. My issue is that it introduces a level of opacity that I don't think is warranted. We have been snorting this stuff for decades and has it done anything to prevent the proliferation of software complexity? Is it the case that piling on abstractions has ever stoped projects from coming in late or over budget?\n\nI like this stuff as much as anyone, but the evidence to support it just isn't there.\n\n&gt; Okay, you're cheating.\n\nYou asserted a \"simplest\" way to make a compiler, in general. Not a C compiler. Not a Lisp compiler. Or an ML compiler. A compiler. I described much simpler approach used in a real *compiler*, for a practical language. Even if you  do have a syntax  the other suggestions can still have a huge effect on simplicity.\n\n(Depending on the complexity of the syntax) I could, for example, add a textual representation in a matter of hours and not expect the complexity of the compiler to grow significantly. Even if the parser took a few hundred SLOCs this compiler would still be much simpler than most. (To be honest it's much more likely that this could be done in a few tens of LOCs.)\n\nI have nothing against the phased approach, but to claim that it's the simplest? Absolute statements are usually... how did you put it... BULLSHIT.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32143, "question": "&gt; If you did the optimisation stage in a modular way\n\nThe problem is that modularity isn't free; modularity alone almost always introduces a lot of unwanted complexity. I happen to be of the unpopular opinion that modularity is a bad idea [0]. \n\nIt might make things \"look\" or \"feel\" simpler when you put them behind a hopefully mostly adequate interface, but I would hope it's fairly obvious that you can't make something simpler by *doing* more. If you're lucky you can make the structure easier to understand (at least until things change enough that the tower starts to crumble, and then you're in a enviable position of having built a tower that is threatening to fall on you heads) but there's a big cost to doing that too. I cost I find too high.\n\nI'll end with one of my favourite quotes.\n\n\"Do not put code in your program that might be used. Do not leave hooks on which you can hang extensions. The things you might want to do are infinite; that means that each one has 0 probability of realization. If you need an extension later, you can code it later - and probably do a better job than if you did it now. And if someone else adds the extension, will they notice the hooks you left? Will you document that aspect of your program?\" - Chuck Moore\n\n[0] I'm also against generality and reuse, at least the term is commonly understood in our industry. How can you make something more specific and make it more general? [code] \"reuse\" is probably the single biggest cause of problems in software today; moreover it's arguably that never really been achieved by making things more general. Things that are reusable are, as a rule, more specific. They solve one problem and they solve it very well.", "aSentId": 32154, "answer": "I hope you rewrite your C standard library for every program to avoid code reuse, otherwise your argument just falls flat. And never use libraries either. That's code reuse. \n\nWhat is the point of that? To be \"against the stream\" for no reason other than to be humored when people find it silly?\nPlease elaborate on this, because what you wrote doesn't seem to make sense for anyone who doesn't write their operating system from scratch. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32155, "question": "I hope you rewrite your C standard library for every program to avoid code reuse, otherwise your argument just falls flat. And never use libraries either. That's code reuse. \n\nWhat is the point of that? To be \"against the stream\" for no reason other than to be humored when people find it silly?\nPlease elaborate on this, because what you wrote doesn't seem to make sense for anyone who doesn't write their operating system from scratch. ", "aSentId": 32156, "answer": "The C standard library has been rewritten for several platforms. So, yes, there is no ONE libc generic enough for everybody.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32155, "question": "I hope you rewrite your C standard library for every program to avoid code reuse, otherwise your argument just falls flat. And never use libraries either. That's code reuse. \n\nWhat is the point of that? To be \"against the stream\" for no reason other than to be humored when people find it silly?\nPlease elaborate on this, because what you wrote doesn't seem to make sense for anyone who doesn't write their operating system from scratch. ", "aSentId": 32158, "answer": "&gt; I hope you rewrite your C standard library for every program to avoid code reuse\n\nThat's a childish argument. Reductio ad absurdum very, very seldom gives you any kind of useful insight. Just give the person to whom you are responding the basic courtesy of assuming they are arguing a position that is *reasonable*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32155, "question": "I hope you rewrite your C standard library for every program to avoid code reuse, otherwise your argument just falls flat. And never use libraries either. That's code reuse. \n\nWhat is the point of that? To be \"against the stream\" for no reason other than to be humored when people find it silly?\nPlease elaborate on this, because what you wrote doesn't seem to make sense for anyone who doesn't write their operating system from scratch. ", "aSentId": 32160, "answer": "libc is a fine example; language runtimes, virtual machines, standard libraries and operating systems. These are all useful infrastructure. They're not there for the sake of code reuse. They're there because they provide your programs with the necessary context it needs to execute. Which is to say they provide services that almost every useful program *needs* (loosely speaking, you can get away with a surprisingly small amount of infrastructure but you will always have some.)\n\nThere's a big difference between that and what we do in the application level, where we preach generality and modularity mostly because they're best practices. Because of things like code quality (a topic which has been discussed at ad nauseum, for decades, without converging on anything remotely resembling a reasonable conclusion.). You can make a framework for adding optimizations or you can implement some optimizations. But you can get a hell of a long way before the cost of doing this is paid for. My point was that these things should be considered none-goals. A means to an end at the best, and a burden at worst.\n\nContinuing from that I'd like to suggest that a lot of complexity in software comes from the fact that we can just reuse, libxml, say. You probably don't need XML (objectively speaking XML is dauntingly complex; I'm not saying you should use JSON, and sometimes you really do want these... the why is much more interesting) but because it's easy enough to reuse, all of a sudden your program just got a lot more complex than it needed to be. Now repeat this step a few dozen times, and drag in all of their dependencies, and you're well on your way to normalcy.\n\nAnd because you dragged all that in, any program that wants to integrate with your system probably needs to do the same. So the complexity grows and spreads... in my experience a lot of complexity gets in that way. It's really not necessary but it's easier than doing the minimum amount.\n\nEDIT: for context, I work at a company where we bootstrapped a compiler for a custom Forth-like language in ~20 SLOCs, and we're using it to solve real problems that would be difficult to tackle with other technologies. Our software stack is self-contained and highly portable, and weighs in at not much more than 1K SLOC, including any necessary tooling. Everyone who works with it understands *every* part of it. We couldn't have got to where we are today if we'd set out to reuse code. The power to weight ratio just can't be achieved by reusing existing code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32161, "question": "libc is a fine example; language runtimes, virtual machines, standard libraries and operating systems. These are all useful infrastructure. They're not there for the sake of code reuse. They're there because they provide your programs with the necessary context it needs to execute. Which is to say they provide services that almost every useful program *needs* (loosely speaking, you can get away with a surprisingly small amount of infrastructure but you will always have some.)\n\nThere's a big difference between that and what we do in the application level, where we preach generality and modularity mostly because they're best practices. Because of things like code quality (a topic which has been discussed at ad nauseum, for decades, without converging on anything remotely resembling a reasonable conclusion.). You can make a framework for adding optimizations or you can implement some optimizations. But you can get a hell of a long way before the cost of doing this is paid for. My point was that these things should be considered none-goals. A means to an end at the best, and a burden at worst.\n\nContinuing from that I'd like to suggest that a lot of complexity in software comes from the fact that we can just reuse, libxml, say. You probably don't need XML (objectively speaking XML is dauntingly complex; I'm not saying you should use JSON, and sometimes you really do want these... the why is much more interesting) but because it's easy enough to reuse, all of a sudden your program just got a lot more complex than it needed to be. Now repeat this step a few dozen times, and drag in all of their dependencies, and you're well on your way to normalcy.\n\nAnd because you dragged all that in, any program that wants to integrate with your system probably needs to do the same. So the complexity grows and spreads... in my experience a lot of complexity gets in that way. It's really not necessary but it's easier than doing the minimum amount.\n\nEDIT: for context, I work at a company where we bootstrapped a compiler for a custom Forth-like language in ~20 SLOCs, and we're using it to solve real problems that would be difficult to tackle with other technologies. Our software stack is self-contained and highly portable, and weighs in at not much more than 1K SLOC, including any necessary tooling. Everyone who works with it understands *every* part of it. We couldn't have got to where we are today if we'd set out to reuse code. The power to weight ratio just can't be achieved by reusing existing code.", "aSentId": 32162, "answer": "As you mention JSON and XML ... your application might not need to use them, but if you want to offer a public API that other people can use, you probably want to settle for a data exchange format that is standardized. Isn't code reuse in the form of libraries exactly what one would want in that case? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32163, "question": "As you mention JSON and XML ... your application might not need to use them, but if you want to offer a public API that other people can use, you probably want to settle for a data exchange format that is standardized. Isn't code reuse in the form of libraries exactly what one would want in that case? ", "aSentId": 32164, "answer": "&gt; As you mention JSON and XML\n\nIt's an example that I thought most people today would be able to relate to.\n\n&gt; if you want to offer a public API that other people can use, you probably want to settle for a data exchange format that is standardized\n\nWhy do we need a data exchange format? Why can't we just send the data? Whether the schema is implicit or explicit in your standard data exchange format of choice, you need to know what the data is to use it. I don't see why converting everything into text just so you can parse it at the other end is remotely necessary. Useful maybe, for diagnostics? But it's not necessary.\n\nI'm biased here: I've done a lot of work with binary formats and protocols and I find it just as easy, if not easier, to work with the bits, than I do to pull in some library and serialize data with that.\n\nXML has its uses. But it's just overkill. In the vast majority of cases you can just send your data down the pipe, without causing any problems. It's only \"scary\" because we don't do it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32165, "question": "&gt; As you mention JSON and XML\n\nIt's an example that I thought most people today would be able to relate to.\n\n&gt; if you want to offer a public API that other people can use, you probably want to settle for a data exchange format that is standardized\n\nWhy do we need a data exchange format? Why can't we just send the data? Whether the schema is implicit or explicit in your standard data exchange format of choice, you need to know what the data is to use it. I don't see why converting everything into text just so you can parse it at the other end is remotely necessary. Useful maybe, for diagnostics? But it's not necessary.\n\nI'm biased here: I've done a lot of work with binary formats and protocols and I find it just as easy, if not easier, to work with the bits, than I do to pull in some library and serialize data with that.\n\nXML has its uses. But it's just overkill. In the vast majority of cases you can just send your data down the pipe, without causing any problems. It's only \"scary\" because we don't do it.", "aSentId": 32166, "answer": "&gt;Why do we need a data exchange format? Why can't we just send the data? Whether the schema iis implicit or explicit in your standard data exchange format of choice, you need to know what the data is to use it. \n\nSure, you need to know what kind of data it is. But having a well-tested library that can turn any JSON object into a data structure that I can easily transform using standard library functions is really convenient. It definitely saves time if I don't have to reimplement essentially the same logic for every service my application is talking to. \n\n&gt;I don't see why converting everything to into text just so you can parse it at the other end is remotely necessary. Useful maybe, for diagnostics. But it's not necessary.\n\nMy point was that it's very useful to have a standardized format, I don't think it has to be text. \n\n&gt;I'm biased here: I've done a lot of work with binary formats and protocols and I find it just as easy, if not easier, to work with the bits, than I do to pull in some library and serialize data with that.\n\nI'm sure that you can get used to it and that it has its advantages, but as someone  having done very little work with binary formats and protocols, I can say that working through the bittorrent protocol was a challenge for me (I will be able to apply what I learned in the process next time when I work with a comparable protocol, but none of the code). \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32167, "question": "&gt;Why do we need a data exchange format? Why can't we just send the data? Whether the schema iis implicit or explicit in your standard data exchange format of choice, you need to know what the data is to use it. \n\nSure, you need to know what kind of data it is. But having a well-tested library that can turn any JSON object into a data structure that I can easily transform using standard library functions is really convenient. It definitely saves time if I don't have to reimplement essentially the same logic for every service my application is talking to. \n\n&gt;I don't see why converting everything to into text just so you can parse it at the other end is remotely necessary. Useful maybe, for diagnostics. But it's not necessary.\n\nMy point was that it's very useful to have a standardized format, I don't think it has to be text. \n\n&gt;I'm biased here: I've done a lot of work with binary formats and protocols and I find it just as easy, if not easier, to work with the bits, than I do to pull in some library and serialize data with that.\n\nI'm sure that you can get used to it and that it has its advantages, but as someone  having done very little work with binary formats and protocols, I can say that working through the bittorrent protocol was a challenge for me (I will be able to apply what I learned in the process next time when I work with a comparable protocol, but none of the code). \n\n", "aSentId": 32168, "answer": "&gt; having a well-tested library that can turn any JSON object into a data structure that I can easily transform using standard library functions is really convenient.\n\nTrue.\n\nI guess it's a bit different if you're using a system where or you're working with data structures that aren't easily shoehorned into the limits imposed by JSON (you can't even do Dates for example). \n\nWhen I'm working in Ruby there's always a strong temptation to use strings and hashs for everything. In that case serialization to JSON is a no brainer since you can't send the objects directly anyway. When I'm working with really huge arrays, less so, and streams of n-bit integers... this can be done but it's not exactly ideal. Or images, videos or audio, maybe?\n\nIf you just send raw data, you can work with it without a library, or boilerplate logic.\n\n&gt; My point was that it's very useful to have a standardized format, I don't think it has to be text. \n\nAgreed. \n\nBut if you have to do anything to massage your data you're probably doing unnecessary work. Not the end of the world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32161, "question": "libc is a fine example; language runtimes, virtual machines, standard libraries and operating systems. These are all useful infrastructure. They're not there for the sake of code reuse. They're there because they provide your programs with the necessary context it needs to execute. Which is to say they provide services that almost every useful program *needs* (loosely speaking, you can get away with a surprisingly small amount of infrastructure but you will always have some.)\n\nThere's a big difference between that and what we do in the application level, where we preach generality and modularity mostly because they're best practices. Because of things like code quality (a topic which has been discussed at ad nauseum, for decades, without converging on anything remotely resembling a reasonable conclusion.). You can make a framework for adding optimizations or you can implement some optimizations. But you can get a hell of a long way before the cost of doing this is paid for. My point was that these things should be considered none-goals. A means to an end at the best, and a burden at worst.\n\nContinuing from that I'd like to suggest that a lot of complexity in software comes from the fact that we can just reuse, libxml, say. You probably don't need XML (objectively speaking XML is dauntingly complex; I'm not saying you should use JSON, and sometimes you really do want these... the why is much more interesting) but because it's easy enough to reuse, all of a sudden your program just got a lot more complex than it needed to be. Now repeat this step a few dozen times, and drag in all of their dependencies, and you're well on your way to normalcy.\n\nAnd because you dragged all that in, any program that wants to integrate with your system probably needs to do the same. So the complexity grows and spreads... in my experience a lot of complexity gets in that way. It's really not necessary but it's easier than doing the minimum amount.\n\nEDIT: for context, I work at a company where we bootstrapped a compiler for a custom Forth-like language in ~20 SLOCs, and we're using it to solve real problems that would be difficult to tackle with other technologies. Our software stack is self-contained and highly portable, and weighs in at not much more than 1K SLOC, including any necessary tooling. Everyone who works with it understands *every* part of it. We couldn't have got to where we are today if we'd set out to reuse code. The power to weight ratio just can't be achieved by reusing existing code.", "aSentId": 32170, "answer": "What kind of problems is your company working on? I imagine that this \"roll your own\" approach works better in some fields than in others. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32171, "question": "What kind of problems is your company working on? I imagine that this \"roll your own\" approach works better in some fields than in others. ", "aSentId": 32172, "answer": "&gt; I imagine that this \"roll your own\" approach works better in some fields than in others. \n\nAbsolutely. But as I wrote, that's mostly our own fault. We've made everything far more complex than it needs to be, and as a result the only way we can stay on top of things is to introduce incredible numbers of dependencies. \n\n&gt; What kind of problems is your company working on?\n\nWe're mostly working on data processing... because who would have guessed computers would be good at processing lots of data? So data collection, distribution, exploration, and of course visualisation etc. We do it very efficiently using the minimum amount of resources (resources almost always more constrained than you think they are), reliably, and everywhere. Forth is surprisingly well suited to these kinds of applications; it's a simple, low-level, highly dynamic, interactive language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32173, "question": "&gt; I imagine that this \"roll your own\" approach works better in some fields than in others. \n\nAbsolutely. But as I wrote, that's mostly our own fault. We've made everything far more complex than it needs to be, and as a result the only way we can stay on top of things is to introduce incredible numbers of dependencies. \n\n&gt; What kind of problems is your company working on?\n\nWe're mostly working on data processing... because who would have guessed computers would be good at processing lots of data? So data collection, distribution, exploration, and of course visualisation etc. We do it very efficiently using the minimum amount of resources (resources almost always more constrained than you think they are), reliably, and everywhere. Forth is surprisingly well suited to these kinds of applications; it's a simple, low-level, highly dynamic, interactive language.", "aSentId": 32174, "answer": "&gt;We're mostly working on data processing... because who would have guessed computers would be good at processing lots of data? So data collection, distribution, exploration, and of course visualisation etc. We do it very efficiently using the minimum amount of resources (resources almost always more constrained than you think they are), reliably, and everywhere. Forth is surprisingly well suited to these kinds of applications; it's a simple, low-level, highly dynamic, interactive language.\n\nInteresting. I started looking into implementing a Forth compiler just this weekend, with the help of some articles I found online. I very much admire the simplicity of the language, but I have to admit that I find it hard to read or to express my ideas in the language. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32175, "question": "&gt;We're mostly working on data processing... because who would have guessed computers would be good at processing lots of data? So data collection, distribution, exploration, and of course visualisation etc. We do it very efficiently using the minimum amount of resources (resources almost always more constrained than you think they are), reliably, and everywhere. Forth is surprisingly well suited to these kinds of applications; it's a simple, low-level, highly dynamic, interactive language.\n\nInteresting. I started looking into implementing a Forth compiler just this weekend, with the help of some articles I found online. I very much admire the simplicity of the language, but I have to admit that I find it hard to read or to express my ideas in the language. \n", "aSentId": 32176, "answer": "&gt; I very much admire the simplicity of the language, but I have to admit that I find it hard to read or to express my ideas in the language. \n\nThat's entirely normal. Forth is a very unusual language. It took about 6 months before I could comfortably work in Forth. During that time I wrote some truly horrible programs with it, and there were times that I questioned whether it was even possible to write complex programs in Forth... the answer: probably not... you can't write complex programs in Forth, because if you want then to be readable Forth forces you to repeatedly simplify every aspect of a problem until the solution can be expressed concisely. Unfortunately, at the start, you wont have the experience to do that... which can be frustrating. Once it clicks into place there's a sense in which everything else feels grossly overcomplicated. Especially when you've built your own, where you understand everything, and it all works exactly like you want. That makes it a bit dangerous but it's a lot of fun.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32111, "question": "OP, are you the creator of this compiler? If so, I would advise against an optimization step.\n\nAs I understand it, the point of this compiler is to be as simple as possible so it's easy to understand how a compiler is built. Unless it's goal is to compete against gcc and clang, there's no point to optimizations - they will only make the code more complex and harder to read.", "aSentId": 32178, "answer": "If the point is educating yourself on compiler dev and processor instructions, an optimization step would make sense. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32181, "question": "Interesting he doesn't check for errors when allocating memory on the heap. That's a pretty basic thing to do isn't it?", "aSentId": 32182, "answer": "The hacking readme file notes that it doesn't attempt memory management. Not only are allocations not checked, they are never freed. Apparently it can compile a 10000 line file using \"only\" 100mb.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32183, "question": "The hacking readme file notes that it doesn't attempt memory management. Not only are allocations not checked, they are never freed. Apparently it can compile a 10000 line file using \"only\" 100mb.", "aSentId": 32184, "answer": "*Process-exit memory management*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32188, "question": "One possibility would be to make your `gen.c` file produce LLVM instead of real x86. That way you get to concentrate on demonstrating upstream compilation, and at the backend you get code that can run on anything and be optimised like crazy.", "aSentId": 32189, "answer": "What, why? That completely defeats the purpose of writing a \"teaching\" compiler.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32190, "question": "What, why? That completely defeats the purpose of writing a \"teaching\" compiler.", "aSentId": 32191, "answer": "Yeah, but, code reuse :P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32192, "question": "Yeah, but, code reuse :P", "aSentId": 32193, "answer": "exec gcc\n\nEven more reuse! :) \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32188, "question": "One possibility would be to make your `gen.c` file produce LLVM instead of real x86. That way you get to concentrate on demonstrating upstream compilation, and at the backend you get code that can run on anything and be optimised like crazy.", "aSentId": 32195, "answer": "It wouldn't be nearly as fast then. LLVM optimizations are what slow down your day to day compiles, the front-end in most compilers is a very small fraction of compile time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32188, "question": "One possibility would be to make your `gen.c` file produce LLVM instead of real x86. That way you get to concentrate on demonstrating upstream compilation, and at the backend you get code that can run on anything and be optimised like crazy.", "aSentId": 32197, "answer": "And then one will need a whole LLVM to run it. No thanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32201, "question": "What is the point of having something which is small? Unless it is bug free, why would you expect anyone to care about it? If the answer is \"because I could learn something of it\", then why share your ignorance with the rest of humanity? ", "aSentId": 32202, "answer": "Bug free? Bug free programs?\n\nAre you new to this field?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32203, "question": "Bug free? Bug free programs?\n\nAre you new to this field?", "aSentId": 32204, "answer": "Check their user name.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32201, "question": "What is the point of having something which is small? Unless it is bug free, why would you expect anyone to care about it? If the answer is \"because I could learn something of it\", then why share your ignorance with the rest of humanity? ", "aSentId": 32206, "answer": "this person has apparently spent 5 years eating downvotes on this subreddit for kicks. Any other online community they would have been banned long since.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32201, "question": "What is the point of having something which is small? Unless it is bug free, why would you expect anyone to care about it? If the answer is \"because I could learn something of it\", then why share your ignorance with the rest of humanity? ", "aSentId": 32208, "answer": "upboated for trying to get people to downvote :\\^)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32211, "question": "We need a compiler to compile a compiler ?", "aSentId": 32212, "answer": "Of course...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32211, "question": "We need a compiler to compile a compiler ?", "aSentId": 32214, "answer": "This is an interesting part of compiler tech. Yes, the compiler is a *program* so it has to be implemented by writing code in some language, call it **I**.\n\nThe compiler accepts code written in some language, call that **A** for accepted because I already used \"I\" for implementation.\n\nIt processes code in **A** to generate code in some target language **T**.\n\nIn olden days, **I** was assembly language and of course **T** was the binary machine code of the target machine. But it is very helpful when **I**==**A**, the compiler is written in the same language it compiles. That is the case with 8cc, it accepts C and is written in C and the target is apparently X86 machine language?\n\nOne reason that's good is that the compiler source code presumably exploits most features of the language so it is a big honkin' test case: if it compiles itself correctly, it's working.\n\nThe other reason is that it is easy to retarget. The functions that generate the actual **T** output are written in **I**. So let's say the current implementation generates **T1** and runs on a **T1** platform. You write new generator functions that produce **T2** (say, LLVM or ARM). Your current compiler can compile that producing an executable that runs on **T1** (because that's its output), but that new compiler generates **T2**. So now you have a cross-compiler, runs on T1, generates T2. Move the binary to the T2 platform and compile itself there, now you have a native T2 compiler.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32215, "question": "This is an interesting part of compiler tech. Yes, the compiler is a *program* so it has to be implemented by writing code in some language, call it **I**.\n\nThe compiler accepts code written in some language, call that **A** for accepted because I already used \"I\" for implementation.\n\nIt processes code in **A** to generate code in some target language **T**.\n\nIn olden days, **I** was assembly language and of course **T** was the binary machine code of the target machine. But it is very helpful when **I**==**A**, the compiler is written in the same language it compiles. That is the case with 8cc, it accepts C and is written in C and the target is apparently X86 machine language?\n\nOne reason that's good is that the compiler source code presumably exploits most features of the language so it is a big honkin' test case: if it compiles itself correctly, it's working.\n\nThe other reason is that it is easy to retarget. The functions that generate the actual **T** output are written in **I**. So let's say the current implementation generates **T1** and runs on a **T1** platform. You write new generator functions that produce **T2** (say, LLVM or ARM). Your current compiler can compile that producing an executable that runs on **T1** (because that's its output), but that new compiler generates **T2**. So now you have a cross-compiler, runs on T1, generates T2. Move the binary to the T2 platform and compile itself there, now you have a native T2 compiler.", "aSentId": 32216, "answer": "Use better variable names pls. :p", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32211, "question": "We need a compiler to compile a compiler ?", "aSentId": 32218, "answer": "yep, that's when it's a pretty important step when compiles become \"self-aware\" and they are able to compile themselves. Seems a bit cyclical almost.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32221, "question": "The original one is always a person.", "aSentId": 32222, "answer": "Who works for a chip company", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32223, "question": "Who works for a chip company", "aSentId": 32224, "answer": "It would be interesting to take all current compilers and trace their literal parentage.  For example, I'll bet llvm's \"bootstrap\" was gcc.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32227, "question": "Timesheet.js", "aSentId": 32228, "answer": "Looks cool, but I wonder what it'd be useful for.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32229, "question": "Looks cool, but I wonder what it'd be useful for.", "aSentId": 32230, "answer": "It'd be more useful if it supported times (as the name implies) and not just dates. Maybe it does, but if so, there's no demos and a quick glance at the code makes it look like it's date only.\n\nIt's also not clear if this is capable of showing non-overlapping intervals on the same line. Demo is really too limited.\n\nWith time intervals, we could use it to show things like usage of a resource (anything that has to be booked). Any kind of visualization of an interval scheduling problem (or related) could utilize this.\n\nBut in its current form, it seems very useless. It's just not versatile enough.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32229, "question": "Looks cool, but I wonder what it'd be useful for.", "aSentId": 32232, "answer": "could be pretty good for displaying who-uses-when of a shared resource like a meeting room.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32229, "question": "Looks cool, but I wonder what it'd be useful for.", "aSentId": 32234, "answer": "I had to that by hand, using Excel once. This is the scenario:\n\nThere are 16 different kinds of documents (16 data structures), and each one has a template to generate a PDF from each document (a set of data conforming to the data structure). Each template has multiple versions, which are valid on a range of dates. When you generate a document for a specific date, you need to select the template that was valid for that specific date. At the time the project was retired, each template had from 4 to 8 different versions (defined by the document type and the date range).\n\nBefore I painstakingly made the timesheet-like chart (with Excel and bar charts), there were multiple errors in the database, resulting in several template versions overlapping, or, even worse, having holes (dates where no template version was valid). After the chart, I was able to identify those and make the appropriate fixes, and fine tune the validation rules.\n\nI would *love* to have had this when the project was active, because that would mean I could plop this on an admin page, and have the business users see the versioning themselves (instead of manually making the Excel charts).\n\nSorry for the long text, but I spent way too much time on that cursed Excel chart! :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32227, "question": "Timesheet.js", "aSentId": 32237, "answer": "more like timeline ?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32227, "question": "Timesheet.js", "aSentId": 32239, "answer": "I think the name needs to change -- when I hear \"timesheet\" i think about hour-by-hour time tracking at work to present what I did with my time to a client.\n\nThis is more like a timeline, to present in a history lesson. Useful, but not as labeled I think!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32241, "question": "it's close to Gantt chart, but without editing inline it is not useful so much", "aSentId": 32242, "answer": "You could always add it yourself.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32244, "question": "This is a problem in the JavaScript development ecosystem. For a great number of \"libraries\" the only documentation is a usage sample. JavaScript doesn't have a type system so you can't rely on that either. When is the community going to settle on a documentation system?", "aSentId": 32245, "answer": "Yep, a lack of documentation usually also means a lack of userbase.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32249, "question": "What's up with the angular comment. I'm not sure who would think you'd need angular for a graph. ", "aSentId": 32250, "answer": "A joke because Angular is all the rage right now", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32256, "question": "Data structures for implementing text editors [pdf]", "aSentId": 32257, "answer": "The paper is dated.  Is an array of lines without significant preoccupation for the efficiency of inserting a line in the middle a completely reasonable approach today?\n\nWhere this theoretically fails is an unstructured text file that is 100k+ lines that you wish to insert lines into.\n\nA reasonable alternative would be to group 1000 line chunks into pages, and then insert within pages, with the assumption that even if you insert 100mb into a 10gb file, the performance will still be acceptable.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32256, "question": "Data structures for implementing text editors [pdf]", "aSentId": 32259, "answer": "I'm just an amateur, so please be gentle, but I have a few comments on this paper. First, this paper is over 16 years old. If it had been a baby girl it would have a nice ass and a driver's license by now. The computing environment has also changed. Modern micro-processors have multiple cores and large caches. Modern programming should be optimized to feed multiple cores smoothly and prevent cache misses. The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out [this guy](http://youtu.be/YQs6IC-vgmo).\n\nEven inexpensive CPUs often have L3 caches of 5MB or more. For perspective, that's large enough to hold the entire uncompressed text of the King James Bible. What gigantic projects are your user's editing? Even if his name is George R. R. Martin, he probably edits one chapter at a time.   \n\n**TL;DR - I would be tempted to try a single big array despite what this paper says.**\n\nDoes anyone here know what data structures our favorite text editors actually use?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32260, "question": "I'm just an amateur, so please be gentle, but I have a few comments on this paper. First, this paper is over 16 years old. If it had been a baby girl it would have a nice ass and a driver's license by now. The computing environment has also changed. Modern micro-processors have multiple cores and large caches. Modern programming should be optimized to feed multiple cores smoothly and prevent cache misses. The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out [this guy](http://youtu.be/YQs6IC-vgmo).\n\nEven inexpensive CPUs often have L3 caches of 5MB or more. For perspective, that's large enough to hold the entire uncompressed text of the King James Bible. What gigantic projects are your user's editing? Even if his name is George R. R. Martin, he probably edits one chapter at a time.   \n\n**TL;DR - I would be tempted to try a single big array despite what this paper says.**\n\nDoes anyone here know what data structures our favorite text editors actually use?", "aSentId": 32261, "answer": "It's not clear to me that the data structures in the paper would have more cache misses. Eg., the gap buffer is just an array that opens a little extra space whenever you start inserting in the middle somewhere, so you don't have to do that big copy with every new character. I'd guess that would have fewer cache misses than a simple array.\n\nThe piece table might work well, too. All your inserts append to the same region of memory, all the other text is a static array, and the list of pieces is a small data structure that could be implemented as a simple array.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32260, "question": "I'm just an amateur, so please be gentle, but I have a few comments on this paper. First, this paper is over 16 years old. If it had been a baby girl it would have a nice ass and a driver's license by now. The computing environment has also changed. Modern micro-processors have multiple cores and large caches. Modern programming should be optimized to feed multiple cores smoothly and prevent cache misses. The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out [this guy](http://youtu.be/YQs6IC-vgmo).\n\nEven inexpensive CPUs often have L3 caches of 5MB or more. For perspective, that's large enough to hold the entire uncompressed text of the King James Bible. What gigantic projects are your user's editing? Even if his name is George R. R. Martin, he probably edits one chapter at a time.   \n\n**TL;DR - I would be tempted to try a single big array despite what this paper says.**\n\nDoes anyone here know what data structures our favorite text editors actually use?", "aSentId": 32263, "answer": "Text editors rarely, if ever, are given unshared access to system resources so you're never going to have all 5+MB of cache to yourself.  Even so, 5MB is a lot less than what I expect from a great text editor.  Sublime, for example, can handle several hundred megabyte CSV files, which is quite helpful in my line of work.  \n\nSublime is closed source, but I suspect mmap and lazy loading play a big role in achieving this kind of performance and it's certainly not just copying the file into a single giant array.  If that was a case, editing line 1 would require copying 100s of MB of data\u2013ouch!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32260, "question": "I'm just an amateur, so please be gentle, but I have a few comments on this paper. First, this paper is over 16 years old. If it had been a baby girl it would have a nice ass and a driver's license by now. The computing environment has also changed. Modern micro-processors have multiple cores and large caches. Modern programming should be optimized to feed multiple cores smoothly and prevent cache misses. The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out [this guy](http://youtu.be/YQs6IC-vgmo).\n\nEven inexpensive CPUs often have L3 caches of 5MB or more. For perspective, that's large enough to hold the entire uncompressed text of the King James Bible. What gigantic projects are your user's editing? Even if his name is George R. R. Martin, he probably edits one chapter at a time.   \n\n**TL;DR - I would be tempted to try a single big array despite what this paper says.**\n\nDoes anyone here know what data structures our favorite text editors actually use?", "aSentId": 32265, "answer": "&gt; The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out this guy.\n\nI think you are misunderstanding Stroustrup. In that presentation, he is talking specifically about *linked lists*. Linked lists are not complicated at all (they are among the simplest of data structures) and notable for having terrible performance. The aim of many \"complicated\" data structures (such as HAMTs or ropes, for example) is to combine the performance of simple compact data structures with the flexibility of more indirect ones.\n\nNaive, simple data structures often have great performance when it comes to one specific thing, but then fall behind when it comes to other things. Complicated data structures are born out of the need to compromise and try to get the best of both worlds. Also keep in mind that data structures can *look* indirect/\"complicated\" but be stored compactly, such as regular array-backed heaps.\n\nI just don't think there is a tangible or meaningful correlation between simplicity and performance of a data structure.\n\nWith that said, I do sort of agree with your general idea but for a different reason. I absolutely think it is worth trying the simpler data structures first, and then changing it up when you notice bad access patterns \u2013 *because* you can't know what's performant until you've tried. I'm usually the first one to tell my friends and colleagues, \"Dude, you're only ever dealing with 20 elements. You don't need a binary search tree for that.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32266, "question": "&gt; The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out this guy.\n\nI think you are misunderstanding Stroustrup. In that presentation, he is talking specifically about *linked lists*. Linked lists are not complicated at all (they are among the simplest of data structures) and notable for having terrible performance. The aim of many \"complicated\" data structures (such as HAMTs or ropes, for example) is to combine the performance of simple compact data structures with the flexibility of more indirect ones.\n\nNaive, simple data structures often have great performance when it comes to one specific thing, but then fall behind when it comes to other things. Complicated data structures are born out of the need to compromise and try to get the best of both worlds. Also keep in mind that data structures can *look* indirect/\"complicated\" but be stored compactly, such as regular array-backed heaps.\n\nI just don't think there is a tangible or meaningful correlation between simplicity and performance of a data structure.\n\nWith that said, I do sort of agree with your general idea but for a different reason. I absolutely think it is worth trying the simpler data structures first, and then changing it up when you notice bad access patterns \u2013 *because* you can't know what's performant until you've tried. I'm usually the first one to tell my friends and colleagues, \"Dude, you're only ever dealing with 20 elements. You don't need a binary search tree for that.\"", "aSentId": 32267, "answer": "&gt; I just don't think there is a tangible or meaningful correlation between simplicity and performance of a data structure.\n\nQuite the opposite, actually.  Complex data structures have the ability to spend compute cycles (cheap) to optimize memory access patterns (expensive).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32266, "question": "&gt; The problem is, the more complicated we make data structures, the more we keep the CPU from doing what it's really good at. I didn't think this up myself. Check out this guy.\n\nI think you are misunderstanding Stroustrup. In that presentation, he is talking specifically about *linked lists*. Linked lists are not complicated at all (they are among the simplest of data structures) and notable for having terrible performance. The aim of many \"complicated\" data structures (such as HAMTs or ropes, for example) is to combine the performance of simple compact data structures with the flexibility of more indirect ones.\n\nNaive, simple data structures often have great performance when it comes to one specific thing, but then fall behind when it comes to other things. Complicated data structures are born out of the need to compromise and try to get the best of both worlds. Also keep in mind that data structures can *look* indirect/\"complicated\" but be stored compactly, such as regular array-backed heaps.\n\nI just don't think there is a tangible or meaningful correlation between simplicity and performance of a data structure.\n\nWith that said, I do sort of agree with your general idea but for a different reason. I absolutely think it is worth trying the simpler data structures first, and then changing it up when you notice bad access patterns \u2013 *because* you can't know what's performant until you've tried. I'm usually the first one to tell my friends and colleagues, \"Dude, you're only ever dealing with 20 elements. You don't need a binary search tree for that.\"", "aSentId": 32269, "answer": "&gt; I'm usually the first one to tell my friends and colleagues, \"Dude, you're only ever dealing with 20 elements. You don't need a binary search tree for that.\"\n\nI wonder at what point linear search in an array stops beating search in a tree implemented using indirection for each node?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32270, "question": "&gt; I'm usually the first one to tell my friends and colleagues, \"Dude, you're only ever dealing with 20 elements. You don't need a binary search tree for that.\"\n\nI wonder at what point linear search in an array stops beating search in a tree implemented using indirection for each node?", "aSentId": 32271, "answer": "70-ish elements. But a hash \"search\" is faster in just 30-ish.\n\n[Source.](http://pastebin.com/XX82kKc0) Yes, this is a fucking terrible benchmark. But whatever, I threw it together in about ten minutes.\n\n*edit:* It would be interesting to compare how long it takes to set up a raw array versus a search tree or hash table. If you have relatively few lookups per data structure, that could easily dominate, and I expect it would tilt even further towards arrays.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32270, "question": "&gt; I'm usually the first one to tell my friends and colleagues, \"Dude, you're only ever dealing with 20 elements. You don't need a binary search tree for that.\"\n\nI wonder at what point linear search in an array stops beating search in a tree implemented using indirection for each node?", "aSentId": 32273, "answer": "As it turns out, it depends. On a lot of things. That's why profiling is so useful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32277, "question": "Only the line-span method makes sense nowadays for text-editors, imho. Easiest, tracks your data nicely, and visualisation can quickly get the data of \"lines 60 to 130\". You can attach tags to lines, too: \"edited\", \"error\" etc for visualisation. \n\nThe other ideas can be useful for other things, that are not as light as text-editing. ", "aSentId": 32278, "answer": "It's good for programmers' editors, but not necessarily the best for word processors.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32280, "question": "Downvotes for casual male chauvinism.", "aSentId": 32281, "answer": "Downvotes for misusing the word 'chauvinism', and being a hypersensitive pain in the ass. Where exactly was it that OP claimed men were superior to women?\n\nThis kind of eggshell-walking, histrionic overreaction to anything even remotely gendered is getting EXTREMELY tiresome. It makes a mockery of any real conversation about gender and makes people who are trying to address real problems get lumped in with the rest of you whiny, insufferable twats. It was a fucking joke, and a relatively tame one at that. It was a little weird given the age of the hypothetical female in question, but absolutely not worth getting all worked up about. The world is not, never has been, and never will be a place where every conversation is going to be entirely inoffensive to every group of people. Part of living in a society is being able to let miniscule differences pass by without being a domineering, holier-than-thou shitbag about it. Seriously - chill the fuck out and move on with your day.\n\nThe idea that such a joke could even significantly represent a hatred or bias toward women in any way is, in itself, pretty offensive. I think women are capable of seeing a joke without being shattered inside, and they certainly don't need some white knight pompously running around proclaiming who they did and did not downvote to protect their fragile female sensibilities from having to see a fucking comment. Jesus.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32282, "question": "Downvotes for misusing the word 'chauvinism', and being a hypersensitive pain in the ass. Where exactly was it that OP claimed men were superior to women?\n\nThis kind of eggshell-walking, histrionic overreaction to anything even remotely gendered is getting EXTREMELY tiresome. It makes a mockery of any real conversation about gender and makes people who are trying to address real problems get lumped in with the rest of you whiny, insufferable twats. It was a fucking joke, and a relatively tame one at that. It was a little weird given the age of the hypothetical female in question, but absolutely not worth getting all worked up about. The world is not, never has been, and never will be a place where every conversation is going to be entirely inoffensive to every group of people. Part of living in a society is being able to let miniscule differences pass by without being a domineering, holier-than-thou shitbag about it. Seriously - chill the fuck out and move on with your day.\n\nThe idea that such a joke could even significantly represent a hatred or bias toward women in any way is, in itself, pretty offensive. I think women are capable of seeing a joke without being shattered inside, and they certainly don't need some white knight pompously running around proclaiming who they did and did not downvote to protect their fragile female sensibilities from having to see a fucking comment. Jesus.", "aSentId": 32283, "answer": "As a self-described amateur, it's possible that AsABoxer is 17 years old, which would render the comment a bit less weird.\n\nI'm also wondering how people's perception of the comment would change if AsABoxer were female, and how they know that's not the case.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32282, "question": "Downvotes for misusing the word 'chauvinism', and being a hypersensitive pain in the ass. Where exactly was it that OP claimed men were superior to women?\n\nThis kind of eggshell-walking, histrionic overreaction to anything even remotely gendered is getting EXTREMELY tiresome. It makes a mockery of any real conversation about gender and makes people who are trying to address real problems get lumped in with the rest of you whiny, insufferable twats. It was a fucking joke, and a relatively tame one at that. It was a little weird given the age of the hypothetical female in question, but absolutely not worth getting all worked up about. The world is not, never has been, and never will be a place where every conversation is going to be entirely inoffensive to every group of people. Part of living in a society is being able to let miniscule differences pass by without being a domineering, holier-than-thou shitbag about it. Seriously - chill the fuck out and move on with your day.\n\nThe idea that such a joke could even significantly represent a hatred or bias toward women in any way is, in itself, pretty offensive. I think women are capable of seeing a joke without being shattered inside, and they certainly don't need some white knight pompously running around proclaiming who they did and did not downvote to protect their fragile female sensibilities from having to see a fucking comment. Jesus.", "aSentId": 32285, "answer": "&gt;The idea that such a joke could even significantly represent a hatred or bias toward women in any way is, in itself, pretty offensive.\n\nOffensive to who, exactly? You? How are your actions any different than the so-called white-knighting that you're accusing the OP of? Because you \"get it?\" Please.\n\n&gt;I think women are capable of ...\n\nAnd here's the problem. You casually lump up all women into an idea, and think that you're capable of deciding how they are allowed to feel about something. In essence, you're saying that anyone who takes offense to the sexualization of a 17-year old woman is a \"whiny, insufferable twat.\" Regardless of your own gender identity, you don't speak for anyone other than yourself, so stop trying to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32282, "question": "Downvotes for misusing the word 'chauvinism', and being a hypersensitive pain in the ass. Where exactly was it that OP claimed men were superior to women?\n\nThis kind of eggshell-walking, histrionic overreaction to anything even remotely gendered is getting EXTREMELY tiresome. It makes a mockery of any real conversation about gender and makes people who are trying to address real problems get lumped in with the rest of you whiny, insufferable twats. It was a fucking joke, and a relatively tame one at that. It was a little weird given the age of the hypothetical female in question, but absolutely not worth getting all worked up about. The world is not, never has been, and never will be a place where every conversation is going to be entirely inoffensive to every group of people. Part of living in a society is being able to let miniscule differences pass by without being a domineering, holier-than-thou shitbag about it. Seriously - chill the fuck out and move on with your day.\n\nThe idea that such a joke could even significantly represent a hatred or bias toward women in any way is, in itself, pretty offensive. I think women are capable of seeing a joke without being shattered inside, and they certainly don't need some white knight pompously running around proclaiming who they did and did not downvote to protect their fragile female sensibilities from having to see a fucking comment. Jesus.", "aSentId": 32287, "answer": "The difference between a joke and chauvinism and is the difference between, \"if it had been a baby, it would have a driver's license by now,\" and what the comment actually said.\n\nThat being said, I wouldn't mind retracting a downvote if the comment were edited. It's a shame the comment was covered up by that garbage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32288, "question": "The difference between a joke and chauvinism and is the difference between, \"if it had been a baby, it would have a driver's license by now,\" and what the comment actually said.\n\nThat being said, I wouldn't mind retracting a downvote if the comment were edited. It's a shame the comment was covered up by that garbage.", "aSentId": 32289, "answer": "Chauvinism is the belief that one group is SUPERIOR TO ANOTHER. Male chauvinism is believing males are superior to other genders. So once again, where is that belief espoused in the original comment? I want you to specifically point out why making a hypothetical character female is chauvinism. Otherwise you misused the term, which seems to happen quite often when people who don't understand gender issues want to pretend like they do because it's fashionable. Again, by just spouting random feminist gibberish in response to some extremely minor perceived slight, you confound a real concern about gender issues with the sort of first-semester Gender Studies bullshit that is poisoning societal opinions about what gender movements are trying to do. You clearly don't know what chauvinism is, so don't talk about it like you do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32290, "question": "Chauvinism is the belief that one group is SUPERIOR TO ANOTHER. Male chauvinism is believing males are superior to other genders. So once again, where is that belief espoused in the original comment? I want you to specifically point out why making a hypothetical character female is chauvinism. Otherwise you misused the term, which seems to happen quite often when people who don't understand gender issues want to pretend like they do because it's fashionable. Again, by just spouting random feminist gibberish in response to some extremely minor perceived slight, you confound a real concern about gender issues with the sort of first-semester Gender Studies bullshit that is poisoning societal opinions about what gender movements are trying to do. You clearly don't know what chauvinism is, so don't talk about it like you do.", "aSentId": 32291, "answer": "K, I suppose if we'd equally expect to see \"if it had been a baby boy, it would be jerking off into socks and have a driver's license,\" then you could have a point. But we don't, so you don't.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32292, "question": "K, I suppose if we'd equally expect to see \"if it had been a baby boy, it would be jerking off into socks and have a driver's license,\" then you could have a point. But we don't, so you don't.", "aSentId": 32293, "answer": "Downvoted for assuming you know what my gender/identification is (\"we don't\" only works if I am in the same group as you), what my expectations are, or what anyone else would have expected the joke to be.\n\nIf it had been about a male, I still would have found it weird, and I still wouldn't have said anything.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32294, "question": "Downvoted for assuming you know what my gender/identification is (\"we don't\" only works if I am in the same group as you), what my expectations are, or what anyone else would have expected the joke to be.\n\nIf it had been about a male, I still would have found it weird, and I still wouldn't have said anything.", "aSentId": 32295, "answer": "\"We\" in \"we don't\" being people wanting to read serious questions about text editor data structure implementation, and needing to filter out irrelevant commentary about female physique in order to do so.\n\nOr are you reading /r/programming for that kind of commentary?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32297, "question": "I feel like you got substantially more worked up than the initial comment...", "aSentId": 32298, "answer": "This is definitely true. I'm much more offended by the attempt to defend the comment. Well, not so much offended as bemused.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32300, "question": "/u/Apotheosistor, do you want more women to get into CS and programming?", "aSentId": 32301, "answer": "Are *you* a woman? Are you comfortable speaking *for* women, whether or not you're a woman yourself?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32303, "question": "LibreOffice check by PVS-Studio (240 bugs)", "aSentId": 32304, "answer": "Programming is hard. These write ups illustrate that fairly well.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32305, "question": "Programming is hard. These write ups illustrate that fairly well.", "aSentId": 32306, "answer": "Programming in C++ is twice as hard as it should be.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32307, "question": "Programming in C++ is twice as hard as it should be.", "aSentId": 32308, "answer": "The price to pay for having pretty much absolute control over your code? \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32309, "question": "The price to pay for having pretty much absolute control over your code? \n", "aSentId": 32310, "answer": "You can have absolute control without C++ warts. Rust is being developed in this direction, but it is way younger than C++ and needs time to catch up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32311, "question": "You can have absolute control without C++ warts. Rust is being developed in this direction, but it is way younger than C++ and needs time to catch up.", "aSentId": 32312, "answer": "&gt; You can have absolute control without C++ warts.\n\nThis is true; and something that's taken for granted by Forth guys.  \n\n&gt; Rust is being developed in this direction, but it is way younger than C++ and needs time to catch up.\n\nBut Rust suffers from having C-like^1 syntax [and semantics]. (A feature that *always* makes me question claims that the language is concerned w/ correctness because so many people copy the syntax w/o looking at the ramifications thereof.)\n\nThough I do appreciate the concern for doing things right that a lot of the Rust fans display and consider *that* to be a good trend.\n\n^1 -- Assignment as `=` combined with assignment returning a value is the cause of the `if (cond = value)` error; despite a lot of improvements and work on fixing the C-style syntax both still potentially suffer from this (if cond and value are boolean). -- Dangling else is a solely-syntax problem which gets imported into new languages copying the syntax.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32313, "question": "&gt; You can have absolute control without C++ warts.\n\nThis is true; and something that's taken for granted by Forth guys.  \n\n&gt; Rust is being developed in this direction, but it is way younger than C++ and needs time to catch up.\n\nBut Rust suffers from having C-like^1 syntax [and semantics]. (A feature that *always* makes me question claims that the language is concerned w/ correctness because so many people copy the syntax w/o looking at the ramifications thereof.)\n\nThough I do appreciate the concern for doing things right that a lot of the Rust fans display and consider *that* to be a good trend.\n\n^1 -- Assignment as `=` combined with assignment returning a value is the cause of the `if (cond = value)` error; despite a lot of improvements and work on fixing the C-style syntax both still potentially suffer from this (if cond and value are boolean). -- Dangling else is a solely-syntax problem which gets imported into new languages copying the syntax.", "aSentId": 32314, "answer": "Although I agree with your points, it's worth noting that at least most variables are declared immutable in Rust since it's the default.  So many, although not all, of those assignment errors will show up at compile time.\n\nI do agree that maybe `x := 5` would be a better \"assign after declare\" syntax, especially since doing that is less common in Rust than in C, due to generally immutable variables.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32311, "question": "You can have absolute control without C++ warts. Rust is being developed in this direction, but it is way younger than C++ and needs time to catch up.", "aSentId": 32316, "answer": "Yay for Rust! /r/rust for those interested", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32307, "question": "Programming in C++ is twice as hard as it should be.", "aSentId": 32318, "answer": "Programming in versions of C++ previous than C++11 *", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32319, "question": "Programming in versions of C++ previous than C++11 *", "aSentId": 32320, "answer": "Yes, C++11 is a huge improvement, but the old features clutter the language, and the new ones are a bit, uh, overcomplicated. See \"The Last Thing D Needs\" talk by Scott Meyers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32321, "question": "Yes, C++11 is a huge improvement, but the old features clutter the language, and the new ones are a bit, uh, overcomplicated. See \"The Last Thing D Needs\" talk by Scott Meyers.", "aSentId": 32322, "answer": "&gt; See \"The Last Thing D Needs\" talk by Scott Meyers.\n\nI'm really enjoying this talk; thanks for pointing it out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32303, "question": "LibreOffice check by PVS-Studio (240 bugs)", "aSentId": 32324, "answer": " The article highlights `free(NULL);` but doesn't mention that it's an error: the comment indicates that it's intended to crash the program, but in fact `free` is defined to do nothing given a null pointer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32325, "question": " The article highlights `free(NULL);` but doesn't mention that it's an error: the comment indicates that it's intended to crash the program, but in fact `free` is defined to do nothing given a null pointer.", "aSentId": 32326, "answer": "Call free(NULL); does not lead to any trouble. However, if you say that regularly use such statmen in your code, I'll be surprised. Analyzer surprised too. PVS suspects that it is not okay, and maybe we're dealing with some kind of typo or something else.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32327, "question": "Call free(NULL); does not lead to any trouble. However, if you say that regularly use such statmen in your code, I'll be surprised. Analyzer surprised too. PVS suspects that it is not okay, and maybe we're dealing with some kind of typo or something else.", "aSentId": 32328, "answer": "Sorry - I guess I wasn't clear enough.  The comment before the function calling `free(NULL)` says that it is supposed to \"crash intentionally if called\".  Since `free(NULL)` does not crash, it's a bug in the code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32303, "question": "LibreOffice check by PVS-Studio (240 bugs)", "aSentId": 32330, "answer": "I really expected more bugs though I love libreoffice. 240 seems really a low number of \"bugs\" in such a big project.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32331, "question": "I really expected more bugs though I love libreoffice. 240 seems really a low number of \"bugs\" in such a big project.", "aSentId": 32332, "answer": "&gt;240 seems really a low number of \"bugs\" in such a big project.  \n  \nThe last paragraph says pretty much that:  \n&gt;  \n### Conclusion\n\n   \n  \n&gt;Although the number of errors, defects, and slip-ups discussed in this article is, as usual, great, the LibreOffice project's code is still very high-quality. And it does bear the evidence of being regularly checked by Coverity, which indicates the authors' serious approach to the development. The number of bugs found by PVS-Studio is pretty small for such a large project like LibreOffice.\n\n   \n&gt;What did I mean to say by this article? Well, nothing special, really. It's a bit of advertising for our tool, and that's all. Use the PVS-Studio static analyzer regularly to find and fix piles of errors at the earliest development stages.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32331, "question": "I really expected more bugs though I love libreoffice. 240 seems really a low number of \"bugs\" in such a big project.", "aSentId": 32334, "answer": "Those are automatically found by that tool, noto alla the bugs", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32335, "question": "Those are automatically found by that tool, noto alla the bugs", "aSentId": 32336, "answer": "ya, I know but still a very low number. I know this website viva64 is releasing results for \"known\" applications and it's just cool they only found 240 :). Not the best idea to \"sell\" their pvs studio though it might be great.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32337, "question": "ya, I know but still a very low number. I know this website viva64 is releasing results for \"known\" applications and it's just cool they only found 240 :). Not the best idea to \"sell\" their pvs studio though it might be great.", "aSentId": 32338, "answer": "We have found that LibreOffice is pretty high-quality and that it is **regularly checked by the Coverity static analyzer**.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32331, "question": "I really expected more bugs though I love libreoffice. 240 seems really a low number of \"bugs\" in such a big project.", "aSentId": 32340, "answer": "Why do I find so few bugs? [Leo Tolstoy and Static Code Analysis](http://www.viva64.com/en/b/0105/).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32342, "question": "    void ScPivotLayoutTreeListData::PushDataFieldNames(....)\n    {\n      ....\n      ScDPLabelData* pLabelData = mpParent-&gt;GetLabelData(nColumn);\n    \n      if (pLabelData == NULL &amp;&amp; pLabelData-&gt;maName.isEmpty())\n        continue;\n      ....\n    }\n\n&gt; It's a logical error in the condition: If the pointer is null, let's dereference it. As far as I can get it, the programmer should have used the || operator here.\n\nShouldn't the correct expression be:\n\n    pLabelData != NULL &amp;&amp; pLabelData-&gt;maName.isEmpty()\n\nChanging &amp;&amp; to || would still leave you the possibility of dereferencing a null pointer. ", "aSentId": 32343, "answer": "No, this is the `continue` condition. It shall only do the operation `if (not-null and not empty)`, thus continue `if (null or empty)`. Also note that the standard defines conditions as short-circuit. Thus, if `null`, it won't check the `or empty`.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32344, "question": "No, this is the `continue` condition. It shall only do the operation `if (not-null and not empty)`, thus continue `if (null or empty)`. Also note that the standard defines conditions as short-circuit. Thus, if `null`, it won't check the `or empty`.", "aSentId": 32345, "answer": "Ah, true. Thanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32347, "question": "Butchering HQX scaling filters (2014)", "aSentId": 32348, "answer": "I had a short stab at implementing HQX in GLSL some while ago, but swiftly dropped the idea like a rod of enriched uranium upon seeing the reference. With this guys work simplifying and explaining things, it may be worth a thought to give it another stab at some point...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32350, "question": "frontend-guidelines: Some HTML, CSS and JS best practices.", "aSentId": 32351, "answer": "Hold up, not using &lt;head&gt; or &lt;body&gt; is considered a *good* thing?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32350, "question": "frontend-guidelines: Some HTML, CSS and JS best practices.", "aSentId": 32353, "answer": "[This is the author's website](http://deaxon.com/)\n\nHe's a self-described UI/icon designer that shouldn't be defining \"best practices\" for HTML, CSS, or JS. [Here's one example why](https://github.com/bendc/jscss).\n\nSomewhat disappointing to see this so high on /r/programming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32354, "question": "[This is the author's website](http://deaxon.com/)\n\nHe's a self-described UI/icon designer that shouldn't be defining \"best practices\" for HTML, CSS, or JS. [Here's one example why](https://github.com/bendc/jscss).\n\nSomewhat disappointing to see this so high on /r/programming.", "aSentId": 32355, "answer": "Haha. Man.\n\nOne day there's going to be more &lt;script&gt; lines than actual page content in and HTML file.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32354, "question": "[This is the author's website](http://deaxon.com/)\n\nHe's a self-described UI/icon designer that shouldn't be defining \"best practices\" for HTML, CSS, or JS. [Here's one example why](https://github.com/bendc/jscss).\n\nSomewhat disappointing to see this so high on /r/programming.", "aSentId": 32357, "answer": "What's the problem with it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32358, "question": "What's the problem with it?", "aSentId": 32359, "answer": "There's no reason behind most of his points; if you reference either the relevant documentation _or_ discussions (lots of good links in other replies) you can see he doesn't consistently follow the logic behind the 'best practice' he recommends. This implies he doesn't know _why_ you do it, but that somebody told him to -- this makes for poor programmers. We **need to know why** so we can make appropriate decisions.\n\nThe CSS section is an excellent example of what happens without the reason behind a rule. He's got an order of preference for position types: Why are absolute and fixed at the bottom? Plenty of good designs rely on absolute and fixed positioning, should they not? The first point is about semicolons, though **his own repository** includes a poorly-conceived way of writing CSS without _any_ symbols.\n\nLots of his other points will confuse or potentially lead astray new developers who won't do something perfectly acceptable because it doesn't follow these \"best practices.\"\n\nHe actually says \"Don't use loops as they force you to use mutable objects\" and I'm afraid to try and justify the extremely limited context I'd accept that statement --  of course, even in an acceptable context he then gives awful, wrong guidelines farther down the page.\n\nI could go on, but I'm not trying to tear apart the article. This is a mediocre-at-best list from a non-authority. If it helps the author, great, but I'd rather not see it given credence by sitting upvoted and uncontested in this sub.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32360, "question": "There's no reason behind most of his points; if you reference either the relevant documentation _or_ discussions (lots of good links in other replies) you can see he doesn't consistently follow the logic behind the 'best practice' he recommends. This implies he doesn't know _why_ you do it, but that somebody told him to -- this makes for poor programmers. We **need to know why** so we can make appropriate decisions.\n\nThe CSS section is an excellent example of what happens without the reason behind a rule. He's got an order of preference for position types: Why are absolute and fixed at the bottom? Plenty of good designs rely on absolute and fixed positioning, should they not? The first point is about semicolons, though **his own repository** includes a poorly-conceived way of writing CSS without _any_ symbols.\n\nLots of his other points will confuse or potentially lead astray new developers who won't do something perfectly acceptable because it doesn't follow these \"best practices.\"\n\nHe actually says \"Don't use loops as they force you to use mutable objects\" and I'm afraid to try and justify the extremely limited context I'd accept that statement --  of course, even in an acceptable context he then gives awful, wrong guidelines farther down the page.\n\nI could go on, but I'm not trying to tear apart the article. This is a mediocre-at-best list from a non-authority. If it helps the author, great, but I'd rather not see it given credence by sitting upvoted and uncontested in this sub.", "aSentId": 32361, "answer": "Re read, makes sense. Thank you!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32350, "question": "frontend-guidelines: Some HTML, CSS and JS best practices.", "aSentId": 32363, "answer": "A lot of this strikes me as dogmatic.  Sometimes the examples make the reasoning clear, but a lot of times it's just a rule that you should without explanation.  Why favor composition over nested function calls, for example?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32366, "question": "gah, I've been doing this for years, and it still feels like the more I know, the more ignorant I feel. Especially with that loop optimization javascript fml.", "aSentId": 32367, "answer": "Nah - a lot of this is bullshit.  There are good points here in places - but it's so dogmatic it's senseless. It implies es6 - so lots of the \"good\" examples only applied to people using node, io, Traceur, etc.  \n\nI would take all this with a grain of salt.  Every codebase has its particular styles - some of which may be things this dude says are \"bad\" - but if you go around refactoring out patterns used consistently people will hate you.  \n\nRead javascript allonge ( https://github.com/raganwald/javascript-allonge/blob/master/README.md ) for a much better set of info about proper use of JS.  \n\nI especially dislike this guys problem with currying.  It's arguably one of the most powerful features of JS - but this dude says avoid it.  Wtf", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32369, "question": "&gt;frontend-guidelines: Some HTML, CSS and JS best practices.\n\nAbolish the unholy html/css/javascript trinity.", "aSentId": 32370, "answer": "And use what, flash?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32371, "question": "And use what, flash?", "aSentId": 32372, "answer": "Java Applets obviously!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32373, "question": "Java Applets obviously!", "aSentId": 32374, "answer": "Java applets are certified holy", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32377, "question": "HTML5's semantic elements are largely useless because you're ultimately still controlling the layout with CSS.", "aSentId": 32378, "answer": "Huh? That's the entire point -- the visual design (including layout) is controlled by the css, but the structural *meaning* of the content is determined by the html tags. (Of course it's super confusing because the semantic elements don't actually imply *all meaning*, just meaning about where a piece of content sits within the document outline).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32380, "question": "Learn Nim in Y Minutes", "aSentId": 32381, "answer": " I think Nim's [original article](http://nim-lang.org/tut1.html) is better and more detailed for beginners...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32382, "question": " I think Nim's [original article](http://nim-lang.org/tut1.html) is better and more detailed for beginners...", "aSentId": 32383, "answer": "That's a nice introduction to learn nim in J minutes, not Y minutes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32384, "question": "That's a nice introduction to learn nim in J minutes, not Y minutes.", "aSentId": 32385, "answer": " Takes more time but not that much you can't stick it out ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32380, "question": "Learn Nim in Y Minutes", "aSentId": 32387, "answer": "The highlighting on the variables looks weird.\n\n    var                     # Declare (and assign) variables,\n      letter: char = 'n'    # with or without type annotations\n      lang = \"N\" &amp; \"im\"\n      nLength : int = len(lang)\n      boat: float\n      truth: bool = false", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32388, "question": "The highlighting on the variables looks weird.\n\n    var                     # Declare (and assign) variables,\n      letter: char = 'n'    # with or without type annotations\n      lang = \"N\" &amp; \"im\"\n      nLength : int = len(lang)\n      boat: float\n      truth: bool = false", "aSentId": 32389, "answer": "It's using Ruby syntax highlighting, I made a PR to fix this: https://github.com/adambard/learnxinyminutes-docs/pull/979", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32390, "question": "It's using Ruby syntax highlighting, I made a PR to fix this: https://github.com/adambard/learnxinyminutes-docs/pull/979", "aSentId": 32391, "answer": "So it's:\n\n    &lt;varname&gt; = &lt;value&gt;\n    &lt;varname&gt;: &lt;typename&gt; = &lt;value&gt;", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32392, "question": "So it's:\n\n    &lt;varname&gt; = &lt;value&gt;\n    &lt;varname&gt;: &lt;typename&gt; = &lt;value&gt;", "aSentId": 32393, "answer": "Exactly. And there's also\n\n    &lt;varname&gt;: &lt;typename&gt; # initialized to binary 0", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32394, "question": "Exactly. And there's also\n\n    &lt;varname&gt;: &lt;typename&gt; # initialized to binary 0", "aSentId": 32395, "answer": "I think it would look more consistent if you could move the : over.\n\n    var\n      child :tuple[name :string, age :int]   # Tuples have *both* field names\n      today :tuple[sun :string, temp :float] # *and* order.\n\nvs\n\n    var\n      child: tuple[name: string, age: int]   # Tuples have *both* field names\n      today: tuple[sun: string, temp: float] # *and* order.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32396, "question": "I think it would look more consistent if you could move the : over.\n\n    var\n      child :tuple[name :string, age :int]   # Tuples have *both* field names\n      today :tuple[sun :string, temp :float] # *and* order.\n\nvs\n\n    var\n      child: tuple[name: string, age: int]   # Tuples have *both* field names\n      today: tuple[sun: string, temp: float] # *and* order.\n", "aSentId": 32397, "answer": "Although I don't agree, that works just fine in Nim.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32396, "question": "I think it would look more consistent if you could move the : over.\n\n    var\n      child :tuple[name :string, age :int]   # Tuples have *both* field names\n      today :tuple[sun :string, temp :float] # *and* order.\n\nvs\n\n    var\n      child: tuple[name: string, age: int]   # Tuples have *both* field names\n      today: tuple[sun: string, temp: float] # *and* order.\n", "aSentId": 32399, "answer": "More consistent with what? Both of your examples look internally consistent.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32400, "question": "More consistent with what? Both of your examples look internally consistent.", "aSentId": 32401, "answer": "variables with type vs without.\n\n    var\n        blah = 5\n        blecch: string = \"five\"\n\n    var\n        blah = 5\n        blecch :string = \"five\"\n\nThe 2nd one makes more sense to me for some reason.  The : goes with the thing that is different.  But apparently you can have whitespace either side of the :", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32380, "question": "Learn Nim in Y Minutes", "aSentId": 32403, "answer": "i want to like nim but i just cannot stand it's syntax..", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32405, "question": "&gt;Nim (formally Nimrod) [...]\n\nshould say\n\n&gt;Nim (formerly Nimrod) [...]\n\nNot going to read it when there's a typo in the second word of the first sentence.", "aSentId": 32406, "answer": "It's not formerly though, it's formally. Nim is an abbreviation for Nimrod. Bad grammars nazis is bad.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32407, "question": "It's not formerly though, it's formally. Nim is an abbreviation for Nimrod. Bad grammars nazis is bad.", "aSentId": 32408, "answer": "No dude. They changed the name. Check Nim's official website and Github. They both say \"formerly\". It's the very first sentence on http://nim-lang.org", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32410, "question": "As a python lover, I love Nim, I really do and want it to succeed, that's why I ask for a name change.\n\nApollo? Mercury? Mustang? Clyde? Percheron?\n\nHow about just Nimoy in honor to Spock?", "aSentId": 32411, "answer": "It was nimrod they've just changed it! :D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32412, "question": "It was nimrod they've just changed it! :D", "aSentId": 32413, "answer": "I know, they just changed it for worse. But whatever, if that's the way they treat their supporters they can go fuck themselves. It was just an opinion.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32414, "question": "I know, they just changed it for worse. But whatever, if that's the way they treat their supporters they can go fuck themselves. It was just an opinion.", "aSentId": 32415, "answer": "I think the majority of people wanted the change to Nim, and would prefer it to stay where it is now. You would like the devs to fuck off for supporting the majority opinion?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32416, "question": "I think the majority of people wanted the change to Nim, and would prefer it to stay where it is now. You would like the devs to fuck off for supporting the majority opinion?", "aSentId": 32417, "answer": "No, I respect their opinion, what I don't understand is the downvotes for expressing mine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32410, "question": "As a python lover, I love Nim, I really do and want it to succeed, that's why I ask for a name change.\n\nApollo? Mercury? Mustang? Clyde? Percheron?\n\nHow about just Nimoy in honor to Spock?", "aSentId": 32419, "answer": "First you'd have to motivate why it should change.\n\n*Mercury* is already a logic/functional language. People who like those two paradigms, and are perhaps also unhappy with Prolog, would probably find that language interesting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32410, "question": "As a python lover, I love Nim, I really do and want it to succeed, that's why I ask for a name change.\n\nApollo? Mercury? Mustang? Clyde? Percheron?\n\nHow about just Nimoy in honor to Spock?", "aSentId": 32421, "answer": "Nim is great name...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32424, "question": "This wont do, i want to learn it in X minutes!  \nNot really, i cant stand forced indentation languages.  \nThough i do like all its other properties, especially its pascal inspirations...  \nIts a language i want to like, but just can see past its ugly exterior, i guess im shallow like that ;)", "aSentId": 32425, "answer": "Seeing how indentation syntax is so controversial, it seems that there could be fruitful to make an alternative syntax frontend for such languages (in Nim's case, one with some kind of token-based \"bracing; in a C-like language's case, an indentation-significant language). Multiple syntactical frontends might be a bad idea in general, but something like this seems doable.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32426, "question": "Seeing how indentation syntax is so controversial, it seems that there could be fruitful to make an alternative syntax frontend for such languages (in Nim's case, one with some kind of token-based \"bracing; in a C-like language's case, an indentation-significant language). Multiple syntactical frontends might be a bad idea in general, but something like this seems doable.", "aSentId": 32427, "answer": "I don't think this is a good approach. It's fine for hobbyists who want to use their syntactical front end of choice, but at a workplace, it would quickly become a nightmare between managing multiple syntax front ends or a never ending religious war between indentation and braces. Though I guess it could give us something new to debate besides Vim and Emacs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32429, "question": "More money, more problems", "aSentId": 32430, "answer": "Mixed feelings here. Objectively he makes sense - the whole \"adding programmers to late project makes it even later.\"\n\nBut on one hand, it's kind of weird to hear MICROSOFT trying to preach about this when they are as guilty as anyone of the mega-huge-team \"hard to change the ship's direction\" problems.\n\n.. but then again, they'd ALSO have the experience needed to discuss problems they've faced.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32431, "question": "Mixed feelings here. Objectively he makes sense - the whole \"adding programmers to late project makes it even later.\"\n\nBut on one hand, it's kind of weird to hear MICROSOFT trying to preach about this when they are as guilty as anyone of the mega-huge-team \"hard to change the ship's direction\" problems.\n\n.. but then again, they'd ALSO have the experience needed to discuss problems they've faced.\n", "aSentId": 32432, "answer": "To be fair, he makes reference to MS in the 90s/2000s as being guilty of it. That said, it's hard to talk about a topic like this and not have mixed feelings...\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32434, "question": "Ubuntu Cloud PRNG seed", "aSentId": 32435, "answer": "This seems like a bad idea to me. If an attacker gained access to that server, he could give out poor entropy and gain access to a lot more servers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32436, "question": "This seems like a bad idea to me. If an attacker gained access to that server, he could give out poor entropy and gain access to a lot more servers.", "aSentId": 32437, "answer": "The clients mix Pollen's entropy into their existing entropy pools, so at worst, reading from a malicious server would be equivalent to receiving no additional entropy. From a mathematical perspective, pollinate can't hurt.\n\nThe biggest risk is that people may trust Pollen too much and make unwarranted assumptions about the availability of entropy. However, Pollen exists because software was already making unwarranted assumptions about entropy in virtual machines.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32438, "question": "The clients mix Pollen's entropy into their existing entropy pools, so at worst, reading from a malicious server would be equivalent to receiving no additional entropy. From a mathematical perspective, pollinate can't hurt.\n\nThe biggest risk is that people may trust Pollen too much and make unwarranted assumptions about the availability of entropy. However, Pollen exists because software was already making unwarranted assumptions about entropy in virtual machines.", "aSentId": 32439, "answer": "&gt; From a mathematical perspective, pollinate can't hurt.\n\nI'd love to see a dissertation of a credited mathematician on that subject, because to me, that statement seems really naive. To me as a layman, it seems as if the information given out by the 'pollinator' could be malicious in two ways.\n\nThe most obvious is to give out a simple result which would merely have an effect of reducing the complexity of the entropy. (Is that a thing? I dunno. I hope the point comes across, though.)\n\nThe other is to have it give out 'smart' numbers which would mesh with other known factors that the clients use to complete their entropy. These could be weaknesses in the algorithm for combining things, or some variety of the predictable kind like a clock. It would take a smart attacker, but it could harm the randomness beyond just losing one source of entropy.\n\nEntropy is a difficult subject. I would not be surprised if my laymans logic was wrong, but the mantra of 'always distrust external input' has served me well upto now. xD", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32436, "question": "This seems like a bad idea to me. If an attacker gained access to that server, he could give out poor entropy and gain access to a lot more servers.", "aSentId": 32441, "answer": "Running your own version of this server for use on your clients seems like a good idea. Trusting somebody else's seems dubious mostly because the entire point of needing the entropy in the first place is probably for some sort of secure purpose. They sort of mix the two up in that text. But the first is, if not necessarily a \"hard\" thing to write yourself, still nice to just pull off the shelf.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32434, "question": "Ubuntu Cloud PRNG seed", "aSentId": 32443, "answer": "So?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32445, "question": "Beating Super Hexagon with OpenCV and DLL injection", "aSentId": 32446, "answer": "I came across this on [hackaday](http://hackaday.com/2015/02/28/beating-super-hexagon-with-opencv-and-dll-injection/) the actual project write up has much more details", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32445, "question": "Beating Super Hexagon with OpenCV and DLL injection", "aSentId": 32448, "answer": "I'm surprised at the algorithm choice with such a well-binarized image. What I would have done instead of that ray casting stuff is a simple path search.\n\nHave a large number of concentric rings around the centre of circumferences `kn`, `(k+1)n`, `(k+2)n`, ... where `k` is some initial constant and `n` is just under the radial distance around the inner circle on which the player is located in the time it takes for the circle to get to you. `kn` would be the radius of the player from the centre.\n\nThis allows you to generate a graph where at each node your choices are the three closest points on the next ring going outwards. Remove those nodes where the pixel colour at the sample is white, or is next to one (to prevent the algorithm trying to cross touching corners\u00b9). Do a graph search (eg. Dijkstra) to get to the outermost ring possible. Follow that path until the next frame.\n\nThis graph search will likely be much cheaper than generating contours and I even think some APIs let you get individual pixels from the screen so you could avoid the DLL hack too.\n\n\u00b9 You actually can, but I would assume this is too hacky.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32449, "question": "I'm surprised at the algorithm choice with such a well-binarized image. What I would have done instead of that ray casting stuff is a simple path search.\n\nHave a large number of concentric rings around the centre of circumferences `kn`, `(k+1)n`, `(k+2)n`, ... where `k` is some initial constant and `n` is just under the radial distance around the inner circle on which the player is located in the time it takes for the circle to get to you. `kn` would be the radius of the player from the centre.\n\nThis allows you to generate a graph where at each node your choices are the three closest points on the next ring going outwards. Remove those nodes where the pixel colour at the sample is white, or is next to one (to prevent the algorithm trying to cross touching corners\u00b9). Do a graph search (eg. Dijkstra) to get to the outermost ring possible. Follow that path until the next frame.\n\nThis graph search will likely be much cheaper than generating contours and I even think some APIs let you get individual pixels from the screen so you could avoid the DLL hack too.\n\n\u00b9 You actually can, but I would assume this is too hacky.\n", "aSentId": 32450, "answer": "&gt;I even think some APIs let you get individual pixels from the screen so you could avoid the DLL hack too.\n\nWith the function hook you force the game to slow down to give your AI time to run.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32451, "question": "&gt;I even think some APIs let you get individual pixels from the screen so you could avoid the DLL hack too.\n\nWith the function hook you force the game to slow down to give your AI time to run.", "aSentId": 32452, "answer": "I don't think you'd need to with my algorithm (especially because it allows lookahead).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32449, "question": "I'm surprised at the algorithm choice with such a well-binarized image. What I would have done instead of that ray casting stuff is a simple path search.\n\nHave a large number of concentric rings around the centre of circumferences `kn`, `(k+1)n`, `(k+2)n`, ... where `k` is some initial constant and `n` is just under the radial distance around the inner circle on which the player is located in the time it takes for the circle to get to you. `kn` would be the radius of the player from the centre.\n\nThis allows you to generate a graph where at each node your choices are the three closest points on the next ring going outwards. Remove those nodes where the pixel colour at the sample is white, or is next to one (to prevent the algorithm trying to cross touching corners\u00b9). Do a graph search (eg. Dijkstra) to get to the outermost ring possible. Follow that path until the next frame.\n\nThis graph search will likely be much cheaper than generating contours and I even think some APIs let you get individual pixels from the screen so you could avoid the DLL hack too.\n\n\u00b9 You actually can, but I would assume this is too hacky.\n", "aSentId": 32454, "answer": "The game actually has quite a small number of patterns, I'd just code the solution for each pattern and the AI would make a perfect play everytime.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32445, "question": "Beating Super Hexagon with OpenCV and DLL injection", "aSentId": 32456, "answer": "He keeps calling it IA, I've only ever heard of AI.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32457, "question": "He keeps calling it IA, I've only ever heard of AI.", "aSentId": 32458, "answer": "IA = Intelligent Agent", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32462, "question": "I've never heard of Super Hexagon before, but yeah... that game easily falls into the \"it would be faster to write a program to do this, than to do it myself\" category.  Catchy tune though.", "aSentId": 32463, "answer": "It only took me ~30 hours to finish it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32464, "question": "It only took me ~30 hours to finish it.", "aSentId": 32465, "answer": "Only took you 30 hours to beat a game that is six minutes long?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32466, "question": "Only took you 30 hours to beat a game that is six minutes long?", "aSentId": 32467, "answer": "It's all about the journey and not the destination.\n\nLearning the patters, developing the muscle memory for them and the reaction speed takes time.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32466, "question": "Only took you 30 hours to beat a game that is six minutes long?", "aSentId": 32469, "answer": "Have you played the game?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32470, "question": "Have you played the game?", "aSentId": 32471, "answer": "Yes. I was scoffing at his use of the word only.\n\nDue to the recent complaints about The Order a few of my friends have been talking about game length and if there is a required game length. I point out during these discussions that some of my favorite games can be beaten in a single sitting. Portal 1 is a mere 3 hours long, Binding of Issac can be as short as 20 minutes. One of the ones we joke about is Super Hexagon.\n\nIf you asked me how long Super Hexagon was I would tell you six minutes. That is how long it is. If you played it from start to finish it would take you six minutes to beat it.\n\nOf course it doesn't take you six minutes. It doesn't even take you six hours. I most likely takes you more then a day, or even a week. Because measuring the length of a game is asinine. A game should not be measured on its length but instead on its content and its quality of delivery.\n\nSuper Hexagon is a fun game, it is simple which allows for quick understanding and mastery but that simplicity easily becomes deceptive and downright unforgiving. If Super Hexagon required me to spend 20 minutes on each level I would call it impossible and be angry at the requirement.\n\nFun related fact. Most people haven't beat Space Chem. In a post mortem for Space Chem the developers said that they regret how the game turned out pacing wise. They wished they had ended the game many levels sooner and included the later levels as bonus. Their logic being that people don't get angry when they can't beat the \"bonus\" or \"challenge\" levels but when they can't beat the game at all they feel upset. The developers wished they could have allowed more people to beat the game.\n\nIn this case the developers felt they made the main part of the game too long and following their progress of more time = more complexity they ended up making the main game too hard.\n\nThe problem with games like The Order isn't they are too short but instead that they don't challenge the genre, or the player, in any real way. Super Hexagon can get away with being \"short\" because to master it makes it long.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32464, "question": "It only took me ~30 hours to finish it.", "aSentId": 32473, "answer": "Same here. It was very challenging but fun. The music is great as well. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32462, "question": "I've never heard of Super Hexagon before, but yeah... that game easily falls into the \"it would be faster to write a program to do this, than to do it myself\" category.  Catchy tune though.", "aSentId": 32475, "answer": "level 6 is the only one I haven't managed to break the 60 second mark on, it's absolutely brutal.  Much easier to play on a phone than the PC for some reason.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32478, "question": "Im a bit new to c++ but once he has it running his own dll / code how does he know what to call or variable to use to read in the buffered image? I mostly understand how he is tricking the game into adopting his code but I dont understand the part where he can get the image.", "aSentId": 32479, "answer": "The game is programmed with OpenGL, so once his code is running inside the game's address space he can simply call something like [glReadPixels](http://docs.gl/gl3/glReadPixels) to fetch the contents of the framebuffer into a buffer supplied by his program.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32482, "question": "Sylph: the programming language I want", "aSentId": 32483, "answer": "&gt; Learning the language should not require a complete upheaval of your mental model of the universe. \n\nWhy not? What if better mental models exist?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32484, "question": "&gt; Learning the language should not require a complete upheaval of your mental model of the universe. \n\nWhy not? What if better mental models exist?", "aSentId": 32485, "answer": "What would it be? Message passing, C machine, logic, functional, hybrid? Which one of those is better than the other? They all have something the others can't really express as easily.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32482, "question": "Sylph: the programming language I want", "aSentId": 32487, "answer": "The ideas behind this hypothetical language are not new, and moreover when the time actually comes to implement many of them, OP might be disappointed to find out they don't work awfully well.\n\n&gt; No types appear anywhere in that code, but any Python dev knows exactly what can be passed to it. We know .startswith is the name of a string method, we know what it operates on and we know that .append is likewise the name of a list method.\n\n&gt; The function might have been intended for methods of those names on other types, true. But it doesn\u2019t really matter, because we can just get a little more vague and say definitively that this code will fail if you pass an a that doesn\u2019t have a startswith method or a c that doesn\u2019t have an append method.\n\nThis is harder on the compiler and on the programmer than just having to specify the names of the types in the signature.  The reason for that is that while you can have a compiler come up with types like this, the result types are going to be very complex and difficult to work with.  Consider your example method:\n\n    def foo(a, b, c):\n        if a.startswith(b):\n            c.append(a)\n\nYou observe that this method is easy enough for a Python programmer to wrap his head around.  You want the compiler to be able to come up with a type for `foo` like this:\n\n    foo(a : A, b : B, c : C) : None\n        where a.startswith(B) : Bool\n          and c.append(A) : D\n\n.... there are four type variables here, the last one being because `c.append(a)` can return any kind of value.  This type signature is almost as complex as the most complex Rust type signature you offer, and it has two lines.  Notice that the inferred type grows with every additional method call in the function definition.  How might the type of this method be inferred?\n\n    bar(a, b, c, d, e, f, g):\n        a.foo(b,c)\n        b.foo(a,c)\n        e.foo(a,e,c,a)\n        g.foo(d,e,e,e,foo(e,a,c),e,e,foo(e,f,g),e,e)\n        f.foo(g,g,a,d,e,c)\n        d.foo()\n        c.foo(a.foo(b,c) + c.foo(f))\n        ....\n\n... clearly the result's going to be big and nasty.  Long complex types are bad for the compiler because now type-checking is an expensive, tricky process, and they're bad for the programmer because the types are now really complex and hard to reason about (if the compiler spits out a 20-line inferred type to point out a type error to you, what are you going to do)?  There's a reason this hasn't been implemented before and it's not because nobody's thought of it yet.\n\n&gt; This seems a little ridiculous. The compiler already knew that T had to be a type that supports addition \u2014 it just told me that. So why am I spelling it out?\n\nBecause the type you picked earlier was wrong.  You said that the type of `add` was `(T, T) -&gt; T`, when it's not; `T` and `T` both need to be able to be added.  It's arguably more confusing for the programmer to specify half the type of the method and have the rest be inferred by the compiler in an invisible fashion.\n\n&gt; Shape types\n\nThese are just records.  Not only are records not a new idea, they have been implemented in major functional languages: Standard ML, Ocaml, I think F# too.\n\n&gt; Classes\n\nI think this was all just to describe D-style delegation methods.  I don't use D but I hear they work pretty well.\n\n&gt; State\n\nA noble idea about representing states in the type system, but again, typed states really complicate things for the programmer (as you probably know, lots of research has been done in this area already).  If usability is a concern for you then you'll probably not be too drawn to this idea.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32488, "question": "The ideas behind this hypothetical language are not new, and moreover when the time actually comes to implement many of them, OP might be disappointed to find out they don't work awfully well.\n\n&gt; No types appear anywhere in that code, but any Python dev knows exactly what can be passed to it. We know .startswith is the name of a string method, we know what it operates on and we know that .append is likewise the name of a list method.\n\n&gt; The function might have been intended for methods of those names on other types, true. But it doesn\u2019t really matter, because we can just get a little more vague and say definitively that this code will fail if you pass an a that doesn\u2019t have a startswith method or a c that doesn\u2019t have an append method.\n\nThis is harder on the compiler and on the programmer than just having to specify the names of the types in the signature.  The reason for that is that while you can have a compiler come up with types like this, the result types are going to be very complex and difficult to work with.  Consider your example method:\n\n    def foo(a, b, c):\n        if a.startswith(b):\n            c.append(a)\n\nYou observe that this method is easy enough for a Python programmer to wrap his head around.  You want the compiler to be able to come up with a type for `foo` like this:\n\n    foo(a : A, b : B, c : C) : None\n        where a.startswith(B) : Bool\n          and c.append(A) : D\n\n.... there are four type variables here, the last one being because `c.append(a)` can return any kind of value.  This type signature is almost as complex as the most complex Rust type signature you offer, and it has two lines.  Notice that the inferred type grows with every additional method call in the function definition.  How might the type of this method be inferred?\n\n    bar(a, b, c, d, e, f, g):\n        a.foo(b,c)\n        b.foo(a,c)\n        e.foo(a,e,c,a)\n        g.foo(d,e,e,e,foo(e,a,c),e,e,foo(e,f,g),e,e)\n        f.foo(g,g,a,d,e,c)\n        d.foo()\n        c.foo(a.foo(b,c) + c.foo(f))\n        ....\n\n... clearly the result's going to be big and nasty.  Long complex types are bad for the compiler because now type-checking is an expensive, tricky process, and they're bad for the programmer because the types are now really complex and hard to reason about (if the compiler spits out a 20-line inferred type to point out a type error to you, what are you going to do)?  There's a reason this hasn't been implemented before and it's not because nobody's thought of it yet.\n\n&gt; This seems a little ridiculous. The compiler already knew that T had to be a type that supports addition \u2014 it just told me that. So why am I spelling it out?\n\nBecause the type you picked earlier was wrong.  You said that the type of `add` was `(T, T) -&gt; T`, when it's not; `T` and `T` both need to be able to be added.  It's arguably more confusing for the programmer to specify half the type of the method and have the rest be inferred by the compiler in an invisible fashion.\n\n&gt; Shape types\n\nThese are just records.  Not only are records not a new idea, they have been implemented in major functional languages: Standard ML, Ocaml, I think F# too.\n\n&gt; Classes\n\nI think this was all just to describe D-style delegation methods.  I don't use D but I hear they work pretty well.\n\n&gt; State\n\nA noble idea about representing states in the type system, but again, typed states really complicate things for the programmer (as you probably know, lots of research has been done in this area already).  If usability is a concern for you then you'll probably not be too drawn to this idea.", "aSentId": 32489, "answer": "The author also didn't want type annotations, which means that the python foo function is legal and all of his readability complaints still apply.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32482, "question": "Sylph: the programming language I want", "aSentId": 32491, "answer": "Despite your dismissal of Haskell, it actually achieves your locality constraint more than any other language in existence.\n\nAlso, your desire for types as values leads to type checking diverging, ie. running forever if you made a mistake. What you're really after seems to be metaprogramming of some sort.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32492, "question": "Despite your dismissal of Haskell, it actually achieves your locality constraint more than any other language in existence.\n\nAlso, your desire for types as values leads to type checking diverging, ie. running forever if you made a mistake. What you're really after seems to be metaprogramming of some sort.", "aSentId": 32493, "answer": "&gt; Despite your dismissal of Haskell, it actually achieves your locality constraint more than any other language in existence.\n\nIt does not, because of typeclasses.\n\nBasically, you have to resolve typeclasses in your head to know what a piece of code is really doing, and this is non-local.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32494, "question": "&gt; Despite your dismissal of Haskell, it actually achieves your locality constraint more than any other language in existence.\n\nIt does not, because of typeclasses.\n\nBasically, you have to resolve typeclasses in your head to know what a piece of code is really doing, and this is non-local.", "aSentId": 32495, "answer": "&gt; Basically, you have to resolve typeclasses in your head to know what a piece of code is really doing, and this is non-local.\n\n*Thank You*.\n\nAlthough, I feel this is a failing with tooling, not of the language. What we really want is to have the type information available to us, the programmers. That includes the local instantiation of type parameters. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32496, "question": "&gt; Basically, you have to resolve typeclasses in your head to know what a piece of code is really doing, and this is non-local.\n\n*Thank You*.\n\nAlthough, I feel this is a failing with tooling, not of the language. What we really want is to have the type information available to us, the programmers. That includes the local instantiation of type parameters. ", "aSentId": 32497, "answer": "&gt; What we really want is to have the type information available to us, the programmers.\n\nTo be perfectly fair, this is quite possible now. Agda has it since basically forever, ghc-mod should provide that for Haskell (in OCaml, it's also available with various tools since quite some time).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32498, "question": "&gt; What we really want is to have the type information available to us, the programmers.\n\nTo be perfectly fair, this is quite possible now. Agda has it since basically forever, ghc-mod should provide that for Haskell (in OCaml, it's also available with various tools since quite some time).", "aSentId": 32499, "answer": "It's not available in the standard distribution, and i have doubts it would work with Haskell's various extensions. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32494, "question": "&gt; Despite your dismissal of Haskell, it actually achieves your locality constraint more than any other language in existence.\n\nIt does not, because of typeclasses.\n\nBasically, you have to resolve typeclasses in your head to know what a piece of code is really doing, and this is non-local.", "aSentId": 32501, "answer": "&gt; It does not, because of typeclasses.\n\nIt actually is local because of type classes. Every function that uses overloaded behaviour has the type class constraint right in the signature. This is no worse than the set of methods attached to a particular parameter's class (or the interfaces it implements), and arguably better because it gives you a much more narrow set of functions to keep in mind.\n\n&gt; Basically, you have to resolve typeclasses in your head to know what a piece of code is really doing\n\nYou only really need to consider the type signature to know what a piece of code is really doing, particularly in Haskell that reifies effects in the type. Haskell is more local than any other language for this reason.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32502, "question": "&gt; It does not, because of typeclasses.\n\nIt actually is local because of type classes. Every function that uses overloaded behaviour has the type class constraint right in the signature. This is no worse than the set of methods attached to a particular parameter's class (or the interfaces it implements), and arguably better because it gives you a much more narrow set of functions to keep in mind.\n\n&gt; Basically, you have to resolve typeclasses in your head to know what a piece of code is really doing\n\nYou only really need to consider the type signature to know what a piece of code is really doing, particularly in Haskell that reifies effects in the type. Haskell is more local than any other language for this reason.", "aSentId": 32503, "answer": "Drupyog is right. I can see a call `foo x` and the documentation says it's `foo :: Bar a -&gt; a -&gt; Int`. If I want to see where control would jump to, I need to personally resolve the type of `x`. \n\nWhile in theory, this information should be available to me, in practice, I end up having to carefully resolve the type of expressions in code to see where the call is to. In some cases, this is not so bad, like when `x` is a parameter to the function I'm defining, and I have proper annotations. But in other cases, it can be a PITA, when I'm relying on library functions which rely on heavy typeclass abstraction in the return types. In the worst case, it could be that the type of the expression is only uniquely-determined due to the intersection of multiple constraints imposed separately by different references in the function. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32502, "question": "&gt; It does not, because of typeclasses.\n\nIt actually is local because of type classes. Every function that uses overloaded behaviour has the type class constraint right in the signature. This is no worse than the set of methods attached to a particular parameter's class (or the interfaces it implements), and arguably better because it gives you a much more narrow set of functions to keep in mind.\n\n&gt; Basically, you have to resolve typeclasses in your head to know what a piece of code is really doing\n\nYou only really need to consider the type signature to know what a piece of code is really doing, particularly in Haskell that reifies effects in the type. Haskell is more local than any other language for this reason.", "aSentId": 32505, "answer": "Your notion of locality is up to the function. I'm taking at the statement level. \n\nWhile type classes do help to understand what a function is doing (somehow), it don't help to understand what a *statement* is doing. To really *know* what a function is doing in a statement, you need to know for which typeclass it's instantiated, and the signature of the function doesn't help anymore here.\n\nThis became especially true in code with a lot of typeclasses and a monad stack where you use combinators to query some nested monads. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32507, "question": "I have a longer response I want to make to this, but before I get time you'd probably enjoy looking at [Whiley](http://whiley.org/). Particularly the [Getting Started guide](http://whiley.org/download/GettingStartedWithWhiley.pdf).", "aSentId": 32508, "answer": "Oh I forgot about this language. I don't even remember how I ended up on its website. LtU maybe. Anyway, good reminder.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32514, "question": "New Data Show How Firms Like Infosys and Tata Abuse the H-1B Program", "aSentId": 32515, "answer": "H-1B is abused by these two firms and alike, and it is well-known among immigrant tech workers (me included). But on the other side of the coin are people like me who studied hard; took SATs (both 1 and 2 subject specific ones) and TOEFL; went through a lot of paperwork to obtain student visa from the US consulate; applied for legitimate US colleges; successfully completed four-year program in science/tech; and finally hope to apply for legitimate jobs in the US (simply because our home countries do not have jobs that can utilize our skills learned in the U.S. yet or we didn't come from wealthy families like some kids--e.g., a handful from China). \n\nIt is quite difficult to find companies that sponsor H-1B for legal immigrants like me. I'd say 8 out of 10 companies that I see in my weekly college's career center mail for tech jobs don't want to hire foreign workers (or they don't say and once they find out I'm a foreigner, they prefer not to hire me) because the process is very cumbersome. That's all good and I understand why there is such legal and bureaucratic barriers to make the visa sponsorship difficult (and am willing to work harder to go through that challenge). But it is saddening to to read comments that generalize all H-1B workers as cheap labor here and in Hacker News (not everyone, of course). Then, I realized a lot of my co-workers (or future co-workers) don't really like foreign tech workers, and are misunderstanding/mistaking us for cheap labor imported with illegal (or barely legal but shady) means by such shady corporations like Infosys and Tata (also, Accenture?).\n\nJust wanted to share this so that more become aware that it is not very easy as a foreign tech worker to get H-1B visa sponsorship at a tech firm in the US.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32516, "question": "H-1B is abused by these two firms and alike, and it is well-known among immigrant tech workers (me included). But on the other side of the coin are people like me who studied hard; took SATs (both 1 and 2 subject specific ones) and TOEFL; went through a lot of paperwork to obtain student visa from the US consulate; applied for legitimate US colleges; successfully completed four-year program in science/tech; and finally hope to apply for legitimate jobs in the US (simply because our home countries do not have jobs that can utilize our skills learned in the U.S. yet or we didn't come from wealthy families like some kids--e.g., a handful from China). \n\nIt is quite difficult to find companies that sponsor H-1B for legal immigrants like me. I'd say 8 out of 10 companies that I see in my weekly college's career center mail for tech jobs don't want to hire foreign workers (or they don't say and once they find out I'm a foreigner, they prefer not to hire me) because the process is very cumbersome. That's all good and I understand why there is such legal and bureaucratic barriers to make the visa sponsorship difficult (and am willing to work harder to go through that challenge). But it is saddening to to read comments that generalize all H-1B workers as cheap labor here and in Hacker News (not everyone, of course). Then, I realized a lot of my co-workers (or future co-workers) don't really like foreign tech workers, and are misunderstanding/mistaking us for cheap labor imported with illegal (or barely legal but shady) means by such shady corporations like Infosys and Tata (also, Accenture?).\n\nJust wanted to share this so that more become aware that it is not very easy as a foreign tech worker to get H-1B visa sponsorship at a tech firm in the US.\n\n", "aSentId": 32517, "answer": "Thanks for this. I left US about 18 months ago. The rampant discrimination you encounter while you're trying to secure H1b is something out of another world. I still remember how a company was really warm to me and willing to put me in a $200 a night hotel and paid for flights before the interview. When they learnt I was a H1B, it was like I farted in their faces. Suddenly I wasn't that cool to them anymore, sigh. If this isn't discrimination, I don't know what is. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32518, "question": "Thanks for this. I left US about 18 months ago. The rampant discrimination you encounter while you're trying to secure H1b is something out of another world. I still remember how a company was really warm to me and willing to put me in a $200 a night hotel and paid for flights before the interview. When they learnt I was a H1B, it was like I farted in their faces. Suddenly I wasn't that cool to them anymore, sigh. If this isn't discrimination, I don't know what is. ", "aSentId": 32519, "answer": "I have not had a similar experience (being denied at the last stage of interview). But I know a friend of mine last week went in for an interview for a summer internship at a pretty good company. The interview went very well and he answered all tech questions right. At the end, the HR asked him (as part of the background check, I believe) if he would need visa sponsorship if he were to be offered a permanent position after the internship and he answered yes. Then he never heard from the company afterwards.\n\nI do understand why the US government wants to protect its people's chance of employment and why the US population wants to restrict immigration (as long as it is not for farm work or other low-level, grind work) to ease the competition. All I ask for is their understanding that not all immigrants are cheating and that more companies declare it explicitly that they aren't interested in hiring foreigners up front as we submit our job applications.\n\nGetting into Google, MS, Amazon, Facebook, Apple and other major finance companies as a foreigner is just as hard as it is for any US citizen. I do believe these big companies actually don't care a lot about wage as much as they care about the actual talent/skill.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32520, "question": "I have not had a similar experience (being denied at the last stage of interview). But I know a friend of mine last week went in for an interview for a summer internship at a pretty good company. The interview went very well and he answered all tech questions right. At the end, the HR asked him (as part of the background check, I believe) if he would need visa sponsorship if he were to be offered a permanent position after the internship and he answered yes. Then he never heard from the company afterwards.\n\nI do understand why the US government wants to protect its people's chance of employment and why the US population wants to restrict immigration (as long as it is not for farm work or other low-level, grind work) to ease the competition. All I ask for is their understanding that not all immigrants are cheating and that more companies declare it explicitly that they aren't interested in hiring foreigners up front as we submit our job applications.\n\nGetting into Google, MS, Amazon, Facebook, Apple and other major finance companies as a foreigner is just as hard as it is for any US citizen. I do believe these big companies actually don't care a lot about wage as much as they care about the actual talent/skill.", "aSentId": 32521, "answer": "This is my problem with the illegal immigration argument. You are more likely to succeed by using illegal methods than going through legal channels. I had plenty of incentives to naturalize through fake marriages and other odd methods. But I chose not to because I wanted to follow the legal path. Well that path isn't as clear and you open yourself to exploitation. I wasn't paid for the week I worked and got fired after someone fucking up the paper work. Imagine walking back to your family after spending nearly $2000 when moving to a new job. Yeah, good luck finding a lawyer that will listen to your case.\n\nThe funny thing to me is being paid the same salary while living in my home country by American companies. None of the taxes go to the government and not a single one of us benefits in the long term. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32522, "question": "This is my problem with the illegal immigration argument. You are more likely to succeed by using illegal methods than going through legal channels. I had plenty of incentives to naturalize through fake marriages and other odd methods. But I chose not to because I wanted to follow the legal path. Well that path isn't as clear and you open yourself to exploitation. I wasn't paid for the week I worked and got fired after someone fucking up the paper work. Imagine walking back to your family after spending nearly $2000 when moving to a new job. Yeah, good luck finding a lawyer that will listen to your case.\n\nThe funny thing to me is being paid the same salary while living in my home country by American companies. None of the taxes go to the government and not a single one of us benefits in the long term. ", "aSentId": 32523, "answer": "That is so true. Illegal means are easier than the legal route unfortunately. That's why I'm torn on this amnesty thing pushed by Obama and other democrats. It's not that I don't sympathize with a lot of low-wage (mostly Hispanic) migrants, but I feel like it is such a shame if I could simply have chosen to be an illegal (undocumented, whatever) immigrants back in 2006 and now would most likely get an amnesty. Or like you said, pay a stranger citizen to fake marry me, and so on.\n\nI, like you, chose not to despite knowing these means exist. I hope I'm proven right eventually. I also feel the pain you had with the unfortunate experience of being laid off for the sake of paper work (always worried about my I-20s and OPTs etc.)\n\nYou are lucky to be able to find the company back in your home country. My country, Myanmar, isn't developed so I cannot find any job with my knowledge I learned in the US. I do dream of one day when I can go back there to settle and set up a company myself (but I need to save money for that first!) You're also right about the fact that all the taxes that I've paid, as an immigrant, so far in the US won't benefit me in the long or the short term (although I don't mind because I live in the US and uses its infrastructure--regardless of how bad it is as most Americans like to complain).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32524, "question": "That is so true. Illegal means are easier than the legal route unfortunately. That's why I'm torn on this amnesty thing pushed by Obama and other democrats. It's not that I don't sympathize with a lot of low-wage (mostly Hispanic) migrants, but I feel like it is such a shame if I could simply have chosen to be an illegal (undocumented, whatever) immigrants back in 2006 and now would most likely get an amnesty. Or like you said, pay a stranger citizen to fake marry me, and so on.\n\nI, like you, chose not to despite knowing these means exist. I hope I'm proven right eventually. I also feel the pain you had with the unfortunate experience of being laid off for the sake of paper work (always worried about my I-20s and OPTs etc.)\n\nYou are lucky to be able to find the company back in your home country. My country, Myanmar, isn't developed so I cannot find any job with my knowledge I learned in the US. I do dream of one day when I can go back there to settle and set up a company myself (but I need to save money for that first!) You're also right about the fact that all the taxes that I've paid, as an immigrant, so far in the US won't benefit me in the long or the short term (although I don't mind because I live in the US and uses its infrastructure--regardless of how bad it is as most Americans like to complain).", "aSentId": 32525, "answer": "Goodluck in your endeavors. Btw, I didn't find a company here. These are American companies that I work for remotely. So I don't pay any US taxes and no ones happy. \n\nWord of advise, ask whenever possible if they have experience with H1Bs. You don't want to waste time waiting for one only to hear they aren't sure what to do about it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32526, "question": "Goodluck in your endeavors. Btw, I didn't find a company here. These are American companies that I work for remotely. So I don't pay any US taxes and no ones happy. \n\nWord of advise, ask whenever possible if they have experience with H1Bs. You don't want to waste time waiting for one only to hear they aren't sure what to do about it. ", "aSentId": 32527, "answer": "Thank you for the advice! Wish you well the same in your ventures. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32520, "question": "I have not had a similar experience (being denied at the last stage of interview). But I know a friend of mine last week went in for an interview for a summer internship at a pretty good company. The interview went very well and he answered all tech questions right. At the end, the HR asked him (as part of the background check, I believe) if he would need visa sponsorship if he were to be offered a permanent position after the internship and he answered yes. Then he never heard from the company afterwards.\n\nI do understand why the US government wants to protect its people's chance of employment and why the US population wants to restrict immigration (as long as it is not for farm work or other low-level, grind work) to ease the competition. All I ask for is their understanding that not all immigrants are cheating and that more companies declare it explicitly that they aren't interested in hiring foreigners up front as we submit our job applications.\n\nGetting into Google, MS, Amazon, Facebook, Apple and other major finance companies as a foreigner is just as hard as it is for any US citizen. I do believe these big companies actually don't care a lot about wage as much as they care about the actual talent/skill.", "aSentId": 32529, "answer": "&gt; I do understand why the US government wants to protect its people's chance of employment and why the US population wants to restrict immigration\n\nIt doesn't protect anything. It just makes the US less competitive and increases costs to consumers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32518, "question": "Thanks for this. I left US about 18 months ago. The rampant discrimination you encounter while you're trying to secure H1b is something out of another world. I still remember how a company was really warm to me and willing to put me in a $200 a night hotel and paid for flights before the interview. When they learnt I was a H1B, it was like I farted in their faces. Suddenly I wasn't that cool to them anymore, sigh. If this isn't discrimination, I don't know what is. ", "aSentId": 32531, "answer": "Dealing with complications of employing H1B immigration issues puts a lot of companies off of hiring H1B.  It's not always something against you, but rather problems with the existing legal system.\n\nOther companies have 'mastered' those legal hurdles, and don't mind because they know they can underbid H1B because they know H1Bs have fewer options.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32532, "question": "Dealing with complications of employing H1B immigration issues puts a lot of companies off of hiring H1B.  It's not always something against you, but rather problems with the existing legal system.\n\nOther companies have 'mastered' those legal hurdles, and don't mind because they know they can underbid H1B because they know H1Bs have fewer options.", "aSentId": 32533, "answer": "Absolutely agree with you. But we also have to take a stand against it. No one is winning in this one. Government is losing money to outsourcing people. Good devs will always be employed but American companies if it means they'll be working remotely. Does that mean any of that money goes to IRS? Not a chance (I'm employed by several American companies and not a cent goes to US Gvt). I am more than willing (and so do many of the devs) to pay that money if it means I get to work in a community with other talented devs. \n\nThe only ones who mastered the legal hurdles are the ones who are exploiting it. Did you know that Tata, Infosys &amp; Cognizant control nearly 20% of the H1-B visas (for several years running). I mean, I'm all for immigration restrictions but this is no more than promoting gangs through drug wars. Only the few corrupt ones will be willing to work when you over-restrict certain industries. I'm not advising on open borders but if our reaction to this talk is \"blame the government\", then lets not complain when you find out you can't understand the email from your coworker.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32518, "question": "Thanks for this. I left US about 18 months ago. The rampant discrimination you encounter while you're trying to secure H1b is something out of another world. I still remember how a company was really warm to me and willing to put me in a $200 a night hotel and paid for flights before the interview. When they learnt I was a H1B, it was like I farted in their faces. Suddenly I wasn't that cool to them anymore, sigh. If this isn't discrimination, I don't know what is. ", "aSentId": 32535, "answer": "&gt; Suddenly I wasn't that cool to them anymore, sigh. If this isn't discrimination, I don't know what is.\n\nFirst, it is discrimination but not the bad kind.  Are you so awesome that a company couldn't find a similarly qualified American who can do the job as well but without the Kafkaesque H1-B process with which to contend? \n\nSecond, don't blame the company.  Blame the government for building in these perverse incentives and seemingly insurmountable bureaucratic barriers.\n\nYou don't, after all, blame the vultures on the side of the road for there being roadkill, do you?  Companies just respond to the incentives before them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32536, "question": "&gt; Suddenly I wasn't that cool to them anymore, sigh. If this isn't discrimination, I don't know what is.\n\nFirst, it is discrimination but not the bad kind.  Are you so awesome that a company couldn't find a similarly qualified American who can do the job as well but without the Kafkaesque H1-B process with which to contend? \n\nSecond, don't blame the company.  Blame the government for building in these perverse incentives and seemingly insurmountable bureaucratic barriers.\n\nYou don't, after all, blame the vultures on the side of the road for there being roadkill, do you?  Companies just respond to the incentives before them.", "aSentId": 32537, "answer": "Stop being a condescending dick. I'm not blaming anyone but to say that, to quote you, it's not the bad kind of discrimination is fucking asshole move. You haven't been 22 and being treated as a fuckin leper. Please go through an entire year without having any sort of support and have everyone blame you because of some archaic laws. I'm not blaming anyone but if cunts like you think you can explain being fired from a job 3 days in after spending $1500+ settling in because someone fucked up the paperwork, then please feel free to go fuck yourself. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32538, "question": "Stop being a condescending dick. I'm not blaming anyone but to say that, to quote you, it's not the bad kind of discrimination is fucking asshole move. You haven't been 22 and being treated as a fuckin leper. Please go through an entire year without having any sort of support and have everyone blame you because of some archaic laws. I'm not blaming anyone but if cunts like you think you can explain being fired from a job 3 days in after spending $1500+ settling in because someone fucked up the paperwork, then please feel free to go fuck yourself. ", "aSentId": 32539, "answer": "Blame the government. Yours probably does the same.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32540, "question": "Blame the government. Yours probably does the same.", "aSentId": 32541, "answer": "That's the naive way out. You get hang up on that stuff you haven't got much to gain. I'm working as a software dev and there's little I can complain about. \n\nPlus the gvt doesn't push for the laws without others agreeing with them. It's a never ending cycle of fuckery that no ones sure what they're really trying to do. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32542, "question": "That's the naive way out. You get hang up on that stuff you haven't got much to gain. I'm working as a software dev and there's little I can complain about. \n\nPlus the gvt doesn't push for the laws without others agreeing with them. It's a never ending cycle of fuckery that no ones sure what they're really trying to do. ", "aSentId": 32543, "answer": "&gt; That's the naive way out\n\nBecause it's the companies enforcing the visa system?\n\n&gt; Plus the gvt doesn't push for the laws without others agreeing with them\n\nDid you agree to them?\n\n&gt; It's a never ending cycle of fuckery that no ones sure what they're really trying to do.\n\nYou have captured the essence of government.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32538, "question": "Stop being a condescending dick. I'm not blaming anyone but to say that, to quote you, it's not the bad kind of discrimination is fucking asshole move. You haven't been 22 and being treated as a fuckin leper. Please go through an entire year without having any sort of support and have everyone blame you because of some archaic laws. I'm not blaming anyone but if cunts like you think you can explain being fired from a job 3 days in after spending $1500+ settling in because someone fucked up the paperwork, then please feel free to go fuck yourself. ", "aSentId": 32545, "answer": "&gt; You haven't been 22 and being treated as a fuckin leper.\n\nYou're right.  As a native born programmer I was issued a six-figure salary and a private office at the moment of my ascension from university.\n\nFuck you.  You're not the only one who's had it rough when starting out.  Imagine starting your career in a town where all the entry to middle level jobs are occupied by imported code coolies who are employed at the rate of 4 or 5 to what one native programmer would cost them.\n\nThe dam finally broke when the management teams at many of the large companies were fired for outsourcing / H1-B importing and generating garbage code for years.  This finally opened the field up to the locals.  Unfortunately, all of those managers were displaced to the smaller companies where they got up to their old tricks of putting locals out of work for the sake of kickbacks from Tata and saving $1.50 per hour in labor costs.\n\nGet over yourself.  The world ain't fair.  What happened to you is fucked up.  But I think your anger at the company is misplaced.  Your anger at me is terrifically misplaced.  The issues you've faced are just different than the issues I've faced. \n\nNot worse.  Just fucking different.\n\nIf you're actually good, you'll find a way.  I did.  If not, maybe this career ain't your cup of tea?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32546, "question": "&gt; You haven't been 22 and being treated as a fuckin leper.\n\nYou're right.  As a native born programmer I was issued a six-figure salary and a private office at the moment of my ascension from university.\n\nFuck you.  You're not the only one who's had it rough when starting out.  Imagine starting your career in a town where all the entry to middle level jobs are occupied by imported code coolies who are employed at the rate of 4 or 5 to what one native programmer would cost them.\n\nThe dam finally broke when the management teams at many of the large companies were fired for outsourcing / H1-B importing and generating garbage code for years.  This finally opened the field up to the locals.  Unfortunately, all of those managers were displaced to the smaller companies where they got up to their old tricks of putting locals out of work for the sake of kickbacks from Tata and saving $1.50 per hour in labor costs.\n\nGet over yourself.  The world ain't fair.  What happened to you is fucked up.  But I think your anger at the company is misplaced.  Your anger at me is terrifically misplaced.  The issues you've faced are just different than the issues I've faced. \n\nNot worse.  Just fucking different.\n\nIf you're actually good, you'll find a way.  I did.  If not, maybe this career ain't your cup of tea?", "aSentId": 32547, "answer": "Fuck you for thinking you teach me who to blame. Fuck you for thinking you can explain that there's a good vs bad kind. Here's our difference, I never tried to tell you how to feel about your hardships. That's where you crossed the line. I've said this in other replies that I don't blame anyone. It's not my nature. But does it change the fact that I was practically homeless and never paid my salary? Here's one thing you're missing.  I was no different from you. We went to the same classes, we went to the same parties, we went to the same dorms. Except one day you went to the interview room and I was chucked out. That's not blaming anyone but that's the truth. We have hardships but we are allowed to recover. But lets not pretend they are the same kind of hardships. You don't get it and you won't get it.\n\nPS: learn to understand that others can vent without diminishing your problem. I was in a thread about H1-b laws being abused. You felt the need to explain how I should feel. You should never do that, especially when you can never understand the full extent of how these laws affect people first hand. Also, you seem to use a just world fallacy. Lots of good devs are lost because we push them out with ridiculous laws. One of the best devs I know was on her way out because of lack of opportunities after moving back to her home country. It's not that she was not cut out for this work but because she was in a country where the industry is nonexistent. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32514, "question": "New Data Show How Firms Like Infosys and Tata Abuse the H-1B Program", "aSentId": 32549, "answer": "This sort of shit just astounds me. What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good? And why is it just IT that gets predominantly outsourced? How come we don't have big corporations running their sales and accounting departments out of India?\n\nI'm sick of IT workers being treated as second rate in the corporate world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32550, "question": "This sort of shit just astounds me. What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good? And why is it just IT that gets predominantly outsourced? How come we don't have big corporations running their sales and accounting departments out of India?\n\nI'm sick of IT workers being treated as second rate in the corporate world.", "aSentId": 32551, "answer": "&gt;What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good?\n\nProbably because the ones making the decision only care about how this will save XX dollars in the next quarter (or year). I doubt they view it from a longer-term perspective than that.\n\n&gt;And why is it just IT that gets predominantly outsourced? \n\nI'd hazard a guess that its two things: first, it seems like 'thats what other companies do' (ie: standard practice). Second, it seems like most corporations view day-to-day IT as some sort of necessary evil that can be contracted out to the lowest bidder.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32552, "question": "&gt;What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good?\n\nProbably because the ones making the decision only care about how this will save XX dollars in the next quarter (or year). I doubt they view it from a longer-term perspective than that.\n\n&gt;And why is it just IT that gets predominantly outsourced? \n\nI'd hazard a guess that its two things: first, it seems like 'thats what other companies do' (ie: standard practice). Second, it seems like most corporations view day-to-day IT as some sort of necessary evil that can be contracted out to the lowest bidder.", "aSentId": 32553, "answer": "This is basically it. To expand on it, they get a very vague and general mandate from \"the higher-ups\" that they need to cut back spending for the next quarter, so they go for the easy targets.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32552, "question": "&gt;What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good?\n\nProbably because the ones making the decision only care about how this will save XX dollars in the next quarter (or year). I doubt they view it from a longer-term perspective than that.\n\n&gt;And why is it just IT that gets predominantly outsourced? \n\nI'd hazard a guess that its two things: first, it seems like 'thats what other companies do' (ie: standard practice). Second, it seems like most corporations view day-to-day IT as some sort of necessary evil that can be contracted out to the lowest bidder.", "aSentId": 32555, "answer": "&gt; Probably because the ones making the decision only care about how this will save XX dollars in the next quarter (or year). I doubt they view it from a longer-term perspective than that.\n\nYou're probably right -- and that's probably why a lot of projects are written in languages which are unsuitable/subpar for the problems being addressed.\n\nWe can see an illustration of this with the dropping of Ada in US military projects [e.g. F-35] citing the lack of developers while [essentially] ignoring that (a) there's already a *lot* of code/libraries for airframes in Ada [owned by said companies], (b) the language is better-suited for high-reliability software, and (c) ***that new software engineers can be trained***. -- Item `(c)` is particularly disturbing, because it reveals a mindset that views training as a pure-cost instead of as an investment, and it ties directly into you \"*they're only concerned about next quarter's profit*\" statement.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32556, "question": "&gt; Probably because the ones making the decision only care about how this will save XX dollars in the next quarter (or year). I doubt they view it from a longer-term perspective than that.\n\nYou're probably right -- and that's probably why a lot of projects are written in languages which are unsuitable/subpar for the problems being addressed.\n\nWe can see an illustration of this with the dropping of Ada in US military projects [e.g. F-35] citing the lack of developers while [essentially] ignoring that (a) there's already a *lot* of code/libraries for airframes in Ada [owned by said companies], (b) the language is better-suited for high-reliability software, and (c) ***that new software engineers can be trained***. -- Item `(c)` is particularly disturbing, because it reveals a mindset that views training as a pure-cost instead of as an investment, and it ties directly into you \"*they're only concerned about next quarter's profit*\" statement.", "aSentId": 32557, "answer": "New software engineers can be trained, of course, but not many are going to want to go through that training to learn a language which really only gives them one career path. If Ada was more widespread in use, it'd be a different story.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32558, "question": "New software engineers can be trained, of course, but not many are going to want to go through that training to learn a language which really only gives them one career path. If Ada was more widespread in use, it'd be a different story.", "aSentId": 32559, "answer": "Actually given a chance to pick up Ada for a job, hell yeah I would take it, that carreer path is full of stability and good pay.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32556, "question": "&gt; Probably because the ones making the decision only care about how this will save XX dollars in the next quarter (or year). I doubt they view it from a longer-term perspective than that.\n\nYou're probably right -- and that's probably why a lot of projects are written in languages which are unsuitable/subpar for the problems being addressed.\n\nWe can see an illustration of this with the dropping of Ada in US military projects [e.g. F-35] citing the lack of developers while [essentially] ignoring that (a) there's already a *lot* of code/libraries for airframes in Ada [owned by said companies], (b) the language is better-suited for high-reliability software, and (c) ***that new software engineers can be trained***. -- Item `(c)` is particularly disturbing, because it reveals a mindset that views training as a pure-cost instead of as an investment, and it ties directly into you \"*they're only concerned about next quarter's profit*\" statement.", "aSentId": 32561, "answer": "I like how you repurposed the discussion as \"Why Doesn't Anybody Understand How Awesome Ada Is???\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32562, "question": "I like how you repurposed the discussion as \"Why Doesn't Anybody Understand How Awesome Ada Is???\"", "aSentId": 32563, "answer": "He does this everywhere. He's obsessed with Ada. \n\nIf you ask why, he'll give you the same phone number or social security number example he always uses. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32564, "question": "He does this everywhere. He's obsessed with Ada. \n\nIf you ask why, he'll give you the same phone number or social security number example he always uses. ", "aSentId": 32565, "answer": "Not quite true; I'd be more than happy to talk theory.  \nThe reason that those are particularly nice examples is because they're small and easily understandable -- to really get into some of Ada's niceties I'd have to write multiple packages and reddit isn't particularly amiable to *that*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32562, "question": "I like how you repurposed the discussion as \"Why Doesn't Anybody Understand How Awesome Ada Is???\"", "aSentId": 32567, "answer": "The example does seem particularly relevant. But yes, it is pretty funny.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32562, "question": "I like how you repurposed the discussion as \"Why Doesn't Anybody Understand How Awesome Ada Is???\"", "aSentId": 32569, "answer": "To be fair, it seems like OneWingedShark is a single issue commenter.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32550, "question": "This sort of shit just astounds me. What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good? And why is it just IT that gets predominantly outsourced? How come we don't have big corporations running their sales and accounting departments out of India?\n\nI'm sick of IT workers being treated as second rate in the corporate world.", "aSentId": 32571, "answer": "I was a team lead for a fairly small outsourcing team in China from 2006 - 2008. There are several problems with the whole idea of software outsourcing in general.  \n1. You are forced to focus on cost saving so you can bid lower than others on the projects.  \n2. Because of 1, you will never get the good enough local talent to properly get the job done.  \n3. Attrition rate is extremely high because nobody feel like they owned their work and therefore did not care for it.  \n4. This is on top of the language and culture barrier that may form between various \"actors\" in a software project which is obvious and I won't go into detail on this.  \n\nHowever, this doesn't mean it never work. For example, Microsoft has pretty sizable teams in India and China (about 2k+ in China alone and I am not including manufacturing). These teams are different from traditional software outsourcing because they own everything they do from customer relations to planning, tooling, and support. Super-performers are obviously invited to Redmond and given H1Bs. So it's both a talent incubation and product outsourcing initiative.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32572, "question": "I was a team lead for a fairly small outsourcing team in China from 2006 - 2008. There are several problems with the whole idea of software outsourcing in general.  \n1. You are forced to focus on cost saving so you can bid lower than others on the projects.  \n2. Because of 1, you will never get the good enough local talent to properly get the job done.  \n3. Attrition rate is extremely high because nobody feel like they owned their work and therefore did not care for it.  \n4. This is on top of the language and culture barrier that may form between various \"actors\" in a software project which is obvious and I won't go into detail on this.  \n\nHowever, this doesn't mean it never work. For example, Microsoft has pretty sizable teams in India and China (about 2k+ in China alone and I am not including manufacturing). These teams are different from traditional software outsourcing because they own everything they do from customer relations to planning, tooling, and support. Super-performers are obviously invited to Redmond and given H1Bs. So it's both a talent incubation and product outsourcing initiative.  ", "aSentId": 32573, "answer": "I work for MSFT in Redmond, there's a *lot* of Indians who came here after working on the Hyderabad campus for several years. This includes many of the smartest developers and managers I've ever met.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32574, "question": "I work for MSFT in Redmond, there's a *lot* of Indians who came here after working on the Hyderabad campus for several years. This includes many of the smartest developers and managers I've ever met.", "aSentId": 32575, "answer": "Generally, for large software companies with offices around the world, I suspect that the ones coming to the US on H1-B or similar visas are doing so because they want to be in the US. If it was just a matter of hiring them, they'd be hired in places like Hyderabad. Most of the big Silicon Valley companies are the same way. If there's smart people that are worth hiring, it's probably worth having an office there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32550, "question": "This sort of shit just astounds me. What makes large corporations think that outsourcing IT- and development-related work overseas to reduce costs is doing anybody any good? And why is it just IT that gets predominantly outsourced? How come we don't have big corporations running their sales and accounting departments out of India?\n\nI'm sick of IT workers being treated as second rate in the corporate world.", "aSentId": 32577, "answer": "I work at an outsourcing firm that makes apps. Though I have only a few years of experience I believe I can shed some light on things.\n\nI see lots of apps outsourced here by western startups and I often wonder why they're outsourcing their core competency , the app that is going to be the center of their customer experience to someone outside the company. But we're really really cheap. Even cheaper than the usual big 5 outsourcing firms. Developers here are paid $500 a month and testers are paid $250 a month. They are then forced to sign agreements that prevent them from changing jobs for upto three years and some are exploited to the max.\n\nI saw an app being developed here , and although they finally delivered the app , the core UI of the app was something that hadn't been done before and the developers here couldn't make it work 100 % smoothly. Mind you , they are not that bad , but they simply don't have the depth of the experience to write something like that from scratch , using things like Open GL if necessary. So it feels very janky and I wouldn't use that app if the core UI was so janky.\n\nThe other interesting part is that the best developers don't code. Yep you heard that right they don't code. Because after working for 10 years you tend to ask for pay that is more reasonable say , $1000 - $2000 a month , and no client is willing to pay that much for developers here as these companies have painted themselves into a corner bidding for shit work and bargain basement prices. They're good but the company thinks its better to use them as managers to talk to the clients and project confidence so that they don't realize that the developers who are actually developing their product may not be as knowledgeable. So you have the guy who could actually do a kickass job on your project managing 4 other projects and coordinating meetings while managing 4 groups of underlings who are struggling day and night to get the work done.\n\nMy advice would be that you need to evaluate the kind of work you outsource. We can totally do the kind of things that have already been done before , our developers aren't that bad. But if you're looking to develop something truly new and innovative , be careful when the Indian company promises you that they can do it. In fact they have no fucking idea. I'm being forced to R&amp;D on some project that is being outsourced to us by a top Fortune 500 technology company because they thought we might have the expertise.We have no fucking clue and I'm supposed to get it done and soon and nobody here has done it before.\n\nIf you want to get good results out of Indian companies you need to first insist that you need to talk to the developers directly. It might seem like a lot of work but it's the only way you can ensure that you have competent people who understand your product developing your app. Maybe even conduct a little test and put only the good ones in your project so they can't pull the good ol' outsourcing switcheroo.\n\nThere is always a perverse incentive at work in outsourcing. At the end of the day it's not \"our\" software. In fact we couldn't give a shit after being exploited for years. So noone is truly going to go the extra mile. Noone is going to put in the extra effort to ensure that all animations run at 60 fps and the app starts up in less than a second because that's not in the fucking contract.\n\nAlso you need to get the work of audited , including the code and maybe even hire external testers to make sure it passes muster.\n\nOr take the trouble to hire your own offshore team , value them and give them opportunities to improve and you'll be surprised at how good Indian devs can be.\n\nI hope I can get outta here soon. \nSkadoosh.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32578, "question": "I work at an outsourcing firm that makes apps. Though I have only a few years of experience I believe I can shed some light on things.\n\nI see lots of apps outsourced here by western startups and I often wonder why they're outsourcing their core competency , the app that is going to be the center of their customer experience to someone outside the company. But we're really really cheap. Even cheaper than the usual big 5 outsourcing firms. Developers here are paid $500 a month and testers are paid $250 a month. They are then forced to sign agreements that prevent them from changing jobs for upto three years and some are exploited to the max.\n\nI saw an app being developed here , and although they finally delivered the app , the core UI of the app was something that hadn't been done before and the developers here couldn't make it work 100 % smoothly. Mind you , they are not that bad , but they simply don't have the depth of the experience to write something like that from scratch , using things like Open GL if necessary. So it feels very janky and I wouldn't use that app if the core UI was so janky.\n\nThe other interesting part is that the best developers don't code. Yep you heard that right they don't code. Because after working for 10 years you tend to ask for pay that is more reasonable say , $1000 - $2000 a month , and no client is willing to pay that much for developers here as these companies have painted themselves into a corner bidding for shit work and bargain basement prices. They're good but the company thinks its better to use them as managers to talk to the clients and project confidence so that they don't realize that the developers who are actually developing their product may not be as knowledgeable. So you have the guy who could actually do a kickass job on your project managing 4 other projects and coordinating meetings while managing 4 groups of underlings who are struggling day and night to get the work done.\n\nMy advice would be that you need to evaluate the kind of work you outsource. We can totally do the kind of things that have already been done before , our developers aren't that bad. But if you're looking to develop something truly new and innovative , be careful when the Indian company promises you that they can do it. In fact they have no fucking idea. I'm being forced to R&amp;D on some project that is being outsourced to us by a top Fortune 500 technology company because they thought we might have the expertise.We have no fucking clue and I'm supposed to get it done and soon and nobody here has done it before.\n\nIf you want to get good results out of Indian companies you need to first insist that you need to talk to the developers directly. It might seem like a lot of work but it's the only way you can ensure that you have competent people who understand your product developing your app. Maybe even conduct a little test and put only the good ones in your project so they can't pull the good ol' outsourcing switcheroo.\n\nThere is always a perverse incentive at work in outsourcing. At the end of the day it's not \"our\" software. In fact we couldn't give a shit after being exploited for years. So noone is truly going to go the extra mile. Noone is going to put in the extra effort to ensure that all animations run at 60 fps and the app starts up in less than a second because that's not in the fucking contract.\n\nAlso you need to get the work of audited , including the code and maybe even hire external testers to make sure it passes muster.\n\nOr take the trouble to hire your own offshore team , value them and give them opportunities to improve and you'll be surprised at how good Indian devs can be.\n\nI hope I can get outta here soon. \nSkadoosh.", "aSentId": 32579, "answer": "&gt;the company thinks its better to use them as managers to talk to the clients and project confidence so that they don't realize that the developers who are actually developing their product may not be as knowledgeable\n\nActually, that's leap and bounds better than what you see with management here, which is that it doesn't know jack shit about the processes nor about the technology they manage. They seem to know about managing people though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32584, "question": "Stopping shit like this is why unions were invented. They give us employees the tools we need to stand up to management. In a union scenario, before the contracts were even signed the IT Department would have gone on strike, the company would have had nobody to run anything and the whole thing would have gone away.", "aSentId": 32585, "answer": "Unfortunately, unions also level wages across all skill levels.  It simply wouldn't fly in most dev shops.\n\nWhy should I get paid less than I could or some else get paid more than they should just because we threw our lots in together under a collective bargaining contract?\n\nI'm not exactly pro-union, but I can definitely see the benefit for some types of workers.  But for me and my career path?  I can see a union and its arcane rules about seniority and whatnot only holding back the best and brightest in STEM fields while protecting the less able.\n\nI've done quite well for myself because, in addition to being good at my job, I'm also good at negotiating.  A union would would seriously screw that up for me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32586, "question": "Unfortunately, unions also level wages across all skill levels.  It simply wouldn't fly in most dev shops.\n\nWhy should I get paid less than I could or some else get paid more than they should just because we threw our lots in together under a collective bargaining contract?\n\nI'm not exactly pro-union, but I can definitely see the benefit for some types of workers.  But for me and my career path?  I can see a union and its arcane rules about seniority and whatnot only holding back the best and brightest in STEM fields while protecting the less able.\n\nI've done quite well for myself because, in addition to being good at my job, I'm also good at negotiating.  A union would would seriously screw that up for me.", "aSentId": 32587, "answer": "Your skill set would not have saved you from the scenario above. They replaced skilled workers with workers who didn't know what they were doing. As for pay, in CBAs, the union promises to deliver a given set of production per person. Each person puts in only that amount, regardless of skill, for a given amount of pay. It's a problem of bean counters only know how to count beans. They're not really keen on the other bits.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32584, "question": "Stopping shit like this is why unions were invented. They give us employees the tools we need to stand up to management. In a union scenario, before the contracts were even signed the IT Department would have gone on strike, the company would have had nobody to run anything and the whole thing would have gone away.", "aSentId": 32589, "answer": "I've seen in Hollywood movies how horrible unions are, so go back to Russia, you pinky.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32590, "question": "I've seen in Hollywood movies how horrible unions are, so go back to Russia, you pinky.", "aSentId": 32591, "answer": "Finally some quality humor in this thread!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32584, "question": "Stopping shit like this is why unions were invented. They give us employees the tools we need to stand up to management. In a union scenario, before the contracts were even signed the IT Department would have gone on strike, the company would have had nobody to run anything and the whole thing would have gone away.", "aSentId": 32593, "answer": "Unions are better for situations where work is interchangeable and measurable, e.g. gears stamped per hour.\n\nIn software, most of those situations are already automated, and the work done by humans is harder to compare and very situational.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32596, "question": "Because accountants were smart enough to demand a certification in order to do a job in a certain country. So are doctors, lawyers certain Engineering and trades etc. It is simple protectionism which works, there is no \"open source\" in other fields, the opposite.", "aSentId": 32597, "answer": "True. Unfortunately, as consumers we all have to pay through the nose for these certified professionals when they could easily be undercut or outsourced. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32601, "question": "What do H-1B visas have to do with outsourcing?", "aSentId": 32602, "answer": "There are claims by politicians and lobbyists that H-1B visas are a way to get the world's best and brightest into America and eventually these best and brightest would become full members of U.S society thus making our country a more diverse and intelligent one.  However, as the article this thread linked to states, in actual practice less than 1% of H-1B visa holders ever even get the chance to apply for a greencard and become invested in the american dream. \n\nBasically, many tech companies are simply importing cheaper labor that is either similarly skilled and educated or slightly LESS skilled/educated than the americans they are replacing and to add insult to injury the tech companies treat the cheaper h-1B employees as a revolving door of cheap labor, rarely allowing them the chance to move up in the company and simply terminating their visas at the end of their projects upon which time the workers go back to their own home countries.  The jobs, while being performed on American soil are being done by people who will likely never be American citizens and who will simply take the money they made back home with them to another country when their contract is up. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32601, "question": "What do H-1B visas have to do with outsourcing?", "aSentId": 32604, "answer": "&gt; What do H-1B visas have to do with outsourcing?\n\nSome people applying for the visas will be people who graduated from US universities, but many are foreign hires. Many of those foreign hires got their experience, in many cases experience that would have gone to entry/mid level US workers, because something was outsourced. \n\nI don't mean to sound disrespectful, but there is not exactly tons of innovation coming out of India, China, Russia...Most tech innovation still comes from the US. \n\nAlso one of the biggest reasons a lot of companies use for needing more visas is a lack of qualified individuals in the US. In some cases that comes as the result of aggressive outsourcing 10+ years ago that shifted knowledge overseas. Much of that knowledge transfer was a one way street. For example, the company I work for has an India team. A major component of the product was developed in India and no effort has been made to do a real knowledge transfer despite members of the India team coming over several times. As we acquire more customers who want that functionality I'm sure my company will push for more visas with the claim that not enough people domestically have the skills they need.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32611, "question": "What if these large corporations actually believe that outsource workers can do the same/a better job than american workers, and cheaper too. I haven't seen anyone debunk that in the thread. Everyone just seems to assume it's subpar. Can someone tell me why?", "aSentId": 32612, "answer": "Having worked with Indians, there are a number of factors that get missed by management:\n\n1) That approximately 12 hour time difference? Yeah, it's pretty detrimental to productivity. People over there are wrapping up their evening when people here are just waking up. What's talked about doesn't go into immediate effect as a result and gets forgotten. Decisions are made here during the day after the meeting and you have to wait til the next morning to present them. In the mean time, you've lost a day because in India they're working on the old spec.\n\n2) Frequently you run into people who were helped through a certification process and don't know a damned thing about what they are talking about. I worked with a \"DBA\" briefly (he was rapidly fired) who couldn't fix a very basic query. I looked at it and it took me all of 30 seconds to fix it.\n\n3) For one project, the company outsourced the QA of one of our projects on a trial basis. When the costs were actually added up, it cost nearly twice as much as our entire QA department staff for the same time period.\n\nThat isn't to say I haven't worked with Indians who don't know their shit. It's just a factor of #2 especially occurring. People are out for the buck and don't care about the long-term.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32514, "question": "New Data Show How Firms Like Infosys and Tata Abuse the H-1B Program", "aSentId": 32614, "answer": "This is nothing new, I work for a major financial firm and they started doing this about 3 years ago. And that is already considered very late to the game.\n\nI thought this is mostly common knowledge by now.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32615, "question": "This is nothing new, I work for a major financial firm and they started doing this about 3 years ago. And that is already considered very late to the game.\n\nI thought this is mostly common knowledge by now.", "aSentId": 32616, "answer": "Yeah I think most people in the software industry prolly do realize this. \n\nI think the numbers on how many of the H1B sponsored have only a bachelor's degree was really illustrates how much of a joke it has become... especially considering the quality of some (not all) of the universities in India... like the skillsets of the people they are sponsoring for the H1B can't be found over here.  \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32617, "question": "Yeah I think most people in the software industry prolly do realize this. \n\nI think the numbers on how many of the H1B sponsored have only a bachelor's degree was really illustrates how much of a joke it has become... especially considering the quality of some (not all) of the universities in India... like the skillsets of the people they are sponsoring for the H1B can't be found over here.  \n", "aSentId": 32618, "answer": "I work with a guy over from India who supposedly as a masters degree from a university in India...\n\nGuy does *not* have the skillset or knowledge that reflects that. At all. He's basically a Cisco guru, and that's about it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32619, "question": "I work with a guy over from India who supposedly as a masters degree from a university in India...\n\nGuy does *not* have the skillset or knowledge that reflects that. At all. He's basically a Cisco guru, and that's about it.", "aSentId": 32620, "answer": "Some of the universities over there can be a joke.. Guy I worked with was telling me how he went to the local market &amp; bought his capstone project from a vendor there... and a few other people bought/turned in the exact same work ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32617, "question": "Yeah I think most people in the software industry prolly do realize this. \n\nI think the numbers on how many of the H1B sponsored have only a bachelor's degree was really illustrates how much of a joke it has become... especially considering the quality of some (not all) of the universities in India... like the skillsets of the people they are sponsoring for the H1B can't be found over here.  \n", "aSentId": 32622, "answer": "How is that possible, I thought you need a masters degree minimum ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32624, "question": "As an H-1B worker, I really wish the USCIS started actually enforcing the requirements it is supposed to impose on H-1B workers (such as: being highly qualified and being paid same or larger wage as equivalently qualified American workers). Because of shit like this, the H-1B random lottery is dominated by poorly skilled and underpaid workers, while really highly qualified and extremely valuable people have trouble getting through.", "aSentId": 32625, "answer": "Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field.\nI think such arrangement would filter low-paid and under-qualified workers", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32626, "question": "Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field.\nI think such arrangement would filter low-paid and under-qualified workers", "aSentId": 32627, "answer": "The US policy is the same, but it is basically not enforced.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32628, "question": "The US policy is the same, but it is basically not enforced.", "aSentId": 32629, "answer": "H-1B? I don't think so. As far as I know you only need to prove prevailing wage for employment-based immigration. Not sure about H-1B, but prevailing wage is likely not required.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32626, "question": "Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field.\nI think such arrangement would filter low-paid and under-qualified workers", "aSentId": 32631, "answer": "By \"medium\" do you mean average or median?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32626, "question": "Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field.\nI think such arrangement would filter low-paid and under-qualified workers", "aSentId": 32633, "answer": "&gt; Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field. I think such arrangement would filter low-paid and under-qualified workers\n\nWhy discriminate on low-aid workers? Do you want companies to pay more or less for labor? Because in the former case, as a consumer you'll end up paying more for whatever that company produces.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32634, "question": "&gt; Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field. I think such arrangement would filter low-paid and under-qualified workers\n\nWhy discriminate on low-aid workers? Do you want companies to pay more or less for labor? Because in the former case, as a consumer you'll end up paying more for whatever that company produces.", "aSentId": 32635, "answer": "If the company truly cannot find the talent they need inside the country, then it does stand to reason that they should be paying above average wages because that talent they need is rare. If they can find it in the country, then they can pay market wages because the talent is not rare.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32636, "question": "If the company truly cannot find the talent they need inside the country, then it does stand to reason that they should be paying above average wages because that talent they need is rare. If they can find it in the country, then they can pay market wages because the talent is not rare.", "aSentId": 32637, "answer": "&gt; If the company truly cannot find the talent they need inside the country, then it does stand to reason that they should be paying above average wages because that talent they need is rare\n\nIf it cannot find the talent inside the country, then it does stand to reason that an above average wage won't change the fact that it cannot find the talent.\n\n&gt; If they can find it in the country, then they can pay market wages because the talent is not rare.\n\nA company will pay whatever an employee is willing to accept. There are no enforceable market wages - only what two parties are willing to contract at.\n\nIf a company can find cheaper quality labor abroad, then it is judicious to make sure of it. That is why most everything around you is made abroad, because you as a consumer want increased quality at lower prices.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32634, "question": "&gt; Japan has a migration policy I consider very appealing. Foreign workers are allowed to work in Japan only if they are paid more than medium salary in their field. I think such arrangement would filter low-paid and under-qualified workers\n\nWhy discriminate on low-aid workers? Do you want companies to pay more or less for labor? Because in the former case, as a consumer you'll end up paying more for whatever that company produces.", "aSentId": 32639, "answer": "&gt;Because in the former case, as a consumer you'll end up paying more for whatever that company produces.\n\nThat's not always the case. As we see from Walmart, savings to the business by they from labor or product costs are not always passed along to the consumer. Just because a company has to pay more for labor does not mean they are not still highly profitable. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32624, "question": "As an H-1B worker, I really wish the USCIS started actually enforcing the requirements it is supposed to impose on H-1B workers (such as: being highly qualified and being paid same or larger wage as equivalently qualified American workers). Because of shit like this, the H-1B random lottery is dominated by poorly skilled and underpaid workers, while really highly qualified and extremely valuable people have trouble getting through.", "aSentId": 32641, "answer": "Any ideas how can we bring attention of uscis, politicians, employers?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32644, "question": "The H1-Bs are all about cheap labor. Get tax breaks and either send jobs overseas to save costs or hire people here for 1/3rd the cost. \n\nThis isn't about getting quality talent into the US. There's quite a bit of talent here in the States and a lot of immigrants also come in as student F1 visas and eventually want H1-Bs but they have to compete with the other H1-Bs too. \n\nThe system isn't setup well but it works somehow. Still, there's a disproportionate # coming from India which companies like these 2 exploit for profit. \n\nThey're just \"body shops\" promising the moon and chance of amazing life here while herding them here into a controlled situation and dangling the green card carrot till they've extracted all they can from them till they eventually give up and many go home. ", "aSentId": 32645, "answer": "_Those_ H1Bs are about cheap labor. Let's be fair to the good folks who get paid normal wage for good work. I know some people who were in the US for school, are quite competent, and have trouble getting H1Bs due to these kinds of companies... it really sucks. I'm in favor of a system where anyone graduating from an accredited university gets x years of being allowed to work in the US (no sponsor needed) and then can apply and get a green card.\n\nPerhaps a solution would be to simply have a minimum H1B wage. If you need talent so bad you can't find it here, pay an inflation adjusted $130k at minimum, calculated as, for example, 10% above some calculated average across SF and NYC.\n\nOr let H1Bs be an auction. Every year, x number get auctioned off and are valid for the next 5 years for the holder. Outsourcer consultant offers $60k... company that actually needs talent offers $120k and gets priority. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32646, "question": "_Those_ H1Bs are about cheap labor. Let's be fair to the good folks who get paid normal wage for good work. I know some people who were in the US for school, are quite competent, and have trouble getting H1Bs due to these kinds of companies... it really sucks. I'm in favor of a system where anyone graduating from an accredited university gets x years of being allowed to work in the US (no sponsor needed) and then can apply and get a green card.\n\nPerhaps a solution would be to simply have a minimum H1B wage. If you need talent so bad you can't find it here, pay an inflation adjusted $130k at minimum, calculated as, for example, 10% above some calculated average across SF and NYC.\n\nOr let H1Bs be an auction. Every year, x number get auctioned off and are valid for the next 5 years for the holder. Outsourcer consultant offers $60k... company that actually needs talent offers $120k and gets priority. ", "aSentId": 32647, "answer": "Or they could just order the H-1B applications by salary, giving priority to the highest salaries. Since it's assumed that high salaries are due to some rare or exceptional expertise, shops like Tata, Infosys or Wipro will not be able to get applicants that undercut US workers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32648, "question": "Or they could just order the H-1B applications by salary, giving priority to the highest salaries. Since it's assumed that high salaries are due to some rare or exceptional expertise, shops like Tata, Infosys or Wipro will not be able to get applicants that undercut US workers.", "aSentId": 32649, "answer": "Oh yah, I meant auction in the sense that the money goes to the employee; the actual visa is a fixed cost and goes to the government. Oops.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32648, "question": "Or they could just order the H-1B applications by salary, giving priority to the highest salaries. Since it's assumed that high salaries are due to some rare or exceptional expertise, shops like Tata, Infosys or Wipro will not be able to get applicants that undercut US workers.", "aSentId": 32651, "answer": "There is a simpler way. Simply allow H1-B workers to switch jobs in the US. Right now you cannot switch to another company if you are on H1-B. Allowing this lateral move will force companies to pay higher wage for their H1-B workers without much effort in enforcement. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32652, "question": "There is a simpler way. Simply allow H1-B workers to switch jobs in the US. Right now you cannot switch to another company if you are on H1-B. Allowing this lateral move will force companies to pay higher wage for their H1-B workers without much effort in enforcement. ", "aSentId": 32653, "answer": "You can transfer to other companies, but most people don't realize that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32654, "question": "You can transfer to other companies, but most people don't realize that.", "aSentId": 32655, "answer": "The other company would have to take over the visa. And this can take time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32656, "question": "The other company would have to take over the visa. And this can take time.", "aSentId": 32657, "answer": "Yes you're right that the other company has to be willing to take on the visa. However, it's my understanding that the employee can transfer as soon as the application is entered - it doesn't have to be approved like a new H1B.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32654, "question": "You can transfer to other companies, but most people don't realize that.", "aSentId": 32659, "answer": "Correct - I did that myself and it was super easy, because H-1B transfers can work immediately after the application is filed (rather than on Oct 1), and do not have to go through the random lottery. The whole process takes a few weeks. Because of this lower risk, this is also much easier for the target company. I don't know why people hired by sweatshops don't do this - maybe they are of such poor skill that other companies just don't want them.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32660, "question": "Correct - I did that myself and it was super easy, because H-1B transfers can work immediately after the application is filed (rather than on Oct 1), and do not have to go through the random lottery. The whole process takes a few weeks. Because of this lower risk, this is also much easier for the target company. I don't know why people hired by sweatshops don't do this - maybe they are of such poor skill that other companies just don't want them.", "aSentId": 32661, "answer": "I think it's partly a case of not making it well known. It's better for the cheap companies that their employees don't understand their rights.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32662, "question": "I think it's partly a case of not making it well known. It's better for the cheap companies that their employees don't understand their rights.", "aSentId": 32663, "answer": "Maybe someone should rent a billboard truck and drive it past these companies offices a couple times a week.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32646, "question": "_Those_ H1Bs are about cheap labor. Let's be fair to the good folks who get paid normal wage for good work. I know some people who were in the US for school, are quite competent, and have trouble getting H1Bs due to these kinds of companies... it really sucks. I'm in favor of a system where anyone graduating from an accredited university gets x years of being allowed to work in the US (no sponsor needed) and then can apply and get a green card.\n\nPerhaps a solution would be to simply have a minimum H1B wage. If you need talent so bad you can't find it here, pay an inflation adjusted $130k at minimum, calculated as, for example, 10% above some calculated average across SF and NYC.\n\nOr let H1Bs be an auction. Every year, x number get auctioned off and are valid for the next 5 years for the holder. Outsourcer consultant offers $60k... company that actually needs talent offers $120k and gets priority. ", "aSentId": 32665, "answer": "This seems like a really good idea. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32667, "question": "They ARE mentioning how much they are paying employees, but they are not mentioning how much they are charging companies for them. \n\nThat money they are saving mentioned in the article? It's probably going to the company. It's how consulting companies work. They get paid, take a cut (sometimes 20% conservatively, can go way farther than that). ", "aSentId": 32668, "answer": "That, and they're often more expensive than having an in-house team, unless the client is small. They'll farm out at $100/hr... a company hiring someone full-time can pay less in wage + benefits + expenses to get better work. If your project is too small to make hiring worth it, sure, farm it out; or if the expertise is too narrow. But for these jobs, I wouldn't be surprised if due to hour inflation (missed deadlines, and so on) it was a lot more expensive.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32667, "question": "They ARE mentioning how much they are paying employees, but they are not mentioning how much they are charging companies for them. \n\nThat money they are saving mentioned in the article? It's probably going to the company. It's how consulting companies work. They get paid, take a cut (sometimes 20% conservatively, can go way farther than that). ", "aSentId": 32670, "answer": "But in reality, that is how any company work really. They bill x amount to a project, give developer y amount and pocket the rest. All of these companies are sales driven at the end.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32672, "question": "As a person who went to grad school in the US and then trying to fight tooth and nail to get companies to hire me because of the H1B restriction, this pain is real. So I have to find an employer who will sponsor my H1B(there aren't as many as we think and the being discriminated in the hiring process to then waiting patiently for 8 years to get a permanent green card, the wait is long, the hours are brutal and the pay is abysmally low. ", "aSentId": 32673, "answer": "&gt; and the pay is abysmally low\n\nThat's what many people are saying, but others say that the pay has the be the \"prevailing wage\".  How specifically are you being paid the prevailing wage, but have the pay be abysmally low?  (That's an honest question.  What tricks are people playing to accomplish this?)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32674, "question": "&gt; and the pay is abysmally low\n\nThat's what many people are saying, but others say that the pay has the be the \"prevailing wage\".  How specifically are you being paid the prevailing wage, but have the pay be abysmally low?  (That's an honest question.  What tricks are people playing to accomplish this?)", "aSentId": 32675, "answer": "It seems like their are two types of H1-Bs:\n\n1. Legitimate full-time employee that are paid normal wages and work the same hours as everybody else.\n2. \"Consultants\" employed by the likes of Infosys. That is, they are FTE of Infosys but Infosys is a consultancy firm that other companies contract with. If the consultants live in East-Buttfuck, Minessota, they can be paid prevailing wages of East-Buttfuck, Minessota and the companies located in high-wage Silicon Valley can contract with Infosys to get these lower paid consultants.\n\nThe foaming-at-the-mouth debaters believe that 100% of H1-Bs are the second type.\n\nI was the first type like many of my co-workers and, as far as I know, I've never personally met someone of the second type. Like you, I'm a bit surprised by /u/yellowdart comment of \"brutal hours\" and \"abysmally low wages\". That may only be because I've never witnessed it but I suspect a degree of exaggeration.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32679, "question": "Surprise.  Not.\n\nJust auto-convert an H1-B to a green card in a year.  Problem solved.\n\nOutsourcing won't be cheap anymore, so it will stop.", "aSentId": 32680, "answer": "That just creates a different problem!\n\nNot only does it mess with other immigration policies, but it will not stop the flood of unqualified workers... The same sleazy companies will continue to operate, except they'll make money as green-card factories!\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32682, "question": "&gt;evidence makes it abundantly clear that the H-1B visa is being used to displace U.S. workers employed in decent-paying middle class STEM jobs\n\nNo, it is used to raise profit of consultancy firms. \n\nDisplacement is a consequence.\n\nGet your logic straight.", "aSentId": 32683, "answer": "Displacement is not a consequence it is a mechanism of achieving the goal of raising profits. Your logic is not good either.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32682, "question": "&gt;evidence makes it abundantly clear that the H-1B visa is being used to displace U.S. workers employed in decent-paying middle class STEM jobs\n\nNo, it is used to raise profit of consultancy firms. \n\nDisplacement is a consequence.\n\nGet your logic straight.", "aSentId": 32685, "answer": "That's the exact same thought worded differently, it reaches the same conclusion with either expression.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32686, "question": "That's the exact same thought worded differently, it reaches the same conclusion with either expression.", "aSentId": 32687, "answer": "\"Being used to displace\" is a statement about intent. \"Being used... Displaces\" is a statement about consequences. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32689, "question": "Are you all blind? This article is bonkers. The guy takes nationwide stats and then in the last column sneakily insert wages in LA, CA. Dumb clickbait.", "aSentId": 32690, "answer": "It's specifically referring to a company (SCE) located in LA who is employing the consulting services listed, and pointing out how much they are saving. It's a legitimate observation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32691, "question": "It's specifically referring to a company (SCE) located in LA who is employing the consulting services listed, and pointing out how much they are saving. It's a legitimate observation.", "aSentId": 32692, "answer": "And Google has full-time employees in Oklahoma that are paid less than full-time employees in Silicon Valley.\n\nIt's a legitimate observation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32698, "question": "Comparing File system Performance In Virtual machines", "aSentId": 32699, "answer": "I've seen some bad benchmarks, but this really takes the cake. The only thing that seems to be tested here is whether or not a particular filesystem (or virtual memory system) caches its data. There's absolutely no I/O involved in 90% of the cases here. There's no mention of any statistical analysis at all, leaving me guessing about the significance of the results.\n\nFurthermore, I can't think of a scenario where the sequential read or write performance of a single 64kb file actually matters. A more useful scenario would be testing the read latency of thousands of 64kb files, mimicking a more realistic workload in for example web servers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32700, "question": "I've seen some bad benchmarks, but this really takes the cake. The only thing that seems to be tested here is whether or not a particular filesystem (or virtual memory system) caches its data. There's absolutely no I/O involved in 90% of the cases here. There's no mention of any statistical analysis at all, leaving me guessing about the significance of the results.\n\nFurthermore, I can't think of a scenario where the sequential read or write performance of a single 64kb file actually matters. A more useful scenario would be testing the read latency of thousands of 64kb files, mimicking a more realistic workload in for example web servers.", "aSentId": 32701, "answer": " &gt; Furthermore, I can't think of a scenario where the sequential read or write performance of a single 64kb file actually matters. \n\nThe author is trying to isolate the effect of on-drive cache, I believe.  For testing actual filesystem performance, a better approach would have been to create the filesystem in a contiguous block of memory - or simply make use of a profiling tool.\n\n&gt; read latency of thousands of 64kb files, mimicking a more realistic workload in for example web servers.\n\nThat's only 64MB.  The whole thing should be in memory if you're that I/O limited.\n\nI/O benchmarks are largely meaningless anyway, unless your problem application is a database whose indices will fit in memory, but tables won't.  There are very few disk I/O bound workloads that couldn't be fixed by redeployment and making better use of available RAM.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32698, "question": "Comparing File system Performance In Virtual machines", "aSentId": 32703, "answer": "Really nothing new here. Everyone knows that vboxsf is literally the  *last*  thing you want to use.\n\nUnfortunately it is the most popular, unfortunately the VirtualBox developers show no sign of changing that (in general the development seems to be halted to the outside world).\n\nThe blog post was written by the primary author of vagrant. The vagrant docs should really have a big red warning in their \"synced folder\" docs about the performance degradation to expect.\n\nIf you have the slightest chance to set up your project so syncing into the machine is feasible (there are many tricks on the 'net besides manually doing it; heck even SSH deployment from your editor on the host could be an option)  **by all means do it**. This just can't be stressed enough.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32704, "question": "Really nothing new here. Everyone knows that vboxsf is literally the  *last*  thing you want to use.\n\nUnfortunately it is the most popular, unfortunately the VirtualBox developers show no sign of changing that (in general the development seems to be halted to the outside world).\n\nThe blog post was written by the primary author of vagrant. The vagrant docs should really have a big red warning in their \"synced folder\" docs about the performance degradation to expect.\n\nIf you have the slightest chance to set up your project so syncing into the machine is feasible (there are many tricks on the 'net besides manually doing it; heck even SSH deployment from your editor on the host could be an option)  **by all means do it**. This just can't be stressed enough.", "aSentId": 32705, "answer": "&gt; If you have the slightest chance to set up your project so syncing into the machine is feasible\n\nUnfortunately I've found this to be an absolute pain on Windows hosts. The [ember-cli](http://www.ember-cli.com/) guide goes into detail about workarounds for using it within Vagrant on a Windows host but even then they acknowledge it's all a bit fucked. From npm wanting to do symlinking that isn't really an option on an NTFS backed share through to the 260 char path limit tripping you up unless you map using the //?/ syntax that vagrant doesn't actually support properly.\n\nI've had to settle of hosting the share on the vagrant client and mapping into it from the host. Works ok but then i have to tell IntelliJ to ignore monitoring as many folders as possible (ignore tmp, build, etc.) as any recompile would lockup my machine for a full minute otherwise since the drive access is so slow and the mapping doesn't detect file changes nicely (IntelliJ resorts to polling).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32707, "question": "IPython 3 is released!", "aSentId": 32708, "answer": "Twist: It *only* supports Python 3 (I kid)\n\nSeriously, congrats to this team. I got to see Fernando speak a while back. It's hard for that kind of vision and enthusiasm to not be infectious.\n\nThis is also the last release of IPython in this format. After IPy3, [IPython becomes just one of the moons orbiting Jupyter](http://jupyter.org/). As a user of Python and R, and a tinkerer of Julia, I'm excited to see IPython's evolution into Jupyter.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32709, "question": "Twist: It *only* supports Python 3 (I kid)\n\nSeriously, congrats to this team. I got to see Fernando speak a while back. It's hard for that kind of vision and enthusiasm to not be infectious.\n\nThis is also the last release of IPython in this format. After IPy3, [IPython becomes just one of the moons orbiting Jupyter](http://jupyter.org/). As a user of Python and R, and a tinkerer of Julia, I'm excited to see IPython's evolution into Jupyter.", "aSentId": 32710, "answer": "So, stupid question: it does support 2.7.x?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32711, "question": "So, stupid question: it does support 2.7.x?", "aSentId": 32712, "answer": "yes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32711, "question": "So, stupid question: it does support 2.7.x?", "aSentId": 32714, "answer": "Sure does, thank goodness, because I'm basically unwilling to jump through the virtualenv or whatever hoops to use both Python 2.7 and Python 3 on Mac OS X Yosemite.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32715, "question": "Sure does, thank goodness, because I'm basically unwilling to jump through the virtualenv or whatever hoops to use both Python 2.7 and Python 3 on Mac OS X Yosemite.", "aSentId": 32716, "answer": "    $ brew install python3    \n    [...]\n    $ python3 --version\n    Python 3.4.2\n    $ python --version\n    Python 2.7.9", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32717, "question": "    $ brew install python3    \n    [...]\n    $ python3 --version\n    Python 3.4.2\n    $ python --version\n    Python 2.7.9", "aSentId": 32718, "answer": "Yeah. I don't use Homebrew, and don't really want distinct invocations for \"python\" vs. \"python3\" either.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32719, "question": "Yeah. I don't use Homebrew, and don't really want distinct invocations for \"python\" vs. \"python3\" either.", "aSentId": 32720, "answer": "Those...aren't hoops. Everybody does separate invocation, even Linux.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32721, "question": "Those...aren't hoops. Everybody does separate invocation, even Linux.", "aSentId": 32722, "answer": "Yes and no. What I'm thinking of is something like Nix [generations](http://nixos.org/nix/manual/).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32719, "question": "Yeah. I don't use Homebrew, and don't really want distinct invocations for \"python\" vs. \"python3\" either.", "aSentId": 32724, "answer": "I'm a bit confused, sorry, how different ones if the invocation isn't different? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32725, "question": "I'm a bit confused, sorry, how different ones if the invocation isn't different? ", "aSentId": 32726, "answer": "Good question! I suppose there'd have to be a mechanism for determining what modules you were going to use and which version of Python they were compatible with, then running the right version. Obviously, this isn't possible in general, since you don't know in advance what modules you'll use.\n\nIn the end, I really want [Nix](http://nixos.org/nix) everywhere.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32715, "question": "Sure does, thank goodness, because I'm basically unwilling to jump through the virtualenv or whatever hoops to use both Python 2.7 and Python 3 on Mac OS X Yosemite.", "aSentId": 32728, "answer": "You can't just install both python and python3 on OS X?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32729, "question": "You can't just install both python and python3 on OS X?", "aSentId": 32730, "answer": "Agreed, you can brew install python2 and 3 on os x, it works like a charm. I'm even on 3.5a. You can even install IPython using Python3 and use python2 kernel and vice versa. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32729, "question": "You can't just install both python and python3 on OS X?", "aSentId": 32732, "answer": "Actually, I think you probably can. But then there are probably issues around having \"python\" vs. \"python3\" be how you invoke whichever version. There hasn't been enough motivation for me to move to Python 3 to try very hard, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32733, "question": "Actually, I think you probably can. But then there are probably issues around having \"python\" vs. \"python3\" be how you invoke whichever version. There hasn't been enough motivation for me to move to Python 3 to try very hard, though.", "aSentId": 32734, "answer": "Having both python3 and python2 on my (linux) computer works fine. As long as \"python\" remains what it always has been then having a python3 command on the system as well won't cause problems. \n\nThey keep all their libraries and stuff totally separate as well (although I guess a sufficiently stupid package could break that).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32735, "question": "Having both python3 and python2 on my (linux) computer works fine. As long as \"python\" remains what it always has been then having a python3 command on the system as well won't cause problems. \n\nThey keep all their libraries and stuff totally separate as well (although I guess a sufficiently stupid package could break that).", "aSentId": 32736, "answer": "It works on arch just fine, where python3 is just called python.\n\nJust as long as you're consistent.\n\nWhenever I write a python script that needs a shebang line, I just specify which version I need. /usr/bin/env python3 or /usr/bin/env python2. No portability issues yet.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32735, "question": "Having both python3 and python2 on my (linux) computer works fine. As long as \"python\" remains what it always has been then having a python3 command on the system as well won't cause problems. \n\nThey keep all their libraries and stuff totally separate as well (although I guess a sufficiently stupid package could break that).", "aSentId": 32738, "answer": "&gt; As long as \"python\" remains what it always has been then having a python3 command on the system as well won't cause problems.\n\nYeah, that's really the question: what assumptions other tooling makes about how your tree is set up.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32733, "question": "Actually, I think you probably can. But then there are probably issues around having \"python\" vs. \"python3\" be how you invoke whichever version. There hasn't been enough motivation for me to move to Python 3 to try very hard, though.", "aSentId": 32740, "answer": "I'm, awkwardly, learning both side by side. It's....strange. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32715, "question": "Sure does, thank goodness, because I'm basically unwilling to jump through the virtualenv or whatever hoops to use both Python 2.7 and Python 3 on Mac OS X Yosemite.", "aSentId": 32742, "answer": "Cool. I'm having a different problem on Mac OS though where line overwrites as you scroll through history screw up. \n\nHappens on both Python and iPython REPL, as well as ipdb. Happens running both inside and outside a virtualenv too. \n\nLooks like the libedit substitution issue, but I've got readline installed via brew with Python compiled against it, and gnureadline installed via pip as an iPython dependency. Importing readline and checking __doc__ shows the gnu library. \n\nIt's very frustrating. Maybe this version will fix it, but I'm completely baffled otherwise. That it happens for standard REPL makes me thing something is just globally wrong. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32743, "question": "Cool. I'm having a different problem on Mac OS though where line overwrites as you scroll through history screw up. \n\nHappens on both Python and iPython REPL, as well as ipdb. Happens running both inside and outside a virtualenv too. \n\nLooks like the libedit substitution issue, but I've got readline installed via brew with Python compiled against it, and gnureadline installed via pip as an iPython dependency. Importing readline and checking __doc__ shows the gnu library. \n\nIt's very frustrating. Maybe this version will fix it, but I'm completely baffled otherwise. That it happens for standard REPL makes me thing something is just globally wrong. ", "aSentId": 32744, "answer": "And one more reason I won't be going back to Mac anytime soon. Why do they have to change so much random crap! Staying with linux where things just work.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32745, "question": "And one more reason I won't be going back to Mac anytime soon. Why do they have to change so much random crap! Staying with linux where things just work.", "aSentId": 32746, "answer": "I'm not sure I've ever seen \"Linux\" and \"just work\" in the same sentence before.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32745, "question": "And one more reason I won't be going back to Mac anytime soon. Why do they have to change so much random crap! Staying with linux where things just work.", "aSentId": 32748, "answer": "For the most part, I've had good luck sticking with homebrew stuff. This has been a notable exception. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32745, "question": "And one more reason I won't be going back to Mac anytime soon. Why do they have to change so much random crap! Staying with linux where things just work.", "aSentId": 32750, "answer": "What about iPython devs supporting Mac &amp; Windows? Tons of enterprise developers just don't have access to good tools because complex install issues", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32751, "question": "What about iPython devs supporting Mac &amp; Windows? Tons of enterprise developers just don't have access to good tools because complex install issues", "aSentId": 32752, "answer": "Are you kidding me ? Have you even tried installing on Windows ? on Mac ?\n\nThe IPython team jump through hoops just to get things working on all platform windows included, and 95% of the code written is done by the top 6 contributors, a third of which where still doing that on free time until recently.\n\nWhy do developer in enterprise and enterprise don't  just gave something back to open source, or develop a real install tool ?\nYou know like entreprise that use it internally and make several M, \ngave 50k, or something ? Even just F$%^ng debug yourself on your window machine and send a patch upstream.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32753, "question": "Are you kidding me ? Have you even tried installing on Windows ? on Mac ?\n\nThe IPython team jump through hoops just to get things working on all platform windows included, and 95% of the code written is done by the top 6 contributors, a third of which where still doing that on free time until recently.\n\nWhy do developer in enterprise and enterprise don't  just gave something back to open source, or develop a real install tool ?\nYou know like entreprise that use it internally and make several M, \ngave 50k, or something ? Even just F$%^ng debug yourself on your window machine and send a patch upstream.", "aSentId": 32754, "answer": "Wow... don't get so angry, I wasn't complaining about iPython devs, they do a great effort to keep things working. It was just a suggestion, not all enterprises are \"evil\", from my experience most of them contribute to open source projects.\n\nI don't use windows, but setup on Mac was a bit painful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32743, "question": "Cool. I'm having a different problem on Mac OS though where line overwrites as you scroll through history screw up. \n\nHappens on both Python and iPython REPL, as well as ipdb. Happens running both inside and outside a virtualenv too. \n\nLooks like the libedit substitution issue, but I've got readline installed via brew with Python compiled against it, and gnureadline installed via pip as an iPython dependency. Importing readline and checking __doc__ shows the gnu library. \n\nIt's very frustrating. Maybe this version will fix it, but I'm completely baffled otherwise. That it happens for standard REPL makes me thing something is just globally wrong. ", "aSentId": 32756, "answer": "I agree with your diagnosis. Good luck!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32757, "question": "I agree with your diagnosis. Good luck!", "aSentId": 32758, "answer": "Thanks! If it is libedit, I have no idea how it's snuck in, though! I thought I had it banished from the chain. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32707, "question": "IPython 3 is released!", "aSentId": 32760, "answer": "Can you help me understand what this project is trying accomplish?\n\nIt looks like a lot of work has gone into this, but I don't really understand the goal of the project, or what problem it's trying to solve. I tried reading their front page but I hit my limit of ambiguous comp-sci buzzwords. Also, their example links just lead to lists of developer documentation.\n\n~~My best guess is that it's a collection of server/client implementations, for a general purpose web service that offers to run live code and serve its results to the browser, or other clients.~~\n\nEDIT:\n\nThank you for your replies. Terms like \"interactive computing\", \"shells\", \"architecture\", are just too broad to be helpful to me without a straightforward example, use case, or comparison (like the python REPL). I may just be overexposed to Web 2.0 marketing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32761, "question": "Can you help me understand what this project is trying accomplish?\n\nIt looks like a lot of work has gone into this, but I don't really understand the goal of the project, or what problem it's trying to solve. I tried reading their front page but I hit my limit of ambiguous comp-sci buzzwords. Also, their example links just lead to lists of developer documentation.\n\n~~My best guess is that it's a collection of server/client implementations, for a general purpose web service that offers to run live code and serve its results to the browser, or other clients.~~\n\nEDIT:\n\nThank you for your replies. Terms like \"interactive computing\", \"shells\", \"architecture\", are just too broad to be helpful to me without a straightforward example, use case, or comparison (like the python REPL). I may just be overexposed to Web 2.0 marketing.", "aSentId": 32762, "answer": "It started out as an alternative to the default python interpreter - allowing for tab completion, more digestible diagnostic information, syntax highlighting (evident when you want to search through an object's source code in the interpreter), and things like that.\n\nThey've been able to enhance the project to the point where there is a core Kernel to the system, which they've plugged different front ends into. There's still the Terminal prompt, and now there's a QT Terminal, and a web notebook. You can have these different front ends connect to different running kernels remotely as well, which is pretty nifty imo.\n\n[edit: fixed some spelling errors]", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32763, "question": "It started out as an alternative to the default python interpreter - allowing for tab completion, more digestible diagnostic information, syntax highlighting (evident when you want to search through an object's source code in the interpreter), and things like that.\n\nThey've been able to enhance the project to the point where there is a core Kernel to the system, which they've plugged different front ends into. There's still the Terminal prompt, and now there's a QT Terminal, and a web notebook. You can have these different front ends connect to different running kernels remotely as well, which is pretty nifty imo.\n\n[edit: fixed some spelling errors]", "aSentId": 32764, "answer": "Also included in \"things like that\" is a number of *nix-terminal-style commands to navigate your filesystem. I all too often wanted to move after I'd already set up what I was working on, or check a directory's contents for the script's output. iPython has `cd` and `ls` with familiar functionality, but for the regular shell you'd have to `from os import chdir, listdir`.\n\nThese and tab complete are easily the biggest reasons I use iPython. It's just so much nicer.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32763, "question": "It started out as an alternative to the default python interpreter - allowing for tab completion, more digestible diagnostic information, syntax highlighting (evident when you want to search through an object's source code in the interpreter), and things like that.\n\nThey've been able to enhance the project to the point where there is a core Kernel to the system, which they've plugged different front ends into. There's still the Terminal prompt, and now there's a QT Terminal, and a web notebook. You can have these different front ends connect to different running kernels remotely as well, which is pretty nifty imo.\n\n[edit: fixed some spelling errors]", "aSentId": 32766, "answer": "Thank you, that helps me to understand. I kept seeing the phrase \"interactive-computing\", but didn't understand what they meant by it without specific examples. (At least none I could find.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32767, "question": "Thank you, that helps me to understand. I kept seeing the phrase \"interactive-computing\", but didn't understand what they meant by it without specific examples. (At least none I could find.)", "aSentId": 32768, "answer": "Also people can create their own \"kernels\" (read: backend) as long as they speak the IPython protocol - which is just their message formats to do various things like execute code, which happen over ZeroMQ sockets.\n\nOne instance of this is the IBM Spark Kernel, which tries to offer a low barrier of entry into cluster computing on Apache Spark through the IPython Notebook (and uses the Scala Spark APIs, so you write Scala instead of Python). Although they also provide a client that can be used by any application wanting to run Spark jobs.\n\nhttps://github.com/ibm-et/spark-kernel", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32767, "question": "Thank you, that helps me to understand. I kept seeing the phrase \"interactive-computing\", but didn't understand what they meant by it without specific examples. (At least none I could find.)", "aSentId": 32770, "answer": "Here\u2019s an example use-case of IPython:\n\n    ipython\n    Python 2.7.9 (default, Dec 16 2014, 09:28:03) \n    Type \"copyright\", \"credits\" or \"license\" for more information.\n    \n    IPython 3.0.0 -- An enhanced Interactive Python.\n    ?         -&gt; Introduction and overview of IPython's features.\n    %quickref -&gt; Quick reference.\n    help      -&gt; Python's own help system.\n    object?   -&gt; Details about 'object', use 'object??' for extra details.\n    \n    In [1]: cd ~/Dropbox/Scripts/Python-Practice/\n    /Users/zach/Dropbox/Scripts/Python-Practice\n    \n    In [2]: ls\n    bnfparse.py*          fibonacci.py          fibonacci.pyc         finite_state_machine/ menu_calculator.py\n    \n    In [3]: import inspect, fibonacci\n    \n    In [4]: print inspect.getsource(fibonacci)\n    def naive_fibonacci(n):\n        assert n &gt;= 0, 'n must be non-negative'\n        if n in {0, 1}:\n            return n\n        else:\n            return sum(map(naive_fibonacci, (n-1, n-2)))\n    \n    def fibonacci_stream(k1, k2):\n        assert all(k &gt;=0 for k in (k1, k2)), 'k1 and k2 must be non-negative'\n        \n        yield k1, fibonacci_stream(k2, k1 + k2)\n    \n    def fibonacci(n):\n        assert n &gt;= 0, 'n must be non-negative'\n        tail = fibonacci_stream(0, 1)\n        for i in range(n+1):\n            head, tail = tail.next()\n            yield head\n    \n    def main():\n        n = 2 ** 5\n        print list(fibonacci(n))\n    \n    if __name__ == '__main__':\n        main()\n    \n    \n    In [5]: n = 2 ** 5\n    \n    In [6]: n\n    Out[6]: 32\n    \n    In [7]: naive_fibonacci(n)\n    ---------------------------------------------------------------------------\n    NameError                                 Traceback (most recent call last)\n    &lt;ipython-input-7-9d23907010d0&gt; in &lt;module&gt;()\n    ----&gt; 1 naive_fibonacci(n)\n    \n    NameError: name 'naive_fibonacci' is not defined\n    \n    In [8]: from fibonacci import *\n    \n    In [9]: naive_fibonacci(n)\n    Out[9]: 2178309\n    \n    In [10]: fibonacci(n)\n    Out[10]: &lt;generator object fibonacci at 0x10e218c80&gt;\n    \n    In [11]: list(fibonacci(n))\n    Out[11]: \n    [0,\n     1,\n     1,\n     2,\n     3,\n     5,\n     8,\n     13,\n     21,\n     34,\n     55,\n     89,\n     144,\n     233,\n     377,\n     610,\n     987,\n     1597,\n     2584,\n     4181,\n     6765,\n     10946,\n     17711,\n     28657,\n     46368,\n     75025,\n     121393,\n     196418,\n     317811,\n     514229,\n     832040,\n     1346269,\n     2178309]\n    \n    In [12]: %prun naive_fibonacci(n)\n             14098311 function calls (3524581 primitive calls) in 7.525 seconds\n    \n       Ordered by: internal time\n    \n       ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n    7049155/1    4.026    0.000    7.525    7.525 fibonacci.py:1(naive_fibonacci)\n    3524577/1    2.962    0.000    7.525    7.525 {map}\n      3524577    0.537    0.000    0.537    0.000 {sum}\n            1    0.000    0.000    7.525    7.525 &lt;string&gt;:1(&lt;module&gt;)\n            1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n     \n    In [13]: %prun fibonacci(n)\n             3 function calls in 0.000 seconds\n    \n       Ordered by: internal time\n    \n       ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n            1    0.000    0.000    0.000    0.000 &lt;string&gt;:1(&lt;module&gt;)\n            1    0.000    0.000    0.000    0.000 fibonacci.py:13(fibonacci)\n            1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n     \n    In [14]:", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32771, "question": "Here\u2019s an example use-case of IPython:\n\n    ipython\n    Python 2.7.9 (default, Dec 16 2014, 09:28:03) \n    Type \"copyright\", \"credits\" or \"license\" for more information.\n    \n    IPython 3.0.0 -- An enhanced Interactive Python.\n    ?         -&gt; Introduction and overview of IPython's features.\n    %quickref -&gt; Quick reference.\n    help      -&gt; Python's own help system.\n    object?   -&gt; Details about 'object', use 'object??' for extra details.\n    \n    In [1]: cd ~/Dropbox/Scripts/Python-Practice/\n    /Users/zach/Dropbox/Scripts/Python-Practice\n    \n    In [2]: ls\n    bnfparse.py*          fibonacci.py          fibonacci.pyc         finite_state_machine/ menu_calculator.py\n    \n    In [3]: import inspect, fibonacci\n    \n    In [4]: print inspect.getsource(fibonacci)\n    def naive_fibonacci(n):\n        assert n &gt;= 0, 'n must be non-negative'\n        if n in {0, 1}:\n            return n\n        else:\n            return sum(map(naive_fibonacci, (n-1, n-2)))\n    \n    def fibonacci_stream(k1, k2):\n        assert all(k &gt;=0 for k in (k1, k2)), 'k1 and k2 must be non-negative'\n        \n        yield k1, fibonacci_stream(k2, k1 + k2)\n    \n    def fibonacci(n):\n        assert n &gt;= 0, 'n must be non-negative'\n        tail = fibonacci_stream(0, 1)\n        for i in range(n+1):\n            head, tail = tail.next()\n            yield head\n    \n    def main():\n        n = 2 ** 5\n        print list(fibonacci(n))\n    \n    if __name__ == '__main__':\n        main()\n    \n    \n    In [5]: n = 2 ** 5\n    \n    In [6]: n\n    Out[6]: 32\n    \n    In [7]: naive_fibonacci(n)\n    ---------------------------------------------------------------------------\n    NameError                                 Traceback (most recent call last)\n    &lt;ipython-input-7-9d23907010d0&gt; in &lt;module&gt;()\n    ----&gt; 1 naive_fibonacci(n)\n    \n    NameError: name 'naive_fibonacci' is not defined\n    \n    In [8]: from fibonacci import *\n    \n    In [9]: naive_fibonacci(n)\n    Out[9]: 2178309\n    \n    In [10]: fibonacci(n)\n    Out[10]: &lt;generator object fibonacci at 0x10e218c80&gt;\n    \n    In [11]: list(fibonacci(n))\n    Out[11]: \n    [0,\n     1,\n     1,\n     2,\n     3,\n     5,\n     8,\n     13,\n     21,\n     34,\n     55,\n     89,\n     144,\n     233,\n     377,\n     610,\n     987,\n     1597,\n     2584,\n     4181,\n     6765,\n     10946,\n     17711,\n     28657,\n     46368,\n     75025,\n     121393,\n     196418,\n     317811,\n     514229,\n     832040,\n     1346269,\n     2178309]\n    \n    In [12]: %prun naive_fibonacci(n)\n             14098311 function calls (3524581 primitive calls) in 7.525 seconds\n    \n       Ordered by: internal time\n    \n       ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n    7049155/1    4.026    0.000    7.525    7.525 fibonacci.py:1(naive_fibonacci)\n    3524577/1    2.962    0.000    7.525    7.525 {map}\n      3524577    0.537    0.000    0.537    0.000 {sum}\n            1    0.000    0.000    7.525    7.525 &lt;string&gt;:1(&lt;module&gt;)\n            1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n     \n    In [13]: %prun fibonacci(n)\n             3 function calls in 0.000 seconds\n    \n       Ordered by: internal time\n    \n       ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n            1    0.000    0.000    0.000    0.000 &lt;string&gt;:1(&lt;module&gt;)\n            1    0.000    0.000    0.000    0.000 fibonacci.py:13(fibonacci)\n            1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\n     \n    In [14]:", "aSentId": 32772, "answer": "Better than using inspect, just use `??`: `run_fib??` and it'll spit out the source too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32767, "question": "Thank you, that helps me to understand. I kept seeing the phrase \"interactive-computing\", but didn't understand what they meant by it without specific examples. (At least none I could find.)", "aSentId": 32774, "answer": "No problem man, glad to help :)\n\nAlso, please don't call Python's Interpreter a REPL &gt;.&lt; it technically isn't, it's just an interpreter, and I'm a stickler for that kinda stuff haha.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32775, "question": "No problem man, glad to help :)\n\nAlso, please don't call Python's Interpreter a REPL &gt;.&lt; it technically isn't, it's just an interpreter, and I'm a stickler for that kinda stuff haha.", "aSentId": 32776, "answer": "How not?\n\nI mean, there's a difference between a REPL and an interpreter, but python's REPL (where it gives the &gt;&gt;&gt; prompts) seems pretty REPL-y to me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32777, "question": "How not?\n\nI mean, there's a difference between a REPL and an interpreter, but python's REPL (where it gives the &gt;&gt;&gt; prompts) seems pretty REPL-y to me.", "aSentId": 32778, "answer": "Bash seem REPL-y for pretty much the same reasons.\n\nFor me, the main reason why is because of the 'eval' step. Python's interpreter doesn't actually evaluate the lines that you enter into it with its eval function. This is the difference between it and something like a Lisp.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32779, "question": "Bash seem REPL-y for pretty much the same reasons.\n\nFor me, the main reason why is because of the 'eval' step. Python's interpreter doesn't actually evaluate the lines that you enter into it with its eval function. This is the difference between it and something like a Lisp.", "aSentId": 32780, "answer": "meh, can easily be read-execute-print-loop", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32761, "question": "Can you help me understand what this project is trying accomplish?\n\nIt looks like a lot of work has gone into this, but I don't really understand the goal of the project, or what problem it's trying to solve. I tried reading their front page but I hit my limit of ambiguous comp-sci buzzwords. Also, their example links just lead to lists of developer documentation.\n\n~~My best guess is that it's a collection of server/client implementations, for a general purpose web service that offers to run live code and serve its results to the browser, or other clients.~~\n\nEDIT:\n\nThank you for your replies. Terms like \"interactive computing\", \"shells\", \"architecture\", are just too broad to be helpful to me without a straightforward example, use case, or comparison (like the python REPL). I may just be overexposed to Web 2.0 marketing.", "aSentId": 32782, "answer": "The real breakthrough is the notebook mode in my opinion. It offers a Mathematica like experience, which includes inline graphics, rich formatted output, support for markdown and html comments etc... It's a great way to gather both theory, scripts, documentation,  and outputs in the same place. That makes it a very powerful way of saving your brain-state while working on different projects. It's super useful in scientific research because it basically gives a re-editable history of your past work. It's also giving a very cool new way to publish research articles as directly editable/executable. There are already a few books available on github based on ipython notebook. It's not totally there yet, but there are some very cool collaborative aspects that are under development in collaboration with Google.\n\nThat said it doesn't totally replace an IDE. But I think that it complement it as a parallel prototyping and note keeping platform. My workflow is basically to try to hack it first in ipython, write the tests, write the code modification, and when all the tests pass, move everything in the IDE to implement feature in the library.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32761, "question": "Can you help me understand what this project is trying accomplish?\n\nIt looks like a lot of work has gone into this, but I don't really understand the goal of the project, or what problem it's trying to solve. I tried reading their front page but I hit my limit of ambiguous comp-sci buzzwords. Also, their example links just lead to lists of developer documentation.\n\n~~My best guess is that it's a collection of server/client implementations, for a general purpose web service that offers to run live code and serve its results to the browser, or other clients.~~\n\nEDIT:\n\nThank you for your replies. Terms like \"interactive computing\", \"shells\", \"architecture\", are just too broad to be helpful to me without a straightforward example, use case, or comparison (like the python REPL). I may just be overexposed to Web 2.0 marketing.", "aSentId": 32784, "answer": "If you've used Python's REPL, you probably realized how bare it is. It really is just a read-execute-print loop. IPython's interactive shell gives you something a little nicer to work with. There's tab completion, history that sticks around between sessions, and some other goodies. The GUI version will show graphs from e.g. matplotlib right inline with the rest of what you're doing\n\n It also makes it a bit easier to do GUI stuff from within a console. Event loops like most GUIs use don't play nice with REPLs, but IPython has a way to make it workable.\n\nIPython is also embeddable, meaning you can easily bring it up from within a Python application. I have this in my IRC bot. You can give it a command, and it opens an IPython console, so that you can mess around with a live bot, with the connection active and everything, without having to write/reload/test over and over.\n\nI'm not familiar with their Notebook or parallelization stuff, but it looks like they're a sharable online version of the console and some sort of task queue (with the same interactivity that they put in their console), respectively. I also didn't realize that all of this is built to support more languages than just Python, which is interesting.\n\nTL;DR: your tolerance for buzzwords is far too low.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32785, "question": "If you've used Python's REPL, you probably realized how bare it is. It really is just a read-execute-print loop. IPython's interactive shell gives you something a little nicer to work with. There's tab completion, history that sticks around between sessions, and some other goodies. The GUI version will show graphs from e.g. matplotlib right inline with the rest of what you're doing\n\n It also makes it a bit easier to do GUI stuff from within a console. Event loops like most GUIs use don't play nice with REPLs, but IPython has a way to make it workable.\n\nIPython is also embeddable, meaning you can easily bring it up from within a Python application. I have this in my IRC bot. You can give it a command, and it opens an IPython console, so that you can mess around with a live bot, with the connection active and everything, without having to write/reload/test over and over.\n\nI'm not familiar with their Notebook or parallelization stuff, but it looks like they're a sharable online version of the console and some sort of task queue (with the same interactivity that they put in their console), respectively. I also didn't realize that all of this is built to support more languages than just Python, which is interesting.\n\nTL;DR: your tolerance for buzzwords is far too low.", "aSentId": 32786, "answer": "How close does it come to ruby's REPL? It's probably the best I've used so it would be nice to have a comparison.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32790, "question": "From my understanding, it is targeted towards scientific computing.", "aSentId": 32791, "answer": "It is very useful in scripting quickly.   Dataset analysis does fall in to that category.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32707, "question": "IPython 3 is released!", "aSentId": 32795, "answer": "Anyone know how long it usually takes for these updates to get pushed to Anaconda (or Canopy)? I'm really excited to try it out, but I'd rather just use the package managers than install myself if it will be available soon.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32796, "question": "Anyone know how long it usually takes for these updates to get pushed to Anaconda (or Canopy)? I'm really excited to try it out, but I'd rather just use the package managers than install myself if it will be available soon.", "aSentId": 32797, "answer": "Usually a week. Continuum Analytics is usually really reactive. Might be delayed if need dependencies.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32799, "question": "I would love to use ipython's notebook as a literate coding environment, but last time I checked it didn't seem to be possible. I could write neat stuff, include graphics and everything, but it wasn't possible (or I couldn't find how) to write a python module as a notebook, and then import it in another one.\n\nIn the end, I had to ditch the notebook to write a regular python module and use the notebook merely as a souped up interpreter.", "aSentId": 32800, "answer": "There is an import-hook example in the example folder, though, it is not well tested. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32799, "question": "I would love to use ipython's notebook as a literate coding environment, but last time I checked it didn't seem to be possible. I could write neat stuff, include graphics and everything, but it wasn't possible (or I couldn't find how) to write a python module as a notebook, and then import it in another one.\n\nIn the end, I had to ditch the notebook to write a regular python module and use the notebook merely as a souped up interpreter.", "aSentId": 32802, "answer": "Can't you covert a notebook into python source? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32803, "question": "Can't you covert a notebook into python source? ", "aSentId": 32804, "answer": "Technically yes, but it would mean keeping the ipynb file and its export for further dev, and not forget to export everytime a change is made ...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32805, "question": "Technically yes, but it would mean keeping the ipynb file and its export for further dev, and not forget to export everytime a change is made ...", "aSentId": 32806, "answer": "Yeah I see what you mean. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32808, "question": "I thought python 3 was already a thing?", "aSentId": 32809, "answer": "IPython the interactive shell, not python the language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32810, "question": "IPython the interactive shell, not python the language.", "aSentId": 32811, "answer": "Oh my bad. Thanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32813, "question": "How does iPython compare to PyCharm?", "aSentId": 32814, "answer": "Ipython is not an ide,", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32815, "question": "Ipython is not an ide,", "aSentId": 32816, "answer": "yet", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32817, "question": "yet", "aSentId": 32818, "answer": "Technically it is Jupyter now, and we refer to it as JDE as a joke (Jupyter Desktop Environment). Starting to ponder writing OS, and build our own hardware :-P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32813, "question": "How does iPython compare to PyCharm?", "aSentId": 32820, "answer": "Ipython (notebook) can be accessed from pycharm. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32821, "question": "Ipython (notebook) can be accessed from pycharm. ", "aSentId": 32822, "answer": "Think it can also be run as a REPL inside a PyCharm pane. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32828, "question": "How to automate web application testing with Selenium on Linux", "aSentId": 32829, "answer": "should say chrome web application testing and there really is not much information here :|", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32830, "question": "should say chrome web application testing and there really is not much information here :|", "aSentId": 32831, "answer": "Wiring Selenium up to use a different browser is as trivial as changing a small amount of constructor arguments for your WebDriver.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32832, "question": "Wiring Selenium up to use a different browser is as trivial as changing a small amount of constructor arguments for your WebDriver.", "aSentId": 32833, "answer": "so you are saying..if i wanted to test with say IE _all_ i have to do is change a constructor argument and it just works?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32828, "question": "How to automate web application testing with Selenium on Linux", "aSentId": 32835, "answer": "I've used Selenium and it's clunky looking code as others have mentioned. I found Watir to be a much more elegant approach to using the selenium engine. Watir is Ruby based DSL but it's easy to forget that you are using Ruby. I tried introducing selenium to a Java programming shop once and even they found the watir code to be preferable. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32837, "question": "Memory management myths in Apple circles", "aSentId": 32838, "answer": "Author should check his facts, iOS is not deprecating GC, it never had it. OS X deprecated GC.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32839, "question": "Author should check his facts, iOS is not deprecating GC, it never had it. OS X deprecated GC.", "aSentId": 32840, "answer": "Some people confuse the way autorelease pools work with GC, and it gives a slightly similar cadence to the frequency that things are freed, so it's not soooo ridiculous of a claim.\n\nI'm not disagreeing with you at all, I'm just pointing out that he might have had reasonably thought he knew what he was talking about.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32837, "question": "Memory management myths in Apple circles", "aSentId": 32842, "answer": "&gt; Firstly, RAM typically only accounts for a fraction of a percent of totally power consumption in a mobile phone so power is not an excuse for skimping on RAM\n\nActually writing to DRAM is extremely expensive compared to computations on the CPU, however just storing stuff longer there isn't costing more energy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32837, "question": "Memory management myths in Apple circles", "aSentId": 32844, "answer": "Does the Android version of Java share memory for libraries? I always thought that this would be a big drain, but I never hear anyone complain about it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32851, "question": "5 lucrative tech careers to pursue in 2015", "aSentId": 32852, "answer": "Nice to see Rails in there :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32854, "question": "OCCA (in a nutshell): Library for utilizing OpenMP, OpenCL and CUDA on the same code", "aSentId": 32855, "answer": "Seems promising and it looks like there is a place for an intermediate kernel language.\n\nhttp://libocca.org/documentation/kernelLanguages/OKL\n\nhttp://libocca.org/documentation/kernelLanguages/OFL\n\nBut this looks a bit empty :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 32856, "question": "Seems promising and it looks like there is a place for an intermediate kernel language.\n\nhttp://libocca.org/documentation/kernelLanguages/OKL\n\nhttp://libocca.org/documentation/kernelLanguages/OFL\n\nBut this looks a bit empty :)", "aSentId": 32857, "answer": "Thanks!\n\nThe site's skeleton is there, haven't filled it in yet =(\n\nI'll put some time to add the API documentation this month though =)", "corpus": "reddit"}]