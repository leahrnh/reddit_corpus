[{"docID": "t5_2fwo", "qSentId": 58974, "question": "Stack Overflow Developer Survey 2015", "aSentId": 58975, "answer": "Product managers: highest caffeine consumption and least satisfying job. I'll remember this.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58976, "question": "Product managers: highest caffeine consumption and least satisfying job. I'll remember this.", "aSentId": 58977, "answer": "Still not terrible though. Almost a 3 in satisfaction. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58978, "question": "Still not terrible though. Almost a 3 in satisfaction. ", "aSentId": 58979, "answer": "That's because of the money.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58976, "question": "Product managers: highest caffeine consumption and least satisfying job. I'll remember this.", "aSentId": 58981, "answer": "It's a stepping stone to CTO, right? ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58974, "question": "Stack Overflow Developer Survey 2015", "aSentId": 58983, "answer": "&gt;Developers increasingly prefer spaces as they gain experience.\n\nOr are devs that are in the field for a longer time used to spaces while new devs learn coding with tabs?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58984, "question": "&gt;Developers increasingly prefer spaces as they gain experience.\n\nOr are devs that are in the field for a longer time used to spaces while new devs learn coding with tabs?", "aSentId": 58985, "answer": "I'll die thinking the space people are nuts. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58984, "question": "&gt;Developers increasingly prefer spaces as they gain experience.\n\nOr are devs that are in the field for a longer time used to spaces while new devs learn coding with tabs?", "aSentId": 58987, "answer": "I don't get why people won't use tabs. They are basically perfect for this job since you can adjust the size of all tabs.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58988, "question": "I don't get why people won't use tabs. They are basically perfect for this job since you can adjust the size of all tabs.\n\n", "aSentId": 58989, "answer": "Things can get screwed up very quickly when your view differs from the original coders view of how things are aligned.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58990, "question": "Things can get screwed up very quickly when your view differs from the original coders view of how things are aligned.", "aSentId": 58991, "answer": "In general aligning things can get screwed up when you want to change something. It is better with space, and if I do align things I do it with spaces, but in general I don't bother and just indent things, which I do with tabs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58992, "question": "In general aligning things can get screwed up when you want to change something. It is better with space, and if I do align things I do it with spaces, but in general I don't bother and just indent things, which I do with tabs.", "aSentId": 58993, "answer": "I align things with tabs and use spaces to indent things. Its easier to align with tabs because I can control how big the tabs are but also because different letters are different wides and therefor the space doesnt have universal quantities of wideness like the tab does.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58988, "question": "I don't get why people won't use tabs. They are basically perfect for this job since you can adjust the size of all tabs.\n\n", "aSentId": 58995, "answer": "Until you have to paste the code into a web form on a many programming forums.\n\nI\u2019d agree that tabs are superior except for this quite crucial point: HTML forms simply don\u2019t cope with tabs at all. Coupled with the fact that spaces really don\u2019t have any disadvantage in modern editors, I\u2019m coming out ever so slightly in favour of spaces.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58988, "question": "I don't get why people won't use tabs. They are basically perfect for this job since you can adjust the size of all tabs.\n\n", "aSentId": 58997, "answer": "I've never seen a c++ source file that is properly and consistently indented with tabs, such that it wont go to shit if you change the tabstop.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58984, "question": "&gt;Developers increasingly prefer spaces as they gain experience.\n\nOr are devs that are in the field for a longer time used to spaces while new devs learn coding with tabs?", "aSentId": 59000, "answer": "And do devs that medium experience prefer both...?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 58974, "question": "Stack Overflow Developer Survey 2015", "aSentId": 59002, "answer": "**Country**         **Devs per 1,000 people**\n\nSomalia\t        0.000\n\nChad\t                0.000\n\nNorth Korea\t0.000\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59004, "question": "Wow, Notepad++. Okay.", "aSentId": 59005, "answer": "in Windows, it's a great tool (Assuming you don't know what vim/emacs are because, again, you're only on windows).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59006, "question": "in Windows, it's a great tool (Assuming you don't know what vim/emacs are because, again, you're only on windows).", "aSentId": 59007, "answer": "I like using a mouse with my text editor", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59008, "question": "I like using a mouse with my text editor", "aSentId": 59009, "answer": "You can use your mouse with gVim and emacs. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59010, "question": "You can use your mouse with gVim and emacs. ", "aSentId": 59011, "answer": "Did not know that, must check it out again ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59008, "question": "I like using a mouse with my text editor", "aSentId": 59013, "answer": "In vim you can do :set mouse=a to use your mouse. =)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59006, "question": "in Windows, it's a great tool (Assuming you don't know what vim/emacs are because, again, you're only on windows).", "aSentId": 59015, "answer": "I'm on Windows almost exclusively, and I wouldn't be caught dead without vim", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59004, "question": "Wow, Notepad++. Okay.", "aSentId": 59017, "answer": "It's clean, light weight, has lots of nice features, and unlike sublime text it is completely free.\n\nKind of makes sense that it's number one.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59018, "question": "It's clean, light weight, has lots of nice features, and unlike sublime text it is completely free.\n\nKind of makes sense that it's number one.", "aSentId": 59019, "answer": "The one major issue with Notepad++ is the massive distance between each line, so you can't fit nearly as much code on screen.\n\nBecause of that, I typically use SciTe instead. It's based on the same editor as Notepad++ is, but doesn't have that problem. It also has a few features not present in Notepad++", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59020, "question": "The one major issue with Notepad++ is the massive distance between each line, so you can't fit nearly as much code on screen.\n\nBecause of that, I typically use SciTe instead. It's based on the same editor as Notepad++ is, but doesn't have that problem. It also has a few features not present in Notepad++", "aSentId": 59021, "answer": "&gt; The one major issue with Notepad++ is the massive distance between each line, so you can't fit nearly as much code on screen.\n\nSome folks may see that as an advantage...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59018, "question": "It's clean, light weight, has lots of nice features, and unlike sublime text it is completely free.\n\nKind of makes sense that it's number one.", "aSentId": 59023, "answer": "Sublime text is free as long as you don't mind the popup every once in a while. I know it would annoy a lot of people but I just don't even notice it anymore. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59024, "question": "Sublime text is free as long as you don't mind the popup every once in a while. I know it would annoy a lot of people but I just don't even notice it anymore. ", "aSentId": 59025, "answer": "It's not free. It's a trial.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59004, "question": "Wow, Notepad++. Okay.", "aSentId": 59027, "answer": "I like to use it instead of Vim for large files (usually not code, but data).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59029, "question": "What do you use?", "aSentId": 59030, "answer": "I personally prefer Sublime over Notepad++, but I am not in the majority according to the survey results!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59032, "question": "Could someone explain why the percentage of female developers is 15.1 in India and 2.3 in Sweden? That was by far the most surprising result to me.", "aSentId": 59033, "answer": "I wish I could find the numbers so I don't sound like \"just another redditor making shit up\", but I recall seeing ~5 years ago some stats about women in STEM fields - countries with *less* gender freedom tended to have the *highest* rates of women in STEM fields.  Countries where women are treated most fairly tended to have higher gender disparities in STEM.\n\nI've tried for 20+ mins in vain to find that exact website, so maybe I'll have to do some original research.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59034, "question": "I wish I could find the numbers so I don't sound like \"just another redditor making shit up\", but I recall seeing ~5 years ago some stats about women in STEM fields - countries with *less* gender freedom tended to have the *highest* rates of women in STEM fields.  Countries where women are treated most fairly tended to have higher gender disparities in STEM.\n\nI've tried for 20+ mins in vain to find that exact website, so maybe I'll have to do some original research.", "aSentId": 59035, "answer": "It's about economic security. In countries where gender equality is low, the only way a woman can guarantee her own economic security is to go into the most lucrative fields available. CS happens to be very lucrative with a fairly low barrier to entry. In countries with higher gender equality, worries about economic security are not at the forefront of decision making.\n\nMen still have the expectation of being the main breadwinner, or they may in fact like technical fields at higher rates.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59036, "question": "It's about economic security. In countries where gender equality is low, the only way a woman can guarantee her own economic security is to go into the most lucrative fields available. CS happens to be very lucrative with a fairly low barrier to entry. In countries with higher gender equality, worries about economic security are not at the forefront of decision making.\n\nMen still have the expectation of being the main breadwinner, or they may in fact like technical fields at higher rates.", "aSentId": 59037, "answer": "This would indicate that women simply don't like CS, for some reason.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59038, "question": "This would indicate that women simply don't like CS, for some reason.", "aSentId": 59039, "answer": "It's a possibility we need to confront.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59034, "question": "I wish I could find the numbers so I don't sound like \"just another redditor making shit up\", but I recall seeing ~5 years ago some stats about women in STEM fields - countries with *less* gender freedom tended to have the *highest* rates of women in STEM fields.  Countries where women are treated most fairly tended to have higher gender disparities in STEM.\n\nI've tried for 20+ mins in vain to find that exact website, so maybe I'll have to do some original research.", "aSentId": 59041, "answer": "Seems like gender freedom is an attribute of more developed countries, and in more developed countries there is more opportunity to go to university for less profitable fields like psychology, communications, etc. In developing countries like India, I guess that the stiffer competition makes a cs education more appealing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59042, "question": "Seems like gender freedom is an attribute of more developed countries, and in more developed countries there is more opportunity to go to university for less profitable fields like psychology, communications, etc. In developing countries like India, I guess that the stiffer competition makes a cs education more appealing.", "aSentId": 59043, "answer": "I heard it as when there is true equality, like everyone can do whatever the heck they want, men and women naturally go into the things that they always have.\n\nAnd more so than previously.\n\nThis was in that video by that swedish comedian about the topic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59032, "question": "Could someone explain why the percentage of female developers is 15.1 in India and 2.3 in Sweden? That was by far the most surprising result to me.", "aSentId": 59045, "answer": "About a third of the students in my Bachelor's course in Computers in India were girls. The disparity is much lower, because software jobs are safe and indoors and decently paying enough for people to want their daughters to get into it.\n\nThere is still a glass ceiling though, and they tend to grow into QA / Middle Management rather than Programming / Solution Architecture. A trend I hope will change in the future.\n\nBut there is neither the level of debate nor frustration with this gender imbalance that exists in the US. At least not to my knowledge.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59032, "question": "Could someone explain why the percentage of female developers is 15.1 in India and 2.3 in Sweden? That was by far the most surprising result to me.", "aSentId": 59047, "answer": "Swede here. I have honestly no idea. The numbers seems real enough though. On a 100 male developers I've met 2-3 female.\n\nThe women are really doing themselves a disservice. We have extreme lack of technical competence here. Being a programmer is almost the only job left where the employee is in a position to chose employer. I tell my friends I can chose this job, or that, and they are just happy they find 1 job. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59051, "question": "Because all the women in Sweden study \"women studies\" and \"gender studies\". Of course, \"all\" is hyperbole, but 3rd wave feminism really isn't good for anyone.", "aSentId": 59052, "answer": "DAE le SJWs are ruining everything ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59053, "question": "DAE le SJWs are ruining everything ", "aSentId": 59054, "answer": "a couple of days ago I was called an SJW... what a moronic term usually thrown around by those who want to keep bashing women without anyone daring to question it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59051, "question": "Because all the women in Sweden study \"women studies\" and \"gender studies\". Of course, \"all\" is hyperbole, but 3rd wave feminism really isn't good for anyone.", "aSentId": 59056, "answer": "No idea why you are being downvoted. This is a reality. \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59057, "question": "No idea why you are being downvoted. This is a reality. \n", "aSentId": 59058, "answer": "No, it's not. It's weird to see such stupid comments on /r/programming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59061, "question": "I'd take the results with a grain of salt. From my own experience I used SO a LOT when I was learning how to program (= during the first 5-7 years of my professional career). Nowadays I dont use it simply because I dont need it. There is some really obscure corner case that still comes up every few months or so when I actually use it. But I use it so rarely that I didnt even knew that they had this survey - so I imagine that novice/intermediate programmers are overrepresented.", "aSentId": 59062, "answer": "I'm not novice, but use it daily. I didn't notice there was a survey though either. Maybe my adblock, or I just don't get distracted by things in side bars.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59064, "question": "Can someone explain to me what a growth hacker is?\n\nAlso I like that \"Caffeine\" is under the \"Technology\" section.", "aSentId": 59065, "answer": "&gt; a growth hacker\n\nSomeone working on tumours? I think it's those social media marketing assholes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59067, "question": "Some self-selection going on I don't doubt, but 50+% of developers have &lt;= 5 years, yep that sounds about right from the amount of shite you read here and in blogs.", "aSentId": 59068, "answer": "most used languages, javascript and SQL.\n\nlol", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59071, "question": "Why Apache Cordova deserves so much hate in the survey?", "aSentId": 59072, "answer": "I'm going to guess it's about user experience rather than the quality of the platform. Cordova/PhoneGap accelerates development time but the end product just doesn't quite give the same feel as native.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59071, "question": "Why Apache Cordova deserves so much hate in the survey?", "aSentId": 59074, "answer": "Because the iOSs web view sucks so much and people think it's cordova. That's my assumption, because cordova is just a simple little thing and it works like a charm.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59077, "question": "I'm pretty shocked at the number of people who use Windows machines primarily. A lot of very popular frameworks and packages straight up don't work on a non-UNIX based OS.\n\nEDIT: Apparently I was wrong to experience a feeling.", "aSentId": 59078, "answer": "Happily producing PHP, Python and C# software in a Windows machine. Zero problems, zero complaints, the toolset is awesome. VisualStudio is a big plus. I heard people complain about Cygwin, but I have not encountered problems with it, at least with the packages I use (usually, what comes enabled by default + *rsync*). I use msysgit for everything SSH. Honestly I don't feel like I'm missing anything.\n\nOf course, for reliability's sake, I test everything in a Vagrant VM before pushing to production. But even if I was working in an unix machine, I would be doing it anyways, because I want the last test to be in a configuration as close as the production server as possible.\n\nHaving an i7 with 16GB RAM certainly helps, but I was doing something similar with a Dual Core (I think?) and 4GB RAM (I'm sure) until last year.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59077, "question": "I'm pretty shocked at the number of people who use Windows machines primarily. A lot of very popular frameworks and packages straight up don't work on a non-UNIX based OS.\n\nEDIT: Apparently I was wrong to experience a feeling.", "aSentId": 59080, "answer": "Could you give me some examples? I feel the other way around. I have everything that I need on windows and it works great, but on UNIX I don't always find what I need and it can take some time to setup correctly. I still love both OS tho.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59081, "question": "Could you give me some examples? I feel the other way around. I have everything that I need on windows and it works great, but on UNIX I don't always find what I need and it can take some time to setup correctly. I still love both OS tho.", "aSentId": 59082, "answer": "It depends on what community you're in. For example, I can't do Rust dev on windows because over half of the current cargos I want to use straight up won't build on Windows. If I do node work, there are certainly libraries that will not build on Windows (LDAP comes to mind) and yet I cannot say that I've ever run into a library that didn't work on linux. \n\nIf you're doing C# work I would say it's the opposite.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59083, "question": "It depends on what community you're in. For example, I can't do Rust dev on windows because over half of the current cargos I want to use straight up won't build on Windows. If I do node work, there are certainly libraries that will not build on Windows (LDAP comes to mind) and yet I cannot say that I've ever run into a library that didn't work on linux. \n\nIf you're doing C# work I would say it's the opposite.", "aSentId": 59084, "answer": "I recently accepted a new job were I had the choice of whatever I wanted.  I had them order me a Dell Inspiron 15 (7548) and went straight to loading Debian because I had great experiences with my other machines.  The touchpad was horrific to use because gnome would assume I had clicked when opening the Applications menu and would drag around the apps.  The ATI graphics card... Well, ATI.  And the Intel WiFi card needed a special install disc (no CDROM, BTW) to even work, then when I did get it installed I needed to restart networking to get it to even work.  Add that to the fact that the multi monitor dock solution for that machine is a Proprietary Displaylink device that runs over USB3 with no appearance of Linux support in any near future and you can probably guess that I moved it back to Windows and resort to developing on a VM.\n\nNow, I know this is just poor hardware choice, but I was hoping that would be less of a concern with the recent headway Linux has been making.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59077, "question": "I'm pretty shocked at the number of people who use Windows machines primarily. A lot of very popular frameworks and packages straight up don't work on a non-UNIX based OS.\n\nEDIT: Apparently I was wrong to experience a feeling.", "aSentId": 59086, "answer": "A lot of developers don't work for software shops.  They work for banks, life insurance companies, etc in the IT / Tech department.  Those organizations give you a computer to use and if it's a medium / large organization that will have Windows.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59089, "question": "I think it's because of .NET jobs.", "aSentId": 59090, "answer": "We work with Java, .NET and Python. Pretty much everyone is using Windows because at some point he has been involved in a .NET project. Especially true for the front-end devs who work on a lot of projects.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59089, "question": "I think it's because of .NET jobs.", "aSentId": 59092, "answer": "No matter what anyone says C# *is* a great language. Hopefully we will be able to compile it to native soon.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59093, "question": "No matter what anyone says C# *is* a great language. Hopefully we will be able to compile it to native soon.", "aSentId": 59094, "answer": "On Windows you can use ngen, elsewhere I think Mono has a solution, but if so it's guaranteed to be half-baked.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59098, "question": "Well for me in college the experience is completely different. When we do embedded programing (C) we use Keil \u00b5Vision IDE which doesn't exist and according to the Keil website will never exist on Linux or OSX.", "aSentId": 59099, "answer": "You don't have to use an IDE to do programming.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59100, "question": "You don't have to use an IDE to do programming.", "aSentId": 59101, "answer": "No, but the alternative to using a GUI IDE is often using CLI equivalents, which usually doesn't exist on windows.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59100, "question": "You don't have to use an IDE to do programming.", "aSentId": 59103, "answer": "How else would I simulate pretty much any micro controller I want? and I don't know of many text editors with same level (or any) of the debugging tools that \u00b5Vision has.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59108, "question": "The gender stat is saddening.", "aSentId": 59109, "answer": "Gender stat in trash collector job is much more saddening. Why isn't that problem there, but in programming it _is_?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59110, "question": "Gender stat in trash collector job is much more saddening. Why isn't that problem there, but in programming it _is_?", "aSentId": 59111, "answer": "Because only high-paying, clean and influential job matter. It does make sense from certain viewpoints...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59110, "question": "Gender stat in trash collector job is much more saddening. Why isn't that problem there, but in programming it _is_?", "aSentId": 59113, "answer": "This is what I always say.  For whatever reasons certain jobs tend to attract certain genders.  Nursing, primary school teaching attract women.  Is there a push to get more men in there?  And like you said, there are probably 90% male plumbers.  Women can do plumbing and it's a well paying job.  Why not a push for female plumbers?\n\nNow, if they're being *pushed* out, which you sometimes hear about, then sure we absolutely need to fix that.  But at ~90% that can't be the only factor, even if true and widespread.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59114, "question": "This is what I always say.  For whatever reasons certain jobs tend to attract certain genders.  Nursing, primary school teaching attract women.  Is there a push to get more men in there?  And like you said, there are probably 90% male plumbers.  Women can do plumbing and it's a well paying job.  Why not a push for female plumbers?\n\nNow, if they're being *pushed* out, which you sometimes hear about, then sure we absolutely need to fix that.  But at ~90% that can't be the only factor, even if true and widespread.", "aSentId": 59115, "answer": "But men are absolutely pushed out of nursing and primary school education. Education particularly. If you're male and say that you want to teach elementary school, people think you're a pedophile. Parents actively remove their children from classrooms with male teachers. Those examples aren't ones of it simply attracting a certain gender. Males are discriminated against intensely in those fields, just as women are in tech. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59116, "question": "But men are absolutely pushed out of nursing and primary school education. Education particularly. If you're male and say that you want to teach elementary school, people think you're a pedophile. Parents actively remove their children from classrooms with male teachers. Those examples aren't ones of it simply attracting a certain gender. Males are discriminated against intensely in those fields, just as women are in tech. ", "aSentId": 59117, "answer": "Any proof for this or is this based off of nothing? There definitely is a problem with males who want to work with children and being called \"pedophiles\" in the sense that it actually happens, but does it push people out of that job? I'd be interested in seeing stories of parents removing their children from classes with male teachers... that sounds insane!\n\nI also work with a lot of highly intelligent women (in the tech field). In this day and age I think it has to do with what interests sexes rather than discrimination.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59118, "question": "Any proof for this or is this based off of nothing? There definitely is a problem with males who want to work with children and being called \"pedophiles\" in the sense that it actually happens, but does it push people out of that job? I'd be interested in seeing stories of parents removing their children from classes with male teachers... that sounds insane!\n\nI also work with a lot of highly intelligent women (in the tech field). In this day and age I think it has to do with what interests sexes rather than discrimination.", "aSentId": 59119, "answer": "Definitely interest more than discrimination.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59114, "question": "This is what I always say.  For whatever reasons certain jobs tend to attract certain genders.  Nursing, primary school teaching attract women.  Is there a push to get more men in there?  And like you said, there are probably 90% male plumbers.  Women can do plumbing and it's a well paying job.  Why not a push for female plumbers?\n\nNow, if they're being *pushed* out, which you sometimes hear about, then sure we absolutely need to fix that.  But at ~90% that can't be the only factor, even if true and widespread.", "aSentId": 59121, "answer": "Ever notice that the pay grade sucks for the \"women's jobs\"? It sure is a thing. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59122, "question": "Ever notice that the pay grade sucks for the \"women's jobs\"? It sure is a thing. ", "aSentId": 59123, "answer": "Because there isn't a demand for those jobs that don't produce something profitable. Studying gender studies is never going to make you money because its a pure bullshit degree. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59124, "question": "Because there isn't a demand for those jobs that don't produce something profitable. Studying gender studies is never going to make you money because its a pure bullshit degree. ", "aSentId": 59125, "answer": "I'll remember to tell the nurse taking care if you in your old age that. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59126, "question": "I'll remember to tell the nurse taking care if you in your old age that. ", "aSentId": 59127, "answer": "Nursing is well paid in the US. Remind me where the crusade is for male nurses? Wait, it doesn't exist. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59126, "question": "I'll remember to tell the nurse taking care if you in your old age that. ", "aSentId": 59129, "answer": "Nurses actually do pretty well...especially if the go on to be a nurse practitioner, and none of them have \"gender studies\" degrees.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59130, "question": "Nurses actually do pretty well...especially if the go on to be a nurse practitioner, and none of them have \"gender studies\" degrees.", "aSentId": 59131, "answer": "&gt;Nurses actually do pretty well.\n\nIn the US, as a consequence of the bloated medical system. Not in most of the rest of the world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59110, "question": "Gender stat in trash collector job is much more saddening. Why isn't that problem there, but in programming it _is_?", "aSentId": 59133, "answer": "Why do you jump to the conclusion that it *isn\u2019t* a problem there? And if it is or isn\u2019t a problem there, shouldn\u2019t that discussion happen in the Waste Management community?\n\nIt could easily be that it isn\u2019t spoken about here because most of us are not in the Waste Management business. Think globally, but act locally.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59136, "question": "Because employment issues for less educated people are different from employment issues for people with bachelor's degrees.\n\nWomen who have the educational level to end up working as a trash collector are more likely to end up having kids at a young age. This is an issue with sex education more than anything.\n\nWhen a woman has kids at a young age, it's harder for her to commit to a full-time job. It has little to do with her abilities or desires and more to do with traditional gender roles. People with lower levels of education aren't going to be talked out of their traditional beliefs about gender roles. For these people I'd rather focus on basic education first and gender equality in shitty jobs later.\n\nFor white-collar jobs that require an education, it's a lot easier to focus on changing people's mindsets about the kind of work they want to do.", "aSentId": 59137, "answer": "&gt; changing people's mindsets about the kind of work they want to do\n\nWhy do you want to tell other people what kind of work should they want to do? Why do you feel entitled to change someones job preferences?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59138, "question": "&gt; changing people's mindsets about the kind of work they want to do\n\nWhy do you want to tell other people what kind of work should they want to do? Why do you feel entitled to change someones job preferences?", "aSentId": 59139, "answer": "I phrased that poorly. It's less about forcing someone to change their job preferences and more about giving them more options they can choose from. \n\nIn my case, before my ex-boyfriend (a software developer) told me I should learn to code, I was planning to become an elementary school teacher. While I love teaching and helping people, I'm actually pretty terrible at classroom management. I feel I can do a lot more good solving problems in software than I would dealing with children and school bureaucracies.\n\nMy hope is other women, who for some reason never considered working in software, will find that they may actually be pretty good at it. This way software can be an option for them besides the ones they've been presented with up until this point.\n\nAnyway I believe women don't choose software not because they're not interested, but because they never considered it in the first place.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59108, "question": "The gender stat is saddening.", "aSentId": 59141, "answer": "In my experience it's even worse than stated. Where is this magical company where I could work with other female developers? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59142, "question": "In my experience it's even worse than stated. Where is this magical company where I could work with other female developers? ", "aSentId": 59143, "answer": "I have several female coworker engineers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59144, "question": "I have several female coworker engineers.", "aSentId": 59145, "answer": "I'm jealous. I'm pretty much always the only one.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59142, "question": "In my experience it's even worse than stated. Where is this magical company where I could work with other female developers? ", "aSentId": 59147, "answer": "We have like 25% female developers but my current company is the only company I have worked at where this is the case.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59148, "question": "We have like 25% female developers but my current company is the only company I have worked at where this is the case.", "aSentId": 59149, "answer": "So you are 4 devs, 1 of you being female.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59150, "question": "So you are 4 devs, 1 of you being female.", "aSentId": 59151, "answer": "25 devs 6 female. Talking about pure devs not the company headcount although if we add the business analysts and accounting/HR the ratio is pretty much the same.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59142, "question": "In my experience it's even worse than stated. Where is this magical company where I could work with other female developers? ", "aSentId": 59153, "answer": "At my last internship it was great. About a 50-50 split across all teams, including management.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59154, "question": "At my last internship it was great. About a 50-50 split across all teams, including management.", "aSentId": 59155, "answer": "Where do I send my resume? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59156, "question": "Where do I send my resume? ", "aSentId": 59157, "answer": "Shoo, you're going to unballance it ;) ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59108, "question": "The gender stat is saddening.", "aSentId": 59161, "answer": "It looks like it will improve though. The majority of females who are coding are in the lowest age group in the survey. If it keeps that way I think we will see a lot more female developers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59164, "question": "\"Software development has a gender balance problem.\"\n\nI don't see it as a problem.  It simply is what it is.  No one is being made to develop software.  It is purely voluntary (except maybe in China ;).  So, women are not \"under-represented\".  They are just \"under-interested\", and that is no one's fault.  Again, it simply is what it is.\n\n", "aSentId": 59165, "answer": "Unless you have been living under a rock lately, lots and lots of women have expressed being very interested but feel they face serious roadblocks.\n\nTo conclude that \u201cthey simply aren\u2019t interested\u201d is a kind of self-fulfilling post-facto reasoning:\n\n1. There are no external barriers to participation by women.\n2. I see few women.\n3. Since there are no external barriers, and I see few women, therefore the problem is internal to women.\n4. What shall we blame today? Lack of interest or lack of aptitude?\n\nThe root cause of this fallacious reasoning is, of course the first assumption.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59166, "question": "Unless you have been living under a rock lately, lots and lots of women have expressed being very interested but feel they face serious roadblocks.\n\nTo conclude that \u201cthey simply aren\u2019t interested\u201d is a kind of self-fulfilling post-facto reasoning:\n\n1. There are no external barriers to participation by women.\n2. I see few women.\n3. Since there are no external barriers, and I see few women, therefore the problem is internal to women.\n4. What shall we blame today? Lack of interest or lack of aptitude?\n\nThe root cause of this fallacious reasoning is, of course the first assumption.", "aSentId": 59167, "answer": "I have a cunning plan that cannot fail.  I will start a company with exclusively female developers who are interested and talented but face serious roadblocks everywhere else.  This will work out splendidly as I will have an excellent workforce at far below the cost, proving you right and making me rich.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59168, "question": "I have a cunning plan that cannot fail.  I will start a company with exclusively female developers who are interested and talented but face serious roadblocks everywhere else.  This will work out splendidly as I will have an excellent workforce at far below the cost, proving you right and making me rich.", "aSentId": 59169, "answer": "There are a few of those, yes? But since the available number of women is so much lower, finding the right competence is obviously problematic.\n\nYour thought experiment is bad, and you should feel bad.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59166, "question": "Unless you have been living under a rock lately, lots and lots of women have expressed being very interested but feel they face serious roadblocks.\n\nTo conclude that \u201cthey simply aren\u2019t interested\u201d is a kind of self-fulfilling post-facto reasoning:\n\n1. There are no external barriers to participation by women.\n2. I see few women.\n3. Since there are no external barriers, and I see few women, therefore the problem is internal to women.\n4. What shall we blame today? Lack of interest or lack of aptitude?\n\nThe root cause of this fallacious reasoning is, of course the first assumption.", "aSentId": 59171, "answer": "Do men not have any roadblocks in their lives? Why do you think we have to hold women's hands and create a perfect environment for them to even consider getting a CS degree? \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59172, "question": "Do men not have any roadblocks in their lives? Why do you think we have to hold women's hands and create a perfect environment for them to even consider getting a CS degree? \n", "aSentId": 59173, "answer": "You don't understand what the road blocks are or choose to ignore them to try to make an argument.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59174, "question": "You don't understand what the road blocks are or choose to ignore them to try to make an argument.", "aSentId": 59175, "answer": "Black people had to deal with the threats of lynchings or being blasted with fire hoses. I suppose I just can't bring myself to overly care about about women having \"road blocks\", whatever that means. I have a suspicion most of the people in this thread saying women have a hard time entering the field are actually men.  What does that even say? Why aren't the women here to speak for themselves? \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59176, "question": "Black people had to deal with the threats of lynchings or being blasted with fire hoses. I suppose I just can't bring myself to overly care about about women having \"road blocks\", whatever that means. I have a suspicion most of the people in this thread saying women have a hard time entering the field are actually men.  What does that even say? Why aren't the women here to speak for themselves? \n\n", "aSentId": 59177, "answer": "&gt; Why aren't the women here to speak for themselves? \n\nWTF? This discussion is about the severe lack of women in software engineering... and for that obvious reason the majority of posts made are going to be made by men.\n\nAnd why does the gender of the responders even matter?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59172, "question": "Do men not have any roadblocks in their lives? Why do you think we have to hold women's hands and create a perfect environment for them to even consider getting a CS degree? \n", "aSentId": 59179, "answer": "&gt;Do men not have any roadblocks in their lives?\n\nWho said anything like that?\n\nThe roadblocks in front of men are low when compared to women when we are talking about software development. This should really not be considered controversial.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59172, "question": "Do men not have any roadblocks in their lives? Why do you think we have to hold women's hands and create a perfect environment for them to even consider getting a CS degree? \n", "aSentId": 59181, "answer": "It's really a cultural thing. From an early age most women are told that they will be bad at math and science, that it's a \"man's\" field and they should do \"softer\" things like teaching or nursing. This conditioning has an observable effect on their performance! Studies have shown that women within a group of men tend to perform worse on math tests if they believe this conditioning, or even if someone mentions off-handedly that this is the cultural norm.   \nIt's not about hand-holding them to get a CS degree, it's about changing our culture to encourage women to go into STEM fields if they are interested. As men, we need to stop the judgement and blame game, since that will inevitably decrease women's performance and enthusiasm for STEM fields.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59182, "question": "It's really a cultural thing. From an early age most women are told that they will be bad at math and science, that it's a \"man's\" field and they should do \"softer\" things like teaching or nursing. This conditioning has an observable effect on their performance! Studies have shown that women within a group of men tend to perform worse on math tests if they believe this conditioning, or even if someone mentions off-handedly that this is the cultural norm.   \nIt's not about hand-holding them to get a CS degree, it's about changing our culture to encourage women to go into STEM fields if they are interested. As men, we need to stop the judgement and blame game, since that will inevitably decrease women's performance and enthusiasm for STEM fields.", "aSentId": 59183, "answer": "&gt;most women are told that they will be bad at math and science\n\nMaybe you were in a different generation from me but this is definitely not the case in most areas nowadays and hasn't been for decades. Maybe in Oklahoma or deep in the Bible belt, but the fact is women from liberal areas are not joining STE majors in any greater numbers.\n\ngirls are encouraged to do math and they do pretty well until puberty hits. some continue to do well and go on to do math degrees. but they definitely avoid the hard sciences and engineering. basically they avoid the STE in STEM.\n\n&gt;. As men, we need to stop the judgement and blame game, since that will inevitably decrease women's performance and enthusiasm for STEM fields.\n\nI'm not blaming anyone. If women don't want to do STE then no one should patronize them for not wanting to. Everyone is different and that's okay.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59184, "question": "&gt;most women are told that they will be bad at math and science\n\nMaybe you were in a different generation from me but this is definitely not the case in most areas nowadays and hasn't been for decades. Maybe in Oklahoma or deep in the Bible belt, but the fact is women from liberal areas are not joining STE majors in any greater numbers.\n\ngirls are encouraged to do math and they do pretty well until puberty hits. some continue to do well and go on to do math degrees. but they definitely avoid the hard sciences and engineering. basically they avoid the STE in STEM.\n\n&gt;. As men, we need to stop the judgement and blame game, since that will inevitably decrease women's performance and enthusiasm for STEM fields.\n\nI'm not blaming anyone. If women don't want to do STE then no one should patronize them for not wanting to. Everyone is different and that's okay.  ", "aSentId": 59185, "answer": "I'm 27 and live in the Bay Area. Just because you think it's not the case doesn't mean that it isn't the case. There are math teachers all over the US who think this way and push the cultural bias onto female students. I think it is less common in more liberal areas, sure, but it still happens. It also has to do with media, not just in-person contact. Most portrayals of people in STEM careers in media are men.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59186, "question": "I'm 27 and live in the Bay Area. Just because you think it's not the case doesn't mean that it isn't the case. There are math teachers all over the US who think this way and push the cultural bias onto female students. I think it is less common in more liberal areas, sure, but it still happens. It also has to do with media, not just in-person contact. Most portrayals of people in STEM careers in media are men.", "aSentId": 59187, "answer": "Then why are girls raised in liberal areas not flocking to STE? \n\n&gt;Most portrayals of people in STEM careers in media are men.\n\n100% bullshit. Have you never seen a single flyer promoting a big firm? There's always 50% ratio men/women, always as many people from different racial backgrounds as they can stuff in there. Hollywood does the same thing to appeal to everyone.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59188, "question": "Then why are girls raised in liberal areas not flocking to STE? \n\n&gt;Most portrayals of people in STEM careers in media are men.\n\n100% bullshit. Have you never seen a single flyer promoting a big firm? There's always 50% ratio men/women, always as many people from different racial backgrounds as they can stuff in there. Hollywood does the same thing to appeal to everyone.", "aSentId": 59189, "answer": "It's really not bullshit.   \nBig Bang Theory. The main characters are \"nerdy science\" men and the \"ditsy blonde\" girl.   \nIt's everywhere if you look. Liberal area or not.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59182, "question": "It's really a cultural thing. From an early age most women are told that they will be bad at math and science, that it's a \"man's\" field and they should do \"softer\" things like teaching or nursing. This conditioning has an observable effect on their performance! Studies have shown that women within a group of men tend to perform worse on math tests if they believe this conditioning, or even if someone mentions off-handedly that this is the cultural norm.   \nIt's not about hand-holding them to get a CS degree, it's about changing our culture to encourage women to go into STEM fields if they are interested. As men, we need to stop the judgement and blame game, since that will inevitably decrease women's performance and enthusiasm for STEM fields.", "aSentId": 59191, "answer": "&gt; It's really a cultural thing. From an early age most women are told that they will be bad at math and science, that it's a \"man's\" field and they should do \"softer\" things like teaching or nursing. \n\nI'm not sure that's true.\n\nActually, I'm going to go one stronger:\n\nI defy you to point to one instance in that past 30 years of a girl being told that women are bad at math and science.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59192, "question": "&gt; It's really a cultural thing. From an early age most women are told that they will be bad at math and science, that it's a \"man's\" field and they should do \"softer\" things like teaching or nursing. \n\nI'm not sure that's true.\n\nActually, I'm going to go one stronger:\n\nI defy you to point to one instance in that past 30 years of a girl being told that women are bad at math and science.", "aSentId": 59193, "answer": "Big Bang Theory. The main characters are \"nerdy science\" men and the \"ditsy blonde\" girl.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59194, "question": "Big Bang Theory. The main characters are \"nerdy science\" men and the \"ditsy blonde\" girl.", "aSentId": 59195, "answer": "\"a girl being told\" not \"a show could be interpreted as\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59196, "question": "\"a girl being told\" not \"a show could be interpreted as\"", "aSentId": 59197, "answer": "What's the difference?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59198, "question": "What's the difference?", "aSentId": 59199, "answer": "One is real, the other is up to interpretation.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59166, "question": "Unless you have been living under a rock lately, lots and lots of women have expressed being very interested but feel they face serious roadblocks.\n\nTo conclude that \u201cthey simply aren\u2019t interested\u201d is a kind of self-fulfilling post-facto reasoning:\n\n1. There are no external barriers to participation by women.\n2. I see few women.\n3. Since there are no external barriers, and I see few women, therefore the problem is internal to women.\n4. What shall we blame today? Lack of interest or lack of aptitude?\n\nThe root cause of this fallacious reasoning is, of course the first assumption.", "aSentId": 59201, "answer": "&gt;Unless you have been living under a rock lately, lots and lots of women have expressed being very interested but feel they face serious roadblocks.\n\nCare to provide some links? I'm active in that arena, but I haven't seen much evidence in that direction. [See section VIII of this post](http://slatestarcodex.com/2015/01/01/untitled/).\n\nSpecial initiatives for women who code are indeed valuable, and I think justified, because they bring together people from a cultural minority. Being part of a cultural minority *sucks* because you don't get to relate to most people around you. But I don't think that a special status for women who code is going to boost enrolment in the population of women *who weren't interested in coding in the first place*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59204, "question": "There are no serious roadblocks.  They may perceive that, but there are not.  \n\n1. There ARE NO external barriers to participation by women.  (Right, there aren't)\n\n2. I see few women. (OK)\n\n3. Since there are no external barriers, and I see few women, therefore the problem is internal to women.  (mmm hmm.  Good so far; except it is not a \"problem\".  It is their preference.)\n\n4. What shall we blame today? Lack of interest or lack of aptitude? (Uhm, lack of interest, like I said from the beginning).\n\nSimply stated, fewer women are interested in software development, and the survey data accurately report that.", "aSentId": 59205, "answer": "&gt;  (Right, there aren't)\n\nSo, you went wrong right at the start, as predicted. Great!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59207, "question": "&gt; Unless you have been living under a rock lately, lots and lots of women have expressed being very interested but feel they face serious roadblocks.\n\nAnd again and again, their claims turn out to be shit.", "aSentId": 59208, "answer": "You are downvoted but don't worry! What you said was recently confirmed in a court ruling.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59209, "question": "You are downvoted but don't worry! What you said was recently confirmed in a court ruling.", "aSentId": 59210, "answer": "Source?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59164, "question": "\"Software development has a gender balance problem.\"\n\nI don't see it as a problem.  It simply is what it is.  No one is being made to develop software.  It is purely voluntary (except maybe in China ;).  So, women are not \"under-represented\".  They are just \"under-interested\", and that is no one's fault.  Again, it simply is what it is.\n\n", "aSentId": 59213, "answer": "It's easy to hand-wave away the gender imbalance by claiming that women aren't interested in the field, but that doesn't answer the question of *why*.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59214, "question": "It's easy to hand-wave away the gender imbalance by claiming that women aren't interested in the field, but that doesn't answer the question of *why*.", "aSentId": 59215, "answer": "Why aren't they interested in being miners and garbage collectors?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59216, "question": "Why aren't they interested in being miners and garbage collectors?", "aSentId": 59217, "answer": "For unskilled manual labor, raw strength and endurance is what matters, and that's an area where men are generally better than women.\n\nSoftware development doesn't need strength, just smarts and the willingness to learn new things. In addition, software development is a growing field, it pays well, and the physical working conditions are much better than manual labor. I can't think of any logical reason why women wouldn't be interested in the field.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59218, "question": "For unskilled manual labor, raw strength and endurance is what matters, and that's an area where men are generally better than women.\n\nSoftware development doesn't need strength, just smarts and the willingness to learn new things. In addition, software development is a growing field, it pays well, and the physical working conditions are much better than manual labor. I can't think of any logical reason why women wouldn't be interested in the field.", "aSentId": 59219, "answer": "Right off the bat, having 2 years of experience working underground let me tell you how mistaken you are.\n\nMines employ thousands of people usually less than a half of them are regular grunts. There is a *huge* amount of people working in supervision overseers, safety inspectors, shaft surveyors, ventilation specialists, there are mechanics, electricians, welders, pyrotechnics experts, continuous miner operators, conveyor belt operators, tram drivers, rescuers, hundreds working in offices on the surface, workshops and much more.\n\nThe majority of these jobs can be done by women and all of them are high paid. STEM education/vocational courses are widely available to women. But obviously these positions are  generally taken by men.\n\nThey don't require raw strength. Pray tell, why women don't work in mining industry?\n\nAgain the dreaded misogyny?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59220, "question": "Right off the bat, having 2 years of experience working underground let me tell you how mistaken you are.\n\nMines employ thousands of people usually less than a half of them are regular grunts. There is a *huge* amount of people working in supervision overseers, safety inspectors, shaft surveyors, ventilation specialists, there are mechanics, electricians, welders, pyrotechnics experts, continuous miner operators, conveyor belt operators, tram drivers, rescuers, hundreds working in offices on the surface, workshops and much more.\n\nThe majority of these jobs can be done by women and all of them are high paid. STEM education/vocational courses are widely available to women. But obviously these positions are  generally taken by men.\n\nThey don't require raw strength. Pray tell, why women don't work in mining industry?\n\nAgain the dreaded misogyny?", "aSentId": 59221, "answer": "Perhaps a lot of women don't even bother to look into these jobs because of the preconceptions of what the job needs, and so they don't get enough information to find that actually, it might be a job which they can do and suits them. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59218, "question": "For unskilled manual labor, raw strength and endurance is what matters, and that's an area where men are generally better than women.\n\nSoftware development doesn't need strength, just smarts and the willingness to learn new things. In addition, software development is a growing field, it pays well, and the physical working conditions are much better than manual labor. I can't think of any logical reason why women wouldn't be interested in the field.", "aSentId": 59223, "answer": "A slight aside: IME there are plenty of people who would prefer a manual labour job (that is, a job that involves physical activity, or a \"doing stuff\" outside of an office setting) to a desk/office job. So I don't know how you can say that the working conditions are objectively better than for manual labour.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59218, "question": "For unskilled manual labor, raw strength and endurance is what matters, and that's an area where men are generally better than women.\n\nSoftware development doesn't need strength, just smarts and the willingness to learn new things. In addition, software development is a growing field, it pays well, and the physical working conditions are much better than manual labor. I can't think of any logical reason why women wouldn't be interested in the field.", "aSentId": 59225, "answer": "Software development also requires long-term planning and critical thinking.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59216, "question": "Why aren't they interested in being miners and garbage collectors?", "aSentId": 59227, "answer": "Are you?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59228, "question": "Are you?", "aSentId": 59229, "answer": "I worked as a shipyard welder for a while after the .com crash.  \n\nIt was, not joking, the most meritocratic job I've ever had.  When you can literally point to what you did or did not do over a shift, and have it pass (or not) inspection, your actual skill level and competence is known by everyone in short order. \n\nAnother nice side effect, no one cared if you were a man, woman, gay, or straight.  My shift lead was an effeminate gay man.  A few of my co-workers were women.  If you got the job done, that was the end of it.  And if you didn't, you were out, no matter your color or sex.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59228, "question": "Are you?", "aSentId": 59231, "answer": "Maybe not that, but for a long time I've had this nagging urge to learn how to weld ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59214, "question": "It's easy to hand-wave away the gender imbalance by claiming that women aren't interested in the field, but that doesn't answer the question of *why*.", "aSentId": 59233, "answer": "For the same reason men aren't interested in nursing and women are. Basic biology. Women are overwhelming majority in areas like nursing and teaching, that is, taking care of people. Men are overwhelmingly majority in areas where handling machinery is the main thing you do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59234, "question": "For the same reason men aren't interested in nursing and women are. Basic biology. Women are overwhelming majority in areas like nursing and teaching, that is, taking care of people. Men are overwhelmingly majority in areas where handling machinery is the main thing you do.", "aSentId": 59235, "answer": "Yet there isn't a crusade for men to enter teaching or nursing...hrm. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59236, "question": "Yet there isn't a crusade for men to enter teaching or nursing...hrm. ", "aSentId": 59237, "answer": "Those jobs aren't exactly glamorous.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59238, "question": "Those jobs aren't exactly glamorous.", "aSentId": 59239, "answer": "They are not. Neither is development most of the time. Yet, there is only a crusade for gender equality in one field. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59234, "question": "For the same reason men aren't interested in nursing and women are. Basic biology. Women are overwhelming majority in areas like nursing and teaching, that is, taking care of people. Men are overwhelmingly majority in areas where handling machinery is the main thing you do.", "aSentId": 59241, "answer": "Since the gender imbalance is smaller in India, is the biology of Indian women different, then?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59242, "question": "Since the gender imbalance is smaller in India, is the biology of Indian women different, then?", "aSentId": 59243, "answer": "Living in India, you have a lot less choice as to what you can to do put food on the table. Sweden is one of the richest, most egalitarian countries on earth, and it also has extremely few women coders.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59234, "question": "For the same reason men aren't interested in nursing and women are. Basic biology. Women are overwhelming majority in areas like nursing and teaching, that is, taking care of people. Men are overwhelmingly majority in areas where handling machinery is the main thing you do.", "aSentId": 59245, "answer": "&gt; For the same reason men aren't interested in nursing and women are. Basic biology.\n\nI could throw up a snarky [citation needed], but I think we both know this is bullshit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59214, "question": "It's easy to hand-wave away the gender imbalance by claiming that women aren't interested in the field, but that doesn't answer the question of *why*.", "aSentId": 59248, "answer": "The question of *why* really doesn't matter.  They don't, and again, it is what it is.  There's nothing sinister going on.  There's no conspiracy.  There's no one holding others back.  Women are simply less interested.  They are less interested in lots of things, and there's nothing unusual about that.  If you think there is, let me introduce you to my wife sometime.  ;-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59249, "question": "The question of *why* really doesn't matter.  They don't, and again, it is what it is.  There's nothing sinister going on.  There's no conspiracy.  There's no one holding others back.  Women are simply less interested.  They are less interested in lots of things, and there's nothing unusual about that.  If you think there is, let me introduce you to my wife sometime.  ;-)", "aSentId": 59250, "answer": "&gt; The question of why really doesn't matter. They don't, and again, it is what it is. There's nothing sinister going on. There's no conspiracy. There's no one holding others back. Women are simply less interested.\n\nYou remind me of a religious fundamentalist who thinks the study of cosmology is a waste of time and money, because God *obviously* created everything.\n\n\"Women just aren't as interested\" is one possible explanation of the gender gap in tech. If you want to claim that it's *THE* explanation, show some evidence.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59164, "question": "\"Software development has a gender balance problem.\"\n\nI don't see it as a problem.  It simply is what it is.  No one is being made to develop software.  It is purely voluntary (except maybe in China ;).  So, women are not \"under-represented\".  They are just \"under-interested\", and that is no one's fault.  Again, it simply is what it is.\n\n", "aSentId": 59252, "answer": "Dude the lack of woman in our field sucks. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59253, "question": "Dude the lack of woman in our field sucks. ", "aSentId": 59254, "answer": "yes it does. Problem is society. Most parents wouldn't want their daughters to sit at computer all day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59255, "question": "yes it does. Problem is society. Most parents wouldn't want their daughters to sit at computer all day.", "aSentId": 59256, "answer": "&gt; Most parents wouldn't want their daughters to sit at computer all day.\n\nThough few are glad when their sons aspire to do the same. Except perhaps if they are programmers themselves.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59255, "question": "yes it does. Problem is society. Most parents wouldn't want their daughters to sit at computer all day.", "aSentId": 59258, "answer": "I am a man and my parents did not want me to sit in front of the computer all day. That didn't deter me though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59255, "question": "yes it does. Problem is society. Most parents wouldn't want their daughters to sit at computer all day.", "aSentId": 59260, "answer": "Plus the people in our field in general can't be comfortable when a woman's in the room", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59253, "question": "Dude the lack of woman in our field sucks. ", "aSentId": 59262, "answer": "Funny you should say that.  I'm sitting next to one.  OK, she's not a developer, but an application support analyst, so....", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59264, "question": "20% of respondents said they visit SO \"because I can't do my job without it.\" That's... terrifying.\n\nEdit: Yay downvotes. I'm surprised by the number of people that chose that response, and I chose to mention that surprise here. In doing so, I think we've had some interesting discussion. Normally I get upvoted for that, but whatever. The internet is fickle.\n\nIt has been suggested to me that I've misinterpreted the intent of that response, and that's certainly a possibility I'm willing to consider. The response is \"Because I can't do my job without it.\" As in, I would not be able to complete my job's requirements and would lose my job if StackOverflow went offline permanently. To me that suggests that the people choosing that answer felt themselves unable to cope with the challenges that programming can present without having a support structure in place to guide them towards the answers they need. I feel like programming is a problem-solving skill more than a syntax skill, and I think that people with the problem-solving mindset would have chosen the \"To get help for my job\" option over this one if they felt the same.\n\nI have certainly come across people that would be unable to solve complex problems without getting guidance from a senior developer. They seem unable to grapple with the underlying concepts involved. I assumed that these were the people choosing the answer \"Because I can't do my job without it.\" If there is some other type of respondent that would choose this answer, I would certainly like to hear about them, so that I don't have to feel a bit depressed about the % on this answer.", "aSentId": 59265, "answer": "That's reality. When you are forced to use a new framework or library every few months it makes no sense to learn them in depth. You just google your problem and the first link directs you to a  SO question. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59266, "question": "That's reality. When you are forced to use a new framework or library every few months it makes no sense to learn them in depth. You just google your problem and the first link directs you to a  SO question. ", "aSentId": 59267, "answer": "SO is indeed very useful but in the end, you still have to read and understand the docs of the frameworks you employ. I like to contribute as much as possible on the frameworks I know best. So I use it to learn and teach.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59266, "question": "That's reality. When you are forced to use a new framework or library every few months it makes no sense to learn them in depth. You just google your problem and the first link directs you to a  SO question. ", "aSentId": 59269, "answer": "What you're describing I think fits neatly into the 72.1% who use SO \"to get help for my job.\" I'm definitely in that 72.1%, and find myself learning something from an SO answer several times a week. It's a fantastic resource. The 20.5% that state they cannot do their job without it is what concerns me. That means they have such little understanding of programming that they have to ask on SO every time they get stuck, copy-paste code from answers without understanding it, and don't possess the mental tools to figure things out on their own. That's what I find concerning. I would have put that number much lower based on my own experience; I guess I've been lucky in the quality of coworkers I've dealt with.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59270, "question": "What you're describing I think fits neatly into the 72.1% who use SO \"to get help for my job.\" I'm definitely in that 72.1%, and find myself learning something from an SO answer several times a week. It's a fantastic resource. The 20.5% that state they cannot do their job without it is what concerns me. That means they have such little understanding of programming that they have to ask on SO every time they get stuck, copy-paste code from answers without understanding it, and don't possess the mental tools to figure things out on their own. That's what I find concerning. I would have put that number much lower based on my own experience; I guess I've been lucky in the quality of coworkers I've dealt with.", "aSentId": 59271, "answer": "&gt;\"because I can't do my job without it.\" \n\n&gt; That means they have such little understanding of programming that they have to ask on SO every time they get stuck, copy-paste code from answers without understanding it, and don't possess the mental tools to figure things out on their own.\n\nThat seems like a really uncharitable interpretation...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59272, "question": "&gt;\"because I can't do my job without it.\" \n\n&gt; That means they have such little understanding of programming that they have to ask on SO every time they get stuck, copy-paste code from answers without understanding it, and don't possess the mental tools to figure things out on their own.\n\nThat seems like a really uncharitable interpretation...", "aSentId": 59273, "answer": "Perhaps I've misunderstood the intent of that response in the survey then. The 72.1% category seemed to cover all the \"charitable\" usage as far as I could tell. I have seen programmers use stackoverflow in the way I described.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59274, "question": "Perhaps I've misunderstood the intent of that response in the survey then. The 72.1% category seemed to cover all the \"charitable\" usage as far as I could tell. I have seen programmers use stackoverflow in the way I described.", "aSentId": 59275, "answer": "&gt;Perhaps I've misunderstood the intent of that response in the survey then\n\nPossibly. All I know for sure is, very few people are going to look at that response, interpret it the way you did, then choose that response.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59264, "question": "20% of respondents said they visit SO \"because I can't do my job without it.\" That's... terrifying.\n\nEdit: Yay downvotes. I'm surprised by the number of people that chose that response, and I chose to mention that surprise here. In doing so, I think we've had some interesting discussion. Normally I get upvoted for that, but whatever. The internet is fickle.\n\nIt has been suggested to me that I've misinterpreted the intent of that response, and that's certainly a possibility I'm willing to consider. The response is \"Because I can't do my job without it.\" As in, I would not be able to complete my job's requirements and would lose my job if StackOverflow went offline permanently. To me that suggests that the people choosing that answer felt themselves unable to cope with the challenges that programming can present without having a support structure in place to guide them towards the answers they need. I feel like programming is a problem-solving skill more than a syntax skill, and I think that people with the problem-solving mindset would have chosen the \"To get help for my job\" option over this one if they felt the same.\n\nI have certainly come across people that would be unable to solve complex problems without getting guidance from a senior developer. They seem unable to grapple with the underlying concepts involved. I assumed that these were the people choosing the answer \"Because I can't do my job without it.\" If there is some other type of respondent that would choose this answer, I would certainly like to hear about them, so that I don't have to feel a bit depressed about the % on this answer.", "aSentId": 59277, "answer": "Think what you will of those who \"cannot\" live without SO, but I'm pretty sure 100% of developers are *better* at their jobs thanks to SO.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59278, "question": "Think what you will of those who \"cannot\" live without SO, but I'm pretty sure 100% of developers are *better* at their jobs thanks to SO.", "aSentId": 59279, "answer": "Oh, I absolutely agree. I find myself learning things from answers there a few times a week. On the other hand, I've inherited projects from developers whose job description could have been \"search stackoverflow for how to do this and copy-paste the code into the application\" and they're not the nicest projects to work on. I'm definitely one of the 72.1% who use SO \"to get help for my job,\" but the idea of not being able to do this job at all without SO answers isn't the same thing at all.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59280, "question": "Oh, I absolutely agree. I find myself learning things from answers there a few times a week. On the other hand, I've inherited projects from developers whose job description could have been \"search stackoverflow for how to do this and copy-paste the code into the application\" and they're not the nicest projects to work on. I'm definitely one of the 72.1% who use SO \"to get help for my job,\" but the idea of not being able to do this job at all without SO answers isn't the same thing at all.", "aSentId": 59281, "answer": "Fair enough. Those who rely on SO *instead* of actually retaining knowledge and developing their software spider sense become dead weight later on.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59264, "question": "20% of respondents said they visit SO \"because I can't do my job without it.\" That's... terrifying.\n\nEdit: Yay downvotes. I'm surprised by the number of people that chose that response, and I chose to mention that surprise here. In doing so, I think we've had some interesting discussion. Normally I get upvoted for that, but whatever. The internet is fickle.\n\nIt has been suggested to me that I've misinterpreted the intent of that response, and that's certainly a possibility I'm willing to consider. The response is \"Because I can't do my job without it.\" As in, I would not be able to complete my job's requirements and would lose my job if StackOverflow went offline permanently. To me that suggests that the people choosing that answer felt themselves unable to cope with the challenges that programming can present without having a support structure in place to guide them towards the answers they need. I feel like programming is a problem-solving skill more than a syntax skill, and I think that people with the problem-solving mindset would have chosen the \"To get help for my job\" option over this one if they felt the same.\n\nI have certainly come across people that would be unable to solve complex problems without getting guidance from a senior developer. They seem unable to grapple with the underlying concepts involved. I assumed that these were the people choosing the answer \"Because I can't do my job without it.\" If there is some other type of respondent that would choose this answer, I would certainly like to hear about them, so that I don't have to feel a bit depressed about the % on this answer.", "aSentId": 59283, "answer": "I don't know why people keep saying it's terrifying. People who can't code would just throw out crap code anyway, by looking it up in books, stealing from co workers, or simply working around the issue, maybe even ignoring it. By googling and taking the top answers from stack overflow, they at least get the worst of options sorted away by votes from other users.\n\nPeople who enjoy their job, like to code, and might even be average (or above) at it, will use Stackoverflow to speed up their work and explain tough concepts. Many of the best \"teachings\" in coding I've gotten from 2-3 page answers with &gt; 500 votes, written by someone who knew LOTS about that specific subject. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59284, "question": "I don't know why people keep saying it's terrifying. People who can't code would just throw out crap code anyway, by looking it up in books, stealing from co workers, or simply working around the issue, maybe even ignoring it. By googling and taking the top answers from stack overflow, they at least get the worst of options sorted away by votes from other users.\n\nPeople who enjoy their job, like to code, and might even be average (or above) at it, will use Stackoverflow to speed up their work and explain tough concepts. Many of the best \"teachings\" in coding I've gotten from 2-3 page answers with &gt; 500 votes, written by someone who knew LOTS about that specific subject. ", "aSentId": 59285, "answer": "Oh, I absolutely agree. I find myself learning things from answers there a few times a week. On the other hand, I've inherited projects from developers whose job description could have been \"search stackoverflow for how to do this and copy-paste the code into the application\" and they're not the nicest projects to work on. I'm definitely one of the 72.1% who use SO \"to get help for my job,\" but the idea of not being able to do this job at all without SO answers isn't the same thing at all.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59290, "question": "StackOverflow is a repository for \"a way\" to do things. Very rarely is it the best way, and often isn't even correct. All that said, its a good resource as long as you don't have to participate. You think subs like /r/politics are bad, the 'mod' culture on that site is 10x worse. ", "aSentId": 59291, "answer": "I disagree, I go there often and rarely see politics at play. Not that it doesn't happen, but certainly nothing like a politics subreddit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59292, "question": "I disagree, I go there often and rarely see politics at play. Not that it doesn't happen, but certainly nothing like a politics subreddit.", "aSentId": 59293, "answer": "Then you must avoid Meta", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59294, "question": "Then you must avoid Meta", "aSentId": 59295, "answer": "Well.. meta **is** the place for that.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59290, "question": "StackOverflow is a repository for \"a way\" to do things. Very rarely is it the best way, and often isn't even correct. All that said, its a good resource as long as you don't have to participate. You think subs like /r/politics are bad, the 'mod' culture on that site is 10x worse. ", "aSentId": 59297, "answer": "I went to /r/politics yesterday, looking for a sub that took a neutral view of democrat/republican politics.\n\n... /r/politics was NOT such a sub.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59298, "question": "I went to /r/politics yesterday, looking for a sub that took a neutral view of democrat/republican politics.\n\n... /r/politics was NOT such a sub.", "aSentId": 59299, "answer": "/r/neutralpolitics", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59298, "question": "I went to /r/politics yesterday, looking for a sub that took a neutral view of democrat/republican politics.\n\n... /r/politics was NOT such a sub.", "aSentId": 59301, "answer": "Considering there is a major world election in under a month, it's incredible it's against the rules to talk about it on a default sub regarding politics (by it's name). Don't understand why it's not called /r/uspolitics.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59298, "question": "I went to /r/politics yesterday, looking for a sub that took a neutral view of democrat/republican politics.\n\n... /r/politics was NOT such a sub.", "aSentId": 59303, "answer": "There are zero rational discussions happening in /r/politics. That sub gives puppies cancer", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59290, "question": "StackOverflow is a repository for \"a way\" to do things. Very rarely is it the best way, and often isn't even correct. All that said, its a good resource as long as you don't have to participate. You think subs like /r/politics are bad, the 'mod' culture on that site is 10x worse. ", "aSentId": 59305, "answer": "&gt; You think subs like /r/politics[1] are bad, the 'mod' culture on that site is 10x worse.\n\nYou\u2019ve obviously had a very bad personal experience (and I won\u2019t deny that this happens) but let me tell you unambiguously that this is *not* a representative experience. It is, in fact, hilariously far from the truth. Moderation on Stack Overflow is certainly not perfect, but it is probably better, by every objective criterion, than on all other websites of the same scale.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59306, "question": "&gt; You think subs like /r/politics[1] are bad, the 'mod' culture on that site is 10x worse.\n\nYou\u2019ve obviously had a very bad personal experience (and I won\u2019t deny that this happens) but let me tell you unambiguously that this is *not* a representative experience. It is, in fact, hilariously far from the truth. Moderation on Stack Overflow is certainly not perfect, but it is probably better, by every objective criterion, than on all other websites of the same scale.", "aSentId": 59307, "answer": "I can confirm, Stack Overflow has worst mods of any site I've ever been to, and I've seen a lot of mod crap.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59306, "question": "&gt; You think subs like /r/politics[1] are bad, the 'mod' culture on that site is 10x worse.\n\nYou\u2019ve obviously had a very bad personal experience (and I won\u2019t deny that this happens) but let me tell you unambiguously that this is *not* a representative experience. It is, in fact, hilariously far from the truth. Moderation on Stack Overflow is certainly not perfect, but it is probably better, by every objective criterion, than on all other websites of the same scale.", "aSentId": 59309, "answer": "I disagree, not from a personal experience but through observation and use. You obviously have a personal investment in SO, otherwise a casual peruse if its Meta threads would set off alarm bells", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59311, "question": "&gt;Developers increasingly prefer spaces as they gain experience. \n\nHeh, either they phrased this badly, or they're making completely the wrong conclusion.", "aSentId": 59312, "answer": "I'm guessing this might be due to modern IDE's and the like. Back in the day a tab was always an obscene 8 spaces. Some other things I could think of is that using spaces allows more freedom in alignment and maybe more inexperienced people don't care as much about it.\n\nNow, the correct thing is of course to use tabs for indentation and spaces for alignment, but I work with a team and I see stuff like \"space space space space tab space space tab space variable tab = value\". It's just infuriating, and I'd rather just have all spaces and be done with it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59311, "question": "&gt;Developers increasingly prefer spaces as they gain experience. \n\nHeh, either they phrased this badly, or they're making completely the wrong conclusion.", "aSentId": 59314, "answer": "How so?  I read it as saying that more experienced developers are more likely to prefer spaces while less experienced ones prefer tabs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59315, "question": "How so?  I read it as saying that more experienced developers are more likely to prefer spaces while less experienced ones prefer tabs.", "aSentId": 59316, "answer": "That's what I was guessing they meant, but what you said is much clearer than what the link says. It makes it sound like as you get more experience you switch from tabs to spaces.\n\nI'm probably just being pedantic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59317, "question": "That's what I was guessing they meant, but what you said is much clearer than what the link says. It makes it sound like as you get more experience you switch from tabs to spaces.\n\nI'm probably just being pedantic.", "aSentId": 59318, "answer": "I suspect that is what happens.  How else would you explain the correlation?\n\nAlso are you a developer for the rekonq browser?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59319, "question": "I suspect that is what happens.  How else would you explain the correlation?\n\nAlso are you a developer for the rekonq browser?", "aSentId": 59320, "answer": "I thought it was more likely a change in coding conventions, where when more experienced developers started learning it was more typical to use spaces, but convention has now switched to mostly tabs. No idea really, this info alone isn't really enough to draw a definite conclusion either way.\n\nAnd no, I just liked the name. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59321, "question": "I thought it was more likely a change in coding conventions, where when more experienced developers started learning it was more typical to use spaces, but convention has now switched to mostly tabs. No idea really, this info alone isn't really enough to draw a definite conclusion either way.\n\nAnd no, I just liked the name. :)", "aSentId": 59322, "answer": "I would be curious to see which technologies these devs are using. Some tech is more amenable to spaces than tabs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59311, "question": "&gt;Developers increasingly prefer spaces as they gain experience. \n\nHeh, either they phrased this badly, or they're making completely the wrong conclusion.", "aSentId": 59324, "answer": "How can you say that without having seen their data, or is it there somewhere and I missed it? Bearing in mind your personal preference or anecdotal experience is irelevant here, since they are refering specifically to what their data shows.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59326, "question": "How can you say that without having seen their data, or is it there somewhere and I missed it? Bearing in mind your personal preference or anecdotal experience is irelevant here, since they are refering specifically to what their data shows.", "aSentId": 59327, "answer": "I'm not saying that I disagree with the data, but their phrasing is a bit odd. It sounds like they're claiming that as people get more experience, they switch from tabs to spaces.\n\nI'm probably just being pedantic.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59328, "question": "I'm not saying that I disagree with the data, but their phrasing is a bit odd. It sounds like they're claiming that as people get more experience, they switch from tabs to spaces.\n\nI'm probably just being pedantic.\n\n", "aSentId": 59329, "answer": "They *are* saying that. Or, at least, more experienced developers tend to prefer spaces, which may imply that as developers gain experience, they prefer spaces (although the time period in which one began programming may also be a factor).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59328, "question": "I'm not saying that I disagree with the data, but their phrasing is a bit odd. It sounds like they're claiming that as people get more experience, they switch from tabs to spaces.\n\nI'm probably just being pedantic.\n\n", "aSentId": 59331, "answer": "Okay sorry I got you now. Nothing in their data shows anything about people's views changing, just a difference between currently experienced and inexperienced sets. It looks like you're just challenging the conclusion that experience prefers spaces.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59334, "question": "Anyone know if Nodejsor Angularjs are included with Javascript under Most Popular Technologies?", "aSentId": 59335, "answer": "Probably. If they just use their tags. Most users tag their questions with \"JavaScript\" + \"Angular\" ...\n\nBut it's still confusing since they're mixing languages and frameworks there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59337, "question": "&gt; Software development has a gender balance problem\n\nThere's imbalance but that by no means is a **problem**. No one forbids women to learn programming. Every day you see men doing female-specific jobs, and yet no one bitches about gender imbalance among hairdressers, stylists, cashiers or cooks.\n\nWomen want to latch onto programming from wrong reasons, they think it's a complete doss of a job that rewards you with easy money. I can't express how delusional one must be to think that but from my personal experience I can assure you this is how they think. In my previous workplace we had a fair share of women  showing up to the job interview who perceived programming this way - needless to say they didn't have a slightest idea about programming. We went though all that horror because of boss' polluted mind and his idea to be\n\n&gt; more proactive welcoming women into the field.\n\nNo one cares about your gender. Programmers only care about the code you produce and, let's face it, women rarely write anything but trash. No big surprise when all your knowledge comes from w3schools pages  and you're trying to compete with people who devoted their entire life to computers.", "aSentId": 59338, "answer": "&gt; Programmers only care about the code you produce\n\n\n**Holy Shit no!** \n\nIt's not only about someone's code but also about one's personality. People have to work together, have meetings, discussions -- they share a good part of their lives together. Personality matters!\n\nSo does mix of people in a team. A team full of hardcore nerds won't be as successful as a mixed team (most of the time). Almost having no women in the field **is a problem**. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59339, "question": "&gt; Programmers only care about the code you produce\n\n\n**Holy Shit no!** \n\nIt's not only about someone's code but also about one's personality. People have to work together, have meetings, discussions -- they share a good part of their lives together. Personality matters!\n\nSo does mix of people in a team. A team full of hardcore nerds won't be as successful as a mixed team (most of the time). Almost having no women in the field **is a problem**. ", "aSentId": 59340, "answer": "In my admittedly anecdotal experience working in a team without women and in a team with a lot of women is not related to the success of the team. In fact I have observed this in a small 5 person team where at one point the female dev left and we got a male replacement.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59337, "question": "&gt; Software development has a gender balance problem\n\nThere's imbalance but that by no means is a **problem**. No one forbids women to learn programming. Every day you see men doing female-specific jobs, and yet no one bitches about gender imbalance among hairdressers, stylists, cashiers or cooks.\n\nWomen want to latch onto programming from wrong reasons, they think it's a complete doss of a job that rewards you with easy money. I can't express how delusional one must be to think that but from my personal experience I can assure you this is how they think. In my previous workplace we had a fair share of women  showing up to the job interview who perceived programming this way - needless to say they didn't have a slightest idea about programming. We went though all that horror because of boss' polluted mind and his idea to be\n\n&gt; more proactive welcoming women into the field.\n\nNo one cares about your gender. Programmers only care about the code you produce and, let's face it, women rarely write anything but trash. No big surprise when all your knowledge comes from w3schools pages  and you're trying to compete with people who devoted their entire life to computers.", "aSentId": 59342, "answer": "Fuck the entire attitude you present. Programming is fucking awesome but we get harassed, ignored, not promoted, talked over and generally get a fucking awful experience in lots of companies. So rationally we leave (or never enter the field) because a not insignificant portion of other programmers are complete dicks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59343, "question": "Fuck the entire attitude you present. Programming is fucking awesome but we get harassed, ignored, not promoted, talked over and generally get a fucking awful experience in lots of companies. So rationally we leave (or never enter the field) because a not insignificant portion of other programmers are complete dicks.", "aSentId": 59344, "answer": "I don't know about harassment but male developers also get ignored, not promoted and talked over. Male developers also have to work with the dick portion of programmers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59345, "question": "I don't know about harassment but male developers also get ignored, not promoted and talked over. Male developers also have to work with the dick portion of programmers.", "aSentId": 59346, "answer": "That was my first though as well - programmers have an unexplainably low status in all companies, especially relative to the value we provide and the discipline needed to achieve competence.  I suspect women in tech are facing the same frustrations that men in tech are facing, but are just assuming that it's happening because they're women rather than because they're programmers.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59345, "question": "I don't know about harassment but male developers also get ignored, not promoted and talked over. Male developers also have to work with the dick portion of programmers.", "aSentId": 59348, "answer": "Yes, though studies have shown there's a significant difference in degree. Kill the bro culture, kill these horrible patterns and we'll stop experiencing nearly so much garbage. This _is_ the mechanism by which we are excluded.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59349, "question": "Yes, though studies have shown there's a significant difference in degree. Kill the bro culture, kill these horrible patterns and we'll stop experiencing nearly so much garbage. This _is_ the mechanism by which we are excluded.", "aSentId": 59350, "answer": "I don't know how these studies find this conclusions. I think it is near impossible to measure promotion and ignoring objectively. Certainly if I was in charge for promotions I wouldn't judge by years of experience and degree of education when promoting someone.\n\nBut here is a heretical statement - IT is the field that is probably doing best of any industry and this is true worldwide. If IT works so well why change it? Who knows maybe it is the bro culture and the horrible patterns that makes it so successful. If women are so convinced the industry is wrong they are free to build women-only companies and crash competition on the market.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59351, "question": "I don't know how these studies find this conclusions. I think it is near impossible to measure promotion and ignoring objectively. Certainly if I was in charge for promotions I wouldn't judge by years of experience and degree of education when promoting someone.\n\nBut here is a heretical statement - IT is the field that is probably doing best of any industry and this is true worldwide. If IT works so well why change it? Who knows maybe it is the bro culture and the horrible patterns that makes it so successful. If women are so convinced the industry is wrong they are free to build women-only companies and crash competition on the market.", "aSentId": 59352, "answer": "If you consider \"success\" to be concentrating capital into a very few mostly white men's hands.\n\nI don't. That's robber barony. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59351, "question": "I don't know how these studies find this conclusions. I think it is near impossible to measure promotion and ignoring objectively. Certainly if I was in charge for promotions I wouldn't judge by years of experience and degree of education when promoting someone.\n\nBut here is a heretical statement - IT is the field that is probably doing best of any industry and this is true worldwide. If IT works so well why change it? Who knows maybe it is the bro culture and the horrible patterns that makes it so successful. If women are so convinced the industry is wrong they are free to build women-only companies and crash competition on the market.", "aSentId": 59354, "answer": "Women also have trouble getting VC funding, meaning, as always that our paths to advancement are higher risk. \n\nHere's a question: have any performance reviews in your company included the words \"shrill\"? \" too aggressive\"? And are there any men who got these reviews?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59343, "question": "Fuck the entire attitude you present. Programming is fucking awesome but we get harassed, ignored, not promoted, talked over and generally get a fucking awful experience in lots of companies. So rationally we leave (or never enter the field) because a not insignificant portion of other programmers are complete dicks.", "aSentId": 59356, "answer": "Maybe you need to look inwards. I can be pretty harsh (why not, a complete dick) to women when they start into this sort of woe-is-me SJW bullshit. I guess I'm fortunate to have always worked with women who don't do it, all of whom I've gotten along great with. \n\nEveryone gets harassed, ignored, not promoted, talked over, etc. at  times. It's just part of working with other people. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59357, "question": "Maybe you need to look inwards. I can be pretty harsh (why not, a complete dick) to women when they start into this sort of woe-is-me SJW bullshit. I guess I'm fortunate to have always worked with women who don't do it, all of whom I've gotten along great with. \n\nEveryone gets harassed, ignored, not promoted, talked over, etc. at  times. It's just part of working with other people. ", "aSentId": 59358, "answer": "And actually, this is the problem. No, not everyone gets harassed. This is what must stop. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59357, "question": "Maybe you need to look inwards. I can be pretty harsh (why not, a complete dick) to women when they start into this sort of woe-is-me SJW bullshit. I guess I'm fortunate to have always worked with women who don't do it, all of whom I've gotten along great with. \n\nEveryone gets harassed, ignored, not promoted, talked over, etc. at  times. It's just part of working with other people. ", "aSentId": 59360, "answer": "Yes. But \"sometimes\" isn't alarming regularity. We get it with nearly universal regularity. Like this conversation. \"It happens to us\" \"no it doesn't. Not really\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59361, "question": "Yes. But \"sometimes\" isn't alarming regularity. We get it with nearly universal regularity. Like this conversation. \"It happens to us\" \"no it doesn't. Not really\"", "aSentId": 59362, "answer": "It's only alarmingly regular if you think every time someone disagrees with you it's because you're a woman. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59363, "question": "It's only alarmingly regular if you think every time someone disagrees with you it's because you're a woman. ", "aSentId": 59364, "answer": "Next time I feel a hand on my ass at a conference, I'll put a fork in it. You do the same. First wins. Winner buys the loser a beer. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59365, "question": "Next time I feel a hand on my ass at a conference, I'll put a fork in it. You do the same. First wins. Winner buys the loser a beer. ", "aSentId": 59366, "answer": "Haha, conferences. You'd be surprised. But, that's not exclusive to any field, that stuff happens wherever drunk people congregate.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59343, "question": "Fuck the entire attitude you present. Programming is fucking awesome but we get harassed, ignored, not promoted, talked over and generally get a fucking awful experience in lots of companies. So rationally we leave (or never enter the field) because a not insignificant portion of other programmers are complete dicks.", "aSentId": 59368, "answer": "&gt; Programming is fucking awesome\n\nWhy didn't you (women) say that 20, 30 years ago?\n\nYou say that now, because programming became financially rewarding and trendy.\n\nThat's what attract 50% of men and 80% of women to programming nowadays, not the fact that it is awesome.\n\n&gt;but we get harassed, ignored, not promoted, talked over and generally get a fucking awful experience in lots of companies\n\nYou can't be more wrong. Most companies hire women to fulfill gender quotas. So the fact that they are women helps them getting hired, not makes them being ignored. Man with the same competency level as most women hired by companies would have no chance of getting hired.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59369, "question": "&gt; Programming is fucking awesome\n\nWhy didn't you (women) say that 20, 30 years ago?\n\nYou say that now, because programming became financially rewarding and trendy.\n\nThat's what attract 50% of men and 80% of women to programming nowadays, not the fact that it is awesome.\n\n&gt;but we get harassed, ignored, not promoted, talked over and generally get a fucking awful experience in lots of companies\n\nYou can't be more wrong. Most companies hire women to fulfill gender quotas. So the fact that they are women helps them getting hired, not makes them being ignored. Man with the same competency level as most women hired by companies would have no chance of getting hired.", "aSentId": 59370, "answer": "I've been doing it for 20 years, and we did say that 20, 30 years ago. In fact, most computer programmers were women originally. And into the beginning of the 80s. We were driven out.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59371, "question": "I've been doing it for 20 years, and we did say that 20, 30 years ago. In fact, most computer programmers were women originally. And into the beginning of the 80s. We were driven out.", "aSentId": 59372, "answer": "&gt; We were driven out.\n\nHow?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59373, "question": "&gt; We were driven out.\n\nHow?", "aSentId": 59374, "answer": "Increasing harassment. Professional organizations that were male dominated. The requirement for a four year degree being imposed and the end of vocational programs. The new four year programs being exclusive, and often both man and math dominated, despite it not being relevant to the job. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59375, "question": "Increasing harassment. Professional organizations that were male dominated. The requirement for a four year degree being imposed and the end of vocational programs. The new four year programs being exclusive, and often both man and math dominated, despite it not being relevant to the job. ", "aSentId": 59376, "answer": "&gt;&gt;&gt; We were driven out.\n\n&gt;&gt; How?\n\n&gt; The requirement for a four year degree ... The new four year programs being ... math dominated\n\nWhoa, whoa, whoa...\n\nDid you just admit that women are worse in math than men?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59377, "question": "&gt;&gt;&gt; We were driven out.\n\n&gt;&gt; How?\n\n&gt; The requirement for a four year degree ... The new four year programs being ... math dominated\n\nWhoa, whoa, whoa...\n\nDid you just admit that women are worse in math than men?", "aSentId": 59378, "answer": "Nope. Exclusive colleges are a barrier though. We learn math despite people refusing to teach us. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59379, "question": "Nope. Exclusive colleges are a barrier though. We learn math despite people refusing to teach us. ", "aSentId": 59380, "answer": "&gt; people refusing to teach us\n\nDo you live in Saudi Arabia?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59375, "question": "Increasing harassment. Professional organizations that were male dominated. The requirement for a four year degree being imposed and the end of vocational programs. The new four year programs being exclusive, and often both man and math dominated, despite it not being relevant to the job. ", "aSentId": 59382, "answer": "Math is very much relevant to the job.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59383, "question": "Math is very much relevant to the job.", "aSentId": 59384, "answer": "I'm well aware of when it is and isn't. 20 years in the industry here. \n\nMost programming uses little more than middle school logic. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59385, "question": "I'm well aware of when it is and isn't. 20 years in the industry here. \n\nMost programming uses little more than middle school logic. ", "aSentId": 59386, "answer": "And yet, we have so many programmers who cannot even properly apply middle school logic to their programs. This results in daily posts to The Daily WTF. I'm sure that in your 20 YEARS IN THE INDUSTRY, you've seen multi-page if-statements what could've been reduced to a single line of code using math to index into an array.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59371, "question": "I've been doing it for 20 years, and we did say that 20, 30 years ago. In fact, most computer programmers were women originally. And into the beginning of the 80s. We were driven out.", "aSentId": 59388, "answer": "How the hell were you driven out? Who drove you out? I mean Jobs, Gates, Ellison started their companies from 0. Why didn't women do it at the time when they were supposedly driven out?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59371, "question": "I've been doing it for 20 years, and we did say that 20, 30 years ago. In fact, most computer programmers were women originally. And into the beginning of the 80s. We were driven out.", "aSentId": 59390, "answer": "&gt; In fact, most computer programmers were women originally.\n\nIn times when computer programmer's job was to just copy program from paper to the machine, not *design and write* that program...\n\n&gt;We were driven out.\n\nYes, you were driven out, by invention of copy&amp;paste.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59391, "question": "&gt; In fact, most computer programmers were women originally.\n\nIn times when computer programmer's job was to just copy program from paper to the machine, not *design and write* that program...\n\n&gt;We were driven out.\n\nYes, you were driven out, by invention of copy&amp;paste.", "aSentId": 59392, "answer": "Copy from paper, eh? You try copying a math paper into a compiler and see how far you get. ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59337, "question": "&gt; Software development has a gender balance problem\n\nThere's imbalance but that by no means is a **problem**. No one forbids women to learn programming. Every day you see men doing female-specific jobs, and yet no one bitches about gender imbalance among hairdressers, stylists, cashiers or cooks.\n\nWomen want to latch onto programming from wrong reasons, they think it's a complete doss of a job that rewards you with easy money. I can't express how delusional one must be to think that but from my personal experience I can assure you this is how they think. In my previous workplace we had a fair share of women  showing up to the job interview who perceived programming this way - needless to say they didn't have a slightest idea about programming. We went though all that horror because of boss' polluted mind and his idea to be\n\n&gt; more proactive welcoming women into the field.\n\nNo one cares about your gender. Programmers only care about the code you produce and, let's face it, women rarely write anything but trash. No big surprise when all your knowledge comes from w3schools pages  and you're trying to compete with people who devoted their entire life to computers.", "aSentId": 59394, "answer": "&gt; No big surprise when all your knowledge comes from w3schools pages and you're trying to compete with people who devoted their entire life to computers.\n\nThis is a super sexist statement. The women you're passing over? Same four years of school. Or more. Quite often doing this since our teens or earlier. The presumption that we're hacks straight off w3schools _is_ the bullshit we put up with daily.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59397, "question": "I wouldn't say \"women rarely write anything but trash\", but I agree with the rest of your post.\n\n&gt; Every day you see men doing female-specific jobs, and yet no one bitches about gender imbalance among hairdressers, stylists, cashiers or cooks.\n\nExactly. **Where is the outcry?** Why is it vital that software development achieve equal ratios? I certainly have no problem welcoming more diversity into the field. I work with several female engineers, and they are incredibly talented, but we need to stop with this idea that men (particularly white men) are \"dominating\" the space. Either you are a good programmer or you aren't.", "aSentId": 59398, "answer": "Not true. those women are all fucking fantastic because you've created a hell of a high-pass filter. You have to be _exceptional_ to be treated as an equal.\n\nCrap programmers get promoted if they're men. Only exceptional ones if they're women.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59399, "question": "Not true. those women are all fucking fantastic because you've created a hell of a high-pass filter. You have to be _exceptional_ to be treated as an equal.\n\nCrap programmers get promoted if they're men. Only exceptional ones if they're women.", "aSentId": 59400, "answer": "Simply not true at the places I've worked.\n\nEven if it were true, I'd put a million dollars on the bet that, even if we purged all prejudice/sexism everywhere, the ratio would not magically drift to 50%. Women just are not into STEM as much as men are, **and that is fine**.\n\nAgain, why does no one care that cosmetology is like 95% women?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59401, "question": "Simply not true at the places I've worked.\n\nEven if it were true, I'd put a million dollars on the bet that, even if we purged all prejudice/sexism everywhere, the ratio would not magically drift to 50%. Women just are not into STEM as much as men are, **and that is fine**.\n\nAgain, why does no one care that cosmetology is like 95% women?", "aSentId": 59402, "answer": "Because cosmetology is mostly a shit job, requires relatively high financial risk to start and a low reward, and because cosmetology is not involved in the actual re-shaping of our world, communication infrastructure, society, and tools. \n\nIn essence, we _are_ worried that women are forced into high risk low reward professions because of asshole behavior in the better ones.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59403, "question": "Because cosmetology is mostly a shit job, requires relatively high financial risk to start and a low reward, and because cosmetology is not involved in the actual re-shaping of our world, communication infrastructure, society, and tools. \n\nIn essence, we _are_ worried that women are forced into high risk low reward professions because of asshole behavior in the better ones.", "aSentId": 59404, "answer": "I'm all in favor of purging sexism in the workplace. Again, I have no problem with women entering this industry. I also agree that diversity is a good thing.\n\nI just don't subscribe to this line of thought that, when we see the ratio (10:1 or 100:1 or whatever it is) of men to women, we need to flag it as a problem. **The ratio is not the problem.** The sexism, prejudice, etc. are problems. Let's *just* focus on those. If, after all is said and done, the ratio is still something like 5:1, GET OVER IT.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59405, "question": "I'm all in favor of purging sexism in the workplace. Again, I have no problem with women entering this industry. I also agree that diversity is a good thing.\n\nI just don't subscribe to this line of thought that, when we see the ratio (10:1 or 100:1 or whatever it is) of men to women, we need to flag it as a problem. **The ratio is not the problem.** The sexism, prejudice, etc. are problems. Let's *just* focus on those. If, after all is said and done, the ratio is still something like 5:1, GET OVER IT.", "aSentId": 59406, "answer": "It's not an either/or problem. More gender diversity helps combat sexism, prejudice, etc. All of that goes hand in hand, there is no \"more important than the rest\" issue here.\n\n(Also applies to other -isms and -phobias.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59407, "question": "It's not an either/or problem. More gender diversity helps combat sexism, prejudice, etc. All of that goes hand in hand, there is no \"more important than the rest\" issue here.\n\n(Also applies to other -isms and -phobias.)", "aSentId": 59408, "answer": "I'm just afraid that we're gonna see far-reaching legislation that penalizes applicants for daring to be white and male. We need to *encourage* diversity, not *mandate* it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59409, "question": "I'm just afraid that we're gonna see far-reaching legislation that penalizes applicants for daring to be white and male. We need to *encourage* diversity, not *mandate* it.", "aSentId": 59410, "answer": "That's a very reasonable concern. However, I don't think anybody is talking about legislation here.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59411, "question": "That's a very reasonable concern. However, I don't think anybody is talking about legislation here.", "aSentId": 59412, "answer": "I see it more as an inevitable conclusion of sorts. Sure, no one is outright saying it, but as long as people keep shouting that men \"dominate\" the industry and that women are oh-so-oppressed, we're gonna see some abrupt corrective action from The White House. #ThanksObama", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59405, "question": "I'm all in favor of purging sexism in the workplace. Again, I have no problem with women entering this industry. I also agree that diversity is a good thing.\n\nI just don't subscribe to this line of thought that, when we see the ratio (10:1 or 100:1 or whatever it is) of men to women, we need to flag it as a problem. **The ratio is not the problem.** The sexism, prejudice, etc. are problems. Let's *just* focus on those. If, after all is said and done, the ratio is still something like 5:1, GET OVER IT.", "aSentId": 59414, "answer": "Yes. The ratio is the evidence of the problem, not the problem. Unless you have a _well-substantiated_ reason that half the population is somehow not interested.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59415, "question": "Yes. The ratio is the evidence of the problem, not the problem. Unless you have a _well-substantiated_ reason that half the population is somehow not interested.", "aSentId": 59416, "answer": "I don't. I have only anecdotes like most other people. It just so happens that my anecdotes line up with many others' anecdotes. Hence, I maintain my belief until I see some science.\n\nStill, I question whether the ratio is \"evidence of the problem\". Does anyone have a well-substantiated reason to believe that half the population is indeed interested?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59417, "question": "I don't. I have only anecdotes like most other people. It just so happens that my anecdotes line up with many others' anecdotes. Hence, I maintain my belief until I see some science.\n\nStill, I question whether the ratio is \"evidence of the problem\". Does anyone have a well-substantiated reason to believe that half the population is indeed interested?", "aSentId": 59418, "answer": "Interested in a good job, stable life, thoughtful work, and to affect the future of the world? I would figure that a given. We're not different from you in that regard. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59419, "question": "Interested in a good job, stable life, thoughtful work, and to affect the future of the world? I would figure that a given. We're not different from you in that regard. ", "aSentId": 59420, "answer": "That's an oversimplification. Certainly most humans are interested in those things, but not everyone believes software is the best (or most interesting) avenue to achieve them. Have you not known people to have a burning passion to do X only to see them give up on X a month later? (And not for gender diversity problems...) I wanna go to space... but I really do not want to go through the training and preparation to do so. Plus, I don't wanna leave earth. 8D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59421, "question": "That's an oversimplification. Certainly most humans are interested in those things, but not everyone believes software is the best (or most interesting) avenue to achieve them. Have you not known people to have a burning passion to do X only to see them give up on X a month later? (And not for gender diversity problems...) I wanna go to space... but I really do not want to go through the training and preparation to do so. Plus, I don't wanna leave earth. 8D", "aSentId": 59422, "answer": "Yes but I'm telling you that this is not why we don't enter the field. We don't enter the field because the costs are too high. We will face uphill battles in addition to the normal frustrations of being a programmer. \n\nWe get talked down to, our experience ignored, asked to fetch sandwiches or coffee, asked if we're recruiters at meetups, asked to present on women in tech panels instead of on tech panels at conferences. It is made clear we are not valued in the industry. And yet we persist. That we are so driven to try to overcome the utter crap our jobs heap on us is a testament to just how much we want to do this. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59423, "question": "Yes but I'm telling you that this is not why we don't enter the field. We don't enter the field because the costs are too high. We will face uphill battles in addition to the normal frustrations of being a programmer. \n\nWe get talked down to, our experience ignored, asked to fetch sandwiches or coffee, asked if we're recruiters at meetups, asked to present on women in tech panels instead of on tech panels at conferences. It is made clear we are not valued in the industry. And yet we persist. That we are so driven to try to overcome the utter crap our jobs heap on us is a testament to just how much we want to do this. ", "aSentId": 59424, "answer": "You *do* know this is not true everywhere, right? I specifically bring up these kinds of stories with the female engineers where I work, and they specifically point out they had no such difficulties. I know it's a small sample, but I can only imagine that San Francisco is full of these womanizing brogrammers because that's where most of these evil stories seem to come from. Maybe you just live in a terrible place.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59405, "question": "I'm all in favor of purging sexism in the workplace. Again, I have no problem with women entering this industry. I also agree that diversity is a good thing.\n\nI just don't subscribe to this line of thought that, when we see the ratio (10:1 or 100:1 or whatever it is) of men to women, we need to flag it as a problem. **The ratio is not the problem.** The sexism, prejudice, etc. are problems. Let's *just* focus on those. If, after all is said and done, the ratio is still something like 5:1, GET OVER IT.", "aSentId": 59426, "answer": "Here's the stats that need fixing: substantially more women than men live in poverty. Women earn substantially less for the same work. Non white women more so. We are fired if we complain of harassment, so we submit to groping and requests for sex from our bosses, or lose our jobs. Asking for a raise to market rate more often gets us fired. It rarely comes off as showing initiative. Our promotions are denied because we're too passive, unless we are less passive in which case we're passed over as hard to work with, bitchy and too aggressive. \n\nWe routinely make less after years on the job than men fresh put of college. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59427, "question": "Here's the stats that need fixing: substantially more women than men live in poverty. Women earn substantially less for the same work. Non white women more so. We are fired if we complain of harassment, so we submit to groping and requests for sex from our bosses, or lose our jobs. Asking for a raise to market rate more often gets us fired. It rarely comes off as showing initiative. Our promotions are denied because we're too passive, unless we are less passive in which case we're passed over as hard to work with, bitchy and too aggressive. \n\nWe routinely make less after years on the job than men fresh put of college. ", "aSentId": 59428, "answer": "You seriously need to move. You are dead convinced that the way you are treated is the way *all* women are treated in tech.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59399, "question": "Not true. those women are all fucking fantastic because you've created a hell of a high-pass filter. You have to be _exceptional_ to be treated as an equal.\n\nCrap programmers get promoted if they're men. Only exceptional ones if they're women.", "aSentId": 59430, "answer": "Wow, you are retardedly delusional. You may need professional help. I'm sure every CEO is like \n\n\"I'm going to promote the shit bag and pay him more even though there is a woman performing better than him because, fuck women\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59433, "question": "First off, I can't believe nearly half the people interviewed have never taken a university course in programming.\n\nOn that, I think it'd be interesting to see how the halves compare to each other in terms of proficiency, pay, satisfaction, etc. \n\nEDIT:  I'm not saying this to down one of the sides.  I'm genuinely curious.  I know at my place they hired a pre-college intern for the summer.  5 years later, he's never attended college and is now an excellent senior dev.", "aSentId": 59434, "answer": "Well if that is true it means the HR staff is mentally retarded. Those resumes should never even reach consideration for interview without a significant body of work. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59435, "question": "Well if that is true it means the HR staff is mentally retarded. Those resumes should never even reach consideration for interview without a significant body of work. ", "aSentId": 59436, "answer": "He got hired as a pre-college intern, probably making less than $10/hour. The significant body of work is what he did for the company after that. I did the same thing, except I did finish my degree. (which probably cost me six figures in lost income between the time my boss told me I could quit school and start as a full developer and when I graduated). \n\nAs for OP's question, I can say that what I learned in school between the time I was offered the full time job and graduation has definitely made me, if not a better programmer, at least a more thoughtful one, if that makes any sense.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59438, "question": "The graph \"VII. Women Who Code\" is interesting because as they say:\n\n&gt;  We hope this means more women are joining the industry and closing the gender gap.\n\nBut in my experience:\n\n&gt; We hope this means that women are tiring of the bro-culture and other male social disorders and are finally choosing another field where they don't have to put up with it.\n\nEdit: not a female, but married to one who is an engineer\n\n", "aSentId": 59439, "answer": "&gt;We hope this means that women are tiring of the bro-culture and other male social disorders and are finally choosing another field where they don't have to put up with it.\n\nIsn't this why many women *leave* the industry?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59440, "question": "&gt;We hope this means that women are tiring of the bro-culture and other male social disorders and are finally choosing another field where they don't have to put up with it.\n\nIsn't this why many women *leave* the industry?", "aSentId": 59441, "answer": "Exactly... just another plausible explanation for the graph.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59443, "question": "Anatomy of a Program in Memory", "aSentId": 59444, "answer": "I really like this guy's writing. \n\nHe gives a thorough description of the main topic, but he also finds a good balance between assuming the reader knows nothing, and not dropping into too much unnecessary detail. It's also pretty easy reading.\n\nI think this shows why it's important to know your target audience.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59445, "question": "I really like this guy's writing. \n\nHe gives a thorough description of the main topic, but he also finds a good balance between assuming the reader knows nothing, and not dropping into too much unnecessary detail. It's also pretty easy reading.\n\nI think this shows why it's important to know your target audience.", "aSentId": 59446, "answer": "Well, i really think that you need to have some experiences about the theme (at least for me)... BUT, i think it's readable when you have that informatic experience and i enjoyed to read that article !\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59445, "question": "I really like this guy's writing. \n\nHe gives a thorough description of the main topic, but he also finds a good balance between assuming the reader knows nothing, and not dropping into too much unnecessary detail. It's also pretty easy reading.\n\nI think this shows why it's important to know your target audience.", "aSentId": 59448, "answer": "If you like this topic and style you should definitely read Tannenbaum's Modern Operating Systems, it's great", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59445, "question": "I really like this guy's writing. \n\nHe gives a thorough description of the main topic, but he also finds a good balance between assuming the reader knows nothing, and not dropping into too much unnecessary detail. It's also pretty easy reading.\n\nI think this shows why it's important to know your target audience.", "aSentId": 59450, "answer": "Came here to say the same thing. I'm looking forward for new posts.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59443, "question": "Anatomy of a Program in Memory", "aSentId": 59452, "answer": "\"Like the federal budget, it only expands.\" Ahahahahahhaahahah", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59443, "question": "Anatomy of a Program in Memory", "aSentId": 59454, "answer": "Honest question: Suppose RAM was always incredibly cheap and fast and maintained state with the power off. How would OS'es have been designed differently?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59455, "question": "Honest question: Suppose RAM was always incredibly cheap and fast and maintained state with the power off. How would OS'es have been designed differently?", "aSentId": 59456, "answer": "This is similar to language runtimes which have a persistent image, such as Smalltalk. There's a well-known observation about Smalltalk that some of the objects in the runtime havent stopped running since the 1970s.\n\nBasically the computer and it's state become much less distinct. Some say that makes it much more like the real world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59457, "question": "This is similar to language runtimes which have a persistent image, such as Smalltalk. There's a well-known observation about Smalltalk that some of the objects in the runtime havent stopped running since the 1970s.\n\nBasically the computer and it's state become much less distinct. Some say that makes it much more like the real world.", "aSentId": 59458, "answer": "What do you mean by this? The interpreter saves it state after every run and loads it at the start?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59459, "question": "What do you mean by this? The interpreter saves it state after every run and loads it at the start?", "aSentId": 59460, "answer": "&gt; What do you mean by this?\n\nThat you can't work around bugs by rebooting. ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59461, "question": "&gt; What do you mean by this?\n\nThat you can't work around bugs by rebooting. ;)", "aSentId": 59462, "answer": "The best kind of workaround! \nI remember a software project I had to submit in uni which I had to demonstrate the features in a certain order or all hell would break loose. Pretty sure I'm better programmer now...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59455, "question": "Honest question: Suppose RAM was always incredibly cheap and fast and maintained state with the power off. How would OS'es have been designed differently?", "aSentId": 59464, "answer": "No more paging. And I'd assume you'd have all programs loaded into memory at once ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59455, "question": "Honest question: Suppose RAM was always incredibly cheap and fast and maintained state with the power off. How would OS'es have been designed differently?", "aSentId": 59466, "answer": "Have a look at persistent operating systems like KeyKOS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59467, "question": "Have a look at persistent operating systems like KeyKOS.", "aSentId": 59468, "answer": "Wow, some old roots there!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59470, "question": "Nitpick:\n\n&gt; Once virtual addresses are enabled, they apply to *all software* running in the machine, *including the kernel itself*. Thus a portion of the virtual address space must be reserved to the kernel:\n\nThis isn't technically accurate: you could give the kernel its own virtual address space and switch to that whenever you enter kernel mode. It's just less efficient.", "aSentId": 59471, "answer": "(For x86 at least) you still need a section reserved for the kernel in every process, even if you put the vast majority of your kernel in it's own virtual address space.  The IDT entries are virtual addresses, not physical.  This is what OSX had to do.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59472, "question": "(For x86 at least) you still need a section reserved for the kernel in every process, even if you put the vast majority of your kernel in it's own virtual address space.  The IDT entries are virtual addresses, not physical.  This is what OSX had to do.", "aSentId": 59473, "answer": "Yeah, the Linux implementation of this reserved 16MB for the IDT, the old vsyscall page, the TSS, and the kernel stack. 16MB out of 4GB isn't awful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59470, "question": "Nitpick:\n\n&gt; Once virtual addresses are enabled, they apply to *all software* running in the machine, *including the kernel itself*. Thus a portion of the virtual address space must be reserved to the kernel:\n\nThis isn't technically accurate: you could give the kernel its own virtual address space and switch to that whenever you enter kernel mode. It's just less efficient.", "aSentId": 59475, "answer": "Linux actually has (or had) a \"4G/4G\" VM split option, for people who needed to run really big stuff on 32-bit (mostly PAE) systems. It does have a performance impact, as you say, and people mostly lost interest once amd64 really caught on.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59470, "question": "Nitpick:\n\n&gt; Once virtual addresses are enabled, they apply to *all software* running in the machine, *including the kernel itself*. Thus a portion of the virtual address space must be reserved to the kernel:\n\nThis isn't technically accurate: you could give the kernel its own virtual address space and switch to that whenever you enter kernel mode. It's just less efficient.", "aSentId": 59477, "answer": "Also, aren't static variables in C *always* initialized?\n\nEDIT: from C99 standard section 6.7.8 item 10:\n\nIf an object that has automatic storage duration is not initialized explicitly, its value is indeterminate. **If an object that has static storage duration is not initialized explicitly**, then:\n\n* if it has pointer type, it is initialized to a null pointer;\n* if it has arithmetic type, it is initialized to (positive or unsigned) zero;\n* if it is an aggregate, every member is initialized (recursively) according to these rules;\n* if it is a union, the first named member is initialized (recursively) according to these rules.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59478, "question": "Also, aren't static variables in C *always* initialized?\n\nEDIT: from C99 standard section 6.7.8 item 10:\n\nIf an object that has automatic storage duration is not initialized explicitly, its value is indeterminate. **If an object that has static storage duration is not initialized explicitly**, then:\n\n* if it has pointer type, it is initialized to a null pointer;\n* if it has arithmetic type, it is initialized to (positive or unsigned) zero;\n* if it is an aggregate, every member is initialized (recursively) according to these rules;\n* if it is a union, the first named member is initialized (recursively) according to these rules.", "aSentId": 59479, "answer": "They're always initialized to zero if you don't specify a value. That's the distinction between the BSS segment (initialized to zero) and the data segment (whatever value you specify).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59478, "question": "Also, aren't static variables in C *always* initialized?\n\nEDIT: from C99 standard section 6.7.8 item 10:\n\nIf an object that has automatic storage duration is not initialized explicitly, its value is indeterminate. **If an object that has static storage duration is not initialized explicitly**, then:\n\n* if it has pointer type, it is initialized to a null pointer;\n* if it has arithmetic type, it is initialized to (positive or unsigned) zero;\n* if it is an aggregate, every member is initialized (recursively) according to these rules;\n* if it is a union, the first named member is initialized (recursively) according to these rules.", "aSentId": 59481, "answer": "Yes, but stuff that's initialized to nonzero has the initial value stored in the data segment of the program's disk image, while stuff that's initialized to zero doesn't  have its value stored at all; it just gets an address in BSS, and BSS is initialized to the proper number of zeroes at runtime.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59485, "question": "&gt; Once virtual addresses are enabled, they apply to all software running in the machine, including the kernel itself. \n\n\"In the machine\" or \"on that core\"? I doubt that different processes running simultaneously on different cores share virtual address space.", "aSentId": 59486, "answer": "My understanding is that virtual addresses are on a per processes basis, so processes should not share a virtual address space regardless of what core they might run on. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59485, "question": "&gt; Once virtual addresses are enabled, they apply to all software running in the machine, including the kernel itself. \n\n\"In the machine\" or \"on that core\"? I doubt that different processes running simultaneously on different cores share virtual address space.", "aSentId": 59488, "answer": "Each process has their own virtual address space regardless of which core they are running on. The kernel is usually mapped into each processes' virtual address space to allow for context switching.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59485, "question": "&gt; Once virtual addresses are enabled, they apply to all software running in the machine, including the kernel itself. \n\n\"In the machine\" or \"on that core\"? I doubt that different processes running simultaneously on different cores share virtual address space.", "aSentId": 59490, "answer": "Yeah, his statement is only true on x86 on a single core machine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59493, "question": "HPC is Dying...And MPI Killed It", "aSentId": 59494, "answer": "Definitely good points made in the article. You certainly see a divide between the  \"old guard\" HPC mindset where MPI is a required skill and the \"new guard\" which is using things like Spark, Hadoop and Chapel (as mentioned in the article). And then there are even newer langauges like Julia that seem to be taking aim at the HPC space.\n\nIt would be great to have a language that handles vectorization well (as Julia promises to) and actor based parallelism (again Julia, but also several other languages like Erlang/Elixer, Rust) as well as shared-memory parallelism (without threads preferably, maybe that leaves Haskell's software transactional memory). And then take it a step further and have that one language be able to target GPUs and even programmable hardware directly (FPGAs). ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59495, "question": "Definitely good points made in the article. You certainly see a divide between the  \"old guard\" HPC mindset where MPI is a required skill and the \"new guard\" which is using things like Spark, Hadoop and Chapel (as mentioned in the article). And then there are even newer langauges like Julia that seem to be taking aim at the HPC space.\n\nIt would be great to have a language that handles vectorization well (as Julia promises to) and actor based parallelism (again Julia, but also several other languages like Erlang/Elixer, Rust) as well as shared-memory parallelism (without threads preferably, maybe that leaves Haskell's software transactional memory). And then take it a step further and have that one language be able to target GPUs and even programmable hardware directly (FPGAs). ", "aSentId": 59496, "answer": "&gt;as well as shared-memory parallelism (without threads\n\nWhat are you sharing memory between if not separate threads of execution?\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59497, "question": "&gt;as well as shared-memory parallelism (without threads\n\nWhat are you sharing memory between if not separate threads of execution?\n", "aSentId": 59498, "answer": "Without using threads as the programming abstraction because that leads to all sorts of trouble. Software transactional memory is one alternative. Yes there are threads of execution underneath, but you're not having to worry about things like race conditions that you do when you're programming with threads directly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59495, "question": "Definitely good points made in the article. You certainly see a divide between the  \"old guard\" HPC mindset where MPI is a required skill and the \"new guard\" which is using things like Spark, Hadoop and Chapel (as mentioned in the article). And then there are even newer langauges like Julia that seem to be taking aim at the HPC space.\n\nIt would be great to have a language that handles vectorization well (as Julia promises to) and actor based parallelism (again Julia, but also several other languages like Erlang/Elixer, Rust) as well as shared-memory parallelism (without threads preferably, maybe that leaves Haskell's software transactional memory). And then take it a step further and have that one language be able to target GPUs and even programmable hardware directly (FPGAs). ", "aSentId": 59500, "answer": "I'm working on [something](https://github.com/metabench/opencljs-experiments) that runs code on the GPU while abstracting away some of the complexities / boilerplate of OpenCL. It's interesting to think about how it could be parallelised over a network too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59493, "question": "HPC is Dying...And MPI Killed It", "aSentId": 59502, "answer": "&gt;internet-scale\n\nYou mean web scale?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59493, "question": "HPC is Dying...And MPI Killed It", "aSentId": 59504, "answer": "Did I miss it or did \"MPI\" remain undefined for the entire article??\n\nYes I can google it, but the article was pretty understandable for someone like me who's never really touched those areas of computing, so seems like an oversight to assume I know the anagrams.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59505, "question": "Did I miss it or did \"MPI\" remain undefined for the entire article??\n\nYes I can google it, but the article was pretty understandable for someone like me who's never really touched those areas of computing, so seems like an oversight to assume I know the anagrams.", "aSentId": 59506, "answer": "Message Passing Interface.\n\nHigh Performance Computing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59507, "question": "Message Passing Interface.\n\nHigh Performance Computing.", "aSentId": 59508, "answer": "Just because I feel the need to inject some actual anagrams into this discussion:\n\nGiantess framing escapees.\n\nChurch preempting main goof.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59507, "question": "Message Passing Interface.\n\nHigh Performance Computing.", "aSentId": 59510, "answer": "Anagrams / Acronyms ;)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59511, "question": "Anagrams / Acronyms ;)", "aSentId": 59512, "answer": "Initialisms. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59505, "question": "Did I miss it or did \"MPI\" remain undefined for the entire article??\n\nYes I can google it, but the article was pretty understandable for someone like me who's never really touched those areas of computing, so seems like an oversight to assume I know the anagrams.", "aSentId": 59514, "answer": "You missed it. The article did link to the wikipedia entry for MPI, but not until just under the heading \"Why MPI was so successful\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59505, "question": "Did I miss it or did \"MPI\" remain undefined for the entire article??\n\nYes I can google it, but the article was pretty understandable for someone like me who's never really touched those areas of computing, so seems like an oversight to assume I know the anagrams.", "aSentId": 59516, "answer": "&gt; Did I miss it\n\nYou missed it\n\nMessage Passing Interface\n\nThe basic concept underlying microkernel architecture", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59518, "question": "Anyone have any experience with HPX?  It seems like it is another player in this space, but I'm not clear where it falls.\n\nninja edit:  Also, the author forgot PETSc for a library (similar to Trillinos, but C), that uses MPI.", "aSentId": 59519, "answer": "Weird, I can't find much about HPX--have a good overivew somewhere in the link department?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59521, "question": "I have a question.\n\nI am in bioinformatics and do a fair amount of HPC, but all my work uses batch schedulers like slurm or grid engine.  I've always felt a bit dirty doing that.  I am somewhat more on the sysadmin/software engineering side of things.  I generally implement algorithms others made and get them to run efficiently on our clusters.\n\nAnyways I am curious would MPI be useful for assembly, Burrows-Wheeler alignment, and the various other biology centric algorithms?\n\nIs bioinformatics not using MPI just because biologists didn't want to learn MPI? Is it because it is inherently inefficient for the work they are are doing?  Is it a weird side effect of nothing biology based ever needed massive amounts of compute so they simply ended up developing it outside of the simulation/traditional HPC frameworks because none of the people doing it had a background in those things?\n\nHope this is clear... in many ways I know so little about MPI is hard for me to even frame the question right.  Which should tell you how much bioinformatics relies on MPI (it doesn't at all).", "aSentId": 59522, "answer": "MPI is useful if you want to have a cluster of computers working together, with each computer working on a subset of the problem.  Each MPI process has a \"rank\" that indicates its index in the problem space.  MPI provides efficient mechanisms to transfer data between the processing nodes.\n\nBatch schedulers are much simpler.  MPI is a useful tool if you are willing to do extra work to reduce the latency of results by implementing parallel processing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59523, "question": "MPI is useful if you want to have a cluster of computers working together, with each computer working on a subset of the problem.  Each MPI process has a \"rank\" that indicates its index in the problem space.  MPI provides efficient mechanisms to transfer data between the processing nodes.\n\nBatch schedulers are much simpler.  MPI is a useful tool if you are willing to do extra work to reduce the latency of results by implementing parallel processing.", "aSentId": 59524, "answer": "Thanks you did a better job briefly summarizing than I found previously googling.  \n\nI suspect there are some things in bioinformatics it would be useful for, but given the favored way of passing work around seems to be flat files I am not optimistic anyone would bother with MPI in it.  Though some people are at least looking at hadoop/spark and similar I think it will be along time before those things catch on. \n\nIronically the most popular tool GATK talks about how it does map reduce... but it is limited to map reduce on a single node, not the hadoop map reduce that you think of first hearing it does map reduce.  Anyways I digress or I will get too annoyed.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59526, "question": "MPI is HPC the rest is like java vs c.", "aSentId": 59527, "answer": "Which is like 1:1, if you write java like you would write C.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59528, "question": "Which is like 1:1, if you write java like you would write C.", "aSentId": 59529, "answer": "Except for memory management, value types, SIMD... so all of the details.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59530, "question": "Except for memory management, value types, SIMD... so all of the details.", "aSentId": 59531, "answer": "* don't heap-allocate,\n* use arrays of primitive types,\n* SIMD is not C,\n* don't get stuck up on petty details.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59534, "question": "Excited About D", "aSentId": 59535, "answer": "Adam Hawkins, an experienced Ruby developer, writes about his experience trying out D.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59536, "question": "Adam Hawkins, an experienced Ruby developer, writes about his experience trying out D.", "aSentId": 59537, "answer": "Admit it.  This is the real reason you named your programming language \"D\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59536, "question": "Adam Hawkins, an experienced Ruby developer, writes about his experience trying out D.", "aSentId": 59539, "answer": "Walter Bright, the developer of the D language, writes this comment on reddit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59540, "question": "Walter Bright, the developer of the D language, writes this comment on reddit.", "aSentId": 59541, "answer": "hasenj, someone I don't know about, writes this comment on Reddit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59542, "question": "hasenj, someone I don't know about, writes this comment on Reddit.", "aSentId": 59543, "answer": "Why do you have 7 points and I have -2? /rant", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59544, "question": "Why do you have 7 points and I have -2? /rant", "aSentId": 59545, "answer": "I'm marveled to see you're in the positive! When I initially checked this thread you were -22, so bravo! Apparently people don't take dry humor too well anymore.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59540, "question": "Walter Bright, the developer of the D language, writes this comment on reddit.", "aSentId": 59547, "answer": "I thought it was a good joke (:", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59534, "question": "Excited About D", "aSentId": 59549, "answer": "Compile-time `eval` along with being able to mix in code at compile time has let me write some *really* powerful, and still concise code with D. I'm working on a project right now writing on bare-metal ARM (cortex-m4) with D, and it's great in that application space for it as well. Easy C interop keeps code pretty clean, and with @nogc: at the top of each module, I'm guaranteed no implicit GC allocations. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59534, "question": "Excited About D", "aSentId": 59551, "answer": "&gt;this peaked my interest\n\nshouldn't it be piqued?\n\njust a small gripe.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59552, "question": "&gt;this peaked my interest\n\nshouldn't it be piqued?\n\njust a small gripe.", "aSentId": 59553, "answer": "I see this mistake so often.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59554, "question": "I see this mistake so often.", "aSentId": 59555, "answer": "Also peeking vs peaking", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59557, "question": "```\nTestResult[] runTests(Test[] tests)\nin\n{\n    assert(!results.empty)\n}\n```\n\nTo match the text, it should be `assert(!tests.empty)`.", "aSentId": 59558, "answer": "thanks!  I stared at that for about 2 minutes trying to figure out wtf it was doing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59560, "question": "Question about D: how does the garbage collector work if D compiles to native?\n\nI had always assumed that having any type of garbage collection requires some sort of runtime, like the JVM or the thing C# uses.  If you choose to use the garbage collection for D, what exactly is doing the cleanup?", "aSentId": 59561, "answer": "Ranges of memory are tagged as instances of a specific class/etc. Since it knows this object starts at address X, it looks at the pointers at e.g X+24 , X+32, knowing that types they point to. Looks if they're marked as visited, and visits them (knowing the type). \n\nIt only does this if in some thread, malloc() goes over a total heap size; pauses all threads; and starts searching the root-nodes. The root-nodes are: global variables, processor registers (eax,ebx,ecx etc) and by the current EIP knows in which function it is, in which part of that function - and what the active local variables of this function and all its callers are. Unlike Java/C#, there can be **false-positive roots** in eax/ebx/ecx. Probabilities are small and there are no risks from that, so it's fine.  \n\nIt manages to do this by keeping in the executable and class-instances a lot of RTTI, and C++ exception-handling-like information about what pointer-holding variables are active. Unlike Java/C# , Dlang also doesn't deal with precise pointers, but accepts a pointer to be currently in the middle of an allocated chunk; it marks the whole chunk as \"visible\". This has amazing consequences: you can use C-like pointers to void* , with all type-info abolished, and yet it'll find that \"hey, that chunk is being used, I'd better keep it\". Also, even more amazingly, you can have \"slices\" of arrays. In Java/C# you constantly have to keep the head of the array around, and pass-around struct{ byte[] head; int offset;} to do meaningful work. In Dlang, you give it \"head+7\", and the function that receives it does stuff. \n\nAlso, every array object is practically  struct{ myType* ptr; size_t length; }; . So, you don't need to prepackage arrays with an \"int length\". You could also abolish that \"hey, I need that 1 cpu-cycle of performance back, or those size_t bytes back\", and just use \"myType* ptr\", as if it was pure C. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59560, "question": "Question about D: how does the garbage collector work if D compiles to native?\n\nI had always assumed that having any type of garbage collection requires some sort of runtime, like the JVM or the thing C# uses.  If you choose to use the garbage collection for D, what exactly is doing the cleanup?", "aSentId": 59563, "answer": "GC runs in another thread and simply scans stacks of other threads for pointers and then scans everything recursively: http://dlang.org/garbage.html\n\n\"Runtime\" is native code just like everything else.\n\nOther native GC languages (Haskell, Go, Ocaml) use similar approaches. \n\nThere's also a GC library for C, called `libgc` or Boehm\u2013Demers\u2013Weiser garbage collector. It's simpler than that (it doesn't run in a separate thread), but the basic idea is the same.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59564, "question": "GC runs in another thread and simply scans stacks of other threads for pointers and then scans everything recursively: http://dlang.org/garbage.html\n\n\"Runtime\" is native code just like everything else.\n\nOther native GC languages (Haskell, Go, Ocaml) use similar approaches. \n\nThere's also a GC library for C, called `libgc` or Boehm\u2013Demers\u2013Weiser garbage collector. It's simpler than that (it doesn't run in a separate thread), but the basic idea is the same.", "aSentId": 59565, "answer": "In D's current implementation, the GC doesn't even run in another thread: just when you call gc allocate in any thread, it pauses the others then calls gc collect if necessary.\n\nThis is important to realize because it means the time when the gc runs is easily predictable: it will collect only when you call a gc allocate function.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59564, "question": "GC runs in another thread and simply scans stacks of other threads for pointers and then scans everything recursively: http://dlang.org/garbage.html\n\n\"Runtime\" is native code just like everything else.\n\nOther native GC languages (Haskell, Go, Ocaml) use similar approaches. \n\nThere's also a GC library for C, called `libgc` or Boehm\u2013Demers\u2013Weiser garbage collector. It's simpler than that (it doesn't run in a separate thread), but the basic idea is the same.", "aSentId": 59567, "answer": "How efficient is this? If you happen to have some sort of  a linked list data structure, the GC would just traversing pointers all day long (and trashing the cache in process).\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59570, "question": "Considering 2 lives ruined by a dongle joke at a software conference, I can only imagine what a minefield being a D programmer is.\n", "aSentId": 59571, "answer": "What's the reference?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59572, "question": "What's the reference?", "aSentId": 59573, "answer": "On mobile and lazy to search but a programmer mace a big dongle joke at a conference and a feminist blogger for him fired for it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59575, "question": "&gt; I think 90% of types in my program are auto.\n\nWhat in the actual.. okay, this is a *terrible* practice. **Especially** for determining the return type of a method. Let's look at an example:\n\n    auto foo = bar();\n\nThat's perfectly valid. But what type is \"foo\"? How do you know, short of looking up the function definition of bar()?\n\n    auto bar() {\n    }\n\nAwesome, now not only have you had to hunt down and find the function definition, but now you need to read the actual code that makes up the function.\n\n    auto bar() {\n        // Insert some complex logic here. Bonus points for multiple return paths, because that'll make this even more fun.\n        return baz();\n    }\n\nGreat, now you have to look for baz!\n\nIt takes a whopping two extra keystrokes to explicitly type foo as a string.\n\n    string foo = bar();\n\nThere are several things that can be seen and assumed just from this. 1) *foo* will be a string. Period. End of story. 2) bar() most likely returns a string, or something derived from a string. If it doesn't, you'll get a compiler error and be able to fix it.\n\n&gt; Note that this program would compile but explode at runtime.\n\nWhy would you want that? Is the author seriously implying that runtime errors are better than compile-time errors?\n\n&gt; The block is compiled into the program and will run when the program runs. If the tests fail, the program will explode.\n\nOkay, so luckily he's not entirely correct here. It will be compiled into the program and run when the program runs [only if the -unittest compiler flag is set](http://dlang.org/unittest.html). Because that, again, would be terrible - the end-user running your software shouldn't have to waste processing on unit tests. That's your responsibility as a developer. Luckily, this isn't the case.\n\nPersonally, I prefer to keep unit tests separate. There can be a lot of potential tests for one method, and in some cases these may require complex setup. As an engineer, I shouldn't be forced to sift through unit test code on top of the actual source code in order to find something (ideally, I shouldn't have to sift through code at all. But this is the real world, and on large teams and large (and old!) code bases, it's an unfortunate reality).\n\n&gt; ... Universal Function Call Syntax ...\n\nThis is just a personal gripe about D itself, rather than the article, but I'm not a fan of this. Obviously \"isMyName\" is not likely to be a method on strings, but when you get to objects with any real complexity, I can't imagine this being anything but a hindrance to understanding the code without more digging.\n\n\n\nMost of the remaining stuff I don't really have too much of a problem with, and a lot of it is available in more than just D. I think that the D language is interesting, but this author needs to seriously reconsider some of his practices.", "aSentId": 59576, "answer": "&gt; Personally, I prefer to keep unit tests separate.\n\nInterestingly, having the unit tests adjacent to the function being tested has transformed D programming culture into having unittests being the norm rather than the exception. Separate unit tests too often mean out of sight, out of mind.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59577, "question": "&gt; Personally, I prefer to keep unit tests separate.\n\nInterestingly, having the unit tests adjacent to the function being tested has transformed D programming culture into having unittests being the norm rather than the exception. Separate unit tests too often mean out of sight, out of mind.\n\n", "aSentId": 59578, "answer": "This was a great innovation and one of the best things about D a decade ago. Lots of languages have adopted this wonderful idea.\n\nOf course, there is value in separate tests too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59577, "question": "&gt; Personally, I prefer to keep unit tests separate.\n\nInterestingly, having the unit tests adjacent to the function being tested has transformed D programming culture into having unittests being the norm rather than the exception. Separate unit tests too often mean out of sight, out of mind.\n\n", "aSentId": 59580, "answer": "I agree that I've seen the \"out of sight, out of mind\" mentality in a lot of cases as well, and it's certainly an interesting concept to put it right next to the actual code (and nice to hear that doing so has helped to build a culture of testing in the D community).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59575, "question": "&gt; I think 90% of types in my program are auto.\n\nWhat in the actual.. okay, this is a *terrible* practice. **Especially** for determining the return type of a method. Let's look at an example:\n\n    auto foo = bar();\n\nThat's perfectly valid. But what type is \"foo\"? How do you know, short of looking up the function definition of bar()?\n\n    auto bar() {\n    }\n\nAwesome, now not only have you had to hunt down and find the function definition, but now you need to read the actual code that makes up the function.\n\n    auto bar() {\n        // Insert some complex logic here. Bonus points for multiple return paths, because that'll make this even more fun.\n        return baz();\n    }\n\nGreat, now you have to look for baz!\n\nIt takes a whopping two extra keystrokes to explicitly type foo as a string.\n\n    string foo = bar();\n\nThere are several things that can be seen and assumed just from this. 1) *foo* will be a string. Period. End of story. 2) bar() most likely returns a string, or something derived from a string. If it doesn't, you'll get a compiler error and be able to fix it.\n\n&gt; Note that this program would compile but explode at runtime.\n\nWhy would you want that? Is the author seriously implying that runtime errors are better than compile-time errors?\n\n&gt; The block is compiled into the program and will run when the program runs. If the tests fail, the program will explode.\n\nOkay, so luckily he's not entirely correct here. It will be compiled into the program and run when the program runs [only if the -unittest compiler flag is set](http://dlang.org/unittest.html). Because that, again, would be terrible - the end-user running your software shouldn't have to waste processing on unit tests. That's your responsibility as a developer. Luckily, this isn't the case.\n\nPersonally, I prefer to keep unit tests separate. There can be a lot of potential tests for one method, and in some cases these may require complex setup. As an engineer, I shouldn't be forced to sift through unit test code on top of the actual source code in order to find something (ideally, I shouldn't have to sift through code at all. But this is the real world, and on large teams and large (and old!) code bases, it's an unfortunate reality).\n\n&gt; ... Universal Function Call Syntax ...\n\nThis is just a personal gripe about D itself, rather than the article, but I'm not a fan of this. Obviously \"isMyName\" is not likely to be a method on strings, but when you get to objects with any real complexity, I can't imagine this being anything but a hindrance to understanding the code without more digging.\n\n\n\nMost of the remaining stuff I don't really have too much of a problem with, and a lot of it is available in more than just D. I think that the D language is interesting, but this author needs to seriously reconsider some of his practices.", "aSentId": 59582, "answer": "&gt; It takes a whopping two extra keystrokes to explicitly type foo as a string.\n\nSaving keystrokes is not the point of auto. More like:\n\n* enables easier refactoring of code\n* makes generic code easier when the type of an expression is not the same as the types of the expression's operands\n* enables the use of [Voldemort types](http://digitalmars.com/articles/b79.html)\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59583, "question": "&gt; It takes a whopping two extra keystrokes to explicitly type foo as a string.\n\nSaving keystrokes is not the point of auto. More like:\n\n* enables easier refactoring of code\n* makes generic code easier when the type of an expression is not the same as the types of the expression's operands\n* enables the use of [Voldemort types](http://digitalmars.com/articles/b79.html)\n\n", "aSentId": 59584, "answer": "But, when abused and used for 90% of the types in a body of source code, is this necessarily a good thing? I completely agree that it can make handling some things much cleaner and easier - it's why I use it in C++11 work for iterating - \"for(auto _iter = myvec.begin(); /* ... */) {\" is much cleaner than \"for(std::vector&lt;int&gt;::iterator _iter = myvec.begin()\".\n\nAnd I can definitely agree that it can make refactoring easier - but there are costs to abusing 'auto' as well. It's a nice construct, and in most simple cases it won't be a problem - but when it's abused in more complex software, it's possible (inevitable even, in large code bases where auto is used \"90% of the time\") that your error won't be caught at compile-time and will instead be a potentially overlooked runtime error.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59585, "question": "But, when abused and used for 90% of the types in a body of source code, is this necessarily a good thing? I completely agree that it can make handling some things much cleaner and easier - it's why I use it in C++11 work for iterating - \"for(auto _iter = myvec.begin(); /* ... */) {\" is much cleaner than \"for(std::vector&lt;int&gt;::iterator _iter = myvec.begin()\".\n\nAnd I can definitely agree that it can make refactoring easier - but there are costs to abusing 'auto' as well. It's a nice construct, and in most simple cases it won't be a problem - but when it's abused in more complex software, it's possible (inevitable even, in large code bases where auto is used \"90% of the time\") that your error won't be caught at compile-time and will instead be a potentially overlooked runtime error.", "aSentId": 59586, "answer": "Do you see anything wrong with these?\n\n    string name = \"milesrout\";\n    unsigned i = 0;\n    float x = 0.0, y = 1.0, z = -1.0;\n    std::vector&lt;int&gt;::iterator end = v.end();\n\n`\"milesrout\"` isn't a `std::string` literal, `0` isn't an `unsigned` literal and `0.0` and `1.0` aren't `float` literals. \n\nAnd what if `v` is a `const std::vector&lt;int&gt;&amp;`? Then that should be `const_iterator`, not `iterator`, but it's an easy mistake to make.\n\n    auto name = \"milesrout\"s; \n    auto i = 0u;\n    auto x = 0.0f, y = 1.0f, z = -1.0f;\n    auto end = v.end();\n    \n`\"milesrout\"s` *is* a `std::string` literal.  \n`0u` *is* an `unsigned` literal.  \n`0.0f` and `1.0f` *are* `float` literals.\n\nIt's impossible to have a mismatch if you use `auto`. You might not be used to seeing so many \"typed literals\", but once you get used to them they're much more consistent. \n\nWeirdly, if it were called `let` instead of `auto` I think people would be much more comfortable with it. \n\n    let name = \"milesrout\"s;\n    let i = 0u;\n    let x = 0.0f, y = 1.0f, z = -1.0f;\n    let end = v.end();\n\nIf you want inference you can do this:\n\n    auto name = get_name();\n\nIf you want to pin the type explicitly you can do this:\n\n    auto name = std::string{get_name()};", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59585, "question": "But, when abused and used for 90% of the types in a body of source code, is this necessarily a good thing? I completely agree that it can make handling some things much cleaner and easier - it's why I use it in C++11 work for iterating - \"for(auto _iter = myvec.begin(); /* ... */) {\" is much cleaner than \"for(std::vector&lt;int&gt;::iterator _iter = myvec.begin()\".\n\nAnd I can definitely agree that it can make refactoring easier - but there are costs to abusing 'auto' as well. It's a nice construct, and in most simple cases it won't be a problem - but when it's abused in more complex software, it's possible (inevitable even, in large code bases where auto is used \"90% of the time\") that your error won't be caught at compile-time and will instead be a potentially overlooked runtime error.", "aSentId": 59588, "answer": "I should definitely emphasise that my problem is with it being used \"90% of the time\". :P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59589, "question": "I should definitely emphasise that my problem is with it being used \"90% of the time\". :P", "aSentId": 59590, "answer": "To maybe expand your perspective on this issue: OCaml uses type inferencing everywhere. In a large program, explicitly annotated types are mostly in the module signatures (kinda like header files). I mean, even though he said \"90% of the time\", D (nor C++) support \"auto everywhere\" (yet). For example, function arguments will still have explicit types -- not so in typical OCaml code.\n\nThis isn't done to \"save keystrokes\". It also isn't a problem to have so much inferred, otherwise people wouldn't do it! It is for the host of good reasons listed in other replies.\n\nPart of my style of development is that I don't even create module signatures until/unless I'm ready to pin down the interface. I leave everything inferred (no \"header files\"!). When I feel a module is fairly complete, then I let the compiler generate the inferred signature -- and then I tweak the results a bit to hide details which don't need to be exposed and clean up some complex types with aliases.\n\nNow, I'm not a D programmer, but I imagine there are facilities for editors to easily reveal deduced types. In Vim, with OCaml, I tap &lt;leader&gt;t to get type signatures of whatever the cursor is on or what region is selected.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59583, "question": "&gt; It takes a whopping two extra keystrokes to explicitly type foo as a string.\n\nSaving keystrokes is not the point of auto. More like:\n\n* enables easier refactoring of code\n* makes generic code easier when the type of an expression is not the same as the types of the expression's operands\n* enables the use of [Voldemort types](http://digitalmars.com/articles/b79.html)\n\n", "aSentId": 59592, "answer": "&gt;enables the use of Voldemort types\n\nHow could this ever be a good idea?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59593, "question": "&gt;enables the use of Voldemort types\n\nHow could this ever be a good idea?", "aSentId": 59594, "answer": "It encourages you to program against the type's *interface* (what it can do), not its *implementation* (what it is). Take iterators, as a pedestrian example.\n\nHerb Sutter recommends extensive use of `auto` in modern C++ for the same reason.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59595, "question": "It encourages you to program against the type's *interface* (what it can do), not its *implementation* (what it is). Take iterators, as a pedestrian example.\n\nHerb Sutter recommends extensive use of `auto` in modern C++ for the same reason.", "aSentId": 59596, "answer": "*There is no interface!* It's just an anonymous type that happens to support forward iteration.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59597, "question": "*There is no interface!* It's just an anonymous type that happens to support forward iteration.", "aSentId": 59598, "answer": "...which is a well-known and understood way to interface with it. I wasn't referring to the Java-style class interface, but the de facto \"what can this type do?\".", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59599, "question": "...which is a well-known and understood way to interface with it. I wasn't referring to the Java-style class interface, but the de facto \"what can this type do?\".", "aSentId": 59600, "answer": "There's no signature and no contact which means the only way to determine how the type can be used is to look at the implementation (defeating the purpose of the abstraction), rely on your IDE to infer it for you (good luck), or look for documentation wherever that might exist. There's nothing in the code itself that tells the coder that *this is a forward iterator*. That's shit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59601, "question": "There's no signature and no contact which means the only way to determine how the type can be used is to look at the implementation (defeating the purpose of the abstraction), rely on your IDE to infer it for you (good luck), or look for documentation wherever that might exist. There's nothing in the code itself that tells the coder that *this is a forward iterator*. That's shit.", "aSentId": 59602, "answer": "I recommend people to write `static assert(isForwardRange!Your_Type);` right with any type that is supposed to be one so you do get the assurance and the documentation in the code right there - almost as good as a regular class interface.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59593, "question": "&gt;enables the use of Voldemort types\n\nHow could this ever be a good idea?", "aSentId": 59604, "answer": "&gt; How could this ever be a good idea?\n\nThe [article I linked to](http://digitalmars.com/articles/b79.html)  has a rationale for that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59605, "question": "&gt; How could this ever be a good idea?\n\nThe [article I linked to](http://digitalmars.com/articles/b79.html)  has a rationale for that.", "aSentId": 59606, "answer": "&gt;That's where one would normally stop. But there's just something annoying about it. All I really care about is the rnd.generator function, but yet there's this type RandomNumberGenerator sitting out there by itself. It just looks like a failure of encapsulation, as it is leaking outside of my generator abstraction.\nI could mark it with the private attribute and modules other than rnd won't be able to access it. \nBut it's still there, outside the scope of where it belongs, and other module members can still access it, private or not (in D, private declarations are not hidden from other declarations within the same module). Besides, I want it to be so clean it squeaks.\n\nI was looking for something in more practical terms. As I said in another comment, anonymizing types like this diminishes the ability of the programmer to infer their purpose, that seems like a pretty significant disadvantage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59607, "question": "&gt;That's where one would normally stop. But there's just something annoying about it. All I really care about is the rnd.generator function, but yet there's this type RandomNumberGenerator sitting out there by itself. It just looks like a failure of encapsulation, as it is leaking outside of my generator abstraction.\nI could mark it with the private attribute and modules other than rnd won't be able to access it. \nBut it's still there, outside the scope of where it belongs, and other module members can still access it, private or not (in D, private declarations are not hidden from other declarations within the same module). Besides, I want it to be so clean it squeaks.\n\nI was looking for something in more practical terms. As I said in another comment, anonymizing types like this diminishes the ability of the programmer to infer their purpose, that seems like a pretty significant disadvantage.", "aSentId": 59608, "answer": "I understand your point, but Voldemort types have gotten extensive use by now, and this simply hasn't been an issue in practice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59575, "question": "&gt; I think 90% of types in my program are auto.\n\nWhat in the actual.. okay, this is a *terrible* practice. **Especially** for determining the return type of a method. Let's look at an example:\n\n    auto foo = bar();\n\nThat's perfectly valid. But what type is \"foo\"? How do you know, short of looking up the function definition of bar()?\n\n    auto bar() {\n    }\n\nAwesome, now not only have you had to hunt down and find the function definition, but now you need to read the actual code that makes up the function.\n\n    auto bar() {\n        // Insert some complex logic here. Bonus points for multiple return paths, because that'll make this even more fun.\n        return baz();\n    }\n\nGreat, now you have to look for baz!\n\nIt takes a whopping two extra keystrokes to explicitly type foo as a string.\n\n    string foo = bar();\n\nThere are several things that can be seen and assumed just from this. 1) *foo* will be a string. Period. End of story. 2) bar() most likely returns a string, or something derived from a string. If it doesn't, you'll get a compiler error and be able to fix it.\n\n&gt; Note that this program would compile but explode at runtime.\n\nWhy would you want that? Is the author seriously implying that runtime errors are better than compile-time errors?\n\n&gt; The block is compiled into the program and will run when the program runs. If the tests fail, the program will explode.\n\nOkay, so luckily he's not entirely correct here. It will be compiled into the program and run when the program runs [only if the -unittest compiler flag is set](http://dlang.org/unittest.html). Because that, again, would be terrible - the end-user running your software shouldn't have to waste processing on unit tests. That's your responsibility as a developer. Luckily, this isn't the case.\n\nPersonally, I prefer to keep unit tests separate. There can be a lot of potential tests for one method, and in some cases these may require complex setup. As an engineer, I shouldn't be forced to sift through unit test code on top of the actual source code in order to find something (ideally, I shouldn't have to sift through code at all. But this is the real world, and on large teams and large (and old!) code bases, it's an unfortunate reality).\n\n&gt; ... Universal Function Call Syntax ...\n\nThis is just a personal gripe about D itself, rather than the article, but I'm not a fan of this. Obviously \"isMyName\" is not likely to be a method on strings, but when you get to objects with any real complexity, I can't imagine this being anything but a hindrance to understanding the code without more digging.\n\n\n\nMost of the remaining stuff I don't really have too much of a problem with, and a lot of it is available in more than just D. I think that the D language is interesting, but this author needs to seriously reconsider some of his practices.", "aSentId": 59610, "answer": "&gt; That's perfectly valid. But what type is \"foo\"? How do you know, short of looking up the function definition of bar()?\n\nDo you also disagree with writing\n\n    foo(bar());\n\nbecause there again, you don't know what the return type of `bar()` is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59611, "question": "&gt; That's perfectly valid. But what type is \"foo\"? How do you know, short of looking up the function definition of bar()?\n\nDo you also disagree with writing\n\n    foo(bar());\n\nbecause there again, you don't know what the return type of `bar()` is.", "aSentId": 59612, "answer": "Just look for the return type of function bar(). Oh wait, it's \n\n    auto bar()\n\ngood luck buddy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59614, "question": "You could also just ask the compiler what the type of auto was:\n\n`pragma(msg, typeof(foo));`\n\nrecompile and it spits it out. Sure, it is still a change, but it is a local change, no need to dig into the library code. IDEs should be able to show the type on mouseover or something too.\n\n\nWhat I like about auto is the ease of refactoring - if the type changes and everything still works, no further change is necessary. If something breaks, the static type system still tells you where it broke, so it is easy to fix. It is like the best of dynamic convenience added to a sane static setup.", "aSentId": 59615, "answer": "I could, or I could explicitly set the return type of my methods and know that the compiler will catch it for me if my assumptions are incorrect.\n\n&gt; IDEs should be able to show the type on mouseover or something too.\n\nI haven't looked at D in a serious manner in quite a while (over five years, now), but are there IDEs around at the moment that support this? Especially with a chain of 'auto' types?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59616, "question": "I could, or I could explicitly set the return type of my methods and know that the compiler will catch it for me if my assumptions are incorrect.\n\n&gt; IDEs should be able to show the type on mouseover or something too.\n\nI haven't looked at D in a serious manner in quite a while (over five years, now), but are there IDEs around at the moment that support this? Especially with a chain of 'auto' types?", "aSentId": 59617, "answer": "&gt; or I could explicitly set the return type of my methods\n\nYou could but you wouldn't want to. Compare this (which does not compile due to Voldemort types):\n\n    Take!(FilterResult!(startsWith, string[])) lovelyRange(string[] arr)\n    {\n        return arr.filter!(startsWith!'a').take(1);\n    }\n\nto this:\n\n    auto lovelyRange(string[] arr)\n    {\n        return arr.filter!(startsWith!'a').take(1);\n    }\n\nEven if the types were not Voldemort, it would be impossible with using a lambda instead of a free-standing function template like startsWith().\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59619, "question": "&gt; That's perfectly valid. But what type is \"foo\"? How do you know, short of looking up the function definition of bar()?\n\nFrom my experience with F# (where you would define that function as `let bar () = baz ()` this is more a tooling problem: I can simply move my mouse cursor over the `bar` function or the `foo` type and it will show me the type.\n\nHowever I also tend to make the types in public interfaces explicit: Not only for documentation, but also in order to not accidently break the function signature by doing only internal refactoring. But generally type interference is really convenient to have.\n", "aSentId": 59620, "answer": "Yeah, I can't say as I would ever *not* give the return type in a method declaration, but I've never cried about not having the type written (as opposed to `var`) for a variable declaration.\n\nHooray for Visual Studio. :P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59621, "question": "Yeah, I can't say as I would ever *not* give the return type in a method declaration, but I've never cried about not having the type written (as opposed to `var`) for a variable declaration.\n\nHooray for Visual Studio. :P", "aSentId": 59622, "answer": "&gt; I can't say as I would ever not give the return type in a method declaration\n\nConsider the function:\n\n    auto max(U,V)(U u, V v) { return u &lt; v ? v : u; }\n\nwhere the return type is not necessarily either U or V. auto returns make this practical without undue ugliness.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59623, "question": "&gt; I can't say as I would ever not give the return type in a method declaration\n\nConsider the function:\n\n    auto max(U,V)(U u, V v) { return u &lt; v ? v : u; }\n\nwhere the return type is not necessarily either U or V. auto returns make this practical without undue ugliness.\n", "aSentId": 59624, "answer": "Actually, I wrote a little test program that kind of suggests what (my interpretation, at least) of what you wrote up there is impossible even in D.\n\n    import std.stdio;\n\n    void main() {\n        writeln(x2(max(23, 22.2)));\n    }\n\n    auto max(U,V)(U u, V v) {\n        return u &lt; v ? v : u;\n    }\n\n    int x2(int x) { return x * 2; }\n\nWon't compile. dmd gives the following error: \n\n`scratch.d(4): Error: function scratch.x2 (int x) is not callable using argument types (double)`\n\nThis suggests to me that auto is actually figuring the type, in this case, must be `double`, not `U` or `V`. Which is actually exactly what would happen if I were to write this in C# and define the type in the method declaration, per my normal practice.\n\nEdit: \n\nThought about it some more. The biggest difference I can see is that I wouldn't have to write a `max` function for every set of types I wanted to compare, but instead could just write one and go with it and it'd work fine as long as I only try to use it with types that it'll actually work on.\n\nSo that does give D the ability to represent some things, using auto, that I would not ordinarily be able to represent, at least in the space of generics. \n\nStill feel like you oversold it, because the return type *is* necessarily U or V--we just can't know which without knowing the types of both U and V.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59625, "question": "Actually, I wrote a little test program that kind of suggests what (my interpretation, at least) of what you wrote up there is impossible even in D.\n\n    import std.stdio;\n\n    void main() {\n        writeln(x2(max(23, 22.2)));\n    }\n\n    auto max(U,V)(U u, V v) {\n        return u &lt; v ? v : u;\n    }\n\n    int x2(int x) { return x * 2; }\n\nWon't compile. dmd gives the following error: \n\n`scratch.d(4): Error: function scratch.x2 (int x) is not callable using argument types (double)`\n\nThis suggests to me that auto is actually figuring the type, in this case, must be `double`, not `U` or `V`. Which is actually exactly what would happen if I were to write this in C# and define the type in the method declaration, per my normal practice.\n\nEdit: \n\nThought about it some more. The biggest difference I can see is that I wouldn't have to write a `max` function for every set of types I wanted to compare, but instead could just write one and go with it and it'd work fine as long as I only try to use it with types that it'll actually work on.\n\nSo that does give D the ability to represent some things, using auto, that I would not ordinarily be able to represent, at least in the space of generics. \n\nStill feel like you oversold it, because the return type *is* necessarily U or V--we just can't know which without knowing the types of both U and V.", "aSentId": 59626, "answer": "&gt; the return type is necessarily U or V\n\nIt is a little more complicated than that: The return type is the *common type* of the two expressions. Additionally, it is either an lvalue or an rvalue. TDPL explains how common type is decided.\n\nHere is an example where the common type is an intermediate class in a class hierarchy:\n\n    interface I\n    {}\n    \n    class Interim : I\n    {}\n    \n    class A : Interim\n    {}\n    \n    class B : Interim\n    {\n        int opCmp(const A that) const\n        {\n            return 0;\n        }\n    }\n    \n    void main() {\n        auto result = x2(max(new A(), new B()));\n        static assert(is (typeof(result) == Interim));\n    }\n    \n    auto max(U,V)(U u, V v) {\n        return u &lt; v ? v : u;\n    }\n    \n    T x2(T)(T t) { return t; }\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59627, "question": "&gt; the return type is necessarily U or V\n\nIt is a little more complicated than that: The return type is the *common type* of the two expressions. Additionally, it is either an lvalue or an rvalue. TDPL explains how common type is decided.\n\nHere is an example where the common type is an intermediate class in a class hierarchy:\n\n    interface I\n    {}\n    \n    class Interim : I\n    {}\n    \n    class A : Interim\n    {}\n    \n    class B : Interim\n    {\n        int opCmp(const A that) const\n        {\n            return 0;\n        }\n    }\n    \n    void main() {\n        auto result = x2(max(new A(), new B()));\n        static assert(is (typeof(result) == Interim));\n    }\n    \n    auto max(U,V)(U u, V v) {\n        return u &lt; v ? v : u;\n    }\n    \n    T x2(T)(T t) { return t; }\n", "aSentId": 59628, "answer": "K, answer this question, yes or no: the method can have multiple return types for a given set of input types?\n\nIf the answer is \"no,\" then I call bullshit.\n\nShit. Last time I stick up for D. Fuck D.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59629, "question": "K, answer this question, yes or no: the method can have multiple return types for a given set of input types?\n\nIf the answer is \"no,\" then I call bullshit.\n\nShit. Last time I stick up for D. Fuck D.", "aSentId": 59630, "answer": "Edit: After reading other conversations, I see that you are saying that there cannot be multiple return *types* for a function. You are right: Every function has a single return type, which happens to be determined as the *common type* of all possible return expressions.\n\nThe answer is \"yes\". (I hope I got the question right. :) )\n\n    auto foo(U, V, W, X)(U u, V v, W w, X x)\n    {\n        import std.random;\n    \n        if (dice(50, 50)) {\n            return dice(50, 50) ? u : v;\n    \n        } else {\n            return dice(50, 50) ? w : x;\n        }\n    }\n    \n    void main()\n    {\n        auto result = foo(1, 2L, 3.5, '4');\n        pragma(msg, typeof(result));    // prints 'double'\n    }\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59625, "question": "Actually, I wrote a little test program that kind of suggests what (my interpretation, at least) of what you wrote up there is impossible even in D.\n\n    import std.stdio;\n\n    void main() {\n        writeln(x2(max(23, 22.2)));\n    }\n\n    auto max(U,V)(U u, V v) {\n        return u &lt; v ? v : u;\n    }\n\n    int x2(int x) { return x * 2; }\n\nWon't compile. dmd gives the following error: \n\n`scratch.d(4): Error: function scratch.x2 (int x) is not callable using argument types (double)`\n\nThis suggests to me that auto is actually figuring the type, in this case, must be `double`, not `U` or `V`. Which is actually exactly what would happen if I were to write this in C# and define the type in the method declaration, per my normal practice.\n\nEdit: \n\nThought about it some more. The biggest difference I can see is that I wouldn't have to write a `max` function for every set of types I wanted to compare, but instead could just write one and go with it and it'd work fine as long as I only try to use it with types that it'll actually work on.\n\nSo that does give D the ability to represent some things, using auto, that I would not ordinarily be able to represent, at least in the space of generics. \n\nStill feel like you oversold it, because the return type *is* necessarily U or V--we just can't know which without knowing the types of both U and V.", "aSentId": 59632, "answer": "&gt; the return type is necessarily U or V\n\nIf U is char and V is byte, the return type will be int. (Integral promotion rules.)\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59623, "question": "&gt; I can't say as I would ever not give the return type in a method declaration\n\nConsider the function:\n\n    auto max(U,V)(U u, V v) { return u &lt; v ? v : u; }\n\nwhere the return type is not necessarily either U or V. auto returns make this practical without undue ugliness.\n", "aSentId": 59634, "answer": "One of the greatest things about C++14 to me is that I can go from something like this:\n\n    template &lt;typename X, typename Y&gt;\n    auto add(X x, Y y) -&gt; decltype(x + y) {\n        return x + y;\n    }\n\nto something like this:\n\n    auto add(auto x, auto y) {\n        return x + y;\n    }\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59635, "question": "One of the greatest things about C++14 to me is that I can go from something like this:\n\n    template &lt;typename X, typename Y&gt;\n    auto add(X x, Y y) -&gt; decltype(x + y) {\n        return x + y;\n    }\n\nto something like this:\n\n    auto add(auto x, auto y) {\n        return x + y;\n    }\n", "aSentId": 59636, "answer": "In D that would look like:\n\n    auto add(X, Y)(X x, Y y) {\n        return x + y;\n    }", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59637, "question": "In D that would look like:\n\n    auto add(X, Y)(X x, Y y) {\n        return x + y;\n    }", "aSentId": 59638, "answer": "Absolutely, yeah, I was just pointing out that I like that C++ is now less verbose than D for something! At last! :D\n\n(is :D your favourite smiley?)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59623, "question": "&gt; I can't say as I would ever not give the return type in a method declaration\n\nConsider the function:\n\n    auto max(U,V)(U u, V v) { return u &lt; v ? v : u; }\n\nwhere the return type is not necessarily either U or V. auto returns make this practical without undue ugliness.\n", "aSentId": 59640, "answer": "I don't believe that can be represented in anything I've ever worked in.\n\nEdit: you can click the Down button all you like, but that changes nothing about the fact that I've never used a language where any method can have more than one return type.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59641, "question": "I don't believe that can be represented in anything I've ever worked in.\n\nEdit: you can click the Down button all you like, but that changes nothing about the fact that I've never used a language where any method can have more than one return type.", "aSentId": 59642, "answer": "D doesn't do that, either.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59641, "question": "I don't believe that can be represented in anything I've ever worked in.\n\nEdit: you can click the Down button all you like, but that changes nothing about the fact that I've never used a language where any method can have more than one return type.", "aSentId": 59644, "answer": "Have you never worked with a language with function overloading? Because this is essentially function overloading, although automatically generated by the compiler.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59645, "question": "Have you never worked with a language with function overloading? Because this is essentially function overloading, although automatically generated by the compiler.", "aSentId": 59646, "answer": "The person I was responding to described a facility for a single method with *multiple return types.* That's not *function overloading,* that's just *impossible.* \n\nWhat he meant was that the method can be *generic* with regard to its return type. Not my fault if I took him more literally than he intended.\n\nNo, generic is the wrong word. Whatever. I'm sure thirty motherfuckers are waiting to correct that, too. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59641, "question": "I don't believe that can be represented in anything I've ever worked in.\n\nEdit: you can click the Down button all you like, but that changes nothing about the fact that I've never used a language where any method can have more than one return type.", "aSentId": 59648, "answer": "[You haven't had enough exposure to other languages then.](http://ideone.com/xWbKw7)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59649, "question": "[You haven't had enough exposure to other languages then.](http://ideone.com/xWbKw7)", "aSentId": 59650, "answer": "Yeah, sorry, I forgot. If I don't worship the right gods, I don't count. -.-\n\nEdit: Your example still doesn't exhibit multiple return types, but thanks anyway. That's *one* return type, determined by the *two* input types. Thanks for playing.\n\nI'm going to go outside before I say anything really nasty. -.-", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59651, "question": "Yeah, sorry, I forgot. If I don't worship the right gods, I don't count. -.-\n\nEdit: Your example still doesn't exhibit multiple return types, but thanks anyway. That's *one* return type, determined by the *two* input types. Thanks for playing.\n\nI'm going to go outside before I say anything really nasty. -.-", "aSentId": 59652, "answer": "Your comment was clearly trying to imply that doing that was unusual. It's not. That's just shorthand for a function template.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59654, "question": "&gt;It will be compiled into the program and run when the program runs only if the -unittest compiler flag is set.\n\nI think that's the case for in and out contracts as well, they aren't taken into consideration when compiling for with the -release flag.\n\nEdit : forgot to mention. Auto is especially useful when, for instance, instantiating a class/struct with a long name :\n\n    ClassWithLongName obj = new ClassWithLongName;\n\nCan be rewritten as :\n\n    auto obj = new ClassWithLongName;\n\nI don't quite remember where exatcly I read this, so I can't give credit for the source. Must be in the d.chm manual that comes with the D compiler installation, or on Ali's book.", "aSentId": 59655, "answer": "That's good to know (because at least the user won't hit them). Honestly, looking at this again (outside of the context of this article), it seems like this would be similar to unit tests in functionality, but overlooking the codebase as a whole rather than individual, idealised portions of code.\n\nI like the idea of these contracts as a tool for testing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59654, "question": "&gt;It will be compiled into the program and run when the program runs only if the -unittest compiler flag is set.\n\nI think that's the case for in and out contracts as well, they aren't taken into consideration when compiling for with the -release flag.\n\nEdit : forgot to mention. Auto is especially useful when, for instance, instantiating a class/struct with a long name :\n\n    ClassWithLongName obj = new ClassWithLongName;\n\nCan be rewritten as :\n\n    auto obj = new ClassWithLongName;\n\nI don't quite remember where exatcly I read this, so I can't give credit for the source. Must be in the d.chm manual that comes with the D compiler installation, or on Ali's book.", "aSentId": 59657, "answer": "It's true that the contract code can be included or not with a compiler switch.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59654, "question": "&gt;It will be compiled into the program and run when the program runs only if the -unittest compiler flag is set.\n\nI think that's the case for in and out contracts as well, they aren't taken into consideration when compiling for with the -release flag.\n\nEdit : forgot to mention. Auto is especially useful when, for instance, instantiating a class/struct with a long name :\n\n    ClassWithLongName obj = new ClassWithLongName;\n\nCan be rewritten as :\n\n    auto obj = new ClassWithLongName;\n\nI don't quite remember where exatcly I read this, so I can't give credit for the source. Must be in the d.chm manual that comes with the D compiler installation, or on Ali's book.", "aSentId": 59659, "answer": "In response to your auto edit: I completely agree. And a case like this I don't feel is abusive use of 'auto' -- you will always know exactly what \"new ClassWithLongName\" will resolve to. I also feel that it is valid to do:\n\n    auto myVar = \"Some String\";\n\nBecause you'll always know it's a string. But it should not be used as a method's return type, and it should not be used when the return type of a function is non-obvious. For example:\n\n    auto myString = foo();", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59660, "question": "In response to your auto edit: I completely agree. And a case like this I don't feel is abusive use of 'auto' -- you will always know exactly what \"new ClassWithLongName\" will resolve to. I also feel that it is valid to do:\n\n    auto myVar = \"Some String\";\n\nBecause you'll always know it's a string. But it should not be used as a method's return type, and it should not be used when the return type of a function is non-obvious. For example:\n\n    auto myString = foo();", "aSentId": 59661, "answer": "Naturally it will be non-obvious if the function is called `foo`. That makes it a very unrealistic example. Give the function (and variables) realistic names and it becomes absolutely redundant to state the type explicitly:\n\n    auto name = getName();\n\nThis is true almost all of the time. If you look at the idiomatic style in languages that have always had good type inference, you'll find that they default to using the equivalent of `auto` wherever they can, and it causes precisely zero problems.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59663, "question": "&gt; Why would you want that? Is the author seriously implying that runtime errors are better than compile-time errors?\n\nI kinda dented my desk with my face when I read this as well....", "aSentId": 59664, "answer": "So, based on /u/Scroph's comment it looks like this is much like the Unit Test feature and will not be compiled in with certain flags. I can see the value of having this throw the runtime errors during testing (but if you include these in a release build, shame on you), as there are certain things that can't be caught at compile-time (such as if an array is empty) and that you can't exactly guarantee to always be the case.\n\nAs a testing tool, this feature is excellent - you're definitely going to notice that you accidentally passed an empty array if your program crashes during testing (where before you might just get some possibly unnoticed logic errors).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59665, "question": "So, based on /u/Scroph's comment it looks like this is much like the Unit Test feature and will not be compiled in with certain flags. I can see the value of having this throw the runtime errors during testing (but if you include these in a release build, shame on you), as there are certain things that can't be caught at compile-time (such as if an array is empty) and that you can't exactly guarantee to always be the case.\n\nAs a testing tool, this feature is excellent - you're definitely going to notice that you accidentally passed an empty array if your program crashes during testing (where before you might just get some possibly unnoticed logic errors).", "aSentId": 59666, "answer": "Unit testing, coupled with coverage analysis, is incredibly useful in practice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59669, "question": "Regarding auto everywhere, I agree with you. I remember the consensus in the Haskell community, a language with really powerful type inference and even more powerful type system, was to always write full type signatures for top-level declarations. That way you make your intentions clearer, and the compiler can catch potential mistakes.", "aSentId": 59670, "answer": "This is entirely because Haskell doesn't have a half-decent IDE.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59673, "question": "That's what she said", "aSentId": 59674, "answer": "`ctrl + F` and there it was!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59675, "question": "`ctrl + F` and there it was!", "aSentId": 59676, "answer": "To be fair, she was also excited about C", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59677, "question": "To be fair, she was also excited about C", "aSentId": 59678, "answer": "Well played, my friend", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59681, "question": "That's what she said! (Sorry, couldn't resist :D)", "aSentId": 59682, "answer": "I came here looking for this post.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59681, "question": "That's what she said! (Sorry, couldn't resist :D)", "aSentId": 59684, "answer": "Every time. Without fail.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59685, "question": "Every time. Without fail.", "aSentId": 59686, "answer": "Every time. With *much* fail.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59681, "question": "That's what she said! (Sorry, couldn't resist :D)", "aSentId": 59688, "answer": "Came here to post this comment.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59690, "question": "Damn,  that's terrible spelling. Sorry, can't take this seriously when the spelling's so broken. \"Peaked my interest\"? Really? \n\nEdit: Spelling, ironically. ", "aSentId": 59691, "answer": "When the spelling *is* so broken.\n\nYou missed a word.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59690, "question": "Damn,  that's terrible spelling. Sorry, can't take this seriously when the spelling's so broken. \"Peaked my interest\"? Really? \n\nEdit: Spelling, ironically. ", "aSentId": 59693, "answer": "Yeah, that bothered me too. &gt;.&lt;\n\nThen I started reading the rest of the article, and the technical flaws made me forget about that.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59694, "question": "Yeah, that bothered me too. &gt;.&lt;\n\nThen I started reading the rest of the article, and the technical flaws made me forget about that.", "aSentId": 59695, "answer": "Heh yeah. If there isn't any care put into the spelling, why should there be on the technical side of things? ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59697, "question": "C++ Samples - A repository of modern C++ code samples curated by the community.", "aSentId": 59698, "answer": "Nice site, has good potential. Hope it grows out over time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59697, "question": "C++ Samples - A repository of modern C++ code samples curated by the community.", "aSentId": 59700, "answer": "I'm trying to learn modern C++ from scratch and it is just. So. Confusing. There's no single definition of even the most basic idioms, everyone makes a fuss about good memory handling throwing around a lot of terms while not providing any non-trivial example and is just out of grasp for someone who just came and understands the (sometimes arcane) grammar.\n\nThis place looks like a nice starting point, except when you look into the comments and there are 3 bitter C++ programmers fighting about the correct implementation of the example from 3 different angles, and none providing them. Which, again, is the problem: lack of definition.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59701, "question": "I'm trying to learn modern C++ from scratch and it is just. So. Confusing. There's no single definition of even the most basic idioms, everyone makes a fuss about good memory handling throwing around a lot of terms while not providing any non-trivial example and is just out of grasp for someone who just came and understands the (sometimes arcane) grammar.\n\nThis place looks like a nice starting point, except when you look into the comments and there are 3 bitter C++ programmers fighting about the correct implementation of the example from 3 different angles, and none providing them. Which, again, is the problem: lack of definition.", "aSentId": 59702, "answer": "&gt;There's no single definition of even the most basic idioms\n\nI disagree, there is plenty of introductory material out there. What in particular are you wondering about?\n\n&gt;everyone makes a fuss about good memory handling throwing around a lot of terms while not providing any non-trivial example\n\nWhat sort of example are you looking for? A program uniformly written in the modern C++11+ style? \n\n&gt;and is just out of grasp for someone who just came and understands the (sometimes arcane) grammar.\n\nThe language's grammar? Or the grammar of the author of this site?\n\n&gt;This place looks like a nice starting point, except when you look into the comments and there are 3 bitter C++ programmers fighting about the correct implementation of the example from 3 different angles, and none providing them. Which, again, is the problem: lack of definition.\n\nWhere?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59701, "question": "I'm trying to learn modern C++ from scratch and it is just. So. Confusing. There's no single definition of even the most basic idioms, everyone makes a fuss about good memory handling throwing around a lot of terms while not providing any non-trivial example and is just out of grasp for someone who just came and understands the (sometimes arcane) grammar.\n\nThis place looks like a nice starting point, except when you look into the comments and there are 3 bitter C++ programmers fighting about the correct implementation of the example from 3 different angles, and none providing them. Which, again, is the problem: lack of definition.", "aSentId": 59704, "answer": "&gt; I'm trying to learn modern C++ from scratch and it is just. So. Confusing. \n\nIt is confusing. May I ask which book or resource you are using? Not all of them are good. \n\n&gt; There's no single definition of even the most basic idioms .. there are 3 bitter C++ programmers fighting about the correct implementation of the example from 3 different angles, and none providing them\n\nThat's the same with everything in life! It's like a person who doesn't know what a car is, then sees 3 car engineers discussing what makes a car into a sports car. There's no single defining factor.\n\nIs there a specific thing you want explained? Perhaps asking a specific question would help. Also, again, what learning resource are you using?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59697, "question": "C++ Samples - A repository of modern C++ code samples curated by the community.", "aSentId": 59706, "answer": "C++ has been my main work language between 1991 and 2000. I don't recognize this language anymore. \n\nThere should be a different name for the heavy-templated style we see today, with lots of library-defined classes, and the original C++ which was just a \"C with classes\". \n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59707, "question": "C++ has been my main work language between 1991 and 2000. I don't recognize this language anymore. \n\nThere should be a different name for the heavy-templated style we see today, with lots of library-defined classes, and the original C++ which was just a \"C with classes\". \n", "aSentId": 59708, "answer": "You can refer to different versions of C++ easy!  Just use the ISO standard! C++98, C++03, C++11, C++14.  \n\nI agree somewhat with the sentiment though, especially if you haven't used C++ in 15 or so years.  Between C++03 and C++11 there was huge change to the style of the language, and its a bit of a problem with new people learning the language now.  You go to google a problem your having and the answer on stack overflow is probably based on C++03.  But we really want new people to the language to learn the C++11/14 way of doing it. But how does a new user know the difference?  There's also a serious problem with \"legacy\" C++ code, developers, teachers still programming like it is last century.  There's some really great stuff in new C++. \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59709, "question": "You can refer to different versions of C++ easy!  Just use the ISO standard! C++98, C++03, C++11, C++14.  \n\nI agree somewhat with the sentiment though, especially if you haven't used C++ in 15 or so years.  Between C++03 and C++11 there was huge change to the style of the language, and its a bit of a problem with new people learning the language now.  You go to google a problem your having and the answer on stack overflow is probably based on C++03.  But we really want new people to the language to learn the C++11/14 way of doing it. But how does a new user know the difference?  There's also a serious problem with \"legacy\" C++ code, developers, teachers still programming like it is last century.  There's some really great stuff in new C++. \n\n", "aSentId": 59710, "answer": "This is exactly the thought process that inspired me to make this site! It is intended to give beginner to intermediate C++ programmers a starting point for learning about state-of-the-art C++ features. While Stack Overflow has many similar bits of code, they are often either bad practice or old practice.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59707, "question": "C++ has been my main work language between 1991 and 2000. I don't recognize this language anymore. \n\nThere should be a different name for the heavy-templated style we see today, with lots of library-defined classes, and the original C++ which was just a \"C with classes\". \n", "aSentId": 59712, "answer": "I'm actually pleased to find someone that knows this! Usually we get people who say \"I know C++\" and then write some 1970s C with macros in.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59714, "question": "i think this side is bad...or at least some explainations are bad. F.E. the tutorial on unique_ptrs... its like yea yea thats the std::move function for unique_ptr. Thanks captain thats what the code sais how about you tell me why you use it etc...", "aSentId": 59715, "answer": "Creator of the site here. Thanks for the feedback - I think I have made the unique ownership description a little better. I didn't intend for the samples to provide a full in-depth analysis of the features they use, but more to give a starting point for learning more about these features.\n\nIf there are any other problems with samples, please feel free to either leave a comment on the sample, [create an issue on GitHub](https://github.com/sftrabbit/CppSamples-Samples/issues), or fork the [sample repo](https://github.com/sftrabbit/CppSamples-Samples).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59716, "question": "Creator of the site here. Thanks for the feedback - I think I have made the unique ownership description a little better. I didn't intend for the samples to provide a full in-depth analysis of the features they use, but more to give a starting point for learning more about these features.\n\nIf there are any other problems with samples, please feel free to either leave a comment on the sample, [create an issue on GitHub](https://github.com/sftrabbit/CppSamples-Samples/issues), or fork the [sample repo](https://github.com/sftrabbit/CppSamples-Samples).", "aSentId": 59717, "answer": "Oh nice honetly I love the site..  And the concept is really awesome.  Go on with it just better text explanations would be great", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59719, "question": "Fortunately, it seems to be 'modern C++' rather than 'Modern C++'. ", "aSentId": 59720, "answer": "I haven't seen a differentiation between 'modern C++' and 'Modern C++' before.  I usually see m/Modern C++ meaning C++11 and beyond.  What does the capitalization mean?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59721, "question": "I haven't seen a differentiation between 'modern C++' and 'Modern C++' before.  I usually see m/Modern C++ meaning C++11 and beyond.  What does the capitalization mean?", "aSentId": 59722, "answer": "There's really no such thing as \"(m|M)odern C++\".  C++ has a lot of different ways it can be used and people use the term modern C++ to give a sense of authority/legitimacy to their own style.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59724, "question": "New algorithm for the discrete logarithm problem on elliptic curves (PDF)", "aSentId": 59725, "answer": "&gt; Our analysis suggests a number of FIPS binary elliptic curves in [7] are theoretically broken as the new method starts to perform better than Pollard\u2019s for n &gt; 310.\n\nThat could be a problem, depending on how closely \"theoretically broken\" relates to \"broken in practice\". This is also a bit alarming:\n\n&gt; The first stage of the algorithm is easy to accomplish with several processors working in parallel. As the first stage complexity is dominating that significantly improves the running time of the method in practical terms.\n\nStill, I don't claim to understand the math at all, and I can't judge how much of a threat this is to FIPSy ECC.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59724, "question": "New algorithm for the discrete logarithm problem on elliptic curves (PDF)", "aSentId": 59727, "answer": "Hey! I know some of those words!!!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59724, "question": "New algorithm for the discrete logarithm problem on elliptic curves (PDF)", "aSentId": 59729, "answer": "&gt; **Introduction**\n&gt;\n&gt; Let E be an elliptic curve defined over a finite field F q with q elements. ...\n\nI swear I heard almost this exact sentence in a talk about how *not* to write an intro paragraph.  As a relatively lay person, I'd be interested in the significance of this algorithm.  How much closer are we to breaking elliptic curve cryptography?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59730, "question": "&gt; **Introduction**\n&gt;\n&gt; Let E be an elliptic curve defined over a finite field F q with q elements. ...\n\nI swear I heard almost this exact sentence in a talk about how *not* to write an intro paragraph.  As a relatively lay person, I'd be interested in the significance of this algorithm.  How much closer are we to breaking elliptic curve cryptography?", "aSentId": 59731, "answer": "It's an academic paper, not a popular-science article. It follows academic standards pretty closely. If you spend much time reading papers, you learn to absorb information from a light reading and expect this kind of language.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59730, "question": "&gt; **Introduction**\n&gt;\n&gt; Let E be an elliptic curve defined over a finite field F q with q elements. ...\n\nI swear I heard almost this exact sentence in a talk about how *not* to write an intro paragraph.  As a relatively lay person, I'd be interested in the significance of this algorithm.  How much closer are we to breaking elliptic curve cryptography?", "aSentId": 59733, "answer": "This is a Journal article, not a page from Wired. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59730, "question": "&gt; **Introduction**\n&gt;\n&gt; Let E be an elliptic curve defined over a finite field F q with q elements. ...\n\nI swear I heard almost this exact sentence in a talk about how *not* to write an intro paragraph.  As a relatively lay person, I'd be interested in the significance of this algorithm.  How much closer are we to breaking elliptic curve cryptography?", "aSentId": 59735, "answer": "context, man.\n\nnot everything is written for you personally.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59738, "question": "dur hur hur herp derp derp.. better?", "aSentId": 59739, "answer": "This sort of shitpost comment is no better than the one you're replying to, dude.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59740, "question": "This sort of shitpost comment is no better than the one you're replying to, dude.", "aSentId": 59741, "answer": "cool thanks glad you cared", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59743, "question": "Bugs Find A Way: A Tester\u2019s Appreciation of Jurassic Park", "aSentId": 59744, "answer": "Read the book!  The software problems are *much* bigger which causes even more twists in the story.\n\nAs much as I love the movie, the book is so much better.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59745, "question": "Read the book!  The software problems are *much* bigger which causes even more twists in the story.\n\nAs much as I love the movie, the book is so much better.", "aSentId": 59746, "answer": "One of my more favorite issues they find in the book is that to count the number of dinosaurs you input the expected number of dinosaurs they have and it counts up to that.  Once they find out the dinosaurs are breeding they increase the number and it counts the actual total number of dinosaurs.  Some one did not QA that feature.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59747, "question": "One of my more favorite issues they find in the book is that to count the number of dinosaurs you input the expected number of dinosaurs they have and it counts up to that.  Once they find out the dinosaurs are breeding they increase the number and it counts the actual total number of dinosaurs.  Some one did not QA that feature.", "aSentId": 59748, "answer": "Yup, this is what I was thinking of specifically.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59743, "question": "Bugs Find A Way: A Tester\u2019s Appreciation of Jurassic Park", "aSentId": 59750, "answer": "I always felt the flaw with the software system wasn't that they \"mistreated\" the single solitary programmer they put in charge of all the software in the park.\n\nIt's that they created a Truck factor of 1. There's 'nothing wrong with the park'? .. and yet there's no code reviews, oversight, redundancy to the developers? It's like John Hammond had never actually developed a large software-driven system before.\n\nI've been programming 30+ years, and the more I do the less I would EVER say \"nothing can go wrong\".\n\nHell, I just get -more- paranoid. Kids with smartphones plugging into a USB slot on a computer there, Anonymous finding some backdoor, creative types coming up with solutions to airgapped machines, or just teenagers sticking forks into electric sockets to blow fuses... there's SO MANY things that could go wrong and snowball.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59751, "question": "I always felt the flaw with the software system wasn't that they \"mistreated\" the single solitary programmer they put in charge of all the software in the park.\n\nIt's that they created a Truck factor of 1. There's 'nothing wrong with the park'? .. and yet there's no code reviews, oversight, redundancy to the developers? It's like John Hammond had never actually developed a large software-driven system before.\n\nI've been programming 30+ years, and the more I do the less I would EVER say \"nothing can go wrong\".\n\nHell, I just get -more- paranoid. Kids with smartphones plugging into a USB slot on a computer there, Anonymous finding some backdoor, creative types coming up with solutions to airgapped machines, or just teenagers sticking forks into electric sockets to blow fuses... there's SO MANY things that could go wrong and snowball.", "aSentId": 59752, "answer": "In the book it's not a single programmer- Nedry is the lead consultant, but all the other consultants are off-site due to the storm.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59753, "question": "In the book it's not a single programmer- Nedry is the lead consultant, but all the other consultants are off-site due to the storm.", "aSentId": 59754, "answer": "That makes a lot more sense.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59743, "question": "Bugs Find A Way: A Tester\u2019s Appreciation of Jurassic Park", "aSentId": 59756, "answer": "i use this analogy often: Its a jurassic park system: looks cool, feels cool in the beginning, after a while you start noticing wierd bugs, and when you under the polished look you find an unmotivated, uncommented, untested mess. You think: How much will it cost to revert this mess and find an alternative, when you hear strange noises around you. Ooops, the dinosaurs are out, and the only move out is a complete reboot. Which will release the raptors. Good luck.\n\nWell, maybe its not exactly the same, ignore at will", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59757, "question": "i use this analogy often: Its a jurassic park system: looks cool, feels cool in the beginning, after a while you start noticing wierd bugs, and when you under the polished look you find an unmotivated, uncommented, untested mess. You think: How much will it cost to revert this mess and find an alternative, when you hear strange noises around you. Ooops, the dinosaurs are out, and the only move out is a complete reboot. Which will release the raptors. Good luck.\n\nWell, maybe its not exactly the same, ignore at will", "aSentId": 59758, "answer": "... then find a kid who will save you.  _It's a Unix system..._", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59759, "question": "... then find a kid who will save you.  _It's a Unix system..._", "aSentId": 59760, "answer": "*I know this!*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59759, "question": "... then find a kid who will save you.  _It's a Unix system..._", "aSentId": 59762, "answer": "     sudo rm -rf /tmp/* ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59765, "question": "the fact that you use a lined background that doesn't match the space in between lines of your text makes me hate you.\n\nreading the actual article now, will get back to you on the content.", "aSentId": 59766, "answer": "If only someone had done UX testing on the blog... :P", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59768, "question": "AngularJS now on Codecademy", "aSentId": 59769, "answer": "&gt; Learn to build web apps using AngularJS 1.x. By the end of the course, ~~you'll be able to use AngularJS to create your own apps~~ AngularJS 2.0 will be out and you will have wasted your time.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59770, "question": "&gt; Learn to build web apps using AngularJS 1.x. By the end of the course, ~~you'll be able to use AngularJS to create your own apps~~ AngularJS 2.0 will be out and you will have wasted your time.", "aSentId": 59771, "answer": "&gt; AngularJS 2.0 will be out and you will have wasted your time\n\nI guess Angular 2 will not be the same success as Angular 1. If the job market wants Angular 1 it makes sense to learn at least some basics (the rest is on SO). ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59770, "question": "&gt; Learn to build web apps using AngularJS 1.x. By the end of the course, ~~you'll be able to use AngularJS to create your own apps~~ AngularJS 2.0 will be out and you will have wasted your time.", "aSentId": 59773, "answer": "Would it matter? I mean you can still use it even if it's deprecated, it's not handling data so it's not an attack vector.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59770, "question": "&gt; Learn to build web apps using AngularJS 1.x. By the end of the course, ~~you'll be able to use AngularJS to create your own apps~~ AngularJS 2.0 will be out and you will have wasted your time.", "aSentId": 59775, "answer": "Fixed this for you:\n\n&gt; Learn to build web apps using AngularJS 1.x. By the end of the course, you'll be able to use AngularJS to create your own apps **and be able to mix angular 1.x and 2 code by the time** AngularJS 2.0 will be out ~~and you will have wasted your time~~.\n\nSome people still don't know there is a migration path between 1.x and 2.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59779, "question": "LZ4 compression algorithm gets faster !", "aSentId": 59780, "answer": "I was curious how this compares to just not compressing some fraction of the data (effectively a `lzma`-`memcpy` hybrid, with `memcpy` infinitely fast). I fixed the ratios and compared speeds.\n\n           \u2502      Fast mode (MB/s)       \u2502  Partial compression (MB/s)\n     Ratio \u2502 Compression   Decompression \u2502 Compression   Decompression\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n     2.101 \u2502     385            1850     \u2502     385            1850\n     1.886 \u2502     475            1920     \u2502     429            2064\n     1.607 \u2502     680            2220     \u2502     534            2567\n     1.375 \u2502    1080            2650     \u2502     740            3554\n\nI can't say I'm surprised. Think of this as a sanity check.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59781, "question": "I was curious how this compares to just not compressing some fraction of the data (effectively a `lzma`-`memcpy` hybrid, with `memcpy` infinitely fast). I fixed the ratios and compared speeds.\n\n           \u2502      Fast mode (MB/s)       \u2502  Partial compression (MB/s)\n     Ratio \u2502 Compression   Decompression \u2502 Compression   Decompression\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n     2.101 \u2502     385            1850     \u2502     385            1850\n     1.886 \u2502     475            1920     \u2502     429            2064\n     1.607 \u2502     680            2220     \u2502     534            2567\n     1.375 \u2502    1080            2650     \u2502     740            3554\n\nI can't say I'm surprised. Think of this as a sanity check.", "aSentId": 59782, "answer": "~~Need units. I don't know how to read that at all.~~\n\nEdit: thanks for editing it! ^(wow, [an edit about an edit](https://xkcd.com/917)!)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59783, "question": "~~Need units. I don't know how to read that at all.~~\n\nEdit: thanks for editing it! ^(wow, [an edit about an edit](https://xkcd.com/917)!)", "aSentId": 59784, "answer": "Original article was in (MB/s), the numbers match, so this is probably in MB/s, too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59785, "question": "Original article was in (MB/s), the numbers match, so this is probably in MB/s, too.", "aSentId": 59786, "answer": "Aye, I was hoping people would see that's it's the same as the table in the article (with columns duplicated), but really I was just being lazy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59783, "question": "~~Need units. I don't know how to read that at all.~~\n\nEdit: thanks for editing it! ^(wow, [an edit about an edit](https://xkcd.com/917)!)", "aSentId": 59788, "answer": "Done.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59781, "question": "I was curious how this compares to just not compressing some fraction of the data (effectively a `lzma`-`memcpy` hybrid, with `memcpy` infinitely fast). I fixed the ratios and compared speeds.\n\n           \u2502      Fast mode (MB/s)       \u2502  Partial compression (MB/s)\n     Ratio \u2502 Compression   Decompression \u2502 Compression   Decompression\n    \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n     2.101 \u2502     385            1850     \u2502     385            1850\n     1.886 \u2502     475            1920     \u2502     429            2064\n     1.607 \u2502     680            2220     \u2502     534            2567\n     1.375 \u2502    1080            2650     \u2502     740            3554\n\nI can't say I'm surprised. Think of this as a sanity check.", "aSentId": 59790, "answer": "Note that memcpy() speed is provided into the source repository.\nhttps://github.com/Cyan4973/lz4/tree/dev\nIt's not infinitely fast, it's 4.2 GB/s. At such high speeds, it makes a difference for your comparison (especially on the decompression side).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59779, "question": "LZ4 compression algorithm gets faster !", "aSentId": 59792, "answer": "How does it compare to Deflate?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59779, "question": "LZ4 compression algorithm gets faster !", "aSentId": 59794, "answer": "But what's the weissman score?! ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59796, "question": "1.3 to 1 compression ratio isn't really something worth bragging about.\n\nAt what point do you just start comparing yourself to memcpy()?", "aSentId": 59797, "answer": "Compression ratio isn't everything. LZ4-write-to-disk is a popular alternative to direct-write-to-disk because the compression cost is less than the time saved by writing less data. Not many compression algorithms successfully claim this.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59798, "question": "Compression ratio isn't everything. LZ4-write-to-disk is a popular alternative to direct-write-to-disk because the compression cost is less than the time saved by writing less data. Not many compression algorithms successfully claim this.", "aSentId": 59799, "answer": "Yes, but when you start approaching 1.3:1 on text ... you might as well consider other alternatives like pre-trained entropy encoders.\n\nAnd since &gt;400MB/sec is much faster than most RAIDs can handle anyways (outside of large data centres) you might as well opt for the ~2:1 settings and get a non-trivial storage boost along with it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59800, "question": "Yes, but when you start approaching 1.3:1 on text ... you might as well consider other alternatives like pre-trained entropy encoders.\n\nAnd since &gt;400MB/sec is much faster than most RAIDs can handle anyways (outside of large data centres) you might as well opt for the ~2:1 settings and get a non-trivial storage boost along with it.", "aSentId": 59801, "answer": "I've got a single 2u box that can handle 12GB/s, I'll take the faster lz4", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59802, "question": "I've got a single 2u box that can handle 12GB/s, I'll take the faster lz4", "aSentId": 59803, "answer": "at 12gb/sec lz4 is the bottleneck", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59804, "question": "at 12gb/sec lz4 is the bottleneck", "aSentId": 59805, "answer": "Not with 24 cores running at 1080MB/s each", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59806, "question": "Not with 24 cores running at 1080MB/s each", "aSentId": 59807, "answer": "What do you do with it? If you don't mind.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59808, "question": "What do you do with it? If you don't mind.", "aSentId": 59809, "answer": "Win arguments.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59810, "question": "Win arguments.", "aSentId": 59811, "answer": "Worth, every, penny. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59808, "question": "What do you do with it? If you don't mind.", "aSentId": 59813, "answer": "Low latency data store for an online service. \n\nWe've got clusters of these to handle the load. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59814, "question": "Low latency data store for an online service. \n\nWe've got clusters of these to handle the load. ", "aSentId": 59815, "answer": "Deng.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59808, "question": "What do you do with it? If you don't mind.", "aSentId": 59817, "answer": "I would be inclined to believe it's SSD based.\n\nSo probably VM/VDI storage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59800, "question": "Yes, but when you start approaching 1.3:1 on text ... you might as well consider other alternatives like pre-trained entropy encoders.\n\nAnd since &gt;400MB/sec is much faster than most RAIDs can handle anyways (outside of large data centres) you might as well opt for the ~2:1 settings and get a non-trivial storage boost along with it.", "aSentId": 59821, "answer": "&gt;And since &gt;400MB/sec is much faster than most RAIDs can handle anyways \n\nAny current gen decent grade SSD can handle this. Compression has uses outside of enterprise.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59796, "question": "1.3 to 1 compression ratio isn't really something worth bragging about.\n\nAt what point do you just start comparing yourself to memcpy()?", "aSentId": 59823, "answer": "I wouldn't like 1.3 ratio either,\nbut I think the objective was to simply show some examples to see how flexible the new parameter is, and how far it can stretch.\n\nIf you want stronger compression, you can as well select 5, or 6, or 7, or even 2, and get something intermediate. In fact, any kind of speed can be extracted from the new function. It's just a matter of selecting the right \"acceleration\" level for one's usage.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59796, "question": "1.3 to 1 compression ratio isn't really something worth bragging about.\n\nAt what point do you just start comparing yourself to memcpy()?", "aSentId": 59825, "answer": "It should always be compared to memcpy.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59829, "question": "How I Start: Clojure", "aSentId": 59830, "answer": "haha the learning curve is correct.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59832, "question": "JIT-compilation using GCC 5", "aSentId": 59833, "answer": "This is great. I really like the separation of lvalues and rvalues.\n\nHow does this apply to implementing high-level languages, compared to LLVM? In particular, Unladen Swallow's [post mortem with LLVM shortcomings](http://stackoverflow.com/a/6833494).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59836, "question": "Let\u2019s Build A Web Server. Part 2.", "aSentId": 59837, "answer": "Is your book free?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59838, "question": "Is your book free?", "aSentId": 59839, "answer": "The short answer is \"no.\"", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59836, "question": "Let\u2019s Build A Web Server. Part 2.", "aSentId": 59841, "answer": "Keep up the good work. I am currently working on numerous Django projects from a web app perspective (mostly work on views), so a refresher on how everything fits together is always invigorating. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59843, "question": "Turning The Arduino Uno Into An Apple ][", "aSentId": 59844, "answer": "Anybody have any links to learning how to do a project like this? I've been really interested in the low level stuff but don't know where to get started so any resources on CPU emulation like he does in the article or any alternatives for creating the operating system and computer from scratch would be sweet.\n\nIf anybody else has done a project like this I would definitely be interested in hearing about it!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59845, "question": "Anybody have any links to learning how to do a project like this? I've been really interested in the low level stuff but don't know where to get started so any resources on CPU emulation like he does in the article or any alternatives for creating the operating system and computer from scratch would be sweet.\n\nIf anybody else has done a project like this I would definitely be interested in hearing about it!", "aSentId": 59846, "answer": "I've studied several of the emulated CPUs in MAME. Truly an eye opener! In short, read other people's source code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59843, "question": "Turning The Arduino Uno Into An Apple ][", "aSentId": 59848, "answer": "I first heard of apple computers when I was in the third grade and knew I had to have one, but no place sold them. I finally found one in the 8081 classified section in the newspaper.\n\nI called the number\n\nHi, I want to buy your computer. How much does it cost?\n\n35\n\nI was ecstatic. That was a lot of money, but sure I could get it. OK I replied, $35 and where do you live?\n\nNo, $35*hundred*\n\n:(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59849, "question": "I first heard of apple computers when I was in the third grade and knew I had to have one, but no place sold them. I finally found one in the 8081 classified section in the newspaper.\n\nI called the number\n\nHi, I want to buy your computer. How much does it cost?\n\n35\n\nI was ecstatic. That was a lot of money, but sure I could get it. OK I replied, $35 and where do you live?\n\nNo, $35*hundred*\n\n:(", "aSentId": 59850, "answer": "Yeah it never ceases to amaze me how cheap computers have become. I count myself lucky that I had a technophile father who bought an Apple ][ for me to tinker with as a kid.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59843, "question": "Turning The Arduino Uno Into An Apple ][", "aSentId": 59852, "answer": "Oh GD I remember working with that wacky interleaved scheme when I was doing my first graphics programs in assembly. May have been an elegant hack, but it was a PITA to figure out the first time around. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59854, "question": "Common Compiler Optimisations are Invalid in the C11 Memory Model and what we can do about it", "aSentId": 59855, "answer": "&gt;First, notice that there is no execution (consistent execution in the\nterminology of Section 2) in which the load of a occurs. We show\nthis by contradiction. Suppose that there is an execution in which\na load of a occurs. In such an execution the load of a can only\nreturn 0 (the initial value of a) because the store a = 1 does\nnot happen before it (because it is in a different thread that has\nnot been synchronised with) and non-atomic loads must return the\nlatest write that happens before them.\n\nIsn't the given program racy (and therefore undefined)? Unless I am misremembering things, a data race is defined to be when more than one thread of execution could access shared memory concurrently, and at least one of those accesses is a write. The load from `a` and the write to `a` occur on different threads and aren't synchronised or atomic, so that's a data race isn't it?\n\nIntuitively, the write to `a` on thread 1 can be scheduled before, after or during the read from `a` on thread 2. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59856, "question": "&gt;First, notice that there is no execution (consistent execution in the\nterminology of Section 2) in which the load of a occurs. We show\nthis by contradiction. Suppose that there is an execution in which\na load of a occurs. In such an execution the load of a can only\nreturn 0 (the initial value of a) because the store a = 1 does\nnot happen before it (because it is in a different thread that has\nnot been synchronised with) and non-atomic loads must return the\nlatest write that happens before them.\n\nIsn't the given program racy (and therefore undefined)? Unless I am misremembering things, a data race is defined to be when more than one thread of execution could access shared memory concurrently, and at least one of those accesses is a write. The load from `a` and the write to `a` occur on different threads and aren't synchronised or atomic, so that's a data race isn't it?\n\nIntuitively, the write to `a` on thread 1 can be scheduled before, after or during the read from `a` on thread 2. ", "aSentId": 59857, "answer": "The program is using low-level atomics (RLX) for each load and store so, by definition, they are not racy and the program is well-defined.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59858, "question": "The program is using low-level atomics (RLX) for each load and store so, by definition, they are not racy and the program is well-defined.", "aSentId": 59859, "answer": "No it isn't, the store to `a` and the load from `a` are clearly not using low-level atomics.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59860, "question": "No it isn't, the store to `a` and the load from `a` are clearly not using low-level atomics.", "aSentId": 59861, "answer": "You're right, I didn't read closely enough. They attempt to explain why the program isn't racy in the paragraph following the example: I think the point is that a quirk of the memory model lets you show that the load of *a* is actually dead code.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59863, "question": "Seamless fully procedural space-to-surface flight in just one fragment shader (+code)", "aSentId": 59864, "answer": "Because you need a really good graphics card for the full shader, I have also rendered a movie of this shader: https://youtu.be/nG84LLF5XsU", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59863, "question": "Seamless fully procedural space-to-surface flight in just one fragment shader (+code)", "aSentId": 59866, "answer": "No hope of running it in my old Thinkpad T42, but the video is pretty cool, and the source code is interesting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59863, "question": "Seamless fully procedural space-to-surface flight in just one fragment shader (+code)", "aSentId": 59868, "answer": "Very high nearly fried my pc :D", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59871, "question": "How To: Use GoogleFit API", "aSentId": 59872, "answer": "So now Google knows what I'm searching for on the web, what websites I open, my browsing behavior I have on said websites and what physical movements I'm making while on said website.\n\nLet's build a fap history app. I'm sure then people will understand what happens when they aggregate all their data in a single place.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59873, "question": "So now Google knows what I'm searching for on the web, what websites I open, my browsing behavior I have on said websites and what physical movements I'm making while on said website.\n\nLet's build a fap history app. I'm sure then people will understand what happens when they aggregate all their data in a single place.", "aSentId": 59874, "answer": "Why? You can use Apple HealthKit to track your physical activity. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59875, "question": "Why? You can use Apple HealthKit to track your physical activity. :)", "aSentId": 59876, "answer": "Then you have to use Apple and you'll slowly switch over to a homogenous apple environment becuase otherwise they don't just work and then Apple will have all your information in a single place.  \n\nSo you'll have just moved the problem to a different company.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59878, "question": "Introduction to Stack-based Languages with Forth", "aSentId": 59879, "answer": "Thanks for posting!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59878, "question": "Introduction to Stack-based Languages with Forth", "aSentId": 59881, "answer": "Cool, but two nits: the fac code example can't be copied because the drop-down-line-cover hides line 1, and the fib code example doesn't print a result when pasted into your REPL.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59882, "question": "Cool, but two nits: the fac code example can't be copied because the drop-down-line-cover hides line 1, and the fib code example doesn't print a result when pasted into your REPL.", "aSentId": 59883, "answer": "Hmm. I am not able to replicate your second issue. Concerning the first, that is unfortunate. On the right hand side though you can access the code as a pop-out. You can copy it like that until I find a way around that issue (if ever).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59884, "question": "Hmm. I am not able to replicate your second issue. Concerning the first, that is unfortunate. On the right hand side though you can access the code as a pop-out. You can copy it like that until I find a way around that issue (if ever).", "aSentId": 59885, "answer": "    &gt;&gt;&gt; 2 fib\n        &lt;ok&gt;\n    &gt;&gt;&gt; \n\nThat's how it looks in Chrome.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59886, "question": "    &gt;&gt;&gt; 2 fib\n        &lt;ok&gt;\n    &gt;&gt;&gt; \n\nThat's how it looks in Chrome.", "aSentId": 59887, "answer": "If I put that exact code anywhere and expected it to print the result then I made a mistake. \"fib\" never prints the stack. To print the stack you'll have to run the \".s\" function afterwards.\n\n    &gt;&gt;&gt; 2 fib\n        &lt;ok&gt;\n    &gt;&gt;&gt; .s\n        1 &lt;ok&gt;", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59888, "question": "If I put that exact code anywhere and expected it to print the result then I made a mistake. \"fib\" never prints the stack. To print the stack you'll have to run the \".s\" function afterwards.\n\n    &gt;&gt;&gt; 2 fib\n        &lt;ok&gt;\n    &gt;&gt;&gt; .s\n        1 &lt;ok&gt;", "aSentId": 59889, "answer": "I **did** make a mistake! Thank you. I added the \".s\" to the end of the line so now you will see the result.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59890, "question": "I **did** make a mistake! Thank you. I added the \".s\" to the end of the line so now you will see the result.", "aSentId": 59891, "answer": "I didn't think it was anything worse than that, but learning is hard enough when the text is perfect :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59878, "question": "Introduction to Stack-based Languages with Forth", "aSentId": 59893, "answer": "Nice post.\n\n/u/eatonphil, I have 2 questions for you:\n\n1. Whenever I play with Forth (which is at least once a year, as I teach a Programming Languages class), I think that the language has some really nice ideas, but it's stuck in the 70s. We've learned a lot about PL design in the last forty years, and a stack-based PL that used some of the newer ideas might be very nice indeed. There is PostScript, of course, but it's hardly aimed at general-purpose programming. I've looked at Factor[1] a bit, and I've been impressed with what I've seen. Maybe some day I'll look more than just *a bit*. Anyway, the question: What do you think?\n\n2. I played with your JSForth REPL a bit. Looks nice. It doesn't seem to support the { ... -- ... } syntax for named parameters. Or does it support some variation on that? And is there documentation?\n\n----\n\nEDIT. Never mind about question 2. I found the [GitHub repository](https://github.com/eatonphil/jsforth).\n\n[1] http://factorcode.org/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59894, "question": "Nice post.\n\n/u/eatonphil, I have 2 questions for you:\n\n1. Whenever I play with Forth (which is at least once a year, as I teach a Programming Languages class), I think that the language has some really nice ideas, but it's stuck in the 70s. We've learned a lot about PL design in the last forty years, and a stack-based PL that used some of the newer ideas might be very nice indeed. There is PostScript, of course, but it's hardly aimed at general-purpose programming. I've looked at Factor[1] a bit, and I've been impressed with what I've seen. Maybe some day I'll look more than just *a bit*. Anyway, the question: What do you think?\n\n2. I played with your JSForth REPL a bit. Looks nice. It doesn't seem to support the { ... -- ... } syntax for named parameters. Or does it support some variation on that? And is there documentation?\n\n----\n\nEDIT. Never mind about question 2. I found the [GitHub repository](https://github.com/eatonphil/jsforth).\n\n[1] http://factorcode.org/", "aSentId": 59895, "answer": "/u/ggchappell, thank you for your time and interest in my REPL!\n\n1. Coming from a PL perspective, I think you're right that Forth may not be the most interesting language. Even during class, I didn't really care for the language too much until after I found out about Stack machines. Yet even with that in mind, I don't really have any good arguments in support of stack-based languages other than historical perspective and a really neat compilation target.\n\nBut I'm not sure why you are the one asking me what I think; you are much more qualified to answer that question than I am! May I ask, what do *you* think?\n\n2. As you saw, JSForth is pretty simplistic. It has just enough to be interesting to play around with. (And I really didn't spend more than a few hours putting it together.) That said, the biggest things *I* am missing are quoting (for first-class functions) and printing characters (for Brainfuck compilation).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59897, "question": "Hackr.io - Find the best programming tutorials and courses", "aSentId": 59898, "answer": "C/C++ should be separate.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59899, "question": "C/C++ should be separate.", "aSentId": 59900, "answer": "I don't think I trust places that lump them together. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59901, "question": "I don't think I trust places that lump them together. ", "aSentId": 59902, "answer": "It's like these Chinese food + sushi + donuts + pizza restaurants. There are some stuff you should preferably not mix.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59903, "question": "It's like these Chinese food + sushi + donuts + pizza restaurants. There are some stuff you should preferably not mix.", "aSentId": 59904, "answer": "I disagree, donuts are complementary to almost any cuisine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59905, "question": "I disagree, donuts are complementary to almost any cuisine.", "aSentId": 59906, "answer": "its the Chinese and sushi that is an issue. Donuts are an obvious choice ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59907, "question": "its the Chinese and sushi that is an issue. Donuts are an obvious choice ", "aSentId": 59908, "answer": "Yes you can slice donuts like a bagel.  They make for great sandwiches but I have just been using honey buns like taco shells and wrapping my sushi in that.  I also call python scripts in visual basic a lot too these days.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59909, "question": "Yes you can slice donuts like a bagel.  They make for great sandwiches but I have just been using honey buns like taco shells and wrapping my sushi in that.  I also call python scripts in visual basic a lot too these days.", "aSentId": 59910, "answer": "what a polyglut!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59907, "question": "its the Chinese and sushi that is an issue. Donuts are an obvious choice ", "aSentId": 59912, "answer": "It's funny how a conversation in reddit can so quickly go offtopic.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59907, "question": "its the Chinese and sushi that is an issue. Donuts are an obvious choice ", "aSentId": 59914, "answer": "Chinese food has a long history of fried dough so I would say it is only the sushi that is problematic.  Although fried mochi is pretty swell.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59901, "question": "I don't think I trust places that lump them together. ", "aSentId": 59916, "answer": "You just ruled out a lot of personal resumes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59917, "question": "You just ruled out a lot of personal resumes.", "aSentId": 59918, "answer": "just add Java/Javascript and you'll get half of linkedin ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59919, "question": "just add Java/Javascript and you'll get half of linkedin ", "aSentId": 59920, "answer": "Or the curriculum at my university", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59921, "question": "Or the curriculum at my university", "aSentId": 59922, "answer": "My former university ruled out c from exams completely (you still have a few assignments an the start of the semester but that's it) in favor of Java. \n\nBut hey, at least they have a mandatory intro course for shells and vim/emacs.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59901, "question": "I don't think I trust places that lump them together. ", "aSentId": 59924, "answer": "It's like \"Oh hey, they share the same starting letter and one was sorta based off the other like 30 years ago, lets put them under the same heading.\"\n\nOr more depressingly \"Oh hey, no one will ever do just C anymore, let's lump it under C++.\"\n\n(Does just C all the time.)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59899, "question": "C/C++ should be separate.", "aSentId": 59926, "answer": "But then C++ would be empty.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59927, "question": "But then C++ would be empty.", "aSentId": 59928, "answer": "I have no problem with this state of affairs.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59899, "question": "C/C++ should be separate.", "aSentId": 59930, "answer": "Am I a hipster? Because of the three languages I use on a regular-ish basis, none of them are there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59931, "question": "Am I a hipster? Because of the three languages I use on a regular-ish basis, none of them are there.", "aSentId": 59932, "answer": "Now I need to know what languages you use.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59933, "question": "Now I need to know what languages you use.", "aSentId": 59934, "answer": "Elixir, D, C#", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59935, "question": "Elixir, D, C#", "aSentId": 59936, "answer": "You are such a hipster. I've never even heard of Elixir.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59937, "question": "You are such a hipster. I've never even heard of Elixir.", "aSentId": 59938, "answer": "Have you heard of Erlang? Have you heard of Ruby? Now imagine their babies.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59939, "question": "Have you heard of Erlang? Have you heard of Ruby? Now imagine their babies.", "aSentId": 59940, "answer": "Wow... I never heard of Elixir, but now I want it!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59935, "question": "Elixir, D, C#", "aSentId": 59942, "answer": "Sounds like Nim and TypeScript could also fit with your current profile. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59931, "question": "Am I a hipster? Because of the three languages I use on a regular-ish basis, none of them are there.", "aSentId": 59944, "answer": "Mainstream ones like Clojure and D are missing, so I wouldn't be too concerned about being labeled a hipster. Still, which languages were you looking for, out of curiosity?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59945, "question": "Mainstream ones like Clojure and D are missing, so I wouldn't be too concerned about being labeled a hipster. Still, which languages were you looking for, out of curiosity?", "aSentId": 59946, "answer": "Elixir, D, C#. Unless they've also put C# under C", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59947, "question": "Elixir, D, C#. Unless they've also put C# under C", "aSentId": 59948, "answer": "Ha ha, thanks.\n\n&gt; Unless they've also put C# under C\n\nLOL!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59897, "question": "Hackr.io - Find the best programming tutorials and courses", "aSentId": 59950, "answer": "I'm starting to see so many websites kicking the 'e' out of \"er\" and having a .io domain. Is this a trend or something?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59951, "question": "I'm starting to see so many websites kicking the 'e' out of \"er\" and having a .io domain. Is this a trend or something?", "aSentId": 59952, "answer": "It's not a trend. It is le futur.io", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59953, "question": "It's not a trend. It is le futur.io", "aSentId": 59954, "answer": "futr.io", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59955, "question": "futr.io", "aSentId": 59956, "answer": "\u25ba F V T V R \u03a3 \u25c4", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59955, "question": "futr.io", "aSentId": 59958, "answer": "ftr.io", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59955, "question": "futr.io", "aSentId": 59960, "answer": ". ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59953, "question": "It's not a trend. It is le futur.io", "aSentId": 59962, "answer": "le fuckr.io", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59963, "question": "le fuckr.io", "aSentId": 59964, "answer": "oh.io", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59965, "question": "oh.io", "aSentId": 59966, "answer": "As an Ohioan, I'm buying this and simply redirecting to &lt;any other state&gt;.gov", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59963, "question": "le fuckr.io", "aSentId": 59968, "answer": "fckr.io", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59951, "question": "I'm starting to see so many websites kicking the 'e' out of \"er\" and having a .io domain. Is this a trend or something?", "aSentId": 59970, "answer": "It's a combination of a few solutions to the ever-increasing difficulty to find available domain names.\n\n- Add an ending to a word that may or may not result in a real word (consumerist.com)\n- Remove letters (flickr.com)\n- Use non-standard TLDs (vine.co)\n\nThese days it can be very difficult to find a brand that you can capture that is less than three words if you want the .com. I usually spend weeks on naming/branding alone for my various startups and thankfully haven't had to resort to any of this yet, but it's frustrating.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59971, "question": "It's a combination of a few solutions to the ever-increasing difficulty to find available domain names.\n\n- Add an ending to a word that may or may not result in a real word (consumerist.com)\n- Remove letters (flickr.com)\n- Use non-standard TLDs (vine.co)\n\nThese days it can be very difficult to find a brand that you can capture that is less than three words if you want the .com. I usually spend weeks on naming/branding alone for my various startups and thankfully haven't had to resort to any of this yet, but it's frustrating.", "aSentId": 59972, "answer": "It's worse when you have an ideal name and when you look the domain was registered 8-9 years ago and never used but you know the second you inquire about it the price is gonna go up exponentially.\n\nNot sure what the solution is perhaps none-trademarked names must be used in X years or returned to the pool though how you'd enforce what is used or not I guess.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59973, "question": "It's worse when you have an ideal name and when you look the domain was registered 8-9 years ago and never used but you know the second you inquire about it the price is gonna go up exponentially.\n\nNot sure what the solution is perhaps none-trademarked names must be used in X years or returned to the pool though how you'd enforce what is used or not I guess.", "aSentId": 59974, "answer": "I actually had that happen to me. I had a perfect name, the .net and .org were available, URL shortener domains were good to go, name was available on almost every social network.\n\nBut a 60 year old librarian from NY had the .com, and had had it since 1994.\n\nI eventually was able to purchase it for a reasonable (4-figure) price in large part because, in her words, I had been so polite when inquiring about the purchase and explaining to her what my idea was, etc.\n\nShe was the first person to sign up for the landing page mailing list.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59975, "question": "I actually had that happen to me. I had a perfect name, the .net and .org were available, URL shortener domains were good to go, name was available on almost every social network.\n\nBut a 60 year old librarian from NY had the .com, and had had it since 1994.\n\nI eventually was able to purchase it for a reasonable (4-figure) price in large part because, in her words, I had been so polite when inquiring about the purchase and explaining to her what my idea was, etc.\n\nShe was the first person to sign up for the landing page mailing list.", "aSentId": 59976, "answer": "What was the domain?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59977, "question": "What was the domain?", "aSentId": 59978, "answer": "There was no domain; he made the whole thing up for karma.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59979, "question": "There was no domain; he made the whole thing up for karma.", "aSentId": 59980, "answer": "Whoa, 37 points... Nice.\n\nReminds me of the time I sold my \"google.com\" domain to this pair of nerds from Stanford. They said the only reason they were buying it was because they liked the scarf my baby sloth was wearing. My girlfriend knitted it.  ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59981, "question": "Whoa, 37 points... Nice.\n\nReminds me of the time I sold my \"google.com\" domain to this pair of nerds from Stanford. They said the only reason they were buying it was because they liked the scarf my baby sloth was wearing. My girlfriend knitted it.  ", "aSentId": 59982, "answer": "Did someone mention sloths?\n Here's a random fact!\n\nSloths mate and give birth while hanging in trees!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59983, "question": "Did someone mention sloths?\n Here's a random fact!\n\nSloths mate and give birth while hanging in trees!", "aSentId": 59984, "answer": "Kinky.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59985, "question": "Kinky.", "aSentId": 59986, "answer": "Boots", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59979, "question": "There was no domain; he made the whole thing up for karma.", "aSentId": 59988, "answer": "That's why I asked lol", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59973, "question": "It's worse when you have an ideal name and when you look the domain was registered 8-9 years ago and never used but you know the second you inquire about it the price is gonna go up exponentially.\n\nNot sure what the solution is perhaps none-trademarked names must be used in X years or returned to the pool though how you'd enforce what is used or not I guess.", "aSentId": 59990, "answer": "Returned to the pool? When the owner stops paying to renew it then it becomes available. \n\nEven though they haven't used it they may intend on using it soon\u2122 and that's why they continue to pay for renewals. It's the same with my buying Steam games that I intend to play at some point but never get around to it. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59951, "question": "I'm starting to see so many websites kicking the 'e' out of \"er\" and having a .io domain. Is this a trend or something?", "aSentId": 59992, "answer": "You can get pretty good domain names with io tld.  If you're going for .com and want something short and memorable, be prepared to fork over some serious cash to a domain squatter.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59897, "question": "Hackr.io - Find the best programming tutorials and courses", "aSentId": 59996, "answer": "&gt; Domain fappr.io is available for purchase\n\nTalk about leaving money on the table...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59997, "question": "&gt; Domain fappr.io is available for purchase\n\nTalk about leaving money on the table...", "aSentId": 59998, "answer": "I just bought fappr.ninja for $3. Time to make a porn site.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 59999, "question": "I just bought fappr.ninja for $3. Time to make a porn site.", "aSentId": 60000, "answer": "A slash fiction gold mine.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60001, "question": "A slash fiction gold mine.", "aSentId": 60002, "answer": "You'll never see him coming", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60003, "question": "You'll never see him coming", "aSentId": 60004, "answer": "BFRFLFLTT... :D\n\nThat was the sound of Nose-coffee.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60006, "question": "It shouldn't be necessary to login via google to submit new courses/tutorials.", "aSentId": 60007, "answer": "It might be a gate to stop people from submitting stupid stuff willy nilly and to make it easier to ban users. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60006, "question": "It shouldn't be necessary to login via google to submit new courses/tutorials.", "aSentId": 60009, "answer": "Yeah... Although I have a Google account I chose not to login there.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60011, "question": "no C# :(", "aSentId": 60012, "answer": "Fuck C#. There's no assembly :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60013, "question": "Fuck C#. There's no assembly :(", "aSentId": 60014, "answer": "There's CIL and bytecode, though.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60015, "question": "There's CIL and bytecode, though.", "aSentId": 60016, "answer": "Nahh, too hipstr for me.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60019, "question": "This is being heavily advertised across social networks ...", "aSentId": 60020, "answer": "... Including reddit obviously.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60021, "question": "... Including reddit obviously.", "aSentId": 60022, "answer": "Reddit is... social?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60026, "question": "I took one look at the url and physically gagged. Let's see:\n\n* Co-opting the word \"hacker\" to mean \"amateur programmer\"\n* Removing the \"e\" in \"-er\" just to be trendy\n* .io TLD \"because technology\" \n\nAnd what's the point of Yet Another Code Tutorial Site when there's already Codecademy, Code Wars, dozens of bootcamps, and open source coding websites and textbooks available available for free?...", "aSentId": 60027, "answer": "I don't know what you're on about, man. *Maybe* you're right about the domain name, but the content...\n\n&gt; what's the point of Yet Another Code Tutorial Site when there's already...\n\nNot trying to be offensive, but the website is just a collection of links to different \"bootcamps and open source coding websites and textbooks available for free\". I couldn't find any original content *on and by* the website.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60026, "question": "I took one look at the url and physically gagged. Let's see:\n\n* Co-opting the word \"hacker\" to mean \"amateur programmer\"\n* Removing the \"e\" in \"-er\" just to be trendy\n* .io TLD \"because technology\" \n\nAnd what's the point of Yet Another Code Tutorial Site when there's already Codecademy, Code Wars, dozens of bootcamps, and open source coding websites and textbooks available available for free?...", "aSentId": 60029, "answer": "You realize you're shitting on a real person's hard work just because you don't like the way they arranged some letters in the domain, right?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60030, "question": "You realize you're shitting on a real person's hard work just because you don't like the way they arranged some letters in the domain, right?", "aSentId": 60031, "answer": "And he also doesn't seem to understand that those alterations are because domain names are so hard to find nowadays. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60037, "question": "I appreciate the effort, but... is it really that hard to search \"Technology X tutorial\" and weed out the crap yourself?\n\nI learned Backbone.js recently, and came up with the same list they did, but it only took me about half an hour.", "aSentId": 60038, "answer": "&gt;  but it only took me about half an hour\n\nMan, to have that kind of time again. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60039, "question": "&gt;  but it only took me about half an hour\n\nMan, to have that kind of time again. ", "aSentId": 60040, "answer": "&gt; and weed out the crap yourself\n\nOh, this is another point. If you're not already good at the thing you're trying to learn, how do you \"weed out the crap\" without wasting even more time? The only way is to start a tutorial, realize it doesn't click with you after an hours worth of work, and then try again.\n\nHopefully the upvote system will prevent that from happening.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60039, "question": "&gt;  but it only took me about half an hour\n\nMan, to have that kind of time again. ", "aSentId": 60042, "answer": "If you don't have half an hour to learn a new technology...\n\n...you don't have enough time to learn that new technology.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60043, "question": "If you don't have half an hour to learn a new technology...\n\n...you don't have enough time to learn that new technology.", "aSentId": 60044, "answer": "You didn't learn Backbone in half an hour. You scrapped together a list of Backbone tutorials in half an hour. Huge difference.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60045, "question": "You didn't learn Backbone in half an hour. You scrapped together a list of Backbone tutorials in half an hour. Huge difference.", "aSentId": 60046, "answer": "That's not what he implied. He meant if you don't have half an hour to prepare yourself to learn something, you don't have the time to learn that thing.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60047, "question": "That's not what he implied. He meant if you don't have half an hour to prepare yourself to learn something, you don't have the time to learn that thing.", "aSentId": 60048, "answer": "I disagree. You can learn quite a bit from viewing a 30 minute tutorial. That's a lunch break, or a gap before picking up kids from school, etc. Sometimes \"where do I learn this thing\" takes up as much time as actually learning the thing - so if that first half can be eliminated by such a website, then I'm all for it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60037, "question": "I appreciate the effort, but... is it really that hard to search \"Technology X tutorial\" and weed out the crap yourself?\n\nI learned Backbone.js recently, and came up with the same list they did, but it only took me about half an hour.", "aSentId": 60050, "answer": "Meh. If it saves me 30 minutes it's worth it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60037, "question": "I appreciate the effort, but... is it really that hard to search \"Technology X tutorial\" and weed out the crap yourself?\n\nI learned Backbone.js recently, and came up with the same list they did, but it only took me about half an hour.", "aSentId": 60052, "answer": "Honestly all you need for Backbone is Osmani's book. Even just the first two examples (todos and the book ones) are enough to get you ready for most apps. Then the best way to learn is trial and error.\n\nThis site is cool and all but I am afraid it will lead to people just following tutorials over and over again and barely writing they own apps. A better site would list the minimum amount of resources (for example, for Rails, Hartl's book and the official guides are all you need to get you started).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60053, "question": "Honestly all you need for Backbone is Osmani's book. Even just the first two examples (todos and the book ones) are enough to get you ready for most apps. Then the best way to learn is trial and error.\n\nThis site is cool and all but I am afraid it will lead to people just following tutorials over and over again and barely writing they own apps. A better site would list the minimum amount of resources (for example, for Rails, Hartl's book and the official guides are all you need to get you started).", "aSentId": 60054, "answer": "When my computer gets outta the shop in a week, I am going to launch myself at Ruby and Rails coz my r\u00e9sum\u00e9 is looking a little old...\n\nI will look up Hartl but can you give me more detail on said \"official\" guide?\n\nThanks.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60061, "question": "Reflex: Practical Functional Reactive Programming", "aSentId": 60062, "answer": "[Links to the slides](https://obsidian.systems/reflex-nyhug/)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60065, "question": "Premature Scalability and the Root of All Evil", "aSentId": 60066, "answer": "Some programmers made blocking IO calls in the frontend of their website.  Foreseeably, the requests got gummed up.\n\nI don't really see how to put the blame on premature scalability.  Those IO calls should have been async from the start.\n\n(Edit: I feel like it should be further noted, however, that the author's suggested implementation of async is questionable.  On the other hand, if the team was using an older version of ASP.NET, it may not have been avoidable.  Not sure about that.  But any recent version gives you async HTTP calls without any threading concerns or special logic.)\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60069, "question": "10 Years of Git: An Interview with Git Creator Linus Torvalds", "aSentId": 60070, "answer": "Jeez. Can you imagine what would have happened if Larry McVoy had agreed to open source the main BitKeeper product? We might have had BitHub today, and BK distributed with every Mac and Unix distro.\n\nThat must be something to keep a guy up some nights.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60071, "question": "Jeez. Can you imagine what would have happened if Larry McVoy had agreed to open source the main BitKeeper product? We might have had BitHub today, and BK distributed with every Mac and Unix distro.\n\nThat must be something to keep a guy up some nights.", "aSentId": 60072, "answer": "I don't know about that. How much money has Torvalds made from git?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60073, "question": "I don't know about that. How much money has Torvalds made from git?", "aSentId": 60074, "answer": "Torvalds hasn't tried to monetise git, but McVoy surely would've tried to monetise an open source BK and/or the ecosystem around it. Because he's in the SCM business. Hence perhaps a hosting provider like BitHub, consultancy and training services, custom deployments, big industry/govt contracts, etc. Propelled by the clout of the kernel project, who knows what he could have achieved.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60075, "question": "Torvalds hasn't tried to monetise git, but McVoy surely would've tried to monetise an open source BK and/or the ecosystem around it. Because he's in the SCM business. Hence perhaps a hosting provider like BitHub, consultancy and training services, custom deployments, big industry/govt contracts, etc. Propelled by the clout of the kernel project, who knows what he could have achieved.", "aSentId": 60076, "answer": "Nothing in your list is unique to Larry McVoy. After releasing BitKeeper as an open source product, anyone else could have monetized it. And they could probably do it better that McVoy because they aren't distracted by their work on the core product. \n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60077, "question": "Nothing in your list is unique to Larry McVoy. After releasing BitKeeper as an open source product, anyone else could have monetized it. And they could probably do it better that McVoy because they aren't distracted by their work on the core product. \n\n", "aSentId": 60078, "answer": "Anyone could have tried to do it. But who could have done it better is debatable. One can very plausibly argue that McVoy, having the best knowledge of BK internals and usage practices, would have been in prime position to offer all the services I mentioned. Working on the core product doesn't seem to affect people's ability to offer business services. See e.g. MySQL AB, now MariaDB, Scala and Typesafe, Clojure and Datomic, and in fact GitHub with their GitHub:enterprise product.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60079, "question": "Anyone could have tried to do it. But who could have done it better is debatable. One can very plausibly argue that McVoy, having the best knowledge of BK internals and usage practices, would have been in prime position to offer all the services I mentioned. Working on the core product doesn't seem to affect people's ability to offer business services. See e.g. MySQL AB, now MariaDB, Scala and Typesafe, Clojure and Datomic, and in fact GitHub with their GitHub:enterprise product.", "aSentId": 60080, "answer": "MySQL AB had the advantage of dual licensing. Anyone could make extensions to MySQL, but only they could make and sell those extensions. They also had the ability to offer non-GPL licenses to companies that needed it.\n\nNo one needs to build extensions into git/BitKeeper in order to offer new capabilities, nor does any company using it need a non-GPL version. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60081, "question": "MySQL AB had the advantage of dual licensing. Anyone could make extensions to MySQL, but only they could make and sell those extensions. They also had the ability to offer non-GPL licenses to companies that needed it.\n\nNo one needs to build extensions into git/BitKeeper in order to offer new capabilities, nor does any company using it need a non-GPL version. ", "aSentId": 60082, "answer": "BitKeeper was a proprietary product. McVoy could have released it under any combination of open source/proprietary licensing he wished. He already had all contributor licensing under the company name.\n\nPeople need new capabilities in their source control _all the time._ Just the fact that GitHub:enterprise exists; the fact that git annex exists; gitolite, GitLab, etc.; that Facebook built a custom push/pull management system on top of Mercurial to make it scale up and speed up; all of these things prove that people need to do stuff with source control that's not the core focus of the software.\n\nSo companies may not need these things to be closed source; they may agree to let the developer open source them (or just develop them internally and then open source them); but they still need them.\n\nObviously, we're fully talking hypotheticals here. I'm just trying to show that the path was clear for McVoy to have switched to an open source BK and corresponding service-oriented business model.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60083, "question": "BitKeeper was a proprietary product. McVoy could have released it under any combination of open source/proprietary licensing he wished. He already had all contributor licensing under the company name.\n\nPeople need new capabilities in their source control _all the time._ Just the fact that GitHub:enterprise exists; the fact that git annex exists; gitolite, GitLab, etc.; that Facebook built a custom push/pull management system on top of Mercurial to make it scale up and speed up; all of these things prove that people need to do stuff with source control that's not the core focus of the software.\n\nSo companies may not need these things to be closed source; they may agree to let the developer open source them (or just develop them internally and then open source them); but they still need them.\n\nObviously, we're fully talking hypotheticals here. I'm just trying to show that the path was clear for McVoy to have switched to an open source BK and corresponding service-oriented business model.", "aSentId": 60084, "answer": "My point is that monetizing open source software is hard. Really, really hard. You have to have some kind of angle to make it pay off. \n\nFor example, Microsoft is offering .NET as open source because they think it will help them sell more MSDN and Azure subscriptions. \n\nConversely, when Sun allowed an open source version of Java to be created they lost all of their mobile phone sales to Google. Who, by the way, only offer part of Android as open source in order to prevent real competition.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60085, "question": "My point is that monetizing open source software is hard. Really, really hard. You have to have some kind of angle to make it pay off. \n\nFor example, Microsoft is offering .NET as open source because they think it will help them sell more MSDN and Azure subscriptions. \n\nConversely, when Sun allowed an open source version of Java to be created they lost all of their mobile phone sales to Google. Who, by the way, only offer part of Android as open source in order to prevent real competition.", "aSentId": 60086, "answer": "Point taken \ud83d\ude0a\n\nSoftware is a high-risk, high-reward game. If you pivot yourself into a domain expert in SCM, and a _proven_ one at that, then I think you have a real chance.\n\nOf course, add to that the fact that your product is quite possibly in every Unix-like desktop system in the world.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60073, "question": "I don't know about that. How much money has Torvalds made from git?", "aSentId": 60088, "answer": "Torvalds made git to improve Linux kernel development, and Torvalds is paid to work on Linux.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60089, "question": "Torvalds made git to improve Linux kernel development, and Torvalds is paid to work on Linux.", "aSentId": 60090, "answer": "So what? That doesn't inform us as to whether or not Larry McVoy could have monetized BitKeeper more efficiently by open sourcing it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60091, "question": "So what? That doesn't inform us as to whether or not Larry McVoy could have monetized BitKeeper more efficiently by open sourcing it.", "aSentId": 60092, "answer": "That was a response to:\n\n&gt; How much money has Torvalds made from git?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60071, "question": "Jeez. Can you imagine what would have happened if Larry McVoy had agreed to open source the main BitKeeper product? We might have had BitHub today, and BK distributed with every Mac and Unix distro.\n\nThat must be something to keep a guy up some nights.", "aSentId": 60094, "answer": "In other words, if McVoy did not act like a git a decade ago, there would be no git today.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60071, "question": "Jeez. Can you imagine what would have happened if Larry McVoy had agreed to open source the main BitKeeper product? We might have had BitHub today, and BK distributed with every Mac and Unix distro.\n\nThat must be something to keep a guy up some nights.", "aSentId": 60096, "answer": "No matter what Linus would still be a total douchebag.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60097, "question": "No matter what Linus would still be a total douchebag.", "aSentId": 60098, "answer": "Your patch got rejected huh?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60097, "question": "No matter what Linus would still be a total douchebag.", "aSentId": 60100, "answer": "Are you referring to something?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60069, "question": "10 Years of Git: An Interview with Git Creator Linus Torvalds", "aSentId": 60102, "answer": "Everyone here seems plenty thankful for git, especially in comparison to older alternatives like SVN and CVS, but I seem to have been alone in my own, special hell surviving ClearCase.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60103, "question": "Everyone here seems plenty thankful for git, especially in comparison to older alternatives like SVN and CVS, but I seem to have been alone in my own, special hell surviving ClearCase.", "aSentId": 60104, "answer": "My company just got off of ClearCase. You're not alone!   \nThere should be a special hell for whoever thought it was a good idea.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60105, "question": "My company just got off of ClearCase. You're not alone!   \nThere should be a special hell for whoever thought it was a good idea.", "aSentId": 60106, "answer": "Itd be great if we could phase out ClearCase at work, but theyre starting new projects in ClearCase, so we will probably still be stuck with it for the next 5 years or so.\n\nOn the plus-side, some of the new projects are using TFS, which is not AS shitty, but still kind-of shitty.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60107, "question": "Itd be great if we could phase out ClearCase at work, but theyre starting new projects in ClearCase, so we will probably still be stuck with it for the next 5 years or so.\n\nOn the plus-side, some of the new projects are using TFS, which is not AS shitty, but still kind-of shitty.", "aSentId": 60108, "answer": "I don't know man, TFS and ClearCase are both pretty darn shitty.\n\nI'd go so far as to put them in the same bucket, honestly.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60109, "question": "I don't know man, TFS and ClearCase are both pretty darn shitty.\n\nI'd go so far as to put them in the same bucket, honestly.", "aSentId": 60110, "answer": "Meanwhile we're still using Visual SourceSafe :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60111, "question": "Meanwhile we're still using Visual SourceSafe :(", "aSentId": 60112, "answer": "Dear God, you must have done something *awful* in a previous life to deserve using VSS in 2015.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60107, "question": "Itd be great if we could phase out ClearCase at work, but theyre starting new projects in ClearCase, so we will probably still be stuck with it for the next 5 years or so.\n\nOn the plus-side, some of the new projects are using TFS, which is not AS shitty, but still kind-of shitty.", "aSentId": 60114, "answer": "Yeah, we just switched to TFS, at least it has atomic commits. Merging is also usually pleasant.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60105, "question": "My company just got off of ClearCase. You're not alone!   \nThere should be a special hell for whoever thought it was a good idea.", "aSentId": 60116, "answer": "Any chance you could regale us with some stories of the horror of ClearCase for those of us who have never used it?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60117, "question": "Any chance you could regale us with some stories of the horror of ClearCase for those of us who have never used it?", "aSentId": 60118, "answer": "Like I said earlier, ClearCase doesn't do atomic commits. Instead, each file you check in is it's own commit (even when checked in as a group). This causes several issues when working on a large project. The first is, how do you know a group of files were checked in together? We \"solved\" that by doing extremely detailed check in notes that detailed changes in each file that was part of the check in. Another issue is, what if multiple developers are working on the same file? The ClearCase merge tool doesn't help at all with this. Our workaround was to basically inform the entire team whenever we did a check-in, with an email that had our detailed check-in notes, so they can pull down and merge. We also had to send a second email saying that the check-in was finished.    \nMerging was nasty, but not impossible. It was typically a half-day task, at least. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60119, "question": "Like I said earlier, ClearCase doesn't do atomic commits. Instead, each file you check in is it's own commit (even when checked in as a group). This causes several issues when working on a large project. The first is, how do you know a group of files were checked in together? We \"solved\" that by doing extremely detailed check in notes that detailed changes in each file that was part of the check in. Another issue is, what if multiple developers are working on the same file? The ClearCase merge tool doesn't help at all with this. Our workaround was to basically inform the entire team whenever we did a check-in, with an email that had our detailed check-in notes, so they can pull down and merge. We also had to send a second email saying that the check-in was finished.    \nMerging was nasty, but not impossible. It was typically a half-day task, at least. ", "aSentId": 60120, "answer": "I was also constantly frustrated by its model of checking a file out before you could change it (or else having to deal with hijacking), as well as the fact that it's GUI tools were ancient and tended to block on network activity which caused a lot of delays and made it a real nuisance to even navigate folders. Pulling up change history or a version tree was often a \"go get a coffee and come back later\" sort of deal. It was also extremely easy (and therefore common) for people to forget that when adding files, you had to check in the directory it lived in, which lead to lots of incomplete changes. All for only a few thousand dollars!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60121, "question": "I was also constantly frustrated by its model of checking a file out before you could change it (or else having to deal with hijacking), as well as the fact that it's GUI tools were ancient and tended to block on network activity which caused a lot of delays and made it a real nuisance to even navigate folders. Pulling up change history or a version tree was often a \"go get a coffee and come back later\" sort of deal. It was also extremely easy (and therefore common) for people to forget that when adding files, you had to check in the directory it lived in, which lead to lots of incomplete changes. All for only a few thousand dollars!", "aSentId": 60122, "answer": "Oh god yes! I forgot about that.   \nAlso, never try to use ClearCase over a VPN, even checking in one file can take hours...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60103, "question": "Everyone here seems plenty thankful for git, especially in comparison to older alternatives like SVN and CVS, but I seem to have been alone in my own, special hell surviving ClearCase.", "aSentId": 60124, "answer": "I have a large ClearCase shaped scar on my back from a project when I was badly burned by it.\n\nMy colleagues from that project still joke about the time one guy forgot to check in a file and then went on sick leave the day after. No one could touch \"his\" files, which were fairly critical, for a day.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60125, "question": "I have a large ClearCase shaped scar on my back from a project when I was badly burned by it.\n\nMy colleagues from that project still joke about the time one guy forgot to check in a file and then went on sick leave the day after. No one could touch \"his\" files, which were fairly critical, for a day.", "aSentId": 60126, "answer": "sudo su that guy", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60103, "question": "Everyone here seems plenty thankful for git, especially in comparison to older alternatives like SVN and CVS, but I seem to have been alone in my own, special hell surviving ClearCase.", "aSentId": 60128, "answer": "Nobody uses CC.  They use shell scripts around CC because CC itself is completely useless.  Also I'm a CC survivor.  PM me if you need to talk with someone.  :-)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60069, "question": "10 Years of Git: An Interview with Git Creator Linus Torvalds", "aSentId": 60132, "answer": "Here are the things I find cool about git.\n\nOne. Linus created Linux, we all know that. And of course he's very involved in the process. But sometimes, one might wonder... how do we know he's still \"got it\"? How do we know he's not just in charge by inertia? It's an important question to ask.\n\nThe fact that he created a _very_ good source control management software, very quickly, shows it. It's always good to see that our faith in someone is, you know, valid. Man doesn't rest on his laurels.\n\nTwo, it did gain really really fast adoption, which is pretty cool. Usually software like this takes forever to become used.\n\nThree, it's not always the case, but a lot of the time, and certainly in this case, it shows how useful dog-fooding is. He didn't create git to solve some nebulous set of problems, driven by a list of user complaints that he received from someone else instructing him to fix things up. He knew very well the issues, and he went about creating something to solve them, something that he can use for himself. There's a big difference between solving someone else's problem and solving your problem that applies to other people.\n\nAnyways, hooray for git, I love it. Of course it has its oddities but I have no major complaints, especially not after cvs and svn.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60133, "question": "Here are the things I find cool about git.\n\nOne. Linus created Linux, we all know that. And of course he's very involved in the process. But sometimes, one might wonder... how do we know he's still \"got it\"? How do we know he's not just in charge by inertia? It's an important question to ask.\n\nThe fact that he created a _very_ good source control management software, very quickly, shows it. It's always good to see that our faith in someone is, you know, valid. Man doesn't rest on his laurels.\n\nTwo, it did gain really really fast adoption, which is pretty cool. Usually software like this takes forever to become used.\n\nThree, it's not always the case, but a lot of the time, and certainly in this case, it shows how useful dog-fooding is. He didn't create git to solve some nebulous set of problems, driven by a list of user complaints that he received from someone else instructing him to fix things up. He knew very well the issues, and he went about creating something to solve them, something that he can use for himself. There's a big difference between solving someone else's problem and solving your problem that applies to other people.\n\nAnyways, hooray for git, I love it. Of course it has its oddities but I have no major complaints, especially not after cvs and svn.", "aSentId": 60134, "answer": "Which reminds me, Richard Stallman actually created GCC, aside from being the face of FOSS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60135, "question": "Which reminds me, Richard Stallman actually created GCC, aside from being the face of FOSS.", "aSentId": 60136, "answer": "Stallman created a metric shitton of stuff. Emacs is another huge name under his belt, but much of core GNU has his fingerprints all over it even if he no longer takes the maintenance lead on those projects today.\n\nHe was so prolific that he screwed his hands and wrists up badly and had to hire people to type for him. The man was a bonafide machine and an extremely competent coder, despite his (very) questionable indentation style.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60137, "question": "Stallman created a metric shitton of stuff. Emacs is another huge name under his belt, but much of core GNU has his fingerprints all over it even if he no longer takes the maintenance lead on those projects today.\n\nHe was so prolific that he screwed his hands and wrists up badly and had to hire people to type for him. The man was a bonafide machine and an extremely competent coder, despite his (very) questionable indentation style.", "aSentId": 60138, "answer": "&gt; Emacs is another huge name under his belt...\n\n&gt; ...he screwed his hands and wrists up badly and had to hire people to type for him.\n\nThese two points may be related :P\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60133, "question": "Here are the things I find cool about git.\n\nOne. Linus created Linux, we all know that. And of course he's very involved in the process. But sometimes, one might wonder... how do we know he's still \"got it\"? How do we know he's not just in charge by inertia? It's an important question to ask.\n\nThe fact that he created a _very_ good source control management software, very quickly, shows it. It's always good to see that our faith in someone is, you know, valid. Man doesn't rest on his laurels.\n\nTwo, it did gain really really fast adoption, which is pretty cool. Usually software like this takes forever to become used.\n\nThree, it's not always the case, but a lot of the time, and certainly in this case, it shows how useful dog-fooding is. He didn't create git to solve some nebulous set of problems, driven by a list of user complaints that he received from someone else instructing him to fix things up. He knew very well the issues, and he went about creating something to solve them, something that he can use for himself. There's a big difference between solving someone else's problem and solving your problem that applies to other people.\n\nAnyways, hooray for git, I love it. Of course it has its oddities but I have no major complaints, especially not after cvs and svn.", "aSentId": 60140, "answer": "While not taking away from the initiative it's misleading and dismissive to suggest the success of Linux or Git rest solely in the hands of Linus himself.  There is no reason why the Linus Linux tree is defacto other than \"that works\" but in many BSP cases (Xilinx/Altera/Wand/etc...) they have their own Linux trees that sometimes get pushed back to mainline but not always...\n\nJust like Stallman.  He started GNU but it's the 100s and 1000s of contributors over the years that made it worthwhile.  So kudos for the vision but I wouldn't give one person sole credit for it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60141, "question": "While not taking away from the initiative it's misleading and dismissive to suggest the success of Linux or Git rest solely in the hands of Linus himself.  There is no reason why the Linus Linux tree is defacto other than \"that works\" but in many BSP cases (Xilinx/Altera/Wand/etc...) they have their own Linux trees that sometimes get pushed back to mainline but not always...\n\nJust like Stallman.  He started GNU but it's the 100s and 1000s of contributors over the years that made it worthwhile.  So kudos for the vision but I wouldn't give one person sole credit for it.", "aSentId": 60142, "answer": "Exactly. I admire Linus, but I don't give him *full* credit. If he had done nothing, somebody else would have created Linux, and something like Git would still exist -- maybe a little later, maybe a little worse, but very similar. Those contributors would have glommed on something.\n\nIt's similar to the rise of Facebook. Was it really the best of all possible websites? If Zuckerberg had gone into science, somebody else's \"social network\" website would have blossomed.\n\nThe reason this debate matters is that a lot of rich people believe they *earned* every dollar they have, so they have a moral aversion to taxes. In fact, they *earned* only part of it. The rest is from help and from luck. And the percentage that they actually earned drops with size of enterprise.\n\nIt's very important not to forget the countless contributors to every endeavor, including the competitors who encourage innovation. The economic system needs to reward more than just the big winners.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60143, "question": "Exactly. I admire Linus, but I don't give him *full* credit. If he had done nothing, somebody else would have created Linux, and something like Git would still exist -- maybe a little later, maybe a little worse, but very similar. Those contributors would have glommed on something.\n\nIt's similar to the rise of Facebook. Was it really the best of all possible websites? If Zuckerberg had gone into science, somebody else's \"social network\" website would have blossomed.\n\nThe reason this debate matters is that a lot of rich people believe they *earned* every dollar they have, so they have a moral aversion to taxes. In fact, they *earned* only part of it. The rest is from help and from luck. And the percentage that they actually earned drops with size of enterprise.\n\nIt's very important not to forget the countless contributors to every endeavor, including the competitors who encourage innovation. The economic system needs to reward more than just the big winners.", "aSentId": 60144, "answer": "In a way Mercurial is \"yet another DVCS\" and Git didn't invent the concept of DVCS they were just one of the first freely open source implementations. That's why I give him credit for the initiative and perhaps the vision to open source it but I don't attribute the success of Git to Linus just like I don't attribute the success of GCC to RMS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60133, "question": "Here are the things I find cool about git.\n\nOne. Linus created Linux, we all know that. And of course he's very involved in the process. But sometimes, one might wonder... how do we know he's still \"got it\"? How do we know he's not just in charge by inertia? It's an important question to ask.\n\nThe fact that he created a _very_ good source control management software, very quickly, shows it. It's always good to see that our faith in someone is, you know, valid. Man doesn't rest on his laurels.\n\nTwo, it did gain really really fast adoption, which is pretty cool. Usually software like this takes forever to become used.\n\nThree, it's not always the case, but a lot of the time, and certainly in this case, it shows how useful dog-fooding is. He didn't create git to solve some nebulous set of problems, driven by a list of user complaints that he received from someone else instructing him to fix things up. He knew very well the issues, and he went about creating something to solve them, something that he can use for himself. There's a big difference between solving someone else's problem and solving your problem that applies to other people.\n\nAnyways, hooray for git, I love it. Of course it has its oddities but I have no major complaints, especially not after cvs and svn.", "aSentId": 60146, "answer": "Linus has said on a few occasions, I believe, that he doesn't actually do very much coding for linux at all any more because all of his time is taken up managing everyone else's contributions. I don't think proving he's still a great programmer proves he's good at that sort of management stuff--though obviously he *is*, and any major open source project would benefit from their own Linus Torvalds--because they're totally different skills.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60148, "question": "&gt; How do we know he's not just in charge by inertia?\n\nThe day to day dealings of the kernel development community are open for all to see on the LKML. You could read that and see that he indeed has awesome insight into what constitutes good robust and maintainable code.", "aSentId": 60149, "answer": "Rhetorical questions don't need answers :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60151, "question": "&gt; Git Creator Linus Torvalds\n\nThat's a factually true title that still seems very off :P", "aSentId": 60152, "answer": "Retired Finnish Army Officer Linus Torvalds", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60154, "question": "I love git, but i hated learning it at first.  The CLI is terribly inconsistent, and all the UI clients out there are absolute trash.", "aSentId": 60155, "answer": "Git extensions is very good, SourceTree is not bad too.\nWhat I still don't like in git is the way it manages submodules :/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60156, "question": "Git extensions is very good, SourceTree is not bad too.\nWhat I still don't like in git is the way it manages submodules :/", "aSentId": 60157, "answer": "Yes, better submodule support would be huge ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60156, "question": "Git extensions is very good, SourceTree is not bad too.\nWhat I still don't like in git is the way it manages submodules :/", "aSentId": 60159, "answer": "git submodules are really bad.  I use them almost every day and I still cannot wrap my head around the commands.  Why is it hard to simply say \"checkout tag 0.4.0 for submodule foo?\" ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60154, "question": "I love git, but i hated learning it at first.  The CLI is terribly inconsistent, and all the UI clients out there are absolute trash.", "aSentId": 60161, "answer": "I find myself using the CLI a lot. It's just faster for checkout and switching branches. Don't forget to use tab-completion though!\n\nI use Git Gui for staging/unstaging and commiting, and gitk for browsing the history. I have GitExt installed, but I almost never use them. They have only a few advantages, such as the ability to revert lines (Git Gui only stages/unstages them), as well as a shortcut for staging/unstaging and reverting.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60162, "question": "I find myself using the CLI a lot. It's just faster for checkout and switching branches. Don't forget to use tab-completion though!\n\nI use Git Gui for staging/unstaging and commiting, and gitk for browsing the history. I have GitExt installed, but I almost never use them. They have only a few advantages, such as the ability to revert lines (Git Gui only stages/unstages them), as well as a shortcut for staging/unstaging and reverting.", "aSentId": 60163, "answer": "Try using the `-p` (`--patch`) option with the git cli, works with a bunch of commands like `git add`, `git reset` and such.\n\nAlso since you're already in a shell, `tig` is pretty good to quickly browse the history.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60164, "question": "Try using the `-p` (`--patch`) option with the git cli, works with a bunch of commands like `git add`, `git reset` and such.\n\nAlso since you're already in a shell, `tig` is pretty good to quickly browse the history.", "aSentId": 60165, "answer": "Is this tig - https://github.com/jonas/tig?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60166, "question": "Is this tig - https://github.com/jonas/tig?", "aSentId": 60167, "answer": "Yes it is.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60154, "question": "I love git, but i hated learning it at first.  The CLI is terribly inconsistent, and all the UI clients out there are absolute trash.", "aSentId": 60169, "answer": "&gt; all the UI clients out there are absolute trash.\n\nYou've never used SourceTree. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60170, "question": "&gt; all the UI clients out there are absolute trash.\n\nYou've never used SourceTree. ", "aSentId": 60171, "answer": "Yes I have", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60172, "question": "Yes I have", "aSentId": 60173, "answer": "So what's so bad about it? The only thing imo is that diffs of long lines become painful to read (I'm the editor (among others) of a story and the author uses BitBucket).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60176, "question": "ok, please tell me I'm not the only one who just found out who created git", "aSentId": 60177, "answer": "Nope, sorry, you're the only one :(", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60178, "question": "Nope, sorry, you're the only one :(", "aSentId": 60179, "answer": "No i am pretty sure you are the only one unless some guy has been living in a cabin in Montana with nothing but an old gateway laptop that he has for some weird reason installed git on but never googled any commands or watched anything on Youtube.\n\nGit may very well end up being what torvalds is remembered for.  Its been that influential.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60180, "question": "No i am pretty sure you are the only one unless some guy has been living in a cabin in Montana with nothing but an old gateway laptop that he has for some weird reason installed git on but never googled any commands or watched anything on Youtube.\n\nGit may very well end up being what torvalds is remembered for.  Its been that influential.", "aSentId": 60181, "answer": "I'd like to think that Linux has been a little more influential.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60182, "question": "I'd like to think that Linux has been a little more influential.", "aSentId": 60183, "answer": "The name helps. It's easier to remember Linus made Linux than git.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60182, "question": "I'd like to think that Linux has been a little more influential.", "aSentId": 60185, "answer": "I guess it depends on who's perspective you're coming from. Other developers where I work use a variety of OSes, but we all use git - I'd say among programmers, git may very well be more influential than Linux.     \n    \nOn the other hand, many sysadmins around the world rely on Linux for (relatively) secure and fast systems, and many people that are not developers have used Linux or used a product that relies on Linux.    \n     \nBut then again, would Linux development have been as successful without the (somewhat) easy to use free tools and fantastic communities that developed around it?    \n    \nI don't know the answer to these questions, but that could lead to some interesting discussion.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60186, "question": "I guess it depends on who's perspective you're coming from. Other developers where I work use a variety of OSes, but we all use git - I'd say among programmers, git may very well be more influential than Linux.     \n    \nOn the other hand, many sysadmins around the world rely on Linux for (relatively) secure and fast systems, and many people that are not developers have used Linux or used a product that relies on Linux.    \n     \nBut then again, would Linux development have been as successful without the (somewhat) easy to use free tools and fantastic communities that developed around it?    \n    \nI don't know the answer to these questions, but that could lead to some interesting discussion.", "aSentId": 60187, "answer": "You also all use linux, you probably just don't realize it.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60186, "question": "I guess it depends on who's perspective you're coming from. Other developers where I work use a variety of OSes, but we all use git - I'd say among programmers, git may very well be more influential than Linux.     \n    \nOn the other hand, many sysadmins around the world rely on Linux for (relatively) secure and fast systems, and many people that are not developers have used Linux or used a product that relies on Linux.    \n     \nBut then again, would Linux development have been as successful without the (somewhat) easy to use free tools and fantastic communities that developed around it?    \n    \nI don't know the answer to these questions, but that could lead to some interesting discussion.", "aSentId": 60189, "answer": "&gt; and many people that are not developers have used Linux or used a product that relies on Linux.\n\nMost people own a smartphone, and most of those are Android, which runs linux. Most use the internet, which runs on linux more than anything else--especially when considering all the linux-based routers, switches, and firewalls. The \"smart\" in their smart TV or set top box is probably running on linux. If you get on a plane, the entertainment system is powered by linux, and so is flight control. If you participate in the economy, NYSE runs on linux. Honestly, so on and so forth. The value of an open source operating system kernel which can be compiled for every major architecture cannot be understated. \n\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60180, "question": "No i am pretty sure you are the only one unless some guy has been living in a cabin in Montana with nothing but an old gateway laptop that he has for some weird reason installed git on but never googled any commands or watched anything on Youtube.\n\nGit may very well end up being what torvalds is remembered for.  Its been that influential.", "aSentId": 60191, "answer": "You replied to the wrong comment, and I'm pretty sure I've never been to Montana. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60176, "question": "ok, please tell me I'm not the only one who just found out who created git", "aSentId": 60193, "answer": "I always remember because of a quote he gave:\n\n*\"Well, I already named my first creation after myself, why not the second?\"*", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60194, "question": "I always remember because of a quote he gave:\n\n*\"Well, I already named my first creation after myself, why not the second?\"*", "aSentId": 60195, "answer": "\"To git or not to git, that is the SVC\"-Nelson Mandela", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60176, "question": "ok, please tell me I'm not the only one who just found out who created git", "aSentId": 60197, "answer": "I was embarrassed to discover that git had only been around since 2005.  I had always assumed it was some 80s era thing based on how it's so oriented around text files (critical parts are implemented primarily that way) and the command line, and how tightly coupled it is to unix file systems, what with it's heavy milking of dot-files.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60198, "question": "I was embarrassed to discover that git had only been around since 2005.  I had always assumed it was some 80s era thing based on how it's so oriented around text files (critical parts are implemented primarily that way) and the command line, and how tightly coupled it is to unix file systems, what with it's heavy milking of dot-files.", "aSentId": 60199, "answer": "[I guess what's old is new again.](http://catb.org/~esr/writings/taoup/)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60198, "question": "I was embarrassed to discover that git had only been around since 2005.  I had always assumed it was some 80s era thing based on how it's so oriented around text files (critical parts are implemented primarily that way) and the command line, and how tightly coupled it is to unix file systems, what with it's heavy milking of dot-files.", "aSentId": 60201, "answer": "Exactly my thoughts. Also, SVN seems waay older (by at least 7 years) than git (which I dated roughly to 1998), let alone CVS (12?). I really can't imagine how it was to code without them.\n\n\\#codingsince2009", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60203, "question": "You're not alone buddy", "aSentId": 60204, "answer": "Same here - all I knew was that he taught penguins how to sit down", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60206, "question": "this is like the Sandlot and not knowing who Babe Ruth was.\n\nUltimately completely unimportant to anything, but we're still going to be incredulous about it.", "aSentId": 60207, "answer": "The SULTAN OF SWAT!\n\nTHE GREAT BAMBINO! \n\nyour killing me smalls.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60210, "question": "That info is freely available on git's Wikipedia page, just a quick Google search away.", "aSentId": 60211, "answer": "yeah but why would I look that up? why would anyone? I'm using git for I don't know how many years but I never thought to look into this...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60212, "question": "yeah but why would I look that up? why would anyone? I'm using git for I don't know how many years but I never thought to look into this...", "aSentId": 60213, "answer": "To be fair, some of us folk remember when it first came out with all the hubbub surrounding the decision. I'm not sure I would know if I wasn't around back then.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60214, "question": "To be fair, some of us folk remember when it first came out with all the hubbub surrounding the decision. I'm not sure I would know if I wasn't around back then.", "aSentId": 60215, "answer": "I do remember that, I just don't remember Linus being mentioned...", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60212, "question": "yeah but why would I look that up? why would anyone? I'm using git for I don't know how many years but I never thought to look into this...", "aSentId": 60217, "answer": "To increase neckbeard knowledge, duh!", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60219, "question": "&gt;Do you think the rate of Linux kernel development would have &gt;been able to grow at its current rate without Git? Why or why not?\n\n&gt;Torvalds: Well, \"without git,\" sure. But it would have required that &gt;somebody else wrote something git-equivalent: a distributed SCM &gt;that is as efficient as git is. We definitely needed something *like* &gt;git.\n\nI know about this in the past, but I think he gave up the oppurtunity to expand upon some strange alternative history where Mercurial was adopted by the kernel.", "aSentId": 60220, "answer": "Or Darcs, that was around 2 years before he created Git.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60221, "question": "Or Darcs, that was around 2 years before he created Git.", "aSentId": 60222, "answer": "Darcs, Arch/Tla, Monotone... There were many open-source attempts at \"next-gen\" source control in the few years that preceded the creation of Git. Even Subversion was an ambitious (aka \"overengineered\") attempt at improving CVS, which was the baseline against which all were compared, and that all were deriding.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60223, "question": "Darcs, Arch/Tla, Monotone... There were many open-source attempts at \"next-gen\" source control in the few years that preceded the creation of Git. Even Subversion was an ambitious (aka \"overengineered\") attempt at improving CVS, which was the baseline against which all were compared, and that all were deriding.", "aSentId": 60224, "answer": "I referenced Mercurial specifically because I believe Torvalds made a comment to the effect that he probably would have just used Mercurial if timing had been different by a few months. \n\nI know neither git nor mercurial were the first to feature a distributed model. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60226, "question": "Obligatory Mercurial has a better UI comment", "aSentId": 60227, "answer": "Obligatory Darcs is better at splitting and cherry-picking commits.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60228, "question": "Obligatory Darcs is better at splitting and cherry-picking commits.", "aSentId": 60229, "answer": "Darcs is generally superior when it comes to interface. It sounds implausible at first, but with darcs there exists a VCS that you can use without reading docs.\n\n...things just get hairy when you've got too large repositories. While exponential merges are rare, they still didn't manage to eradicate them completely from the theory. [Rebasing](http://darcs.net/Using/Rebase), which is about to be released, is a stop-gap for that. Not at all elegant, but better than losing good will in the years it might take to figure out what darcs 3 should look like.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60226, "question": "Obligatory Mercurial has a better UI comment", "aSentId": 60231, "answer": "Both are lovely in my book.\n\nJust don't put your project in SVN (or CVS *shudder*).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60232, "question": "Both are lovely in my book.\n\nJust don't put your project in SVN (or CVS *shudder*).", "aSentId": 60233, "answer": "Nah. Git is great, functionally-speaking, but its UI is ass: http://stevelosh.com/blog/2013/04/git-koans/", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60234, "question": "Nah. Git is great, functionally-speaking, but its UI is ass: http://stevelosh.com/blog/2013/04/git-koans/", "aSentId": 60235, "answer": "Thank you for this! Not only was it good for a laugh, but it also makes me feel better about my decision to migrate my team to Mercurial instead of Git (coming from CVS).", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60236, "question": "Thank you for this! Not only was it good for a laugh, but it also makes me feel better about my decision to migrate my team to Mercurial instead of Git (coming from CVS).", "aSentId": 60237, "answer": "They're both solid systems. I prefer Git because I've already acquired the needed brain damage to use it, but if you're coming from CVS, either one should be a welcome change.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60238, "question": "They're both solid systems. I prefer Git because I've already acquired the needed brain damage to use it, but if you're coming from CVS, either one should be a welcome change.", "aSentId": 60239, "answer": "In truth, my decision was based on two points learned from a trial migration. 1) Git chokes on a repository as large as ours, while Mercurial handles it perfectly. 2) We mostly work in Windows, and Mercurial has multiple good programs to choose from while Git doesn't. Even the \"same\" program for Git is much harder to use than the one for Mercurial, such as with TortoiseGit and TortoiseHg.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60234, "question": "Nah. Git is great, functionally-speaking, but its UI is ass: http://stevelosh.com/blog/2013/04/git-koans/", "aSentId": 60241, "answer": "Its changed since that article...2 years ago", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60242, "question": "Its changed since that article...2 years ago", "aSentId": 60243, "answer": "As of 2.3.5 (what's on my machine):\n\n- `man git-config` still indicates that \"To avoid confusion and troubles with script usage, aliases that hide existing Git commands are ignored.\" and I get no warning when setting such an alias.\n\n- `git checkout` still has the billion uses mentioned in the post\n\n- AFAIK, which branch a parent commit of a merge is from is impossible to know from the Git data model (since branches are just pointers to a commit).\n\n- Flags are still wildly inconsistent as mentioned in \"The Hobgoblin\", unless there's new ones I'm unaware of.\n\n- The `--help` related quirks are still there\n\nSo... all of the UI issues mentioned in the blog post are still there. That's not to say the UI is unusable, but it could certainly be better, more consistent, and more beginner-friendly without sacrificing any functionality.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60232, "question": "Both are lovely in my book.\n\nJust don't put your project in SVN (or CVS *shudder*).", "aSentId": 60245, "answer": "Both are lovely indeed. But only one won", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60246, "question": "Both are lovely indeed. But only one won", "aSentId": 60247, "answer": "Meh.\n\nGitHub may be the destination for all of my organization's Google Code projects, but I've personally found Mercurial to have a far greater ease-of-use.\n\nRegardless, both are beautifully cross-compatible with each other, so lets just all be happy :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60248, "question": "Meh.\n\nGitHub may be the destination for all of my organization's Google Code projects, but I've personally found Mercurial to have a far greater ease-of-use.\n\nRegardless, both are beautifully cross-compatible with each other, so lets just all be happy :)", "aSentId": 60249, "answer": "FYI, using hg-git you can use GitHub via Mercurial :)\n\nI've been using Mercurial exclusively the past two years despite having worked in git companies and hosting everything on GitHub. hg-git works really well as a bidirectional bridge. The only things I've run into (which have never really been issues for me) are: 1) hg can't do octomerges (i.e., merges can only have two parents) and 2) git doesn't track file moves*, so Mercurial loses that info when roundtripping through git.\n\n\\* - Yes, I know you guys will say \"It does!\", but it doesn't. Git *infers* file moves, i.e. if it sees remove+add of same contents it will treat it as a move, but this is not stored in the metadata and also means it can't detect modification + copy/move as a file move.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60248, "question": "Meh.\n\nGitHub may be the destination for all of my organization's Google Code projects, but I've personally found Mercurial to have a far greater ease-of-use.\n\nRegardless, both are beautifully cross-compatible with each other, so lets just all be happy :)", "aSentId": 60251, "answer": "I'm with you. I think if you have a small team of people who really care about development, then git is viable. If you have a bunch of coders for whom coding is a job, then mercurial is better and git will become frustratingly messy. \n\nMercurial's branches are better for messy repositories than git. Git is better for neat repositories. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60252, "question": "I'm with you. I think if you have a small team of people who really care about development, then git is viable. If you have a bunch of coders for whom coding is a job, then mercurial is better and git will become frustratingly messy. \n\nMercurial's branches are better for messy repositories than git. Git is better for neat repositories. ", "aSentId": 60253, "answer": "&gt; Mercurial's branches are better for messy repositories than git. Git is better for neat repositories.\n\nReally? I've discovered that Mercurial's branches work great as long as you have a team that's capable of following strict rules about branch naming, but it gets messy when you have multiple teams where not everyone is willing to understand that they're permanent and, if you want to keep your sanity, unique. Git's more ephemeral branch names are more forgiving.\n\nObligatory disclaimer: Yes, I know bookmarks. I'd be all over them for feature branches if Bitbucket supported them for pull requests.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60254, "question": "&gt; Mercurial's branches are better for messy repositories than git. Git is better for neat repositories.\n\nReally? I've discovered that Mercurial's branches work great as long as you have a team that's capable of following strict rules about branch naming, but it gets messy when you have multiple teams where not everyone is willing to understand that they're permanent and, if you want to keep your sanity, unique. Git's more ephemeral branch names are more forgiving.\n\nObligatory disclaimer: Yes, I know bookmarks. I'd be all over them for feature branches if Bitbucket supported them for pull requests.", "aSentId": 60255, "answer": "I think it's better when messy because branch names show intent behind commits. With a messy git repo, the branch names eventually disappear and the commits that were associated with them are no longer associated with their branch names. With mercurial, you always have that context. \n\nGit is better when you squash and rebase.yiu can see all of the commits for a particular feature in one place. That's nice and neat. If you just let branches run wild, you'll have to a bunch of parallel commits without context and that gets to be very messy. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60256, "question": "I think it's better when messy because branch names show intent behind commits. With a messy git repo, the branch names eventually disappear and the commits that were associated with them are no longer associated with their branch names. With mercurial, you always have that context. \n\nGit is better when you squash and rebase.yiu can see all of the commits for a particular feature in one place. That's nice and neat. If you just let branches run wild, you'll have to a bunch of parallel commits without context and that gets to be very messy. ", "aSentId": 60257, "answer": "did people really downvote you? maybe they are truly amateur and don't know git to begin with?\n\ngit rebase (and git rebase -i), git merge --squash are user's best friends if you want to keep you repository extremely clean. this keeps better with more repository users.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60232, "question": "Both are lovely in my book.\n\nJust don't put your project in SVN (or CVS *shudder*).", "aSentId": 60259, "answer": "Or SourceSafe, unless you're a masochist.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60260, "question": "Or SourceSafe, unless you're a masochist.", "aSentId": 60261, "answer": "SourceSafe is functionally equivalent to installing a robotic arm on your desk that stabs you in the stomach with a kitchen knife every time you commit.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60262, "question": "SourceSafe is functionally equivalent to installing a robotic arm on your desk that stabs you in the stomach with a kitchen knife every time you commit.", "aSentId": 60263, "answer": "I moved from VSS to git about 2 years ago. Great improvement. By the way, I have a much more favorable impression about VSS, because when I first heard about it from my boss as I was starting work fresh out of university, it was like this:\n\n&gt; \"Oh, and we use source control.\"\n\n&gt;\"What is this?\"\n\n&gt;\"It allows you to keep previous versions of your source files so if you mess up you can return to them.\"\n\n&gt;\"What a great idea. How neat, how smart, how awesome. Microsoft is a really awesome company.\"\n\nAt the time I thought that Microsoft had invented the idea of source control btw, I learned about SVN and CVS later. And for me, the initial impression of having VSS vs not having source control at all was sheer awesomeness.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60264, "question": "I moved from VSS to git about 2 years ago. Great improvement. By the way, I have a much more favorable impression about VSS, because when I first heard about it from my boss as I was starting work fresh out of university, it was like this:\n\n&gt; \"Oh, and we use source control.\"\n\n&gt;\"What is this?\"\n\n&gt;\"It allows you to keep previous versions of your source files so if you mess up you can return to them.\"\n\n&gt;\"What a great idea. How neat, how smart, how awesome. Microsoft is a really awesome company.\"\n\nAt the time I thought that Microsoft had invented the idea of source control btw, I learned about SVN and CVS later. And for me, the initial impression of having VSS vs not having source control at all was sheer awesomeness.\n", "aSentId": 60265, "answer": "CVS, not CSV. Which incidentally wasn't first -- RCS came before it. And versioning files was built into the filesystem of many pre-UNIX OSs, notably VMS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60266, "question": "CVS, not CSV. Which incidentally wasn't first -- RCS came before it. And versioning files was built into the filesystem of many pre-UNIX OSs, notably VMS.", "aSentId": 60267, "answer": "Fixed.\n\nBy the way, I had learned to use Ctrl+C, Ctrl+V in Windows as my own \"source control\" even before hearing about VSS, after a couple of time I had messed up my source files. But that works only so much, and I didn't have a diff tool so it was a guessing game which was the version prior to a mess-up.\n\nSo I already had the habit of making a copy of the source dir prior to doing any substantial changes.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60260, "question": "Or SourceSafe, unless you're a masochist.", "aSentId": 60269, "answer": "VSS came out in 1994, which is over 20 years ago.\n\nAt that time, it was one of best source control options for Windows, full stop.\n\nBut if after all that time you're still using VSS then you truly are a masochist, since Microsoft kill off VSS decades ago.\n\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60226, "question": "Obligatory Mercurial has a better UI comment", "aSentId": 60271, "answer": "Mercurial has some cool features (I like phases), and is more friendly if you're running Windows, but I'm just more comfortable in git at this point.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60273, "question": "Obligatory true hackers only use the shell retort", "aSentId": 60274, "answer": "Obligatory the shell is also a UI retort. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60276, "question": "&gt;You can disagree with me as much as you want, but during this talk, by definition, anybody who disagrees is stupid and ugly, so keep that in mind. When I am done speaking, you can go on with your lives. Right now, yes, I have strong opinions, and CVS users, if you actually like using CVS, you shouldn't be here. You should be in some mental institution, somewhere else. - Linus Torvalds", "aSentId": 60277, "answer": "That talk at Google, IIRC. Torvalds at his best.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60279, "question": "My career started at the end of the SVN era.\n\nAfter switching to Mercurial/Git, its downright painful when I have to work with a project in SVN (or worse, CVS).\n\n/u/Various_Pickles Farms remembers the days when getting multiple developers' working copies merged together into *The* Project (SVN) Repository was the pinnacle of dangerous and arduous tasks.", "aSentId": 60280, "answer": "Yup.\n\nI remember campaigning at a company to change source control from SVN to something else as upcoming projects would require a lot of merging.\n\nWe didn't switch to git (too new and complete lack of Windows support), but so glad to get off the SVN merge train.\n", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60279, "question": "My career started at the end of the SVN era.\n\nAfter switching to Mercurial/Git, its downright painful when I have to work with a project in SVN (or worse, CVS).\n\n/u/Various_Pickles Farms remembers the days when getting multiple developers' working copies merged together into *The* Project (SVN) Repository was the pinnacle of dangerous and arduous tasks.", "aSentId": 60282, "answer": "Merges seemed way easier in CVS than Git to me.  What was super simple in CVS is a huge f*cking deal in Git.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60283, "question": "Merges seemed way easier in CVS than Git to me.  What was super simple in CVS is a huge f*cking deal in Git.", "aSentId": 60284, "answer": "sorry, but you are a newbie in GIT then.\n\n    git checkout master\n    git merge your-branch\n\nbig deal, eh? I guess you aren't fond of rebase too.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60285, "question": "sorry, but you are a newbie in GIT then.\n\n    git checkout master\n    git merge your-branch\n\nbig deal, eh? I guess you aren't fond of rebase too.", "aSentId": 60286, "answer": "I've never really understood why people want to rebase.\n\nThe main argument I've heard is that it keeps history tidy, but this seems to me to be a good argument for better history visualization tools.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60285, "question": "sorry, but you are a newbie in GIT then.\n\n    git checkout master\n    git merge your-branch\n\nbig deal, eh? I guess you aren't fond of rebase too.", "aSentId": 60288, "answer": "&gt; git checkout master\n&gt; \n&gt; git merge your-branch\n\nI do stash, then pull, and then apply stash\n\nAnd then manually merge all the conflicts git couldn't deal with that I didn't want to update yet because they weren't related to the one small change I wanted to pick up. \n\nAnd then commit/push if I want to change something\n\nIn CVS its just a trivial 1 second file update.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60289, "question": "&gt; git checkout master\n&gt; \n&gt; git merge your-branch\n\nI do stash, then pull, and then apply stash\n\nAnd then manually merge all the conflicts git couldn't deal with that I didn't want to update yet because they weren't related to the one small change I wanted to pick up. \n\nAnd then commit/push if I want to change something\n\nIn CVS its just a trivial 1 second file update.", "aSentId": 60290, "answer": "You're saying that Git produces more merge conflicts than CVS would? I don't understand how that's possible. If you mean that there are a series of changes made on master and you only care about one small one until you finally integrate the feature and deal with the rest of the conflicts, that could be done with a cherry-pick (assuming that the commits were split logically).\n\nAlso, you should generally rebase topic branches instead of stashing then applying. Stashes are better suited to keeping often-used tweaks, or temporarily saving work in a rush.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60283, "question": "Merges seemed way easier in CVS than Git to me.  What was super simple in CVS is a huge f*cking deal in Git.", "aSentId": 60292, "answer": "I'm sorry, but you clearly mentally unstable and a danger to yourself and others.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60293, "question": "I'm sorry, but you clearly mentally unstable and a danger to yourself and others.", "aSentId": 60294, "answer": "What are you, like 10 years old?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60296, "question": "'Software Configuration Management (SCMs)'.\nSecond sentence... \n\nCome on Linux.com, you can do better than this...", "aSentId": 60297, "answer": "That same comment was in the comments on the site, and at first I was in the same boat, but then someone linked to the wiki for it and yea, that's actually what the acronym stands for.  TIL.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60298, "question": "That same comment was in the comments on the site, and at first I was in the same boat, but then someone linked to the wiki for it and yea, that's actually what the acronym stands for.  TIL.", "aSentId": 60299, "answer": "It stands for both terms. Software Configuration Management is a bit wider term than what git does.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60301, "question": "Is anyone here still using SVN?  At my place of work, SVN is still king.  We all like it.  I have no major issues and it works very well for our needs.  Maybe our projects aren't big enough to notice the major downfalls.\n\nI do use git for personal projects, and I like it as well.  But I never personally experienced major problem with SVN in my career.\n\nCan someone enumerate these big \"major\" SVN issues that GIT solves?  I've never really looked into it.", "aSentId": 60302, "answer": "You must be lucky, because at my work, we would run into SVN issues a lot. I remember, just a few months after I joined, we were trying to merge the \"development\" branch into trunk, and running into all sorts of errors. When I did the same merge under Git, it went flawlessly. Unfortunately, I didn't know at the time that git-svn actually did support committing merges to SVN, so we resorted to their go-to \"merge\" practice of copying all the files from the \"development\" working directory, plopping them into the trunk, then making a commit... And now the logs for most files end up referring to that, instead of the commits from which they really originated.\n\nI'm still trying to get us to migrate to Git, but that will involve numerous other infrastructure changes, so I'm not very hopeful.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60301, "question": "Is anyone here still using SVN?  At my place of work, SVN is still king.  We all like it.  I have no major issues and it works very well for our needs.  Maybe our projects aren't big enough to notice the major downfalls.\n\nI do use git for personal projects, and I like it as well.  But I never personally experienced major problem with SVN in my career.\n\nCan someone enumerate these big \"major\" SVN issues that GIT solves?  I've never really looked into it.", "aSentId": 60304, "answer": "In git everyone has their own version of the project history so the data is distributed.  Unlike a centralized system if the server dies you don't lose everything.\n\nSince all the changesets are stored locally merging and branching are extremely efficient and don't take forever.  There's no network latency to check stuff out or check things in.\n\nIt's really stable and there are never really issues with bad merges or bad data.  I've never really heard of git getting corrupted though I'm sure it happens.\n\nBranching is considerably better from what I understand.  Didn't do a lot of SVN work so not sure how bad branching is for it but in git it's an extremely useful tool.\n\nIn my experience with SVN there was usually the 'svn' person whose job it was to monitor and support svn.  In git it's so foolproof you don't need that overhead.\n\nThose are just the off the top of my head answers.  I'm sure there's more.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60308, "question": "What, git is only 10 years old? I had no idea! ", "aSentId": 60309, "answer": "Has it been 10 years already? I had no idea!\n\nAnd what are those kids doing on my lawn?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60312, "question": "Downvotes ahoy but I no longer care...\n\nI'm the only amateur dev in the world who detests git.\n\nI'm old school, I was happy with Perforce, Accurev and even CVS.", "aSentId": 60313, "answer": "I don't downvote opinions, but I am curious why you detest Git. The \"I'm old school\" comment makes it just sound like a case of \"it's new so I don't like it.\" What exactly makes Git something you hate? Have you given it a shot for your own projects? You can actually use it pretty similarly to SVN/CVS if you care to.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60312, "question": "Downvotes ahoy but I no longer care...\n\nI'm the only amateur dev in the world who detests git.\n\nI'm old school, I was happy with Perforce, Accurev and even CVS.", "aSentId": 60315, "answer": "What's your beef with git?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60312, "question": "Downvotes ahoy but I no longer care...\n\nI'm the only amateur dev in the world who detests git.\n\nI'm old school, I was happy with Perforce, Accurev and even CVS.", "aSentId": 60317, "answer": "&gt; I was happy with ... CVS\n\nnobody is happy with CVS. You might be the only person I've ever heard say they enjoyed CVS after experiencing SVN and/or Git", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60318, "question": "&gt; I was happy with ... CVS\n\nnobody is happy with CVS. You might be the only person I've ever heard say they enjoyed CVS after experiencing SVN and/or Git", "aSentId": 60319, "answer": "I enjoyed CVS after VSS. :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60318, "question": "&gt; I was happy with ... CVS\n\nnobody is happy with CVS. You might be the only person I've ever heard say they enjoyed CVS after experiencing SVN and/or Git", "aSentId": 60321, "answer": "Besides freebsd devs", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60322, "question": "Besides freebsd devs", "aSentId": 60323, "answer": "BSD developers still think it's 1982.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60322, "question": "Besides freebsd devs", "aSentId": 60325, "answer": "Do you mean OpenBSD? They still use CVS for everything. They even wrote their own implementation. ", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60322, "question": "Besides freebsd devs", "aSentId": 60327, "answer": "FreeBSD uses Subversion, not CVS.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60329, "question": "I agree, but after using git on a huge code project and being able to do merge / integrations that would be utterly impossible in perforce, I have to give git credit where credit is due.  It has a damn good resolve and it can be quick as long as you don't bog down the meta-data and you GC aggressively when it does feel slow.\n\nPerforce being fully server side suffers the failures of the host.  Right now we get terrible file op throughput on our P4 server because our host is kinda shit.  That makes big checkouts / reverts / resolves just really painful.  Not p4's fault, but our lackluster host.\n\n", "aSentId": 60330, "answer": "I'm curious, do you have an example of a merge that is handled better by Git than Perforce? I've found cases in which Perforce actually seems to do a better job.\n\nAre you using the integrate V3 algorithm in Perforce?", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60336, "question": "No mobile version [closes]", "aSentId": 60337, "answer": "May I ask what browser you're using that has a problem?\n\niOS Safari formats the article column such that a double-tap zooms in on it and it fills the screen width without scrolling.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60338, "question": "May I ask what browser you're using that has a problem?\n\niOS Safari formats the article column such that a double-tap zooms in on it and it fills the screen width without scrolling.", "aSentId": 60339, "answer": "Chrome. BTW, that feature of Safari does not make your site mobile friendly :)", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60338, "question": "May I ask what browser you're using that has a problem?\n\niOS Safari formats the article column such that a double-tap zooms in on it and it fills the screen width without scrolling.", "aSentId": 60341, "answer": "lol i am on a windows phone and it looks just fine. guy must be on a \"web browser\" on a feature phone or something.", "corpus": "reddit"},{"docID": "t5_2fwo", "qSentId": 60342, "question": "lol i am on a windows phone and it looks just fine. guy must be on a \"web browser\" on a feature phone or something.", "aSentId": 60343, "answer": "Just standard Android.", "corpus": "reddit"}]